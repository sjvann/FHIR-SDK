// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// Details and position information for a place
    /// </summary>
    public partial class Location : ResourceBase
    {
        public override string ResourceType => "Location";

        public Location() { }
        public Location(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public Location(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private Address? _address;
        [JsonPropertyName("address")]
        public Address? Address { get => _address; set { _address = value; OnPropertyChangedByClr(nameof(Address), value); } }

        private List<FhirString>? _alias;
        [JsonPropertyName("alias")]
        public List<FhirString>? Alias { get => _alias; set { _alias = value; OnPropertyChangedByClr(nameof(Alias), value); } }

        private List<CodeableConcept>? _characteristic;
        [JsonPropertyName("characteristic")]
        public List<CodeableConcept>? Characteristic { get => _characteristic; set { _characteristic = value; OnPropertyChangedByClr(nameof(Characteristic), value); } }

        private List<ExtendedContactDetail>? _contact;
        [JsonPropertyName("contact")]
        public List<ExtendedContactDetail>? Contact { get => _contact; set { _contact = value; OnPropertyChangedByClr(nameof(Contact), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private FhirMarkdown? _description;
        [JsonPropertyName("description")]
        public FhirMarkdown? Description { get => _description; set { _description = value; OnPropertyChangedByClr(nameof(Description), value); } }

        private List<ReferenceType>? _endpoint;
        [JsonPropertyName("endpoint")]
        public List<ReferenceType>? Endpoint { get => _endpoint; set { _endpoint = value; OnPropertyChangedByClr(nameof(Endpoint), value); } }

        private CodeableConcept? _form;
        [JsonPropertyName("form")]
        public CodeableConcept? Form { get => _form; set { _form = value; OnPropertyChangedByClr(nameof(Form), value); } }

        private List<Availability>? _hoursOfOperation;
        [JsonPropertyName("hoursOfOperation")]
        public List<Availability>? HoursOfOperation { get => _hoursOfOperation; set { _hoursOfOperation = value; OnPropertyChangedByClr(nameof(HoursOfOperation), value); } }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private ReferenceType? _managingOrganization;
        [JsonPropertyName("managingOrganization")]
        public ReferenceType? ManagingOrganization { get => _managingOrganization; set { _managingOrganization = value; OnPropertyChangedByClr(nameof(ManagingOrganization), value); } }

        private FhirCode? _mode;
        [JsonPropertyName("mode")]
        public FhirCode? Mode { get => _mode; set { _mode = value; OnPropertyChangedByClr(nameof(Mode), value); } }

        private FhirString? _name;
        [JsonPropertyName("name")]
        public FhirString? Name { get => _name; set { _name = value; OnPropertyChangedByClr(nameof(Name), value); } }

        private Coding? _operationalStatus;
        [JsonPropertyName("operationalStatus")]
        public Coding? OperationalStatus { get => _operationalStatus; set { _operationalStatus = value; OnPropertyChangedByClr(nameof(OperationalStatus), value); } }

        private ReferenceType? _partOf;
        [JsonPropertyName("partOf")]
        public ReferenceType? PartOf { get => _partOf; set { _partOf = value; OnPropertyChangedByClr(nameof(PartOf), value); } }

        private Location_Position? _position;
        [JsonPropertyName("position")]
        public Location_Position? Position { get => _position; set { _position = value; OnPropertyChangedByClr(nameof(Position), value); } }

        /// <summary>
        /// The absolute geographic location
        /// </summary>
        public partial class Location_Position : BackboneElement<Location_Position>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Location_Position" : "location_Position";
            private FhirDecimal? _altitude;
        [JsonPropertyName("altitude")]
        public FhirDecimal? Altitude { get => _altitude; set { _altitude = value; } }

            private FhirDecimal? _latitude;
        [JsonPropertyName("latitude")]
        public FhirDecimal Latitude { get => _latitude ?? throw new InvalidOperationException("Latitude is required"); set { _latitude = value; } }

            private FhirDecimal? _longitude;
        [JsonPropertyName("longitude")]
        public FhirDecimal Longitude { get => _longitude ?? throw new InvalidOperationException("Longitude is required"); set { _longitude = value; } }

        }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode? Status { get => _status; set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

        private List<CodeableConcept>? _type;
        [JsonPropertyName("type")]
        public List<CodeableConcept>? Type { get => _type; set { _type = value; OnPropertyChangedByClr(nameof(Type), value); } }

        private List<VirtualServiceDetail>? _virtualService;
        [JsonPropertyName("virtualService")]
        public List<VirtualServiceDetail>? VirtualService { get => _virtualService; set { _virtualService = value; OnPropertyChangedByClr(nameof(VirtualService), value); } }

    }
}
