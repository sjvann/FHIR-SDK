// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// A functional description of an inventory item used in inventory and supply-related workflows
    /// </summary>
    public partial class InventoryItem : ResourceBase
    {
        public override string ResourceType => "InventoryItem";

        public InventoryItem() { }
        public InventoryItem(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public InventoryItem(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private List<InventoryItem_Association>? _association;
        [JsonPropertyName("association")]
        public List<InventoryItem_Association>? Association { get => _association; set { _association = value; OnPropertyChangedByClr(nameof(Association), value); } }

        /// <summary>
        /// Association with other items or products
        /// </summary>
        public partial class InventoryItem_Association : BackboneElement<InventoryItem_Association>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "InventoryItem_Association" : "inventoryItem_Association";
            private CodeableConcept? _associationType;
        [JsonPropertyName("associationType")]
        public CodeableConcept AssociationType { get => _associationType ?? throw new InvalidOperationException("AssociationType is required"); set { _associationType = value; } }

            private Ratio? _quantity;
        [JsonPropertyName("quantity")]
        public Ratio Quantity { get => _quantity ?? throw new InvalidOperationException("Quantity is required"); set { _quantity = value; } }

            private ReferenceType? _relatedItem;
        [JsonPropertyName("relatedItem")]
        public ReferenceType RelatedItem { get => _relatedItem ?? throw new InvalidOperationException("RelatedItem is required"); set { _relatedItem = value; } }

        }

        private CodeableConcept? _baseUnit;
        [JsonPropertyName("baseUnit")]
        public CodeableConcept? BaseUnit { get => _baseUnit; set { _baseUnit = value; OnPropertyChangedByClr(nameof(BaseUnit), value); } }

        private List<CodeableConcept>? _category;
        [JsonPropertyName("category")]
        public List<CodeableConcept>? Category { get => _category; set { _category = value; OnPropertyChangedByClr(nameof(Category), value); } }

        private List<InventoryItem_Characteristic>? _characteristic;
        [JsonPropertyName("characteristic")]
        public List<InventoryItem_Characteristic>? Characteristic { get => _characteristic; set { _characteristic = value; OnPropertyChangedByClr(nameof(Characteristic), value); } }

        /// <summary>
        /// Characteristic of the item
        /// </summary>
        public partial class InventoryItem_Characteristic : BackboneElement<InventoryItem_Characteristic>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "InventoryItem_Characteristic" : "inventoryItem_Characteristic";
            private CodeableConcept? _characteristicType;
        [JsonPropertyName("characteristicType")]
        public CodeableConcept CharacteristicType { get => _characteristicType ?? throw new InvalidOperationException("CharacteristicType is required"); set { _characteristicType = value; } }

            private FhirString? _valueString;
        [JsonPropertyName("valueString")]
        public FhirString? ValueString { get => _valueString; set { _valueString = value; if (value != null) {{ _valueInteger = null; OnPropertyChanged("valueInteger", null); _valueDecimal = null; OnPropertyChanged("valueDecimal", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueurl = null; OnPropertyChanged("valueurl", null); _valueDateTime = null; OnPropertyChanged("valueDateTime", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueRange = null; OnPropertyChanged("valueRange", null); _valueRatio = null; OnPropertyChanged("valueRatio", null); _valueAnnotation = null; OnPropertyChanged("valueAnnotation", null); _valueAddress = null; OnPropertyChanged("valueAddress", null); _valueDuration = null; OnPropertyChanged("valueDuration", null); _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); }}; OnPropertyChanged("valueString", value); } }

            private FhirInteger? _valueInteger;
        [JsonPropertyName("valueInteger")]
        public FhirInteger? ValueInteger { get => _valueInteger; set { _valueInteger = value; if (value != null) {{ _valueString = null; OnPropertyChanged("valueString", null); _valueDecimal = null; OnPropertyChanged("valueDecimal", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueurl = null; OnPropertyChanged("valueurl", null); _valueDateTime = null; OnPropertyChanged("valueDateTime", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueRange = null; OnPropertyChanged("valueRange", null); _valueRatio = null; OnPropertyChanged("valueRatio", null); _valueAnnotation = null; OnPropertyChanged("valueAnnotation", null); _valueAddress = null; OnPropertyChanged("valueAddress", null); _valueDuration = null; OnPropertyChanged("valueDuration", null); _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); }}; OnPropertyChanged("valueInteger", value); } }

            private FhirDecimal? _valueDecimal;
        [JsonPropertyName("valueDecimal")]
        public FhirDecimal? ValueDecimal { get => _valueDecimal; set { _valueDecimal = value; if (value != null) {{ _valueString = null; OnPropertyChanged("valueString", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueurl = null; OnPropertyChanged("valueurl", null); _valueDateTime = null; OnPropertyChanged("valueDateTime", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueRange = null; OnPropertyChanged("valueRange", null); _valueRatio = null; OnPropertyChanged("valueRatio", null); _valueAnnotation = null; OnPropertyChanged("valueAnnotation", null); _valueAddress = null; OnPropertyChanged("valueAddress", null); _valueDuration = null; OnPropertyChanged("valueDuration", null); _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); }}; OnPropertyChanged("valueDecimal", value); } }

            private FhirBoolean? _valueBoolean;
        [JsonPropertyName("valueBoolean")]
        public FhirBoolean? ValueBoolean { get => _valueBoolean; set { _valueBoolean = value; if (value != null) {{ _valueString = null; OnPropertyChanged("valueString", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valueDecimal = null; OnPropertyChanged("valueDecimal", null); _valueurl = null; OnPropertyChanged("valueurl", null); _valueDateTime = null; OnPropertyChanged("valueDateTime", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueRange = null; OnPropertyChanged("valueRange", null); _valueRatio = null; OnPropertyChanged("valueRatio", null); _valueAnnotation = null; OnPropertyChanged("valueAnnotation", null); _valueAddress = null; OnPropertyChanged("valueAddress", null); _valueDuration = null; OnPropertyChanged("valueDuration", null); _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); }}; OnPropertyChanged("valueBoolean", value); } }

            private FhirUrl? _valueurl;
        [JsonPropertyName("valueurl")]
        public FhirUrl? Valueurl { get => _valueurl; set { _valueurl = value; if (value != null) {{ _valueString = null; OnPropertyChanged("valueString", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valueDecimal = null; OnPropertyChanged("valueDecimal", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueDateTime = null; OnPropertyChanged("valueDateTime", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueRange = null; OnPropertyChanged("valueRange", null); _valueRatio = null; OnPropertyChanged("valueRatio", null); _valueAnnotation = null; OnPropertyChanged("valueAnnotation", null); _valueAddress = null; OnPropertyChanged("valueAddress", null); _valueDuration = null; OnPropertyChanged("valueDuration", null); _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); }}; OnPropertyChanged("valueurl", value); } }

            private FhirDateTime? _valueDateTime;
        [JsonPropertyName("valueDateTime")]
        public FhirDateTime? ValueDateTime { get => _valueDateTime; set { _valueDateTime = value; if (value != null) {{ _valueString = null; OnPropertyChanged("valueString", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valueDecimal = null; OnPropertyChanged("valueDecimal", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueurl = null; OnPropertyChanged("valueurl", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueRange = null; OnPropertyChanged("valueRange", null); _valueRatio = null; OnPropertyChanged("valueRatio", null); _valueAnnotation = null; OnPropertyChanged("valueAnnotation", null); _valueAddress = null; OnPropertyChanged("valueAddress", null); _valueDuration = null; OnPropertyChanged("valueDuration", null); _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); }}; OnPropertyChanged("valueDateTime", value); } }

            private Quantity? _valueQuantity;
        [JsonPropertyName("valueQuantity")]
        public Quantity? ValueQuantity { get => _valueQuantity; set { _valueQuantity = value; if (value != null) {{ _valueString = null; OnPropertyChanged("valueString", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valueDecimal = null; OnPropertyChanged("valueDecimal", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueurl = null; OnPropertyChanged("valueurl", null); _valueDateTime = null; OnPropertyChanged("valueDateTime", null); _valueRange = null; OnPropertyChanged("valueRange", null); _valueRatio = null; OnPropertyChanged("valueRatio", null); _valueAnnotation = null; OnPropertyChanged("valueAnnotation", null); _valueAddress = null; OnPropertyChanged("valueAddress", null); _valueDuration = null; OnPropertyChanged("valueDuration", null); _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); }}; OnPropertyChanged("valueQuantity", value); } }

            private DataTypeServices.DataTypes.ComplexTypes.Range? _valueRange;
        [JsonPropertyName("valueRange")]
        public DataTypeServices.DataTypes.ComplexTypes.Range? ValueRange { get => _valueRange; set { _valueRange = value; if (value != null) {{ _valueString = null; OnPropertyChanged("valueString", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valueDecimal = null; OnPropertyChanged("valueDecimal", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueurl = null; OnPropertyChanged("valueurl", null); _valueDateTime = null; OnPropertyChanged("valueDateTime", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueRatio = null; OnPropertyChanged("valueRatio", null); _valueAnnotation = null; OnPropertyChanged("valueAnnotation", null); _valueAddress = null; OnPropertyChanged("valueAddress", null); _valueDuration = null; OnPropertyChanged("valueDuration", null); _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); }}; OnPropertyChanged("valueRange", value); } }

            private Ratio? _valueRatio;
        [JsonPropertyName("valueRatio")]
        public Ratio? ValueRatio { get => _valueRatio; set { _valueRatio = value; if (value != null) {{ _valueString = null; OnPropertyChanged("valueString", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valueDecimal = null; OnPropertyChanged("valueDecimal", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueurl = null; OnPropertyChanged("valueurl", null); _valueDateTime = null; OnPropertyChanged("valueDateTime", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueRange = null; OnPropertyChanged("valueRange", null); _valueAnnotation = null; OnPropertyChanged("valueAnnotation", null); _valueAddress = null; OnPropertyChanged("valueAddress", null); _valueDuration = null; OnPropertyChanged("valueDuration", null); _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); }}; OnPropertyChanged("valueRatio", value); } }

            private Annotation? _valueAnnotation;
        [JsonPropertyName("valueAnnotation")]
        public Annotation? ValueAnnotation { get => _valueAnnotation; set { _valueAnnotation = value; if (value != null) {{ _valueString = null; OnPropertyChanged("valueString", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valueDecimal = null; OnPropertyChanged("valueDecimal", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueurl = null; OnPropertyChanged("valueurl", null); _valueDateTime = null; OnPropertyChanged("valueDateTime", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueRange = null; OnPropertyChanged("valueRange", null); _valueRatio = null; OnPropertyChanged("valueRatio", null); _valueAddress = null; OnPropertyChanged("valueAddress", null); _valueDuration = null; OnPropertyChanged("valueDuration", null); _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); }}; OnPropertyChanged("valueAnnotation", value); } }

            private Address? _valueAddress;
        [JsonPropertyName("valueAddress")]
        public Address? ValueAddress { get => _valueAddress; set { _valueAddress = value; if (value != null) {{ _valueString = null; OnPropertyChanged("valueString", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valueDecimal = null; OnPropertyChanged("valueDecimal", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueurl = null; OnPropertyChanged("valueurl", null); _valueDateTime = null; OnPropertyChanged("valueDateTime", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueRange = null; OnPropertyChanged("valueRange", null); _valueRatio = null; OnPropertyChanged("valueRatio", null); _valueAnnotation = null; OnPropertyChanged("valueAnnotation", null); _valueDuration = null; OnPropertyChanged("valueDuration", null); _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); }}; OnPropertyChanged("valueAddress", value); } }

            private Duration? _valueDuration;
        [JsonPropertyName("valueDuration")]
        public Duration? ValueDuration { get => _valueDuration; set { _valueDuration = value; if (value != null) {{ _valueString = null; OnPropertyChanged("valueString", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valueDecimal = null; OnPropertyChanged("valueDecimal", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueurl = null; OnPropertyChanged("valueurl", null); _valueDateTime = null; OnPropertyChanged("valueDateTime", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueRange = null; OnPropertyChanged("valueRange", null); _valueRatio = null; OnPropertyChanged("valueRatio", null); _valueAnnotation = null; OnPropertyChanged("valueAnnotation", null); _valueAddress = null; OnPropertyChanged("valueAddress", null); _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); }}; OnPropertyChanged("valueDuration", value); } }

            private CodeableConcept? _valueCodeableConcept;
        [JsonPropertyName("valueCodeableConcept")]
        public CodeableConcept? ValueCodeableConcept { get => _valueCodeableConcept; set { _valueCodeableConcept = value; if (value != null) {{ _valueString = null; OnPropertyChanged("valueString", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valueDecimal = null; OnPropertyChanged("valueDecimal", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueurl = null; OnPropertyChanged("valueurl", null); _valueDateTime = null; OnPropertyChanged("valueDateTime", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueRange = null; OnPropertyChanged("valueRange", null); _valueRatio = null; OnPropertyChanged("valueRatio", null); _valueAnnotation = null; OnPropertyChanged("valueAnnotation", null); _valueAddress = null; OnPropertyChanged("valueAddress", null); _valueDuration = null; OnPropertyChanged("valueDuration", null); }}; OnPropertyChanged("valueCodeableConcept", value); } }

        }

        private List<CodeableConcept>? _code;
        [JsonPropertyName("code")]
        public List<CodeableConcept>? Code { get => _code; set { _code = value; OnPropertyChangedByClr(nameof(Code), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private InventoryItem_Description? _description;
        [JsonPropertyName("description")]
        public InventoryItem_Description? Description { get => _description; set { _description = value; OnPropertyChangedByClr(nameof(Description), value); } }

        /// <summary>
        /// Descriptive characteristics of the item
        /// </summary>
        public partial class InventoryItem_Description : BackboneElement<InventoryItem_Description>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "InventoryItem_Description" : "inventoryItem_Description";
            private FhirString? _description;
        [JsonPropertyName("description")]
        public FhirString? Description { get => _description; set { _description = value; } }

            private FhirCode? _language;
        [JsonPropertyName("language")]
        public FhirCode? Language { get => _language; set { _language = value; } }

        }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private InventoryItem_Instance? _instance;
        [JsonPropertyName("instance")]
        public InventoryItem_Instance? Instance { get => _instance; set { _instance = value; OnPropertyChangedByClr(nameof(Instance), value); } }

        /// <summary>
        /// Instances or occurrences of the product
        /// </summary>
        public partial class InventoryItem_Instance : BackboneElement<InventoryItem_Instance>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "InventoryItem_Instance" : "inventoryItem_Instance";
            private FhirDateTime? _expiry;
        [JsonPropertyName("expiry")]
        public FhirDateTime? Expiry { get => _expiry; set { _expiry = value; } }

            private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; } }

            private ReferenceType? _location;
        [JsonPropertyName("location")]
        public ReferenceType? Location { get => _location; set { _location = value; } }

            private FhirString? _lotNumber;
        [JsonPropertyName("lotNumber")]
        public FhirString? LotNumber { get => _lotNumber; set { _lotNumber = value; } }

            private ReferenceType? _subject;
        [JsonPropertyName("subject")]
        public ReferenceType? Subject { get => _subject; set { _subject = value; } }

        }

        private List<CodeableConcept>? _inventoryStatus;
        [JsonPropertyName("inventoryStatus")]
        public List<CodeableConcept>? InventoryStatus { get => _inventoryStatus; set { _inventoryStatus = value; OnPropertyChangedByClr(nameof(InventoryStatus), value); } }

        private List<InventoryItem_Name>? _name;
        [JsonPropertyName("name")]
        public List<InventoryItem_Name>? Name { get => _name; set { _name = value; OnPropertyChangedByClr(nameof(Name), value); } }

        /// <summary>
        /// The item name(s) - the brand name, or common name, functional name, generic name or others
        /// </summary>
        public partial class InventoryItem_Name : BackboneElement<InventoryItem_Name>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "InventoryItem_Name" : "inventoryItem_Name";
            private FhirCode? _language;
        [JsonPropertyName("language")]
        public FhirCode Language { get => _language ?? throw new InvalidOperationException("Language is required"); set { _language = value; } }

            private FhirString? _name;
        [JsonPropertyName("name")]
        public FhirString Name { get => _name ?? throw new InvalidOperationException("Name is required"); set { _name = value; } }

            private Coding? _nameType;
        [JsonPropertyName("nameType")]
        public Coding NameType { get => _nameType ?? throw new InvalidOperationException("NameType is required"); set { _nameType = value; } }

        }

        private Quantity? _netContent;
        [JsonPropertyName("netContent")]
        public Quantity? NetContent { get => _netContent; set { _netContent = value; OnPropertyChangedByClr(nameof(NetContent), value); } }

        private ReferenceType? _productReference;
        [JsonPropertyName("productReference")]
        public ReferenceType? ProductReference { get => _productReference; set { _productReference = value; OnPropertyChangedByClr(nameof(ProductReference), value); } }

        private List<InventoryItem_ResponsibleOrganization>? _responsibleOrganization;
        [JsonPropertyName("responsibleOrganization")]
        public List<InventoryItem_ResponsibleOrganization>? ResponsibleOrganization { get => _responsibleOrganization; set { _responsibleOrganization = value; OnPropertyChangedByClr(nameof(ResponsibleOrganization), value); } }

        /// <summary>
        /// Organization(s) responsible for the product
        /// </summary>
        public partial class InventoryItem_ResponsibleOrganization : BackboneElement<InventoryItem_ResponsibleOrganization>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "InventoryItem_ResponsibleOrganization" : "inventoryItem_ResponsibleOrganization";
            private ReferenceType? _organization;
        [JsonPropertyName("organization")]
        public ReferenceType Organization { get => _organization ?? throw new InvalidOperationException("Organization is required"); set { _organization = value; } }

            private CodeableConcept? _role;
        [JsonPropertyName("role")]
        public CodeableConcept Role { get => _role ?? throw new InvalidOperationException("Role is required"); set { _role = value; } }

        }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode Status { get => _status ?? throw new InvalidOperationException("Status is required"); set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

    }
}
