// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class DeviceDefinitionFluentExtensions
    {
        public static DeviceDefinition AddChargeItem(this DeviceDefinition r, BackboneElement item) { r.ChargeItem ??= new List<BackboneElement>(); r.ChargeItem!.Add(item); return r; }
        public static DeviceDefinition AddClassification(this DeviceDefinition r, BackboneElement item) { r.Classification ??= new List<BackboneElement>(); r.Classification!.Add(item); return r; }
        public static DeviceDefinition AddConformsTo(this DeviceDefinition r, BackboneElement item) { r.ConformsTo ??= new List<BackboneElement>(); r.ConformsTo!.Add(item); return r; }
        public static DeviceDefinition AddContact(this DeviceDefinition r, ContactPoint item) { r.Contact ??= new List<ContactPoint>(); r.Contact!.Add(item); return r; }
        public static DeviceDefinition AddContained(this DeviceDefinition r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static DeviceDefinition WithCorrectiveAction(this DeviceDefinition r, BackboneElement value) { r.CorrectiveAction = value; return r; }
        public static DeviceDefinition WithDescription(this DeviceDefinition r, FhirMarkdown value) { r.Description = value; return r; }
        public static DeviceDefinition AddDeviceName(this DeviceDefinition r, BackboneElement item) { r.DeviceName ??= new List<BackboneElement>(); r.DeviceName!.Add(item); return r; }
        public static DeviceDefinition WithGuideline(this DeviceDefinition r, BackboneElement value) { r.Guideline = value; return r; }
        public static DeviceDefinition AddHasPart(this DeviceDefinition r, BackboneElement item) { r.HasPart ??= new List<BackboneElement>(); r.HasPart!.Add(item); return r; }
        public static DeviceDefinition AddIdentifier(this DeviceDefinition r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static DeviceDefinition AddLanguageCode(this DeviceDefinition r, CodeableConcept item) { r.LanguageCode ??= new List<CodeableConcept>(); r.LanguageCode!.Add(item); return r; }
        public static DeviceDefinition AddLink(this DeviceDefinition r, BackboneElement item) { r.Link ??= new List<BackboneElement>(); r.Link!.Add(item); return r; }
        public static DeviceDefinition WithManufacturer(this DeviceDefinition r, ReferenceType value) { r.Manufacturer = value; return r; }
        public static DeviceDefinition AddMaterial(this DeviceDefinition r, BackboneElement item) { r.Material ??= new List<BackboneElement>(); r.Material!.Add(item); return r; }
        public static DeviceDefinition WithModelNumber(this DeviceDefinition r, FhirString value) { r.ModelNumber = value; return r; }
        public static DeviceDefinition AddNote(this DeviceDefinition r, Annotation item) { r.Note ??= new List<Annotation>(); r.Note!.Add(item); return r; }
        public static DeviceDefinition WithOwner(this DeviceDefinition r, ReferenceType value) { r.Owner = value; return r; }
        public static DeviceDefinition AddPackaging(this DeviceDefinition r, BackboneElement item) { r.Packaging ??= new List<BackboneElement>(); r.Packaging!.Add(item); return r; }
        public static DeviceDefinition WithPartNumber(this DeviceDefinition r, FhirString value) { r.PartNumber = value; return r; }
        public static DeviceDefinition AddProductionIdentifierInUDI(this DeviceDefinition r, FhirCode item) { r.ProductionIdentifierInUDI ??= new List<FhirCode>(); r.ProductionIdentifierInUDI!.Add(item); return r; }
        public static DeviceDefinition AddProperty(this DeviceDefinition r, BackboneElement item) { r.Property ??= new List<BackboneElement>(); r.Property!.Add(item); return r; }
        public static DeviceDefinition AddRegulatoryIdentifier(this DeviceDefinition r, BackboneElement item) { r.RegulatoryIdentifier ??= new List<BackboneElement>(); r.RegulatoryIdentifier!.Add(item); return r; }
        public static DeviceDefinition AddSafety(this DeviceDefinition r, CodeableConcept item) { r.Safety ??= new List<CodeableConcept>(); r.Safety!.Add(item); return r; }
        public static DeviceDefinition AddShelfLifeStorage(this DeviceDefinition r, ProductShelfLife item) { r.ShelfLifeStorage ??= new List<ProductShelfLife>(); r.ShelfLifeStorage!.Add(item); return r; }
        public static DeviceDefinition WithText(this DeviceDefinition r, Narrative value) { r.Text = value; return r; }
        public static DeviceDefinition AddUdiDeviceIdentifier(this DeviceDefinition r, BackboneElement item) { r.UdiDeviceIdentifier ??= new List<BackboneElement>(); r.UdiDeviceIdentifier!.Add(item); return r; }
        public static DeviceDefinition AddVersion(this DeviceDefinition r, BackboneElement item) { r.Version ??= new List<BackboneElement>(); r.Version!.Add(item); return r; }
    }
}
