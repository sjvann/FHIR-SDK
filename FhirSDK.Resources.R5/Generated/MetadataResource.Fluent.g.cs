// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class MetadataResourceFluentExtensions
    {
        public static MetadataResource WithApprovalDate(this MetadataResource r, FhirDate value) { r.ApprovalDate = value; return r; }
        public static MetadataResource AddAuthor(this MetadataResource r, ContactDetail item) { r.Author ??= new List<ContactDetail>(); r.Author!.Add(item); return r; }
        public static MetadataResource AddContact(this MetadataResource r, ContactDetail item) { r.Contact ??= new List<ContactDetail>(); r.Contact!.Add(item); return r; }
        public static MetadataResource AddContained(this MetadataResource r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static MetadataResource WithCopyright(this MetadataResource r, FhirMarkdown value) { r.Copyright = value; return r; }
        public static MetadataResource WithCopyrightLabel(this MetadataResource r, FhirString value) { r.CopyrightLabel = value; return r; }
        public static MetadataResource WithDate(this MetadataResource r, FhirDateTime value) { r.Date = value; return r; }
        public static MetadataResource WithDescription(this MetadataResource r, FhirMarkdown value) { r.Description = value; return r; }
        public static MetadataResource AddEditor(this MetadataResource r, ContactDetail item) { r.Editor ??= new List<ContactDetail>(); r.Editor!.Add(item); return r; }
        public static MetadataResource WithEffectivePeriod(this MetadataResource r, Period value) { r.EffectivePeriod = value; return r; }
        public static MetadataResource AddEndorser(this MetadataResource r, ContactDetail item) { r.Endorser ??= new List<ContactDetail>(); r.Endorser!.Add(item); return r; }
        public static MetadataResource WithExperimental(this MetadataResource r, FhirBoolean value) { r.Experimental = value; return r; }
        public static MetadataResource AddIdentifier(this MetadataResource r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static MetadataResource AddJurisdiction(this MetadataResource r, CodeableConcept item) { r.Jurisdiction ??= new List<CodeableConcept>(); r.Jurisdiction!.Add(item); return r; }
        public static MetadataResource WithLastReviewDate(this MetadataResource r, FhirDate value) { r.LastReviewDate = value; return r; }
        public static MetadataResource WithName(this MetadataResource r, FhirString value) { r.Name = value; return r; }
        public static MetadataResource WithPublisher(this MetadataResource r, FhirString value) { r.Publisher = value; return r; }
        public static MetadataResource WithPurpose(this MetadataResource r, FhirMarkdown value) { r.Purpose = value; return r; }
        public static MetadataResource AddRelatedArtifact(this MetadataResource r, RelatedArtifact item) { r.RelatedArtifact ??= new List<RelatedArtifact>(); r.RelatedArtifact!.Add(item); return r; }
        public static MetadataResource AddReviewer(this MetadataResource r, ContactDetail item) { r.Reviewer ??= new List<ContactDetail>(); r.Reviewer!.Add(item); return r; }
        public static MetadataResource WithStatus(this MetadataResource r, FhirCode value) { r.Status = value; return r; }
        public static MetadataResource WithText(this MetadataResource r, Narrative value) { r.Text = value; return r; }
        public static MetadataResource WithTitle(this MetadataResource r, FhirString value) { r.Title = value; return r; }
        public static MetadataResource AddTopic(this MetadataResource r, CodeableConcept item) { r.Topic ??= new List<CodeableConcept>(); r.Topic!.Add(item); return r; }
        public static MetadataResource WithUrl(this MetadataResource r, FhirUri value) { r.Url = value; return r; }
        public static MetadataResource AddUseContext(this MetadataResource r, UsageContext item) { r.UseContext ??= new List<UsageContext>(); r.UseContext!.Add(item); return r; }
        public static MetadataResource WithVersion(this MetadataResource r, FhirString value) { r.Version = value; return r; }
        public static MetadataResource WithVersionAlgorithmString(this MetadataResource r, FhirString value) { r.VersionAlgorithmString = value; return r; }
        public static MetadataResource WithVersionAlgorithmCoding(this MetadataResource r, Coding value) { r.VersionAlgorithmCoding = value; return r; }
    }
}
