// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// The technical details of an endpoint that can be used for electronic services
    /// </summary>
    public partial class Endpoint : ResourceBase
    {
        public override string ResourceType => "Endpoint";

        public Endpoint() { }
        public Endpoint(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public Endpoint(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private FhirUrl? _address;
        [JsonPropertyName("address")]
        public FhirUrl Address { get => _address ?? throw new InvalidOperationException("Address is required"); set { _address = value; OnPropertyChangedByClr(nameof(Address), value); } }

        private List<CodeableConcept> _connectionType = new();
        [JsonPropertyName("connectionType")]
        public List<CodeableConcept> ConnectionType { get => _connectionType; set { _connectionType = value; OnPropertyChangedByClr(nameof(ConnectionType), value); } }

        private List<ContactPoint>? _contact;
        [JsonPropertyName("contact")]
        public List<ContactPoint>? Contact { get => _contact; set { _contact = value; OnPropertyChangedByClr(nameof(Contact), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private FhirString? _description;
        [JsonPropertyName("description")]
        public FhirString? Description { get => _description; set { _description = value; OnPropertyChangedByClr(nameof(Description), value); } }

        private List<CodeableConcept>? _environmentType;
        [JsonPropertyName("environmentType")]
        public List<CodeableConcept>? EnvironmentType { get => _environmentType; set { _environmentType = value; OnPropertyChangedByClr(nameof(EnvironmentType), value); } }

        private List<FhirString>? _header;
        [JsonPropertyName("header")]
        public List<FhirString>? Header { get => _header; set { _header = value; OnPropertyChangedByClr(nameof(Header), value); } }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private ReferenceType? _managingOrganization;
        [JsonPropertyName("managingOrganization")]
        public ReferenceType? ManagingOrganization { get => _managingOrganization; set { _managingOrganization = value; OnPropertyChangedByClr(nameof(ManagingOrganization), value); } }

        private FhirString? _name;
        [JsonPropertyName("name")]
        public FhirString? Name { get => _name; set { _name = value; OnPropertyChangedByClr(nameof(Name), value); } }

        private List<Endpoint_Payload>? _payload;
        [JsonPropertyName("payload")]
        public List<Endpoint_Payload>? Payload { get => _payload; set { _payload = value; OnPropertyChangedByClr(nameof(Payload), value); } }

        /// <summary>
        /// Set of payloads that are provided by this endpoint
        /// </summary>
        public partial class Endpoint_Payload : BackboneElement<Endpoint_Payload>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Endpoint_Payload" : "endpoint_Payload";
            private List<FhirCode>? _mimeType;
        [JsonPropertyName("mimeType")]
        public List<FhirCode>? MimeType { get => _mimeType; set { _mimeType = value; } }

            private List<CodeableConcept>? _type;
        [JsonPropertyName("type")]
        public List<CodeableConcept>? Type { get => _type; set { _type = value; } }

        }

        private Period? _period;
        [JsonPropertyName("period")]
        public Period? Period { get => _period; set { _period = value; OnPropertyChangedByClr(nameof(Period), value); } }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode Status { get => _status ?? throw new InvalidOperationException("Status is required"); set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

    }
}
