// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// Definition of a graph of resources
    /// </summary>
    public partial class GraphDefinition : ResourceBase
    {
        public override string ResourceType => "GraphDefinition";

        public GraphDefinition() { }
        public GraphDefinition(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public GraphDefinition(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private List<ContactDetail>? _contact;
        [JsonPropertyName("contact")]
        public List<ContactDetail>? Contact { get => _contact; set { _contact = value; OnPropertyChangedByClr(nameof(Contact), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private FhirMarkdown? _copyright;
        [JsonPropertyName("copyright")]
        public FhirMarkdown? Copyright { get => _copyright; set { _copyright = value; OnPropertyChangedByClr(nameof(Copyright), value); } }

        private FhirString? _copyrightLabel;
        [JsonPropertyName("copyrightLabel")]
        public FhirString? CopyrightLabel { get => _copyrightLabel; set { _copyrightLabel = value; OnPropertyChangedByClr(nameof(CopyrightLabel), value); } }

        private FhirDateTime? _date;
        [JsonPropertyName("date")]
        public FhirDateTime? Date { get => _date; set { _date = value; OnPropertyChangedByClr(nameof(Date), value); } }

        private FhirMarkdown? _description;
        [JsonPropertyName("description")]
        public FhirMarkdown? Description { get => _description; set { _description = value; OnPropertyChangedByClr(nameof(Description), value); } }

        private FhirBoolean? _experimental;
        [JsonPropertyName("experimental")]
        public FhirBoolean? Experimental { get => _experimental; set { _experimental = value; OnPropertyChangedByClr(nameof(Experimental), value); } }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private List<CodeableConcept>? _jurisdiction;
        [JsonPropertyName("jurisdiction")]
        public List<CodeableConcept>? Jurisdiction { get => _jurisdiction; set { _jurisdiction = value; OnPropertyChangedByClr(nameof(Jurisdiction), value); } }

        private List<GraphDefinition_Link>? _link;
        [JsonPropertyName("link")]
        public List<GraphDefinition_Link>? Link { get => _link; set { _link = value; OnPropertyChangedByClr(nameof(Link), value); } }

        /// <summary>
        /// Links this graph makes rules about
        /// </summary>
        public partial class GraphDefinition_Link : BackboneElement<GraphDefinition_Link>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "GraphDefinition_Link" : "graphDefinition_Link";
            private List<GraphDefinition_Link_Compartment>? _compartment;
        [JsonPropertyName("compartment")]
        public List<GraphDefinition_Link_Compartment>? Compartment { get => _compartment; set { _compartment = value; } }

            /// <summary>
            /// Compartment Consistency Rules
            /// </summary>
            public partial class GraphDefinition_Link_Compartment : BackboneElement<GraphDefinition_Link_Compartment>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "GraphDefinition_Link_Compartment" : "graphDefinition_Link_Compartment";
                private FhirCode? _code;
        [JsonPropertyName("code")]
        public FhirCode Code { get => _code ?? throw new InvalidOperationException("Code is required"); set { _code = value; } }

                private FhirString? _description;
        [JsonPropertyName("description")]
        public FhirString? Description { get => _description; set { _description = value; } }

                private FhirString? _expression;
        [JsonPropertyName("expression")]
        public FhirString? Expression { get => _expression; set { _expression = value; } }

                private FhirCode? _rule;
        [JsonPropertyName("rule")]
        public FhirCode Rule { get => _rule ?? throw new InvalidOperationException("Rule is required"); set { _rule = value; } }

                private FhirCode? _use;
        [JsonPropertyName("use")]
        public FhirCode Use { get => _use ?? throw new InvalidOperationException("Use is required"); set { _use = value; } }

            }

            private FhirString? _description;
        [JsonPropertyName("description")]
        public FhirString? Description { get => _description; set { _description = value; } }

            private FhirString? _max;
        [JsonPropertyName("max")]
        public FhirString? Max { get => _max; set { _max = value; } }

            private FhirInteger? _min;
        [JsonPropertyName("min")]
        public FhirInteger? Min { get => _min; set { _min = value; } }

            private FhirString? _params;
        [JsonPropertyName("params")]
        public FhirString? Params { get => _params; set { _params = value; } }

            private FhirString? _path;
        [JsonPropertyName("path")]
        public FhirString? Path { get => _path; set { _path = value; } }

            private FhirString? _sliceName;
        [JsonPropertyName("sliceName")]
        public FhirString? SliceName { get => _sliceName; set { _sliceName = value; } }

            private FhirId? _sourceId;
        [JsonPropertyName("sourceId")]
        public FhirId SourceId { get => _sourceId ?? throw new InvalidOperationException("SourceId is required"); set { _sourceId = value; } }

            private FhirId? _targetId;
        [JsonPropertyName("targetId")]
        public FhirId TargetId { get => _targetId ?? throw new InvalidOperationException("TargetId is required"); set { _targetId = value; } }

        }

        private FhirString? _name;
        [JsonPropertyName("name")]
        public FhirString Name { get => _name ?? throw new InvalidOperationException("Name is required"); set { _name = value; OnPropertyChangedByClr(nameof(Name), value); } }

        private List<GraphDefinition_Node>? _node;
        [JsonPropertyName("node")]
        public List<GraphDefinition_Node>? Node { get => _node; set { _node = value; OnPropertyChangedByClr(nameof(Node), value); } }

        /// <summary>
        /// Potential target for the link
        /// </summary>
        public partial class GraphDefinition_Node : BackboneElement<GraphDefinition_Node>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "GraphDefinition_Node" : "graphDefinition_Node";
            private FhirString? _description;
        [JsonPropertyName("description")]
        public FhirString? Description { get => _description; set { _description = value; } }

            private FhirId? _nodeId;
        [JsonPropertyName("nodeId")]
        public FhirId NodeId { get => _nodeId ?? throw new InvalidOperationException("NodeId is required"); set { _nodeId = value; } }

            private FhirCanonical? _profile;
        [JsonPropertyName("profile")]
        public FhirCanonical? Profile { get => _profile; set { _profile = value; } }

            private FhirCode? _type;
        [JsonPropertyName("type")]
        public FhirCode Type { get => _type ?? throw new InvalidOperationException("Type is required"); set { _type = value; } }

        }

        private FhirString? _publisher;
        [JsonPropertyName("publisher")]
        public FhirString? Publisher { get => _publisher; set { _publisher = value; OnPropertyChangedByClr(nameof(Publisher), value); } }

        private FhirMarkdown? _purpose;
        [JsonPropertyName("purpose")]
        public FhirMarkdown? Purpose { get => _purpose; set { _purpose = value; OnPropertyChangedByClr(nameof(Purpose), value); } }

        private FhirId? _start;
        [JsonPropertyName("start")]
        public FhirId? Start { get => _start; set { _start = value; OnPropertyChangedByClr(nameof(Start), value); } }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode Status { get => _status ?? throw new InvalidOperationException("Status is required"); set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

        private FhirString? _title;
        [JsonPropertyName("title")]
        public FhirString? Title { get => _title; set { _title = value; OnPropertyChangedByClr(nameof(Title), value); } }

        private FhirUri? _url;
        [JsonPropertyName("url")]
        public FhirUri? Url { get => _url; set { _url = value; OnPropertyChangedByClr(nameof(Url), value); } }

        private List<UsageContext>? _useContext;
        [JsonPropertyName("useContext")]
        public List<UsageContext>? UseContext { get => _useContext; set { _useContext = value; OnPropertyChangedByClr(nameof(UseContext), value); } }

        private FhirString? _version;
        [JsonPropertyName("version")]
        public FhirString? Version { get => _version; set { _version = value; OnPropertyChangedByClr(nameof(Version), value); } }

        private FhirString? _versionAlgorithmString;
        [JsonPropertyName("versionAlgorithmString")]
        public FhirString? VersionAlgorithmString { get => _versionAlgorithmString; set { _versionAlgorithmString = value; if (value != null) {{ _versionAlgorithmCoding = null; OnPropertyChangedByClr(nameof(VersionAlgorithmCoding), null); }}; OnPropertyChangedByClr(nameof(VersionAlgorithmString), value); } }

        private Coding? _versionAlgorithmCoding;
        [JsonPropertyName("versionAlgorithmCoding")]
        public Coding? VersionAlgorithmCoding { get => _versionAlgorithmCoding; set { _versionAlgorithmCoding = value; if (value != null) {{ _versionAlgorithmString = null; OnPropertyChangedByClr(nameof(VersionAlgorithmString), null); }}; OnPropertyChangedByClr(nameof(VersionAlgorithmCoding), value); } }

    }
}
