// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class GenomicStudyFluentExtensions
    {
        public static GenomicStudy AddAnalysis(this GenomicStudy r, BackboneElement item) { r.Analysis ??= new List<BackboneElement>(); r.Analysis!.Add(item); return r; }
        public static GenomicStudy AddBasedOn(this GenomicStudy r, ReferenceType item) { r.BasedOn ??= new List<ReferenceType>(); r.BasedOn!.Add(item); return r; }
        public static GenomicStudy AddContained(this GenomicStudy r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static GenomicStudy WithDescription(this GenomicStudy r, FhirMarkdown value) { r.Description = value; return r; }
        public static GenomicStudy WithEncounter(this GenomicStudy r, ReferenceType value) { r.Encounter = value; return r; }
        public static GenomicStudy AddIdentifier(this GenomicStudy r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static GenomicStudy WithInstantiatesCanonical(this GenomicStudy r, FhirCanonical value) { r.InstantiatesCanonical = value; return r; }
        public static GenomicStudy WithInstantiatesUri(this GenomicStudy r, FhirUri value) { r.InstantiatesUri = value; return r; }
        public static GenomicStudy AddInterpreter(this GenomicStudy r, ReferenceType item) { r.Interpreter ??= new List<ReferenceType>(); r.Interpreter!.Add(item); return r; }
        public static GenomicStudy AddNote(this GenomicStudy r, Annotation item) { r.Note ??= new List<Annotation>(); r.Note!.Add(item); return r; }
        public static GenomicStudy AddReason(this GenomicStudy r, CodeableReference item) { r.Reason ??= new List<CodeableReference>(); r.Reason!.Add(item); return r; }
        public static GenomicStudy WithReferrer(this GenomicStudy r, ReferenceType value) { r.Referrer = value; return r; }
        public static GenomicStudy WithStartDate(this GenomicStudy r, FhirDateTime value) { r.StartDate = value; return r; }
        public static GenomicStudy WithStatus(this GenomicStudy r, FhirCode value) { r.Status = value; return r; }
        public static GenomicStudy WithSubject(this GenomicStudy r, ReferenceType value) { r.Subject = value; return r; }
        public static GenomicStudy WithText(this GenomicStudy r, Narrative value) { r.Text = value; return r; }
        public static GenomicStudy AddType(this GenomicStudy r, CodeableConcept item) { r.Type ??= new List<CodeableConcept>(); r.Type!.Add(item); return r; }
    }
}
