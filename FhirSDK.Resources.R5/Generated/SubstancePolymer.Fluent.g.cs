// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class SubstancePolymerFluentExtensions
    {
        public static SubstancePolymer WithClass(this SubstancePolymer r, CodeableConcept value) { r.Class = value; return r; }
        public static SubstancePolymer AddContained(this SubstancePolymer r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static SubstancePolymer AddCopolymerConnectivity(this SubstancePolymer r, CodeableConcept item) { r.CopolymerConnectivity ??= new List<CodeableConcept>(); r.CopolymerConnectivity!.Add(item); return r; }
        public static SubstancePolymer WithGeometry(this SubstancePolymer r, CodeableConcept value) { r.Geometry = value; return r; }
        public static SubstancePolymer WithIdentifier(this SubstancePolymer r, Identifier value) { r.Identifier = value; return r; }
        public static SubstancePolymer WithModification(this SubstancePolymer r, FhirString value) { r.Modification = value; return r; }
        public static SubstancePolymer AddMonomerSet(this SubstancePolymer r, BackboneElement item) { r.MonomerSet ??= new List<BackboneElement>(); r.MonomerSet!.Add(item); return r; }
        public static SubstancePolymer AddRepeat(this SubstancePolymer r, BackboneElement item) { r.Repeat ??= new List<BackboneElement>(); r.Repeat!.Add(item); return r; }
        public static SubstancePolymer WithText(this SubstancePolymer r, Narrative value) { r.Text = value; return r; }
    }
}
