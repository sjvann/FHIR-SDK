// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// Delivery of bulk Supplies
    /// </summary>
    public partial class SupplyDelivery : ResourceBase
    {
        public override string ResourceType => "SupplyDelivery";

        public SupplyDelivery() { }
        public SupplyDelivery(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public SupplyDelivery(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private List<ReferenceType>? _basedOn;
        [JsonPropertyName("basedOn")]
        public List<ReferenceType>? BasedOn { get => _basedOn; set { _basedOn = value; OnPropertyChangedByClr(nameof(BasedOn), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private ReferenceType? _destination;
        [JsonPropertyName("destination")]
        public ReferenceType? Destination { get => _destination; set { _destination = value; OnPropertyChangedByClr(nameof(Destination), value); } }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private FhirDateTime? _occurrenceDateTime;
        [JsonPropertyName("occurrenceDateTime")]
        public FhirDateTime? OccurrenceDateTime { get => _occurrenceDateTime; set { _occurrenceDateTime = value; if (value != null) {{ _occurrencePeriod = null; OnPropertyChangedByClr(nameof(OccurrencePeriod), null); _occurrenceTiming = null; OnPropertyChangedByClr(nameof(OccurrenceTiming), null); }}; OnPropertyChangedByClr(nameof(OccurrenceDateTime), value); } }

        private Period? _occurrencePeriod;
        [JsonPropertyName("occurrencePeriod")]
        public Period? OccurrencePeriod { get => _occurrencePeriod; set { _occurrencePeriod = value; if (value != null) {{ _occurrenceDateTime = null; OnPropertyChangedByClr(nameof(OccurrenceDateTime), null); _occurrenceTiming = null; OnPropertyChangedByClr(nameof(OccurrenceTiming), null); }}; OnPropertyChangedByClr(nameof(OccurrencePeriod), value); } }

        private Timing? _occurrenceTiming;
        [JsonPropertyName("occurrenceTiming")]
        public Timing? OccurrenceTiming { get => _occurrenceTiming; set { _occurrenceTiming = value; if (value != null) {{ _occurrenceDateTime = null; OnPropertyChangedByClr(nameof(OccurrenceDateTime), null); _occurrencePeriod = null; OnPropertyChangedByClr(nameof(OccurrencePeriod), null); }}; OnPropertyChangedByClr(nameof(OccurrenceTiming), value); } }

        private List<ReferenceType>? _partOf;
        [JsonPropertyName("partOf")]
        public List<ReferenceType>? PartOf { get => _partOf; set { _partOf = value; OnPropertyChangedByClr(nameof(PartOf), value); } }

        private ReferenceType? _patient;
        [JsonPropertyName("patient")]
        public ReferenceType? Patient { get => _patient; set { _patient = value; OnPropertyChangedByClr(nameof(Patient), value); } }

        private List<ReferenceType>? _receiver;
        [JsonPropertyName("receiver")]
        public List<ReferenceType>? Receiver { get => _receiver; set { _receiver = value; OnPropertyChangedByClr(nameof(Receiver), value); } }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode? Status { get => _status; set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private List<SupplyDelivery_SuppliedItem>? _suppliedItem;
        [JsonPropertyName("suppliedItem")]
        public List<SupplyDelivery_SuppliedItem>? SuppliedItem { get => _suppliedItem; set { _suppliedItem = value; OnPropertyChangedByClr(nameof(SuppliedItem), value); } }

        /// <summary>
        /// The item that is delivered or supplied
        /// </summary>
        public partial class SupplyDelivery_SuppliedItem : BackboneElement<SupplyDelivery_SuppliedItem>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "SupplyDelivery_SuppliedItem" : "supplyDelivery_SuppliedItem";
            private CodeableConcept? _itemCodeableConcept;
        [JsonPropertyName("itemCodeableConcept")]
        public CodeableConcept? ItemCodeableConcept { get => _itemCodeableConcept; set { _itemCodeableConcept = value; if (value != null) {{ _itemReference = null; OnPropertyChanged("itemReference", null); }}; OnPropertyChanged("itemCodeableConcept", value); } }

            private ReferenceType? _itemReference;
        [JsonPropertyName("itemReference")]
        public ReferenceType? ItemReference { get => _itemReference; set { _itemReference = value; if (value != null) {{ _itemCodeableConcept = null; OnPropertyChanged("itemCodeableConcept", null); }}; OnPropertyChanged("itemReference", value); } }

            private Quantity? _quantity;
        [JsonPropertyName("quantity")]
        public Quantity? Quantity { get => _quantity; set { _quantity = value; } }

        }

        private ReferenceType? _supplier;
        [JsonPropertyName("supplier")]
        public ReferenceType? Supplier { get => _supplier; set { _supplier = value; OnPropertyChangedByClr(nameof(Supplier), value); } }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

        private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept? Type { get => _type; set { _type = value; OnPropertyChangedByClr(nameof(Type), value); } }

    }
}
