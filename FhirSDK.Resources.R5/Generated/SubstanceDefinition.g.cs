// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// The detailed description of a substance, typically at a level beyond what is used for prescribing
    /// </summary>
    public partial class SubstanceDefinition : ResourceBase
    {
        public override string ResourceType => "SubstanceDefinition";

        public SubstanceDefinition() { }
        public SubstanceDefinition(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public SubstanceDefinition(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private List<SubstanceDefinition_Characterization>? _characterization;
        [JsonPropertyName("characterization")]
        public List<SubstanceDefinition_Characterization>? Characterization { get => _characterization; set { _characterization = value; OnPropertyChangedByClr(nameof(Characterization), value); } }

        /// <summary>
        /// General specifications for this substance
        /// </summary>
        public partial class SubstanceDefinition_Characterization : BackboneElement<SubstanceDefinition_Characterization>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "SubstanceDefinition_Characterization" : "substanceDefinition_Characterization";
            private FhirMarkdown? _description;
        [JsonPropertyName("description")]
        public FhirMarkdown? Description { get => _description; set { _description = value; } }

            private List<Attachment>? _file;
        [JsonPropertyName("file")]
        public List<Attachment>? File { get => _file; set { _file = value; } }

            private CodeableConcept? _form;
        [JsonPropertyName("form")]
        public CodeableConcept? Form { get => _form; set { _form = value; } }

            private CodeableConcept? _technique;
        [JsonPropertyName("technique")]
        public CodeableConcept? Technique { get => _technique; set { _technique = value; } }

        }

        private List<CodeableConcept>? _classification;
        [JsonPropertyName("classification")]
        public List<CodeableConcept>? Classification { get => _classification; set { _classification = value; OnPropertyChangedByClr(nameof(Classification), value); } }

        private List<SubstanceDefinition_Code>? _code;
        [JsonPropertyName("code")]
        public List<SubstanceDefinition_Code>? Code { get => _code; set { _code = value; OnPropertyChangedByClr(nameof(Code), value); } }

        /// <summary>
        /// Codes associated with the substance
        /// </summary>
        public partial class SubstanceDefinition_Code : BackboneElement<SubstanceDefinition_Code>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "SubstanceDefinition_Code" : "substanceDefinition_Code";
            private CodeableConcept? _code;
        [JsonPropertyName("code")]
        public CodeableConcept? Code { get => _code; set { _code = value; } }

            private List<Annotation>? _note;
        [JsonPropertyName("note")]
        public List<Annotation>? Note { get => _note; set { _note = value; } }

            private List<ReferenceType>? _source;
        [JsonPropertyName("source")]
        public List<ReferenceType>? Source { get => _source; set { _source = value; } }

            private CodeableConcept? _status;
        [JsonPropertyName("status")]
        public CodeableConcept? Status { get => _status; set { _status = value; } }

            private FhirDateTime? _statusDate;
        [JsonPropertyName("statusDate")]
        public FhirDateTime? StatusDate { get => _statusDate; set { _statusDate = value; } }

        }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private FhirMarkdown? _description;
        [JsonPropertyName("description")]
        public FhirMarkdown? Description { get => _description; set { _description = value; OnPropertyChangedByClr(nameof(Description), value); } }

        private CodeableConcept? _domain;
        [JsonPropertyName("domain")]
        public CodeableConcept? Domain { get => _domain; set { _domain = value; OnPropertyChangedByClr(nameof(Domain), value); } }

        private List<CodeableConcept>? _grade;
        [JsonPropertyName("grade")]
        public List<CodeableConcept>? Grade { get => _grade; set { _grade = value; OnPropertyChangedByClr(nameof(Grade), value); } }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private List<ReferenceType>? _informationSource;
        [JsonPropertyName("informationSource")]
        public List<ReferenceType>? InformationSource { get => _informationSource; set { _informationSource = value; OnPropertyChangedByClr(nameof(InformationSource), value); } }

        private List<ReferenceType>? _manufacturer;
        [JsonPropertyName("manufacturer")]
        public List<ReferenceType>? Manufacturer { get => _manufacturer; set { _manufacturer = value; OnPropertyChangedByClr(nameof(Manufacturer), value); } }

        private List<SubstanceDefinition_Moiety>? _moiety;
        [JsonPropertyName("moiety")]
        public List<SubstanceDefinition_Moiety>? Moiety { get => _moiety; set { _moiety = value; OnPropertyChangedByClr(nameof(Moiety), value); } }

        /// <summary>
        /// Moiety, for structural modifications
        /// </summary>
        public partial class SubstanceDefinition_Moiety : BackboneElement<SubstanceDefinition_Moiety>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "SubstanceDefinition_Moiety" : "substanceDefinition_Moiety";
            private Quantity? _amountQuantity;
        [JsonPropertyName("amountQuantity")]
        public Quantity? AmountQuantity { get => _amountQuantity; set { _amountQuantity = value; if (value != null) {{ _amountString = null; OnPropertyChanged("amountString", null); }}; OnPropertyChanged("amountQuantity", value); } }

            private FhirString? _amountString;
        [JsonPropertyName("amountString")]
        public FhirString? AmountString { get => _amountString; set { _amountString = value; if (value != null) {{ _amountQuantity = null; OnPropertyChanged("amountQuantity", null); }}; OnPropertyChanged("amountString", value); } }

            private Identifier? _identifier;
        [JsonPropertyName("identifier")]
        public Identifier? Identifier { get => _identifier; set { _identifier = value; } }

            private CodeableConcept? _measurementType;
        [JsonPropertyName("measurementType")]
        public CodeableConcept? MeasurementType { get => _measurementType; set { _measurementType = value; } }

            private FhirString? _molecularFormula;
        [JsonPropertyName("molecularFormula")]
        public FhirString? MolecularFormula { get => _molecularFormula; set { _molecularFormula = value; } }

            private FhirString? _name;
        [JsonPropertyName("name")]
        public FhirString? Name { get => _name; set { _name = value; } }

            private CodeableConcept? _opticalActivity;
        [JsonPropertyName("opticalActivity")]
        public CodeableConcept? OpticalActivity { get => _opticalActivity; set { _opticalActivity = value; } }

            private CodeableConcept? _role;
        [JsonPropertyName("role")]
        public CodeableConcept? Role { get => _role; set { _role = value; } }

            private CodeableConcept? _stereochemistry;
        [JsonPropertyName("stereochemistry")]
        public CodeableConcept? Stereochemistry { get => _stereochemistry; set { _stereochemistry = value; } }

        }

        private List<SubstanceDefinition_MolecularWeight>? _molecularWeight;
        [JsonPropertyName("molecularWeight")]
        public List<SubstanceDefinition_MolecularWeight>? MolecularWeight { get => _molecularWeight; set { _molecularWeight = value; OnPropertyChangedByClr(nameof(MolecularWeight), value); } }

        /// <summary>
        /// The average mass of a molecule of a compound
        /// </summary>
        public partial class SubstanceDefinition_MolecularWeight : BackboneElement<SubstanceDefinition_MolecularWeight>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "SubstanceDefinition_MolecularWeight" : "substanceDefinition_MolecularWeight";
            private Quantity? _amount;
        [JsonPropertyName("amount")]
        public Quantity Amount { get => _amount ?? throw new InvalidOperationException("Amount is required"); set { _amount = value; } }

            private CodeableConcept? _method;
        [JsonPropertyName("method")]
        public CodeableConcept? Method { get => _method; set { _method = value; } }

            private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept? Type { get => _type; set { _type = value; } }

        }

        private List<SubstanceDefinition_Name>? _name;
        [JsonPropertyName("name")]
        public List<SubstanceDefinition_Name>? Name { get => _name; set { _name = value; OnPropertyChangedByClr(nameof(Name), value); } }

        /// <summary>
        /// Names applicable to this substance
        /// </summary>
        public partial class SubstanceDefinition_Name : BackboneElement<SubstanceDefinition_Name>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "SubstanceDefinition_Name" : "substanceDefinition_Name";
            private List<CodeableConcept>? _domain;
        [JsonPropertyName("domain")]
        public List<CodeableConcept>? Domain { get => _domain; set { _domain = value; } }

            private List<CodeableConcept>? _jurisdiction;
        [JsonPropertyName("jurisdiction")]
        public List<CodeableConcept>? Jurisdiction { get => _jurisdiction; set { _jurisdiction = value; } }

            private List<CodeableConcept>? _language;
        [JsonPropertyName("language")]
        public List<CodeableConcept>? Language { get => _language; set { _language = value; } }

            private FhirString? _name;
        [JsonPropertyName("name")]
        public FhirString Name { get => _name ?? throw new InvalidOperationException("Name is required"); set { _name = value; } }

            private List<SubstanceDefinition_Name_Official>? _official;
        [JsonPropertyName("official")]
        public List<SubstanceDefinition_Name_Official>? Official { get => _official; set { _official = value; } }

            /// <summary>
            /// Details of the official nature of this name
            /// </summary>
            public partial class SubstanceDefinition_Name_Official : BackboneElement<SubstanceDefinition_Name_Official>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "SubstanceDefinition_Name_Official" : "substanceDefinition_Name_Official";
                private CodeableConcept? _authority;
        [JsonPropertyName("authority")]
        public CodeableConcept? Authority { get => _authority; set { _authority = value; } }

                private FhirDateTime? _date;
        [JsonPropertyName("date")]
        public FhirDateTime? Date { get => _date; set { _date = value; } }

                private CodeableConcept? _status;
        [JsonPropertyName("status")]
        public CodeableConcept? Status { get => _status; set { _status = value; } }

            }

            private FhirBoolean? _preferred;
        [JsonPropertyName("preferred")]
        public FhirBoolean? Preferred { get => _preferred; set { _preferred = value; } }

            private List<ReferenceType>? _source;
        [JsonPropertyName("source")]
        public List<ReferenceType>? Source { get => _source; set { _source = value; } }

            private CodeableConcept? _status;
        [JsonPropertyName("status")]
        public CodeableConcept? Status { get => _status; set { _status = value; } }

            private List<FhirString>? _synonym;
        [JsonPropertyName("synonym")]
        public List<FhirString>? Synonym { get => _synonym; set { _synonym = value; } }

            private List<FhirString>? _translation;
        [JsonPropertyName("translation")]
        public List<FhirString>? Translation { get => _translation; set { _translation = value; } }

            private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept? Type { get => _type; set { _type = value; } }

        }

        private List<Annotation>? _note;
        [JsonPropertyName("note")]
        public List<Annotation>? Note { get => _note; set { _note = value; OnPropertyChangedByClr(nameof(Note), value); } }

        private ReferenceType? _nucleicAcid;
        [JsonPropertyName("nucleicAcid")]
        public ReferenceType? NucleicAcid { get => _nucleicAcid; set { _nucleicAcid = value; OnPropertyChangedByClr(nameof(NucleicAcid), value); } }

        private ReferenceType? _polymer;
        [JsonPropertyName("polymer")]
        public ReferenceType? Polymer { get => _polymer; set { _polymer = value; OnPropertyChangedByClr(nameof(Polymer), value); } }

        private List<SubstanceDefinition_Property>? _property;
        [JsonPropertyName("property")]
        public List<SubstanceDefinition_Property>? Property { get => _property; set { _property = value; OnPropertyChangedByClr(nameof(Property), value); } }

        /// <summary>
        /// General specifications for this substance
        /// </summary>
        public partial class SubstanceDefinition_Property : BackboneElement<SubstanceDefinition_Property>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "SubstanceDefinition_Property" : "substanceDefinition_Property";
            private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept Type { get => _type ?? throw new InvalidOperationException("Type is required"); set { _type = value; } }

            private CodeableConcept? _valueCodeableConcept;
        [JsonPropertyName("valueCodeableConcept")]
        public CodeableConcept? ValueCodeableConcept { get => _valueCodeableConcept; set { _valueCodeableConcept = value; if (value != null) {{ _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valuedate = null; OnPropertyChanged("valuedate", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueAttachment = null; OnPropertyChanged("valueAttachment", null); }}; OnPropertyChanged("valueCodeableConcept", value); } }

            private Quantity? _valueQuantity;
        [JsonPropertyName("valueQuantity")]
        public Quantity? ValueQuantity { get => _valueQuantity; set { _valueQuantity = value; if (value != null) {{ _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valuedate = null; OnPropertyChanged("valuedate", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueAttachment = null; OnPropertyChanged("valueAttachment", null); }}; OnPropertyChanged("valueQuantity", value); } }

            private FhirDate? _valuedate;
        [JsonPropertyName("valuedate")]
        public FhirDate? Valuedate { get => _valuedate; set { _valuedate = value; if (value != null) {{ _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueAttachment = null; OnPropertyChanged("valueAttachment", null); }}; OnPropertyChanged("valuedate", value); } }

            private FhirBoolean? _valueBoolean;
        [JsonPropertyName("valueBoolean")]
        public FhirBoolean? ValueBoolean { get => _valueBoolean; set { _valueBoolean = value; if (value != null) {{ _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valuedate = null; OnPropertyChanged("valuedate", null); _valueAttachment = null; OnPropertyChanged("valueAttachment", null); }}; OnPropertyChanged("valueBoolean", value); } }

            private Attachment? _valueAttachment;
        [JsonPropertyName("valueAttachment")]
        public Attachment? ValueAttachment { get => _valueAttachment; set { _valueAttachment = value; if (value != null) {{ _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valuedate = null; OnPropertyChanged("valuedate", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); }}; OnPropertyChanged("valueAttachment", value); } }

        }

        private ReferenceType? _protein;
        [JsonPropertyName("protein")]
        public ReferenceType? Protein { get => _protein; set { _protein = value; OnPropertyChangedByClr(nameof(Protein), value); } }

        private ReferenceType? _referenceInformation;
        [JsonPropertyName("referenceInformation")]
        public ReferenceType? ReferenceInformation { get => _referenceInformation; set { _referenceInformation = value; OnPropertyChangedByClr(nameof(ReferenceInformation), value); } }

        private List<SubstanceDefinition_Relationship>? _relationship;
        [JsonPropertyName("relationship")]
        public List<SubstanceDefinition_Relationship>? Relationship { get => _relationship; set { _relationship = value; OnPropertyChangedByClr(nameof(Relationship), value); } }

        /// <summary>
        /// A link between this substance and another
        /// </summary>
        public partial class SubstanceDefinition_Relationship : BackboneElement<SubstanceDefinition_Relationship>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "SubstanceDefinition_Relationship" : "substanceDefinition_Relationship";
            private Quantity? _amountQuantity;
        [JsonPropertyName("amountQuantity")]
        public Quantity? AmountQuantity { get => _amountQuantity; set { _amountQuantity = value; if (value != null) {{ _amountRatio = null; OnPropertyChanged("amountRatio", null); _amountString = null; OnPropertyChanged("amountString", null); }}; OnPropertyChanged("amountQuantity", value); } }

            private Ratio? _amountRatio;
        [JsonPropertyName("amountRatio")]
        public Ratio? AmountRatio { get => _amountRatio; set { _amountRatio = value; if (value != null) {{ _amountQuantity = null; OnPropertyChanged("amountQuantity", null); _amountString = null; OnPropertyChanged("amountString", null); }}; OnPropertyChanged("amountRatio", value); } }

            private FhirString? _amountString;
        [JsonPropertyName("amountString")]
        public FhirString? AmountString { get => _amountString; set { _amountString = value; if (value != null) {{ _amountQuantity = null; OnPropertyChanged("amountQuantity", null); _amountRatio = null; OnPropertyChanged("amountRatio", null); }}; OnPropertyChanged("amountString", value); } }

            private CodeableConcept? _comparator;
        [JsonPropertyName("comparator")]
        public CodeableConcept? Comparator { get => _comparator; set { _comparator = value; } }

            private FhirBoolean? _isDefining;
        [JsonPropertyName("isDefining")]
        public FhirBoolean? IsDefining { get => _isDefining; set { _isDefining = value; } }

            private Ratio? _ratioHighLimitAmount;
        [JsonPropertyName("ratioHighLimitAmount")]
        public Ratio? RatioHighLimitAmount { get => _ratioHighLimitAmount; set { _ratioHighLimitAmount = value; } }

            private List<ReferenceType>? _source;
        [JsonPropertyName("source")]
        public List<ReferenceType>? Source { get => _source; set { _source = value; } }

            private ReferenceType? _substanceDefinitionReference;
        [JsonPropertyName("substanceDefinitionReference")]
        public ReferenceType? SubstanceDefinitionReference { get => _substanceDefinitionReference; set { _substanceDefinitionReference = value; if (value != null) {{ _substanceDefinitionCodeableConcept = null; OnPropertyChanged("substanceDefinitionCodeableConcept", null); }}; OnPropertyChanged("substanceDefinitionReference", value); } }

            private CodeableConcept? _substanceDefinitionCodeableConcept;
        [JsonPropertyName("substanceDefinitionCodeableConcept")]
        public CodeableConcept? SubstanceDefinitionCodeableConcept { get => _substanceDefinitionCodeableConcept; set { _substanceDefinitionCodeableConcept = value; if (value != null) {{ _substanceDefinitionReference = null; OnPropertyChanged("substanceDefinitionReference", null); }}; OnPropertyChanged("substanceDefinitionCodeableConcept", value); } }

            private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept Type { get => _type ?? throw new InvalidOperationException("Type is required"); set { _type = value; } }

        }

        private SubstanceDefinition_SourceMaterial? _sourceMaterial;
        [JsonPropertyName("sourceMaterial")]
        public SubstanceDefinition_SourceMaterial? SourceMaterial { get => _sourceMaterial; set { _sourceMaterial = value; OnPropertyChangedByClr(nameof(SourceMaterial), value); } }

        /// <summary>
        /// Material or taxonomic/anatomical source
        /// </summary>
        public partial class SubstanceDefinition_SourceMaterial : BackboneElement<SubstanceDefinition_SourceMaterial>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "SubstanceDefinition_SourceMaterial" : "substanceDefinition_SourceMaterial";
            private List<CodeableConcept>? _countryOfOrigin;
        [JsonPropertyName("countryOfOrigin")]
        public List<CodeableConcept>? CountryOfOrigin { get => _countryOfOrigin; set { _countryOfOrigin = value; } }

            private CodeableConcept? _genus;
        [JsonPropertyName("genus")]
        public CodeableConcept? Genus { get => _genus; set { _genus = value; } }

            private CodeableConcept? _part;
        [JsonPropertyName("part")]
        public CodeableConcept? Part { get => _part; set { _part = value; } }

            private CodeableConcept? _species;
        [JsonPropertyName("species")]
        public CodeableConcept? Species { get => _species; set { _species = value; } }

            private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept? Type { get => _type; set { _type = value; } }

        }

        private CodeableConcept? _status;
        [JsonPropertyName("status")]
        public CodeableConcept? Status { get => _status; set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private SubstanceDefinition_Structure? _structure;
        [JsonPropertyName("structure")]
        public SubstanceDefinition_Structure? Structure { get => _structure; set { _structure = value; OnPropertyChangedByClr(nameof(Structure), value); } }

        /// <summary>
        /// Structural information
        /// </summary>
        public partial class SubstanceDefinition_Structure : BackboneElement<SubstanceDefinition_Structure>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "SubstanceDefinition_Structure" : "substanceDefinition_Structure";
            private FhirString? _molecularFormula;
        [JsonPropertyName("molecularFormula")]
        public FhirString? MolecularFormula { get => _molecularFormula; set { _molecularFormula = value; } }

            private FhirString? _molecularFormulaByMoiety;
        [JsonPropertyName("molecularFormulaByMoiety")]
        public FhirString? MolecularFormulaByMoiety { get => _molecularFormulaByMoiety; set { _molecularFormulaByMoiety = value; } }

            private FhirString? _molecularWeight;
        [JsonPropertyName("molecularWeight")]
        public FhirString? MolecularWeight { get => _molecularWeight; set { _molecularWeight = value; } }

            private CodeableConcept? _opticalActivity;
        [JsonPropertyName("opticalActivity")]
        public CodeableConcept? OpticalActivity { get => _opticalActivity; set { _opticalActivity = value; } }

            private List<SubstanceDefinition_Structure_Representation>? _representation;
        [JsonPropertyName("representation")]
        public List<SubstanceDefinition_Structure_Representation>? Representation { get => _representation; set { _representation = value; } }

            /// <summary>
            /// A depiction of the structure of the substance
            /// </summary>
            public partial class SubstanceDefinition_Structure_Representation : BackboneElement<SubstanceDefinition_Structure_Representation>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "SubstanceDefinition_Structure_Representation" : "substanceDefinition_Structure_Representation";
                private ReferenceType? _document;
        [JsonPropertyName("document")]
        public ReferenceType? Document { get => _document; set { _document = value; } }

                private CodeableConcept? _format;
        [JsonPropertyName("format")]
        public CodeableConcept? Format { get => _format; set { _format = value; } }

                private FhirString? _representation;
        [JsonPropertyName("representation")]
        public FhirString? Representation { get => _representation; set { _representation = value; } }

                private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept? Type { get => _type; set { _type = value; } }

            }

            private List<ReferenceType>? _sourceDocument;
        [JsonPropertyName("sourceDocument")]
        public List<ReferenceType>? SourceDocument { get => _sourceDocument; set { _sourceDocument = value; } }

            private CodeableConcept? _stereochemistry;
        [JsonPropertyName("stereochemistry")]
        public CodeableConcept? Stereochemistry { get => _stereochemistry; set { _stereochemistry = value; } }

            private List<CodeableConcept>? _technique;
        [JsonPropertyName("technique")]
        public List<CodeableConcept>? Technique { get => _technique; set { _technique = value; } }

        }

        private List<ReferenceType>? _supplier;
        [JsonPropertyName("supplier")]
        public List<ReferenceType>? Supplier { get => _supplier; set { _supplier = value; OnPropertyChangedByClr(nameof(Supplier), value); } }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

        private FhirString? _version;
        [JsonPropertyName("version")]
        public FhirString? Version { get => _version; set { _version = value; OnPropertyChangedByClr(nameof(Version), value); } }

    }
}
