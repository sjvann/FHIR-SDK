// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// Describes validation requirements, source(s), status and dates for one or more elements
    /// </summary>
    public partial class VerificationResult : ResourceBase
    {
        public override string ResourceType => "VerificationResult";

        public VerificationResult() { }
        public VerificationResult(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public VerificationResult(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private VerificationResult_Attestation? _attestation;
        [JsonPropertyName("attestation")]
        public VerificationResult_Attestation? Attestation { get => _attestation; set { _attestation = value; OnPropertyChangedByClr(nameof(Attestation), value); } }

        /// <summary>
        /// Information about the entity attesting to information
        /// </summary>
        public partial class VerificationResult_Attestation : BackboneElement<VerificationResult_Attestation>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "VerificationResult_Attestation" : "verificationResult_Attestation";
            private CodeableConcept? _communicationMethod;
        [JsonPropertyName("communicationMethod")]
        public CodeableConcept? CommunicationMethod { get => _communicationMethod; set { _communicationMethod = value; } }

            private FhirDate? _date;
        [JsonPropertyName("date")]
        public FhirDate? Date { get => _date; set { _date = value; } }

            private ReferenceType? _onBehalfOf;
        [JsonPropertyName("onBehalfOf")]
        public ReferenceType? OnBehalfOf { get => _onBehalfOf; set { _onBehalfOf = value; } }

            private FhirString? _proxyIdentityCertificate;
        [JsonPropertyName("proxyIdentityCertificate")]
        public FhirString? ProxyIdentityCertificate { get => _proxyIdentityCertificate; set { _proxyIdentityCertificate = value; } }

            private Signature? _proxySignature;
        [JsonPropertyName("proxySignature")]
        public Signature? ProxySignature { get => _proxySignature; set { _proxySignature = value; } }

            private FhirString? _sourceIdentityCertificate;
        [JsonPropertyName("sourceIdentityCertificate")]
        public FhirString? SourceIdentityCertificate { get => _sourceIdentityCertificate; set { _sourceIdentityCertificate = value; } }

            private Signature? _sourceSignature;
        [JsonPropertyName("sourceSignature")]
        public Signature? SourceSignature { get => _sourceSignature; set { _sourceSignature = value; } }

            private ReferenceType? _who;
        [JsonPropertyName("who")]
        public ReferenceType? Who { get => _who; set { _who = value; } }

        }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private CodeableConcept? _failureAction;
        [JsonPropertyName("failureAction")]
        public CodeableConcept? FailureAction { get => _failureAction; set { _failureAction = value; OnPropertyChangedByClr(nameof(FailureAction), value); } }

        private Timing? _frequency;
        [JsonPropertyName("frequency")]
        public Timing? Frequency { get => _frequency; set { _frequency = value; OnPropertyChangedByClr(nameof(Frequency), value); } }

        private FhirDateTime? _lastPerformed;
        [JsonPropertyName("lastPerformed")]
        public FhirDateTime? LastPerformed { get => _lastPerformed; set { _lastPerformed = value; OnPropertyChangedByClr(nameof(LastPerformed), value); } }

        private CodeableConcept? _need;
        [JsonPropertyName("need")]
        public CodeableConcept? Need { get => _need; set { _need = value; OnPropertyChangedByClr(nameof(Need), value); } }

        private FhirDate? _nextScheduled;
        [JsonPropertyName("nextScheduled")]
        public FhirDate? NextScheduled { get => _nextScheduled; set { _nextScheduled = value; OnPropertyChangedByClr(nameof(NextScheduled), value); } }

        private List<VerificationResult_PrimarySource>? _primarySource;
        [JsonPropertyName("primarySource")]
        public List<VerificationResult_PrimarySource>? PrimarySource { get => _primarySource; set { _primarySource = value; OnPropertyChangedByClr(nameof(PrimarySource), value); } }

        /// <summary>
        /// Information about the primary source(s) involved in validation
        /// </summary>
        public partial class VerificationResult_PrimarySource : BackboneElement<VerificationResult_PrimarySource>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "VerificationResult_PrimarySource" : "verificationResult_PrimarySource";
            private CodeableConcept? _canPushUpdates;
        [JsonPropertyName("canPushUpdates")]
        public CodeableConcept? CanPushUpdates { get => _canPushUpdates; set { _canPushUpdates = value; } }

            private List<CodeableConcept>? _communicationMethod;
        [JsonPropertyName("communicationMethod")]
        public List<CodeableConcept>? CommunicationMethod { get => _communicationMethod; set { _communicationMethod = value; } }

            private List<CodeableConcept>? _pushTypeAvailable;
        [JsonPropertyName("pushTypeAvailable")]
        public List<CodeableConcept>? PushTypeAvailable { get => _pushTypeAvailable; set { _pushTypeAvailable = value; } }

            private List<CodeableConcept>? _type;
        [JsonPropertyName("type")]
        public List<CodeableConcept>? Type { get => _type; set { _type = value; } }

            private FhirDateTime? _validationDate;
        [JsonPropertyName("validationDate")]
        public FhirDateTime? ValidationDate { get => _validationDate; set { _validationDate = value; } }

            private CodeableConcept? _validationStatus;
        [JsonPropertyName("validationStatus")]
        public CodeableConcept? ValidationStatus { get => _validationStatus; set { _validationStatus = value; } }

            private ReferenceType? _who;
        [JsonPropertyName("who")]
        public ReferenceType? Who { get => _who; set { _who = value; } }

        }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode Status { get => _status ?? throw new InvalidOperationException("Status is required"); set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private FhirDateTime? _statusDate;
        [JsonPropertyName("statusDate")]
        public FhirDateTime? StatusDate { get => _statusDate; set { _statusDate = value; OnPropertyChangedByClr(nameof(StatusDate), value); } }

        private List<ReferenceType>? _target;
        [JsonPropertyName("target")]
        public List<ReferenceType>? Target { get => _target; set { _target = value; OnPropertyChangedByClr(nameof(Target), value); } }

        private List<FhirString>? _targetLocation;
        [JsonPropertyName("targetLocation")]
        public List<FhirString>? TargetLocation { get => _targetLocation; set { _targetLocation = value; OnPropertyChangedByClr(nameof(TargetLocation), value); } }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

        private List<CodeableConcept>? _validationProcess;
        [JsonPropertyName("validationProcess")]
        public List<CodeableConcept>? ValidationProcess { get => _validationProcess; set { _validationProcess = value; OnPropertyChangedByClr(nameof(ValidationProcess), value); } }

        private CodeableConcept? _validationType;
        [JsonPropertyName("validationType")]
        public CodeableConcept? ValidationType { get => _validationType; set { _validationType = value; OnPropertyChangedByClr(nameof(ValidationType), value); } }

        private List<VerificationResult_Validator>? _validator;
        [JsonPropertyName("validator")]
        public List<VerificationResult_Validator>? Validator { get => _validator; set { _validator = value; OnPropertyChangedByClr(nameof(Validator), value); } }

        /// <summary>
        /// Information about the entity validating information
        /// </summary>
        public partial class VerificationResult_Validator : BackboneElement<VerificationResult_Validator>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "VerificationResult_Validator" : "verificationResult_Validator";
            private Signature? _attestationSignature;
        [JsonPropertyName("attestationSignature")]
        public Signature? AttestationSignature { get => _attestationSignature; set { _attestationSignature = value; } }

            private FhirString? _identityCertificate;
        [JsonPropertyName("identityCertificate")]
        public FhirString? IdentityCertificate { get => _identityCertificate; set { _identityCertificate = value; } }

            private ReferenceType? _organization;
        [JsonPropertyName("organization")]
        public ReferenceType Organization { get => _organization ?? throw new InvalidOperationException("Organization is required"); set { _organization = value; } }

        }

    }
}
