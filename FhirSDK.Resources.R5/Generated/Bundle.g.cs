// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// Contains a collection of resources
    /// </summary>
    public partial class Bundle : ResourceBase
    {
        public override string ResourceType => "Bundle";

        public Bundle() { }
        public Bundle(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public Bundle(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private List<Bundle_Entry>? _entry;
        [JsonPropertyName("entry")]
        public List<Bundle_Entry>? Entry { get => _entry; set { _entry = value; OnPropertyChangedByClr(nameof(Entry), value); } }

        /// <summary>
        /// Entry in the bundle - will have a resource or information
        /// </summary>
        public partial class Bundle_Entry : BackboneElement<Bundle_Entry>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Bundle_Entry" : "bundle_Entry";
            private FhirUri? _fullUrl;
        [JsonPropertyName("fullUrl")]
        public FhirUri? FullUrl { get => _fullUrl; set { _fullUrl = value; } }

            private List<FhirString>? _link;
        [JsonPropertyName("link")]
        public List<FhirString>? Link { get => _link; set { _link = value; } }

            private Bundle_Entry_Request? _request;
        [JsonPropertyName("request")]
        public Bundle_Entry_Request? Request { get => _request; set { _request = value; } }

            /// <summary>
            /// Additional execution information (transaction/batch/history)
            /// </summary>
            public partial class Bundle_Entry_Request : BackboneElement<Bundle_Entry_Request>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Bundle_Entry_Request" : "bundle_Entry_Request";
                private FhirString? _ifMatch;
        [JsonPropertyName("ifMatch")]
        public FhirString? IfMatch { get => _ifMatch; set { _ifMatch = value; } }

                private FhirInstant? _ifModifiedSince;
        [JsonPropertyName("ifModifiedSince")]
        public FhirInstant? IfModifiedSince { get => _ifModifiedSince; set { _ifModifiedSince = value; } }

                private FhirString? _ifNoneExist;
        [JsonPropertyName("ifNoneExist")]
        public FhirString? IfNoneExist { get => _ifNoneExist; set { _ifNoneExist = value; } }

                private FhirString? _ifNoneMatch;
        [JsonPropertyName("ifNoneMatch")]
        public FhirString? IfNoneMatch { get => _ifNoneMatch; set { _ifNoneMatch = value; } }

                private FhirCode? _method;
        [JsonPropertyName("method")]
        public FhirCode Method { get => _method ?? throw new InvalidOperationException("Method is required"); set { _method = value; } }

                private FhirUri? _url;
        [JsonPropertyName("url")]
        public FhirUri Url { get => _url ?? throw new InvalidOperationException("Url is required"); set { _url = value; } }

            }

            private Resource? _resource;
        [JsonPropertyName("resource")]
        public Resource? Resource { get => _resource; set { _resource = value; } }

            private Bundle_Entry_Response? _response;
        [JsonPropertyName("response")]
        public Bundle_Entry_Response? Response { get => _response; set { _response = value; } }

            /// <summary>
            /// Results of execution (transaction/batch/history)
            /// </summary>
            public partial class Bundle_Entry_Response : BackboneElement<Bundle_Entry_Response>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Bundle_Entry_Response" : "bundle_Entry_Response";
                private FhirString? _etag;
        [JsonPropertyName("etag")]
        public FhirString? Etag { get => _etag; set { _etag = value; } }

                private FhirInstant? _lastModified;
        [JsonPropertyName("lastModified")]
        public FhirInstant? LastModified { get => _lastModified; set { _lastModified = value; } }

                private FhirUri? _location;
        [JsonPropertyName("location")]
        public FhirUri? Location { get => _location; set { _location = value; } }

                private Resource? _outcome;
        [JsonPropertyName("outcome")]
        public Resource? Outcome { get => _outcome; set { _outcome = value; } }

                private FhirString? _status;
        [JsonPropertyName("status")]
        public FhirString Status { get => _status ?? throw new InvalidOperationException("Status is required"); set { _status = value; } }

            }

            private Bundle_Entry_Search? _search;
        [JsonPropertyName("search")]
        public Bundle_Entry_Search? Search { get => _search; set { _search = value; } }

            /// <summary>
            /// Search related information
            /// </summary>
            public partial class Bundle_Entry_Search : BackboneElement<Bundle_Entry_Search>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Bundle_Entry_Search" : "bundle_Entry_Search";
                private FhirCode? _mode;
        [JsonPropertyName("mode")]
        public FhirCode? Mode { get => _mode; set { _mode = value; } }

                private FhirDecimal? _score;
        [JsonPropertyName("score")]
        public FhirDecimal? Score { get => _score; set { _score = value; } }

            }

        }

        private Identifier? _identifier;
        [JsonPropertyName("identifier")]
        public Identifier? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private Resource? _issues;
        [JsonPropertyName("issues")]
        public Resource? Issues { get => _issues; set { _issues = value; OnPropertyChangedByClr(nameof(Issues), value); } }

        private List<Bundle_Link>? _link;
        [JsonPropertyName("link")]
        public List<Bundle_Link>? Link { get => _link; set { _link = value; OnPropertyChangedByClr(nameof(Link), value); } }

        /// <summary>
        /// Links related to this Bundle
        /// </summary>
        public partial class Bundle_Link : BackboneElement<Bundle_Link>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Bundle_Link" : "bundle_Link";
            private FhirCode? _relation;
        [JsonPropertyName("relation")]
        public FhirCode Relation { get => _relation ?? throw new InvalidOperationException("Relation is required"); set { _relation = value; } }

            private FhirUri? _url;
        [JsonPropertyName("url")]
        public FhirUri Url { get => _url ?? throw new InvalidOperationException("Url is required"); set { _url = value; } }

        }

        private Signature? _signature;
        [JsonPropertyName("signature")]
        public Signature? Signature { get => _signature; set { _signature = value; OnPropertyChangedByClr(nameof(Signature), value); } }

        private FhirInstant? _timestamp;
        [JsonPropertyName("timestamp")]
        public FhirInstant? Timestamp { get => _timestamp; set { _timestamp = value; OnPropertyChangedByClr(nameof(Timestamp), value); } }

        private FhirUnsignedInt? _total;
        [JsonPropertyName("total")]
        public FhirUnsignedInt? Total { get => _total; set { _total = value; OnPropertyChangedByClr(nameof(Total), value); } }

        private FhirCode? _type;
        [JsonPropertyName("type")]
        public FhirCode Type { get => _type ?? throw new InvalidOperationException("Type is required"); set { _type = value; OnPropertyChangedByClr(nameof(Type), value); } }

    }
}
