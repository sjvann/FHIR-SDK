// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// Specific and identified anatomical structure
    /// </summary>
    public partial class BodyStructure : ResourceBase
    {
        public override string ResourceType => "BodyStructure";

        public BodyStructure() { }
        public BodyStructure(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public BodyStructure(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private FhirBoolean? _active;
        [JsonPropertyName("active")]
        public FhirBoolean? Active { get => _active; set { _active = value; OnPropertyChangedByClr(nameof(Active), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private FhirMarkdown? _description;
        [JsonPropertyName("description")]
        public FhirMarkdown? Description { get => _description; set { _description = value; OnPropertyChangedByClr(nameof(Description), value); } }

        private List<FhirString>? _excludedStructure;
        [JsonPropertyName("excludedStructure")]
        public List<FhirString>? ExcludedStructure { get => _excludedStructure; set { _excludedStructure = value; OnPropertyChangedByClr(nameof(ExcludedStructure), value); } }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private List<Attachment>? _image;
        [JsonPropertyName("image")]
        public List<Attachment>? Image { get => _image; set { _image = value; OnPropertyChangedByClr(nameof(Image), value); } }

        private List<BodyStructure_IncludedStructure> _includedStructure = new();
        [JsonPropertyName("includedStructure")]
        public List<BodyStructure_IncludedStructure> IncludedStructure { get => _includedStructure; set { _includedStructure = value; OnPropertyChangedByClr(nameof(IncludedStructure), value); } }

        /// <summary>
        /// Included anatomic location(s)
        /// </summary>
        public partial class BodyStructure_IncludedStructure : BackboneElement<BodyStructure_IncludedStructure>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "BodyStructure_IncludedStructure" : "bodyStructure_IncludedStructure";
            private List<BodyStructure_IncludedStructure_BodyLandmarkOrientation>? _bodyLandmarkOrientation;
        [JsonPropertyName("bodyLandmarkOrientation")]
        public List<BodyStructure_IncludedStructure_BodyLandmarkOrientation>? BodyLandmarkOrientation { get => _bodyLandmarkOrientation; set { _bodyLandmarkOrientation = value; } }

            /// <summary>
            /// Landmark relative location
            /// </summary>
            public partial class BodyStructure_IncludedStructure_BodyLandmarkOrientation : BackboneElement<BodyStructure_IncludedStructure_BodyLandmarkOrientation>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "BodyStructure_IncludedStructure_BodyLandmarkOrientation" : "bodyStructure_IncludedStructure_BodyLandmarkOrientation";
                private List<CodeableConcept>? _clockFacePosition;
        [JsonPropertyName("clockFacePosition")]
        public List<CodeableConcept>? ClockFacePosition { get => _clockFacePosition; set { _clockFacePosition = value; } }

                private List<BodyStructure_IncludedStructure_BodyLandmarkOrientation_DistanceFromLandmark>? _distanceFromLandmark;
        [JsonPropertyName("distanceFromLandmark")]
        public List<BodyStructure_IncludedStructure_BodyLandmarkOrientation_DistanceFromLandmark>? DistanceFromLandmark { get => _distanceFromLandmark; set { _distanceFromLandmark = value; } }

                /// <summary>
                /// Landmark relative location
                /// </summary>
                public partial class BodyStructure_IncludedStructure_BodyLandmarkOrientation_DistanceFromLandmark : BackboneElement<BodyStructure_IncludedStructure_BodyLandmarkOrientation_DistanceFromLandmark>
                {
                    public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "BodyStructure_IncludedStructure_BodyLandmarkOrientation_DistanceFromLandmark" : "bodyStructure_IncludedStructure_BodyLandmarkOrientation_DistanceFromLandmark";
                    private List<CodeableReference>? _device;
        [JsonPropertyName("device")]
        public List<CodeableReference>? Device { get => _device; set { _device = value; } }

                    private List<Quantity>? _value;
        [JsonPropertyName("value")]
        public List<Quantity>? Value { get => _value; set { _value = value; } }

                }

                private List<CodeableConcept>? _landmarkDescription;
        [JsonPropertyName("landmarkDescription")]
        public List<CodeableConcept>? LandmarkDescription { get => _landmarkDescription; set { _landmarkDescription = value; } }

                private List<CodeableConcept>? _surfaceOrientation;
        [JsonPropertyName("surfaceOrientation")]
        public List<CodeableConcept>? SurfaceOrientation { get => _surfaceOrientation; set { _surfaceOrientation = value; } }

            }

            private CodeableConcept? _laterality;
        [JsonPropertyName("laterality")]
        public CodeableConcept? Laterality { get => _laterality; set { _laterality = value; } }

            private List<CodeableConcept>? _qualifier;
        [JsonPropertyName("qualifier")]
        public List<CodeableConcept>? Qualifier { get => _qualifier; set { _qualifier = value; } }

            private List<ReferenceType>? _spatialReference;
        [JsonPropertyName("spatialReference")]
        public List<ReferenceType>? SpatialReference { get => _spatialReference; set { _spatialReference = value; } }

            private CodeableConcept? _structure;
        [JsonPropertyName("structure")]
        public CodeableConcept Structure { get => _structure ?? throw new InvalidOperationException("Structure is required"); set { _structure = value; } }

        }

        private CodeableConcept? _morphology;
        [JsonPropertyName("morphology")]
        public CodeableConcept? Morphology { get => _morphology; set { _morphology = value; OnPropertyChangedByClr(nameof(Morphology), value); } }

        private ReferenceType? _patient;
        [JsonPropertyName("patient")]
        public ReferenceType Patient { get => _patient ?? throw new InvalidOperationException("Patient is required"); set { _patient = value; OnPropertyChangedByClr(nameof(Patient), value); } }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

    }
}
