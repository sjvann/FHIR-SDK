// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// Results of a measure evaluation
    /// </summary>
    public partial class MeasureReport : ResourceBase
    {
        public override string ResourceType => "MeasureReport";

        public MeasureReport() { }
        public MeasureReport(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public MeasureReport(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private FhirCode? _dataUpdateType;
        [JsonPropertyName("dataUpdateType")]
        public FhirCode? DataUpdateType { get => _dataUpdateType; set { _dataUpdateType = value; OnPropertyChangedByClr(nameof(DataUpdateType), value); } }

        private FhirDateTime? _date;
        [JsonPropertyName("date")]
        public FhirDateTime? Date { get => _date; set { _date = value; OnPropertyChangedByClr(nameof(Date), value); } }

        private List<ReferenceType>? _evaluatedResource;
        [JsonPropertyName("evaluatedResource")]
        public List<ReferenceType>? EvaluatedResource { get => _evaluatedResource; set { _evaluatedResource = value; OnPropertyChangedByClr(nameof(EvaluatedResource), value); } }

        private List<MeasureReport_Group>? _group;
        [JsonPropertyName("group")]
        public List<MeasureReport_Group>? Group { get => _group; set { _group = value; OnPropertyChangedByClr(nameof(Group), value); } }

        /// <summary>
        /// Measure results for each group
        /// </summary>
        public partial class MeasureReport_Group : BackboneElement<MeasureReport_Group>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "MeasureReport_Group" : "measureReport_Group";
            private CodeableConcept? _code;
        [JsonPropertyName("code")]
        public CodeableConcept? Code { get => _code; set { _code = value; } }

            private FhirString? _linkId;
        [JsonPropertyName("linkId")]
        public FhirString? LinkId { get => _linkId; set { _linkId = value; } }

            private Quantity? _measureScoreQuantity;
        [JsonPropertyName("measureScoreQuantity")]
        public Quantity? MeasureScoreQuantity { get => _measureScoreQuantity; set { _measureScoreQuantity = value; if (value != null) {{ _measureScoreDateTime = null; OnPropertyChanged("measureScoreDateTime", null); _measureScoreCodeableConcept = null; OnPropertyChanged("measureScoreCodeableConcept", null); _measureScorePeriod = null; OnPropertyChanged("measureScorePeriod", null); _measureScoreRange = null; OnPropertyChanged("measureScoreRange", null); _measureScoreDuration = null; OnPropertyChanged("measureScoreDuration", null); }}; OnPropertyChanged("measureScoreQuantity", value); } }

            private FhirDateTime? _measureScoreDateTime;
        [JsonPropertyName("measureScoreDateTime")]
        public FhirDateTime? MeasureScoreDateTime { get => _measureScoreDateTime; set { _measureScoreDateTime = value; if (value != null) {{ _measureScoreQuantity = null; OnPropertyChanged("measureScoreQuantity", null); _measureScoreCodeableConcept = null; OnPropertyChanged("measureScoreCodeableConcept", null); _measureScorePeriod = null; OnPropertyChanged("measureScorePeriod", null); _measureScoreRange = null; OnPropertyChanged("measureScoreRange", null); _measureScoreDuration = null; OnPropertyChanged("measureScoreDuration", null); }}; OnPropertyChanged("measureScoreDateTime", value); } }

            private CodeableConcept? _measureScoreCodeableConcept;
        [JsonPropertyName("measureScoreCodeableConcept")]
        public CodeableConcept? MeasureScoreCodeableConcept { get => _measureScoreCodeableConcept; set { _measureScoreCodeableConcept = value; if (value != null) {{ _measureScoreQuantity = null; OnPropertyChanged("measureScoreQuantity", null); _measureScoreDateTime = null; OnPropertyChanged("measureScoreDateTime", null); _measureScorePeriod = null; OnPropertyChanged("measureScorePeriod", null); _measureScoreRange = null; OnPropertyChanged("measureScoreRange", null); _measureScoreDuration = null; OnPropertyChanged("measureScoreDuration", null); }}; OnPropertyChanged("measureScoreCodeableConcept", value); } }

            private Period? _measureScorePeriod;
        [JsonPropertyName("measureScorePeriod")]
        public Period? MeasureScorePeriod { get => _measureScorePeriod; set { _measureScorePeriod = value; if (value != null) {{ _measureScoreQuantity = null; OnPropertyChanged("measureScoreQuantity", null); _measureScoreDateTime = null; OnPropertyChanged("measureScoreDateTime", null); _measureScoreCodeableConcept = null; OnPropertyChanged("measureScoreCodeableConcept", null); _measureScoreRange = null; OnPropertyChanged("measureScoreRange", null); _measureScoreDuration = null; OnPropertyChanged("measureScoreDuration", null); }}; OnPropertyChanged("measureScorePeriod", value); } }

            private DataTypeServices.DataTypes.ComplexTypes.Range? _measureScoreRange;
        [JsonPropertyName("measureScoreRange")]
        public DataTypeServices.DataTypes.ComplexTypes.Range? MeasureScoreRange { get => _measureScoreRange; set { _measureScoreRange = value; if (value != null) {{ _measureScoreQuantity = null; OnPropertyChanged("measureScoreQuantity", null); _measureScoreDateTime = null; OnPropertyChanged("measureScoreDateTime", null); _measureScoreCodeableConcept = null; OnPropertyChanged("measureScoreCodeableConcept", null); _measureScorePeriod = null; OnPropertyChanged("measureScorePeriod", null); _measureScoreDuration = null; OnPropertyChanged("measureScoreDuration", null); }}; OnPropertyChanged("measureScoreRange", value); } }

            private Duration? _measureScoreDuration;
        [JsonPropertyName("measureScoreDuration")]
        public Duration? MeasureScoreDuration { get => _measureScoreDuration; set { _measureScoreDuration = value; if (value != null) {{ _measureScoreQuantity = null; OnPropertyChanged("measureScoreQuantity", null); _measureScoreDateTime = null; OnPropertyChanged("measureScoreDateTime", null); _measureScoreCodeableConcept = null; OnPropertyChanged("measureScoreCodeableConcept", null); _measureScorePeriod = null; OnPropertyChanged("measureScorePeriod", null); _measureScoreRange = null; OnPropertyChanged("measureScoreRange", null); }}; OnPropertyChanged("measureScoreDuration", value); } }

            private List<MeasureReport_Group_Population>? _population;
        [JsonPropertyName("population")]
        public List<MeasureReport_Group_Population>? Population { get => _population; set { _population = value; } }

            /// <summary>
            /// The populations in the group
            /// </summary>
            public partial class MeasureReport_Group_Population : BackboneElement<MeasureReport_Group_Population>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "MeasureReport_Group_Population" : "measureReport_Group_Population";
                private CodeableConcept? _code;
        [JsonPropertyName("code")]
        public CodeableConcept? Code { get => _code; set { _code = value; } }

                private FhirInteger? _count;
        [JsonPropertyName("count")]
        public FhirInteger? Count { get => _count; set { _count = value; } }

                private FhirString? _linkId;
        [JsonPropertyName("linkId")]
        public FhirString? LinkId { get => _linkId; set { _linkId = value; } }

                private List<ReferenceType>? _subjectReport;
        [JsonPropertyName("subjectReport")]
        public List<ReferenceType>? SubjectReport { get => _subjectReport; set { _subjectReport = value; } }

                private ReferenceType? _subjectResults;
        [JsonPropertyName("subjectResults")]
        public ReferenceType? SubjectResults { get => _subjectResults; set { _subjectResults = value; } }

                private ReferenceType? _subjects;
        [JsonPropertyName("subjects")]
        public ReferenceType? Subjects { get => _subjects; set { _subjects = value; } }

            }

            private List<MeasureReport_Group_Stratifier>? _stratifier;
        [JsonPropertyName("stratifier")]
        public List<MeasureReport_Group_Stratifier>? Stratifier { get => _stratifier; set { _stratifier = value; } }

            /// <summary>
            /// Stratification results
            /// </summary>
            public partial class MeasureReport_Group_Stratifier : BackboneElement<MeasureReport_Group_Stratifier>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "MeasureReport_Group_Stratifier" : "measureReport_Group_Stratifier";
                private CodeableConcept? _code;
        [JsonPropertyName("code")]
        public CodeableConcept? Code { get => _code; set { _code = value; } }

                private FhirString? _linkId;
        [JsonPropertyName("linkId")]
        public FhirString? LinkId { get => _linkId; set { _linkId = value; } }

                private List<MeasureReport_Group_Stratifier_Stratum>? _stratum;
        [JsonPropertyName("stratum")]
        public List<MeasureReport_Group_Stratifier_Stratum>? Stratum { get => _stratum; set { _stratum = value; } }

                /// <summary>
                /// Stratum results, one for each unique value, or set of values, in the stratifier, or stratifier components
                /// </summary>
                public partial class MeasureReport_Group_Stratifier_Stratum : BackboneElement<MeasureReport_Group_Stratifier_Stratum>
                {
                    public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "MeasureReport_Group_Stratifier_Stratum" : "measureReport_Group_Stratifier_Stratum";
                    private List<MeasureReport_Group_Stratifier_Stratum_Component>? _component;
        [JsonPropertyName("component")]
        public List<MeasureReport_Group_Stratifier_Stratum_Component>? Component { get => _component; set { _component = value; } }

                    /// <summary>
                    /// Stratifier component values
                    /// </summary>
                    public partial class MeasureReport_Group_Stratifier_Stratum_Component : BackboneElement<MeasureReport_Group_Stratifier_Stratum_Component>
                    {
                        public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "MeasureReport_Group_Stratifier_Stratum_Component" : "measureReport_Group_Stratifier_Stratum_Component";
                        private CodeableConcept? _code;
        [JsonPropertyName("code")]
        public CodeableConcept Code { get => _code ?? throw new InvalidOperationException("Code is required"); set { _code = value; } }

                        private FhirString? _linkId;
        [JsonPropertyName("linkId")]
        public FhirString? LinkId { get => _linkId; set { _linkId = value; } }

                        private CodeableConcept? _valueCodeableConcept;
        [JsonPropertyName("valueCodeableConcept")]
        public CodeableConcept? ValueCodeableConcept { get => _valueCodeableConcept; set { _valueCodeableConcept = value; if (value != null) {{ _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueRange = null; OnPropertyChanged("valueRange", null); _valueReference = null; OnPropertyChanged("valueReference", null); }}; OnPropertyChanged("valueCodeableConcept", value); } }

                        private FhirBoolean? _valueBoolean;
        [JsonPropertyName("valueBoolean")]
        public FhirBoolean? ValueBoolean { get => _valueBoolean; set { _valueBoolean = value; if (value != null) {{ _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueRange = null; OnPropertyChanged("valueRange", null); _valueReference = null; OnPropertyChanged("valueReference", null); }}; OnPropertyChanged("valueBoolean", value); } }

                        private Quantity? _valueQuantity;
        [JsonPropertyName("valueQuantity")]
        public Quantity? ValueQuantity { get => _valueQuantity; set { _valueQuantity = value; if (value != null) {{ _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueRange = null; OnPropertyChanged("valueRange", null); _valueReference = null; OnPropertyChanged("valueReference", null); }}; OnPropertyChanged("valueQuantity", value); } }

                        private DataTypeServices.DataTypes.ComplexTypes.Range? _valueRange;
        [JsonPropertyName("valueRange")]
        public DataTypeServices.DataTypes.ComplexTypes.Range? ValueRange { get => _valueRange; set { _valueRange = value; if (value != null) {{ _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueReference = null; OnPropertyChanged("valueReference", null); }}; OnPropertyChanged("valueRange", value); } }

                        private ReferenceType? _valueReference;
        [JsonPropertyName("valueReference")]
        public ReferenceType? ValueReference { get => _valueReference; set { _valueReference = value; if (value != null) {{ _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueRange = null; OnPropertyChanged("valueRange", null); }}; OnPropertyChanged("valueReference", value); } }

                    }

                    private Quantity? _measureScoreQuantity;
        [JsonPropertyName("measureScoreQuantity")]
        public Quantity? MeasureScoreQuantity { get => _measureScoreQuantity; set { _measureScoreQuantity = value; if (value != null) {{ }}; OnPropertyChanged("measureScoreQuantity", value); } }

                    private FhirDateTime? _measureScoreDateTime;
        [JsonPropertyName("measureScoreDateTime")]
        public FhirDateTime? MeasureScoreDateTime { get => _measureScoreDateTime; set { _measureScoreDateTime = value; if (value != null) {{ _measureScoreQuantity = null; OnPropertyChanged("measureScoreQuantity", null); }}; OnPropertyChanged("measureScoreDateTime", value); } }

                    private CodeableConcept? _measureScoreCodeableConcept;
        [JsonPropertyName("measureScoreCodeableConcept")]
        public CodeableConcept? MeasureScoreCodeableConcept { get => _measureScoreCodeableConcept; set { _measureScoreCodeableConcept = value; if (value != null) {{ _measureScoreQuantity = null; OnPropertyChanged("measureScoreQuantity", null); _measureScoreDateTime = null; OnPropertyChanged("measureScoreDateTime", null); }}; OnPropertyChanged("measureScoreCodeableConcept", value); } }

                    private Period? _measureScorePeriod;
        [JsonPropertyName("measureScorePeriod")]
        public Period? MeasureScorePeriod { get => _measureScorePeriod; set { _measureScorePeriod = value; if (value != null) {{ _measureScoreQuantity = null; OnPropertyChanged("measureScoreQuantity", null); _measureScoreDateTime = null; OnPropertyChanged("measureScoreDateTime", null); _measureScoreCodeableConcept = null; OnPropertyChanged("measureScoreCodeableConcept", null); }}; OnPropertyChanged("measureScorePeriod", value); } }

                    private DataTypeServices.DataTypes.ComplexTypes.Range? _measureScoreRange;
        [JsonPropertyName("measureScoreRange")]
        public DataTypeServices.DataTypes.ComplexTypes.Range? MeasureScoreRange { get => _measureScoreRange; set { _measureScoreRange = value; if (value != null) {{ _measureScoreQuantity = null; OnPropertyChanged("measureScoreQuantity", null); _measureScoreDateTime = null; OnPropertyChanged("measureScoreDateTime", null); _measureScoreCodeableConcept = null; OnPropertyChanged("measureScoreCodeableConcept", null); _measureScorePeriod = null; OnPropertyChanged("measureScorePeriod", null); }}; OnPropertyChanged("measureScoreRange", value); } }

                    private Duration? _measureScoreDuration;
        [JsonPropertyName("measureScoreDuration")]
        public Duration? MeasureScoreDuration { get => _measureScoreDuration; set { _measureScoreDuration = value; if (value != null) {{ _measureScoreQuantity = null; OnPropertyChanged("measureScoreQuantity", null); _measureScoreDateTime = null; OnPropertyChanged("measureScoreDateTime", null); _measureScoreCodeableConcept = null; OnPropertyChanged("measureScoreCodeableConcept", null); _measureScorePeriod = null; OnPropertyChanged("measureScorePeriod", null); _measureScoreRange = null; OnPropertyChanged("measureScoreRange", null); }}; OnPropertyChanged("measureScoreDuration", value); } }

                    private List<MeasureReport_Group_Stratifier_Stratum_Population>? _population;
        [JsonPropertyName("population")]
        public List<MeasureReport_Group_Stratifier_Stratum_Population>? Population { get => _population; set { _population = value; } }

                    /// <summary>
                    /// Population results in this stratum
                    /// </summary>
                    public partial class MeasureReport_Group_Stratifier_Stratum_Population : BackboneElement<MeasureReport_Group_Stratifier_Stratum_Population>
                    {
                        public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "MeasureReport_Group_Stratifier_Stratum_Population" : "measureReport_Group_Stratifier_Stratum_Population";
                        private CodeableConcept? _code;
        [JsonPropertyName("code")]
        public CodeableConcept? Code { get => _code; set { _code = value; } }

                        private FhirInteger? _count;
        [JsonPropertyName("count")]
        public FhirInteger? Count { get => _count; set { _count = value; } }

                        private FhirString? _linkId;
        [JsonPropertyName("linkId")]
        public FhirString? LinkId { get => _linkId; set { _linkId = value; } }

                        private List<ReferenceType>? _subjectReport;
        [JsonPropertyName("subjectReport")]
        public List<ReferenceType>? SubjectReport { get => _subjectReport; set { _subjectReport = value; } }

                        private ReferenceType? _subjectResults;
        [JsonPropertyName("subjectResults")]
        public ReferenceType? SubjectResults { get => _subjectResults; set { _subjectResults = value; } }

                        private ReferenceType? _subjects;
        [JsonPropertyName("subjects")]
        public ReferenceType? Subjects { get => _subjects; set { _subjects = value; } }

                    }

                    private CodeableConcept? _valueCodeableConcept;
        [JsonPropertyName("valueCodeableConcept")]
        public CodeableConcept? ValueCodeableConcept { get => _valueCodeableConcept; set { _valueCodeableConcept = value; if (value != null) {{ }}; OnPropertyChanged("valueCodeableConcept", value); } }

                    private FhirBoolean? _valueBoolean;
        [JsonPropertyName("valueBoolean")]
        public FhirBoolean? ValueBoolean { get => _valueBoolean; set { _valueBoolean = value; if (value != null) {{ _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); }}; OnPropertyChanged("valueBoolean", value); } }

                    private Quantity? _valueQuantity;
        [JsonPropertyName("valueQuantity")]
        public Quantity? ValueQuantity { get => _valueQuantity; set { _valueQuantity = value; if (value != null) {{ _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); }}; OnPropertyChanged("valueQuantity", value); } }

                    private DataTypeServices.DataTypes.ComplexTypes.Range? _valueRange;
        [JsonPropertyName("valueRange")]
        public DataTypeServices.DataTypes.ComplexTypes.Range? ValueRange { get => _valueRange; set { _valueRange = value; if (value != null) {{ _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); }}; OnPropertyChanged("valueRange", value); } }

                    private ReferenceType? _valueReference;
        [JsonPropertyName("valueReference")]
        public ReferenceType? ValueReference { get => _valueReference; set { _valueReference = value; if (value != null) {{ _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueRange = null; OnPropertyChanged("valueRange", null); }}; OnPropertyChanged("valueReference", value); } }

                }

            }

            private ReferenceType? _subject;
        [JsonPropertyName("subject")]
        public ReferenceType? Subject { get => _subject; set { _subject = value; } }

        }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private CodeableConcept? _improvementNotation;
        [JsonPropertyName("improvementNotation")]
        public CodeableConcept? ImprovementNotation { get => _improvementNotation; set { _improvementNotation = value; OnPropertyChangedByClr(nameof(ImprovementNotation), value); } }

        private ReferenceType? _inputParameters;
        [JsonPropertyName("inputParameters")]
        public ReferenceType? InputParameters { get => _inputParameters; set { _inputParameters = value; OnPropertyChangedByClr(nameof(InputParameters), value); } }

        private ReferenceType? _location;
        [JsonPropertyName("location")]
        public ReferenceType? Location { get => _location; set { _location = value; OnPropertyChangedByClr(nameof(Location), value); } }

        private FhirCanonical? _measure;
        [JsonPropertyName("measure")]
        public FhirCanonical? Measure { get => _measure; set { _measure = value; OnPropertyChangedByClr(nameof(Measure), value); } }

        private Period? _period;
        [JsonPropertyName("period")]
        public Period Period { get => _period ?? throw new InvalidOperationException("Period is required"); set { _period = value; OnPropertyChangedByClr(nameof(Period), value); } }

        private ReferenceType? _reporter;
        [JsonPropertyName("reporter")]
        public ReferenceType? Reporter { get => _reporter; set { _reporter = value; OnPropertyChangedByClr(nameof(Reporter), value); } }

        private ReferenceType? _reportingVendor;
        [JsonPropertyName("reportingVendor")]
        public ReferenceType? ReportingVendor { get => _reportingVendor; set { _reportingVendor = value; OnPropertyChangedByClr(nameof(ReportingVendor), value); } }

        private CodeableConcept? _scoring;
        [JsonPropertyName("scoring")]
        public CodeableConcept? Scoring { get => _scoring; set { _scoring = value; OnPropertyChangedByClr(nameof(Scoring), value); } }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode Status { get => _status ?? throw new InvalidOperationException("Status is required"); set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private ReferenceType? _subject;
        [JsonPropertyName("subject")]
        public ReferenceType? Subject { get => _subject; set { _subject = value; OnPropertyChangedByClr(nameof(Subject), value); } }

        private List<ReferenceType>? _supplementalData;
        [JsonPropertyName("supplementalData")]
        public List<ReferenceType>? SupplementalData { get => _supplementalData; set { _supplementalData = value; OnPropertyChangedByClr(nameof(SupplementalData), value); } }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

        private FhirCode? _type;
        [JsonPropertyName("type")]
        public FhirCode Type { get => _type ?? throw new InvalidOperationException("Type is required"); set { _type = value; OnPropertyChangedByClr(nameof(Type), value); } }

    }
}
