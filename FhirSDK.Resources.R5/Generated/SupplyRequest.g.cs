// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// Request for a medication, substance or device
    /// </summary>
    public partial class SupplyRequest : ResourceBase
    {
        public override string ResourceType => "SupplyRequest";

        public SupplyRequest() { }
        public SupplyRequest(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public SupplyRequest(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private FhirDateTime? _authoredOn;
        [JsonPropertyName("authoredOn")]
        public FhirDateTime? AuthoredOn { get => _authoredOn; set { _authoredOn = value; OnPropertyChangedByClr(nameof(AuthoredOn), value); } }

        private List<ReferenceType>? _basedOn;
        [JsonPropertyName("basedOn")]
        public List<ReferenceType>? BasedOn { get => _basedOn; set { _basedOn = value; OnPropertyChangedByClr(nameof(BasedOn), value); } }

        private CodeableConcept? _category;
        [JsonPropertyName("category")]
        public CodeableConcept? Category { get => _category; set { _category = value; OnPropertyChangedByClr(nameof(Category), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private ReferenceType? _deliverFor;
        [JsonPropertyName("deliverFor")]
        public ReferenceType? DeliverFor { get => _deliverFor; set { _deliverFor = value; OnPropertyChangedByClr(nameof(DeliverFor), value); } }

        private ReferenceType? _deliverFrom;
        [JsonPropertyName("deliverFrom")]
        public ReferenceType? DeliverFrom { get => _deliverFrom; set { _deliverFrom = value; OnPropertyChangedByClr(nameof(DeliverFrom), value); } }

        private ReferenceType? _deliverTo;
        [JsonPropertyName("deliverTo")]
        public ReferenceType? DeliverTo { get => _deliverTo; set { _deliverTo = value; OnPropertyChangedByClr(nameof(DeliverTo), value); } }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private CodeableReference? _item;
        [JsonPropertyName("item")]
        public CodeableReference Item { get => _item ?? throw new InvalidOperationException("Item is required"); set { _item = value; OnPropertyChangedByClr(nameof(Item), value); } }

        private FhirDateTime? _occurrenceDateTime;
        [JsonPropertyName("occurrenceDateTime")]
        public FhirDateTime? OccurrenceDateTime { get => _occurrenceDateTime; set { _occurrenceDateTime = value; if (value != null) {{ _occurrencePeriod = null; OnPropertyChangedByClr(nameof(OccurrencePeriod), null); _occurrenceTiming = null; OnPropertyChangedByClr(nameof(OccurrenceTiming), null); }}; OnPropertyChangedByClr(nameof(OccurrenceDateTime), value); } }

        private Period? _occurrencePeriod;
        [JsonPropertyName("occurrencePeriod")]
        public Period? OccurrencePeriod { get => _occurrencePeriod; set { _occurrencePeriod = value; if (value != null) {{ _occurrenceDateTime = null; OnPropertyChangedByClr(nameof(OccurrenceDateTime), null); _occurrenceTiming = null; OnPropertyChangedByClr(nameof(OccurrenceTiming), null); }}; OnPropertyChangedByClr(nameof(OccurrencePeriod), value); } }

        private Timing? _occurrenceTiming;
        [JsonPropertyName("occurrenceTiming")]
        public Timing? OccurrenceTiming { get => _occurrenceTiming; set { _occurrenceTiming = value; if (value != null) {{ _occurrenceDateTime = null; OnPropertyChangedByClr(nameof(OccurrenceDateTime), null); _occurrencePeriod = null; OnPropertyChangedByClr(nameof(OccurrencePeriod), null); }}; OnPropertyChangedByClr(nameof(OccurrenceTiming), value); } }

        private List<SupplyRequest_Parameter>? _parameter;
        [JsonPropertyName("parameter")]
        public List<SupplyRequest_Parameter>? Parameter { get => _parameter; set { _parameter = value; OnPropertyChangedByClr(nameof(Parameter), value); } }

        /// <summary>
        /// Ordered item details
        /// </summary>
        public partial class SupplyRequest_Parameter : BackboneElement<SupplyRequest_Parameter>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "SupplyRequest_Parameter" : "supplyRequest_Parameter";
            private CodeableConcept? _code;
        [JsonPropertyName("code")]
        public CodeableConcept? Code { get => _code; set { _code = value; } }

            private CodeableConcept? _valueCodeableConcept;
        [JsonPropertyName("valueCodeableConcept")]
        public CodeableConcept? ValueCodeableConcept { get => _valueCodeableConcept; set { _valueCodeableConcept = value; if (value != null) {{ _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueRange = null; OnPropertyChanged("valueRange", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); }}; OnPropertyChanged("valueCodeableConcept", value); } }

            private Quantity? _valueQuantity;
        [JsonPropertyName("valueQuantity")]
        public Quantity? ValueQuantity { get => _valueQuantity; set { _valueQuantity = value; if (value != null) {{ _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueRange = null; OnPropertyChanged("valueRange", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); }}; OnPropertyChanged("valueQuantity", value); } }

            private DataTypeServices.DataTypes.ComplexTypes.Range? _valueRange;
        [JsonPropertyName("valueRange")]
        public DataTypeServices.DataTypes.ComplexTypes.Range? ValueRange { get => _valueRange; set { _valueRange = value; if (value != null) {{ _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); }}; OnPropertyChanged("valueRange", value); } }

            private FhirBoolean? _valueBoolean;
        [JsonPropertyName("valueBoolean")]
        public FhirBoolean? ValueBoolean { get => _valueBoolean; set { _valueBoolean = value; if (value != null) {{ _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueRange = null; OnPropertyChanged("valueRange", null); }}; OnPropertyChanged("valueBoolean", value); } }

        }

        private FhirCode? _priority;
        [JsonPropertyName("priority")]
        public FhirCode? Priority { get => _priority; set { _priority = value; OnPropertyChangedByClr(nameof(Priority), value); } }

        private Quantity? _quantity;
        [JsonPropertyName("quantity")]
        public Quantity Quantity { get => _quantity ?? throw new InvalidOperationException("Quantity is required"); set { _quantity = value; OnPropertyChangedByClr(nameof(Quantity), value); } }

        private List<CodeableReference>? _reason;
        [JsonPropertyName("reason")]
        public List<CodeableReference>? Reason { get => _reason; set { _reason = value; OnPropertyChangedByClr(nameof(Reason), value); } }

        private ReferenceType? _requester;
        [JsonPropertyName("requester")]
        public ReferenceType? Requester { get => _requester; set { _requester = value; OnPropertyChangedByClr(nameof(Requester), value); } }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode? Status { get => _status; set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private List<ReferenceType>? _supplier;
        [JsonPropertyName("supplier")]
        public List<ReferenceType>? Supplier { get => _supplier; set { _supplier = value; OnPropertyChangedByClr(nameof(Supplier), value); } }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

    }
}
