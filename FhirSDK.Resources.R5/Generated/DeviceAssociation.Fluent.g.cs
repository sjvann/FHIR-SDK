// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class DeviceAssociationFluentExtensions
    {
        public static DeviceAssociation WithBodyStructure(this DeviceAssociation r, ReferenceType value) { r.BodyStructure = value; return r; }
        public static DeviceAssociation AddCategory(this DeviceAssociation r, CodeableConcept item) { r.Category ??= new List<CodeableConcept>(); r.Category!.Add(item); return r; }
        public static DeviceAssociation AddContained(this DeviceAssociation r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static DeviceAssociation WithDevice(this DeviceAssociation r, ReferenceType value) { r.Device = value; return r; }
        public static DeviceAssociation AddIdentifier(this DeviceAssociation r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static DeviceAssociation AddOperation(this DeviceAssociation r, BackboneElement item) { r.Operation ??= new List<BackboneElement>(); r.Operation!.Add(item); return r; }
        public static DeviceAssociation WithPeriod(this DeviceAssociation r, Period value) { r.Period = value; return r; }
        public static DeviceAssociation WithStatus(this DeviceAssociation r, CodeableConcept value) { r.Status = value; return r; }
        public static DeviceAssociation AddStatusReason(this DeviceAssociation r, CodeableConcept item) { r.StatusReason ??= new List<CodeableConcept>(); r.StatusReason!.Add(item); return r; }
        public static DeviceAssociation WithSubject(this DeviceAssociation r, ReferenceType value) { r.Subject = value; return r; }
        public static DeviceAssociation WithText(this DeviceAssociation r, Narrative value) { r.Text = value; return r; }
    }
}
