// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class MedicationKnowledgeFluentExtensions
    {
        public static MedicationKnowledge AddAssociatedMedication(this MedicationKnowledge r, ReferenceType item) { r.AssociatedMedication ??= new List<ReferenceType>(); r.AssociatedMedication!.Add(item); return r; }
        public static MedicationKnowledge WithAuthor(this MedicationKnowledge r, ReferenceType value) { r.Author = value; return r; }
        public static MedicationKnowledge AddClinicalUseIssue(this MedicationKnowledge r, ReferenceType item) { r.ClinicalUseIssue ??= new List<ReferenceType>(); r.ClinicalUseIssue!.Add(item); return r; }
        public static MedicationKnowledge WithCode(this MedicationKnowledge r, CodeableConcept value) { r.Code = value; return r; }
        public static MedicationKnowledge AddContained(this MedicationKnowledge r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static MedicationKnowledge AddCost(this MedicationKnowledge r, BackboneElement item) { r.Cost ??= new List<BackboneElement>(); r.Cost!.Add(item); return r; }
        public static MedicationKnowledge WithDefinitional(this MedicationKnowledge r, BackboneElement value) { r.Definitional = value; return r; }
        public static MedicationKnowledge AddIdentifier(this MedicationKnowledge r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static MedicationKnowledge AddIndicationGuideline(this MedicationKnowledge r, BackboneElement item) { r.IndicationGuideline ??= new List<BackboneElement>(); r.IndicationGuideline!.Add(item); return r; }
        public static MedicationKnowledge AddIntendedJurisdiction(this MedicationKnowledge r, CodeableConcept item) { r.IntendedJurisdiction ??= new List<CodeableConcept>(); r.IntendedJurisdiction!.Add(item); return r; }
        public static MedicationKnowledge AddMedicineClassification(this MedicationKnowledge r, BackboneElement item) { r.MedicineClassification ??= new List<BackboneElement>(); r.MedicineClassification!.Add(item); return r; }
        public static MedicationKnowledge AddMonitoringProgram(this MedicationKnowledge r, BackboneElement item) { r.MonitoringProgram ??= new List<BackboneElement>(); r.MonitoringProgram!.Add(item); return r; }
        public static MedicationKnowledge AddMonograph(this MedicationKnowledge r, BackboneElement item) { r.Monograph ??= new List<BackboneElement>(); r.Monograph!.Add(item); return r; }
        public static MedicationKnowledge AddName(this MedicationKnowledge r, FhirString item) { r.Name ??= new List<FhirString>(); r.Name!.Add(item); return r; }
        public static MedicationKnowledge AddPackaging(this MedicationKnowledge r, BackboneElement item) { r.Packaging ??= new List<BackboneElement>(); r.Packaging!.Add(item); return r; }
        public static MedicationKnowledge WithPreparationInstruction(this MedicationKnowledge r, FhirMarkdown value) { r.PreparationInstruction = value; return r; }
        public static MedicationKnowledge AddProductType(this MedicationKnowledge r, CodeableConcept item) { r.ProductType ??= new List<CodeableConcept>(); r.ProductType!.Add(item); return r; }
        public static MedicationKnowledge AddRegulatory(this MedicationKnowledge r, BackboneElement item) { r.Regulatory ??= new List<BackboneElement>(); r.Regulatory!.Add(item); return r; }
        public static MedicationKnowledge AddRelatedMedicationKnowledge(this MedicationKnowledge r, BackboneElement item) { r.RelatedMedicationKnowledge ??= new List<BackboneElement>(); r.RelatedMedicationKnowledge!.Add(item); return r; }
        public static MedicationKnowledge WithStatus(this MedicationKnowledge r, FhirCode value) { r.Status = value; return r; }
        public static MedicationKnowledge AddStorageGuideline(this MedicationKnowledge r, BackboneElement item) { r.StorageGuideline ??= new List<BackboneElement>(); r.StorageGuideline!.Add(item); return r; }
        public static MedicationKnowledge WithText(this MedicationKnowledge r, Narrative value) { r.Text = value; return r; }
    }
}
