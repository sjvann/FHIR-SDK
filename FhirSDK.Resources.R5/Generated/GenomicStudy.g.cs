// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// Genomic Study
    /// </summary>
    public partial class GenomicStudy : ResourceBase
    {
        public override string ResourceType => "GenomicStudy";

        public GenomicStudy() { }
        public GenomicStudy(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public GenomicStudy(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private List<GenomicStudy_Analysis>? _analysis;
        [JsonPropertyName("analysis")]
        public List<GenomicStudy_Analysis>? Analysis { get => _analysis; set { _analysis = value; OnPropertyChangedByClr(nameof(Analysis), value); } }

        /// <summary>
        /// Genomic Analysis Event
        /// </summary>
        public partial class GenomicStudy_Analysis : BackboneElement<GenomicStudy_Analysis>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "GenomicStudy_Analysis" : "genomicStudy_Analysis";
            private List<CodeableConcept>? _changeType;
        [JsonPropertyName("changeType")]
        public List<CodeableConcept>? ChangeType { get => _changeType; set { _changeType = value; } }

            private FhirDateTime? _date;
        [JsonPropertyName("date")]
        public FhirDateTime? Date { get => _date; set { _date = value; } }

            private List<GenomicStudy_Analysis_Device>? _device;
        [JsonPropertyName("device")]
        public List<GenomicStudy_Analysis_Device>? Device { get => _device; set { _device = value; } }

            /// <summary>
            /// Devices used for the analysis (e.g., instruments, software), with settings and parameters
            /// </summary>
            public partial class GenomicStudy_Analysis_Device : BackboneElement<GenomicStudy_Analysis_Device>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "GenomicStudy_Analysis_Device" : "genomicStudy_Analysis_Device";
                private ReferenceType? _device;
        [JsonPropertyName("device")]
        public ReferenceType? Device { get => _device; set { _device = value; } }

                private CodeableConcept? _function;
        [JsonPropertyName("function")]
        public CodeableConcept? Function { get => _function; set { _function = value; } }

            }

            private List<ReferenceType>? _focus;
        [JsonPropertyName("focus")]
        public List<ReferenceType>? Focus { get => _focus; set { _focus = value; } }

            private CodeableConcept? _genomeBuild;
        [JsonPropertyName("genomeBuild")]
        public CodeableConcept? GenomeBuild { get => _genomeBuild; set { _genomeBuild = value; } }

            private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; } }

            private List<GenomicStudy_Analysis_Input>? _input;
        [JsonPropertyName("input")]
        public List<GenomicStudy_Analysis_Input>? Input { get => _input; set { _input = value; } }

            /// <summary>
            /// Inputs for the analysis event
            /// </summary>
            public partial class GenomicStudy_Analysis_Input : BackboneElement<GenomicStudy_Analysis_Input>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "GenomicStudy_Analysis_Input" : "genomicStudy_Analysis_Input";
                private ReferenceType? _file;
        [JsonPropertyName("file")]
        public ReferenceType? File { get => _file; set { _file = value; } }

                private Identifier? _generatedByIdentifier;
        [JsonPropertyName("generatedByIdentifier")]
        public Identifier? GeneratedByIdentifier { get => _generatedByIdentifier; set { _generatedByIdentifier = value; if (value != null) {{ _generatedByReference = null; OnPropertyChanged("generatedByReference", null); }}; OnPropertyChanged("generatedByIdentifier", value); } }

                private ReferenceType? _generatedByReference;
        [JsonPropertyName("generatedByReference")]
        public ReferenceType? GeneratedByReference { get => _generatedByReference; set { _generatedByReference = value; if (value != null) {{ _generatedByIdentifier = null; OnPropertyChanged("generatedByIdentifier", null); }}; OnPropertyChanged("generatedByReference", value); } }

                private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept? Type { get => _type; set { _type = value; } }

            }

            private FhirCanonical? _instantiatesCanonical;
        [JsonPropertyName("instantiatesCanonical")]
        public FhirCanonical? InstantiatesCanonical { get => _instantiatesCanonical; set { _instantiatesCanonical = value; } }

            private FhirUri? _instantiatesUri;
        [JsonPropertyName("instantiatesUri")]
        public FhirUri? InstantiatesUri { get => _instantiatesUri; set { _instantiatesUri = value; } }

            private List<CodeableConcept>? _methodType;
        [JsonPropertyName("methodType")]
        public List<CodeableConcept>? MethodType { get => _methodType; set { _methodType = value; } }

            private List<Annotation>? _note;
        [JsonPropertyName("note")]
        public List<Annotation>? Note { get => _note; set { _note = value; } }

            private List<GenomicStudy_Analysis_Output>? _output;
        [JsonPropertyName("output")]
        public List<GenomicStudy_Analysis_Output>? Output { get => _output; set { _output = value; } }

            /// <summary>
            /// Outputs for the analysis event
            /// </summary>
            public partial class GenomicStudy_Analysis_Output : BackboneElement<GenomicStudy_Analysis_Output>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "GenomicStudy_Analysis_Output" : "genomicStudy_Analysis_Output";
                private ReferenceType? _file;
        [JsonPropertyName("file")]
        public ReferenceType? File { get => _file; set { _file = value; } }

                private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept? Type { get => _type; set { _type = value; } }

            }

            private List<GenomicStudy_Analysis_Performer>? _performer;
        [JsonPropertyName("performer")]
        public List<GenomicStudy_Analysis_Performer>? Performer { get => _performer; set { _performer = value; } }

            /// <summary>
            /// Performer for the analysis event
            /// </summary>
            public partial class GenomicStudy_Analysis_Performer : BackboneElement<GenomicStudy_Analysis_Performer>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "GenomicStudy_Analysis_Performer" : "genomicStudy_Analysis_Performer";
                private ReferenceType? _actor;
        [JsonPropertyName("actor")]
        public ReferenceType? Actor { get => _actor; set { _actor = value; } }

                private CodeableConcept? _role;
        [JsonPropertyName("role")]
        public CodeableConcept? Role { get => _role; set { _role = value; } }

            }

            private ReferenceType? _protocolPerformed;
        [JsonPropertyName("protocolPerformed")]
        public ReferenceType? ProtocolPerformed { get => _protocolPerformed; set { _protocolPerformed = value; } }

            private List<ReferenceType>? _regionsCalled;
        [JsonPropertyName("regionsCalled")]
        public List<ReferenceType>? RegionsCalled { get => _regionsCalled; set { _regionsCalled = value; } }

            private List<ReferenceType>? _regionsStudied;
        [JsonPropertyName("regionsStudied")]
        public List<ReferenceType>? RegionsStudied { get => _regionsStudied; set { _regionsStudied = value; } }

            private List<ReferenceType>? _specimen;
        [JsonPropertyName("specimen")]
        public List<ReferenceType>? Specimen { get => _specimen; set { _specimen = value; } }

            private FhirString? _title;
        [JsonPropertyName("title")]
        public FhirString? Title { get => _title; set { _title = value; } }

        }

        private List<ReferenceType>? _basedOn;
        [JsonPropertyName("basedOn")]
        public List<ReferenceType>? BasedOn { get => _basedOn; set { _basedOn = value; OnPropertyChangedByClr(nameof(BasedOn), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private FhirMarkdown? _description;
        [JsonPropertyName("description")]
        public FhirMarkdown? Description { get => _description; set { _description = value; OnPropertyChangedByClr(nameof(Description), value); } }

        private ReferenceType? _encounter;
        [JsonPropertyName("encounter")]
        public ReferenceType? Encounter { get => _encounter; set { _encounter = value; OnPropertyChangedByClr(nameof(Encounter), value); } }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private FhirCanonical? _instantiatesCanonical;
        [JsonPropertyName("instantiatesCanonical")]
        public FhirCanonical? InstantiatesCanonical { get => _instantiatesCanonical; set { _instantiatesCanonical = value; OnPropertyChangedByClr(nameof(InstantiatesCanonical), value); } }

        private FhirUri? _instantiatesUri;
        [JsonPropertyName("instantiatesUri")]
        public FhirUri? InstantiatesUri { get => _instantiatesUri; set { _instantiatesUri = value; OnPropertyChangedByClr(nameof(InstantiatesUri), value); } }

        private List<ReferenceType>? _interpreter;
        [JsonPropertyName("interpreter")]
        public List<ReferenceType>? Interpreter { get => _interpreter; set { _interpreter = value; OnPropertyChangedByClr(nameof(Interpreter), value); } }

        private List<Annotation>? _note;
        [JsonPropertyName("note")]
        public List<Annotation>? Note { get => _note; set { _note = value; OnPropertyChangedByClr(nameof(Note), value); } }

        private List<CodeableReference>? _reason;
        [JsonPropertyName("reason")]
        public List<CodeableReference>? Reason { get => _reason; set { _reason = value; OnPropertyChangedByClr(nameof(Reason), value); } }

        private ReferenceType? _referrer;
        [JsonPropertyName("referrer")]
        public ReferenceType? Referrer { get => _referrer; set { _referrer = value; OnPropertyChangedByClr(nameof(Referrer), value); } }

        private FhirDateTime? _startDate;
        [JsonPropertyName("startDate")]
        public FhirDateTime? StartDate { get => _startDate; set { _startDate = value; OnPropertyChangedByClr(nameof(StartDate), value); } }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode Status { get => _status ?? throw new InvalidOperationException("Status is required"); set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private ReferenceType? _subject;
        [JsonPropertyName("subject")]
        public ReferenceType Subject { get => _subject ?? throw new InvalidOperationException("Subject is required"); set { _subject = value; OnPropertyChangedByClr(nameof(Subject), value); } }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

        private List<CodeableConcept>? _type;
        [JsonPropertyName("type")]
        public List<CodeableConcept>? Type { get => _type; set { _type = value; OnPropertyChangedByClr(nameof(Type), value); } }

    }
}
