// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class ServiceRequestFluentExtensions
    {
        public static ServiceRequest WithAsNeededBoolean(this ServiceRequest r, FhirBoolean value) { r.AsNeededBoolean = value; return r; }
        public static ServiceRequest WithAsNeededCodeableConcept(this ServiceRequest r, CodeableConcept value) { r.AsNeededCodeableConcept = value; return r; }
        public static ServiceRequest WithAuthoredOn(this ServiceRequest r, FhirDateTime value) { r.AuthoredOn = value; return r; }
        public static ServiceRequest AddBasedOn(this ServiceRequest r, ReferenceType item) { r.BasedOn ??= new List<ReferenceType>(); r.BasedOn!.Add(item); return r; }
        public static ServiceRequest AddBodySite(this ServiceRequest r, CodeableConcept item) { r.BodySite ??= new List<CodeableConcept>(); r.BodySite!.Add(item); return r; }
        public static ServiceRequest WithBodyStructure(this ServiceRequest r, ReferenceType value) { r.BodyStructure = value; return r; }
        public static ServiceRequest AddCategory(this ServiceRequest r, CodeableConcept item) { r.Category ??= new List<CodeableConcept>(); r.Category!.Add(item); return r; }
        public static ServiceRequest WithCode(this ServiceRequest r, CodeableReference value) { r.Code = value; return r; }
        public static ServiceRequest AddContained(this ServiceRequest r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static ServiceRequest WithDoNotPerform(this ServiceRequest r, FhirBoolean value) { r.DoNotPerform = value; return r; }
        public static ServiceRequest WithEncounter(this ServiceRequest r, ReferenceType value) { r.Encounter = value; return r; }
        public static ServiceRequest AddFocus(this ServiceRequest r, ReferenceType item) { r.Focus ??= new List<ReferenceType>(); r.Focus!.Add(item); return r; }
        public static ServiceRequest AddIdentifier(this ServiceRequest r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static ServiceRequest AddInstantiatesCanonical(this ServiceRequest r, FhirCanonical item) { r.InstantiatesCanonical ??= new List<FhirCanonical>(); r.InstantiatesCanonical!.Add(item); return r; }
        public static ServiceRequest AddInstantiatesUri(this ServiceRequest r, FhirUri item) { r.InstantiatesUri ??= new List<FhirUri>(); r.InstantiatesUri!.Add(item); return r; }
        public static ServiceRequest AddInsurance(this ServiceRequest r, ReferenceType item) { r.Insurance ??= new List<ReferenceType>(); r.Insurance!.Add(item); return r; }
        public static ServiceRequest WithIntent(this ServiceRequest r, FhirCode value) { r.Intent = value; return r; }
        public static ServiceRequest AddLocation(this ServiceRequest r, CodeableReference item) { r.Location ??= new List<CodeableReference>(); r.Location!.Add(item); return r; }
        public static ServiceRequest AddNote(this ServiceRequest r, Annotation item) { r.Note ??= new List<Annotation>(); r.Note!.Add(item); return r; }
        public static ServiceRequest WithOccurrenceDateTime(this ServiceRequest r, FhirDateTime value) { r.OccurrenceDateTime = value; return r; }
        public static ServiceRequest WithOccurrencePeriod(this ServiceRequest r, Period value) { r.OccurrencePeriod = value; return r; }
        public static ServiceRequest WithOccurrenceTiming(this ServiceRequest r, Timing value) { r.OccurrenceTiming = value; return r; }
        public static ServiceRequest AddOrderDetail(this ServiceRequest r, BackboneElement item) { r.OrderDetail ??= new List<BackboneElement>(); r.OrderDetail!.Add(item); return r; }
        public static ServiceRequest AddPatientInstruction(this ServiceRequest r, BackboneElement item) { r.PatientInstruction ??= new List<BackboneElement>(); r.PatientInstruction!.Add(item); return r; }
        public static ServiceRequest AddPerformer(this ServiceRequest r, ReferenceType item) { r.Performer ??= new List<ReferenceType>(); r.Performer!.Add(item); return r; }
        public static ServiceRequest WithPerformerType(this ServiceRequest r, CodeableConcept value) { r.PerformerType = value; return r; }
        public static ServiceRequest WithPriority(this ServiceRequest r, FhirCode value) { r.Priority = value; return r; }
        public static ServiceRequest WithQuantityQuantity(this ServiceRequest r, Quantity value) { r.QuantityQuantity = value; return r; }
        public static ServiceRequest WithQuantityRatio(this ServiceRequest r, Ratio value) { r.QuantityRatio = value; return r; }
        public static ServiceRequest WithQuantityRange(this ServiceRequest r, DataTypeServices.DataTypes.ComplexTypes.Range value) { r.QuantityRange = value; return r; }
        public static ServiceRequest AddReason(this ServiceRequest r, CodeableReference item) { r.Reason ??= new List<CodeableReference>(); r.Reason!.Add(item); return r; }
        public static ServiceRequest AddRelevantHistory(this ServiceRequest r, ReferenceType item) { r.RelevantHistory ??= new List<ReferenceType>(); r.RelevantHistory!.Add(item); return r; }
        public static ServiceRequest AddReplaces(this ServiceRequest r, ReferenceType item) { r.Replaces ??= new List<ReferenceType>(); r.Replaces!.Add(item); return r; }
        public static ServiceRequest WithRequester(this ServiceRequest r, ReferenceType value) { r.Requester = value; return r; }
        public static ServiceRequest WithRequisition(this ServiceRequest r, Identifier value) { r.Requisition = value; return r; }
        public static ServiceRequest AddSpecimen(this ServiceRequest r, ReferenceType item) { r.Specimen ??= new List<ReferenceType>(); r.Specimen!.Add(item); return r; }
        public static ServiceRequest WithStatus(this ServiceRequest r, FhirCode value) { r.Status = value; return r; }
        public static ServiceRequest WithSubject(this ServiceRequest r, ReferenceType value) { r.Subject = value; return r; }
        public static ServiceRequest AddSupportingInfo(this ServiceRequest r, CodeableReference item) { r.SupportingInfo ??= new List<CodeableReference>(); r.SupportingInfo!.Add(item); return r; }
        public static ServiceRequest WithText(this ServiceRequest r, Narrative value) { r.Text = value; return r; }
    }
}
