// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class RiskAssessmentFluentExtensions
    {
        public static RiskAssessment WithBasedOn(this RiskAssessment r, ReferenceType value) { r.BasedOn = value; return r; }
        public static RiskAssessment AddBasis(this RiskAssessment r, ReferenceType item) { r.Basis ??= new List<ReferenceType>(); r.Basis!.Add(item); return r; }
        public static RiskAssessment WithCode(this RiskAssessment r, CodeableConcept value) { r.Code = value; return r; }
        public static RiskAssessment WithCondition(this RiskAssessment r, ReferenceType value) { r.Condition = value; return r; }
        public static RiskAssessment AddContained(this RiskAssessment r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static RiskAssessment WithEncounter(this RiskAssessment r, ReferenceType value) { r.Encounter = value; return r; }
        public static RiskAssessment AddIdentifier(this RiskAssessment r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static RiskAssessment WithMethod(this RiskAssessment r, CodeableConcept value) { r.Method = value; return r; }
        public static RiskAssessment WithMitigation(this RiskAssessment r, FhirString value) { r.Mitigation = value; return r; }
        public static RiskAssessment AddNote(this RiskAssessment r, Annotation item) { r.Note ??= new List<Annotation>(); r.Note!.Add(item); return r; }
        public static RiskAssessment WithOccurrenceDateTime(this RiskAssessment r, FhirDateTime value) { r.OccurrenceDateTime = value; return r; }
        public static RiskAssessment WithOccurrencePeriod(this RiskAssessment r, Period value) { r.OccurrencePeriod = value; return r; }
        public static RiskAssessment WithParent(this RiskAssessment r, ReferenceType value) { r.Parent = value; return r; }
        public static RiskAssessment WithPerformer(this RiskAssessment r, ReferenceType value) { r.Performer = value; return r; }
        public static RiskAssessment AddPrediction(this RiskAssessment r, BackboneElement item) { r.Prediction ??= new List<BackboneElement>(); r.Prediction!.Add(item); return r; }
        public static RiskAssessment AddReason(this RiskAssessment r, CodeableReference item) { r.Reason ??= new List<CodeableReference>(); r.Reason!.Add(item); return r; }
        public static RiskAssessment WithStatus(this RiskAssessment r, FhirCode value) { r.Status = value; return r; }
        public static RiskAssessment WithSubject(this RiskAssessment r, ReferenceType value) { r.Subject = value; return r; }
        public static RiskAssessment WithText(this RiskAssessment r, Narrative value) { r.Text = value; return r; }
    }
}
