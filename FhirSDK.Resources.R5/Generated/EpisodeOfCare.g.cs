// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// An association of a Patient with an Organization and  Healthcare Provider(s) for a period of time that the Organization assumes some level of responsibility
    /// </summary>
    public partial class EpisodeOfCare : ResourceBase
    {
        public override string ResourceType => "EpisodeOfCare";

        public EpisodeOfCare() { }
        public EpisodeOfCare(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public EpisodeOfCare(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private List<ReferenceType>? _account;
        [JsonPropertyName("account")]
        public List<ReferenceType>? Account { get => _account; set { _account = value; OnPropertyChangedByClr(nameof(Account), value); } }

        private ReferenceType? _careManager;
        [JsonPropertyName("careManager")]
        public ReferenceType? CareManager { get => _careManager; set { _careManager = value; OnPropertyChangedByClr(nameof(CareManager), value); } }

        private List<ReferenceType>? _careTeam;
        [JsonPropertyName("careTeam")]
        public List<ReferenceType>? CareTeam { get => _careTeam; set { _careTeam = value; OnPropertyChangedByClr(nameof(CareTeam), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private List<EpisodeOfCare_Diagnosis>? _diagnosis;
        [JsonPropertyName("diagnosis")]
        public List<EpisodeOfCare_Diagnosis>? Diagnosis { get => _diagnosis; set { _diagnosis = value; OnPropertyChangedByClr(nameof(Diagnosis), value); } }

        /// <summary>
        /// The list of medical conditions that were addressed during the episode of care
        /// </summary>
        public partial class EpisodeOfCare_Diagnosis : BackboneElement<EpisodeOfCare_Diagnosis>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "EpisodeOfCare_Diagnosis" : "episodeOfCare_Diagnosis";
            private List<CodeableReference>? _condition;
        [JsonPropertyName("condition")]
        public List<CodeableReference>? Condition { get => _condition; set { _condition = value; } }

            private CodeableConcept? _use;
        [JsonPropertyName("use")]
        public CodeableConcept? Use { get => _use; set { _use = value; } }

        }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private ReferenceType? _managingOrganization;
        [JsonPropertyName("managingOrganization")]
        public ReferenceType? ManagingOrganization { get => _managingOrganization; set { _managingOrganization = value; OnPropertyChangedByClr(nameof(ManagingOrganization), value); } }

        private ReferenceType? _patient;
        [JsonPropertyName("patient")]
        public ReferenceType Patient { get => _patient ?? throw new InvalidOperationException("Patient is required"); set { _patient = value; OnPropertyChangedByClr(nameof(Patient), value); } }

        private Period? _period;
        [JsonPropertyName("period")]
        public Period? Period { get => _period; set { _period = value; OnPropertyChangedByClr(nameof(Period), value); } }

        private List<EpisodeOfCare_Reason>? _reason;
        [JsonPropertyName("reason")]
        public List<EpisodeOfCare_Reason>? Reason { get => _reason; set { _reason = value; OnPropertyChangedByClr(nameof(Reason), value); } }

        /// <summary>
        /// The list of medical reasons that are expected to be addressed during the episode of care
        /// </summary>
        public partial class EpisodeOfCare_Reason : BackboneElement<EpisodeOfCare_Reason>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "EpisodeOfCare_Reason" : "episodeOfCare_Reason";
            private CodeableConcept? _use;
        [JsonPropertyName("use")]
        public CodeableConcept? Use { get => _use; set { _use = value; } }

            private List<CodeableReference>? _value;
        [JsonPropertyName("value")]
        public List<CodeableReference>? Value { get => _value; set { _value = value; } }

        }

        private List<ReferenceType>? _referralRequest;
        [JsonPropertyName("referralRequest")]
        public List<ReferenceType>? ReferralRequest { get => _referralRequest; set { _referralRequest = value; OnPropertyChangedByClr(nameof(ReferralRequest), value); } }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode Status { get => _status ?? throw new InvalidOperationException("Status is required"); set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private List<EpisodeOfCare_StatusHistory>? _statusHistory;
        [JsonPropertyName("statusHistory")]
        public List<EpisodeOfCare_StatusHistory>? StatusHistory { get => _statusHistory; set { _statusHistory = value; OnPropertyChangedByClr(nameof(StatusHistory), value); } }

        /// <summary>
        /// Past list of status codes (the current status may be included to cover the start date of the status)
        /// </summary>
        public partial class EpisodeOfCare_StatusHistory : BackboneElement<EpisodeOfCare_StatusHistory>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "EpisodeOfCare_StatusHistory" : "episodeOfCare_StatusHistory";
            private Period? _period;
        [JsonPropertyName("period")]
        public Period Period { get => _period ?? throw new InvalidOperationException("Period is required"); set { _period = value; } }

            private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode Status { get => _status ?? throw new InvalidOperationException("Status is required"); set { _status = value; } }

        }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

        private List<CodeableConcept>? _type;
        [JsonPropertyName("type")]
        public List<CodeableConcept>? Type { get => _type; set { _type = value; OnPropertyChangedByClr(nameof(Type), value); } }

    }
}
