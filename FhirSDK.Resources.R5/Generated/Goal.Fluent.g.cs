// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class GoalFluentExtensions
    {
        public static Goal WithAchievementStatus(this Goal r, CodeableConcept value) { r.AchievementStatus = value; return r; }
        public static Goal AddAddresses(this Goal r, ReferenceType item) { r.Addresses ??= new List<ReferenceType>(); r.Addresses!.Add(item); return r; }
        public static Goal AddCategory(this Goal r, CodeableConcept item) { r.Category ??= new List<CodeableConcept>(); r.Category!.Add(item); return r; }
        public static Goal AddContained(this Goal r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static Goal WithContinuous(this Goal r, FhirBoolean value) { r.Continuous = value; return r; }
        public static Goal WithDescription(this Goal r, CodeableConcept value) { r.Description = value; return r; }
        public static Goal AddIdentifier(this Goal r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static Goal WithLifecycleStatus(this Goal r, FhirCode value) { r.LifecycleStatus = value; return r; }
        public static Goal AddNote(this Goal r, Annotation item) { r.Note ??= new List<Annotation>(); r.Note!.Add(item); return r; }
        public static Goal AddOutcome(this Goal r, CodeableReference item) { r.Outcome ??= new List<CodeableReference>(); r.Outcome!.Add(item); return r; }
        public static Goal WithPriority(this Goal r, CodeableConcept value) { r.Priority = value; return r; }
        public static Goal WithSource(this Goal r, ReferenceType value) { r.Source = value; return r; }
        public static Goal WithStartdate(this Goal r, FhirDate value) { r.Startdate = value; return r; }
        public static Goal WithStartCodeableConcept(this Goal r, CodeableConcept value) { r.StartCodeableConcept = value; return r; }
        public static Goal WithStatusDate(this Goal r, FhirDate value) { r.StatusDate = value; return r; }
        public static Goal WithStatusReason(this Goal r, FhirString value) { r.StatusReason = value; return r; }
        public static Goal WithSubject(this Goal r, ReferenceType value) { r.Subject = value; return r; }
        public static Goal AddTarget(this Goal r, BackboneElement item) { r.Target ??= new List<BackboneElement>(); r.Target!.Add(item); return r; }
        public static Goal WithText(this Goal r, Narrative value) { r.Text = value; return r; }
    }
}
