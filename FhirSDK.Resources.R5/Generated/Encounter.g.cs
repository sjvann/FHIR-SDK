// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// An interaction during which services are provided to the patient
    /// </summary>
    public partial class Encounter : ResourceBase
    {
        public override string ResourceType => "Encounter";

        public Encounter() { }
        public Encounter(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public Encounter(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private List<ReferenceType>? _account;
        [JsonPropertyName("account")]
        public List<ReferenceType>? Account { get => _account; set { _account = value; OnPropertyChangedByClr(nameof(Account), value); } }

        private Period? _actualPeriod;
        [JsonPropertyName("actualPeriod")]
        public Period? ActualPeriod { get => _actualPeriod; set { _actualPeriod = value; OnPropertyChangedByClr(nameof(ActualPeriod), value); } }

        private Encounter_Admission? _admission;
        [JsonPropertyName("admission")]
        public Encounter_Admission? Admission { get => _admission; set { _admission = value; OnPropertyChangedByClr(nameof(Admission), value); } }

        /// <summary>
        /// Details about the admission to a healthcare service
        /// </summary>
        public partial class Encounter_Admission : BackboneElement<Encounter_Admission>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Encounter_Admission" : "encounter_Admission";
            private CodeableConcept? _admitSource;
        [JsonPropertyName("admitSource")]
        public CodeableConcept? AdmitSource { get => _admitSource; set { _admitSource = value; } }

            private ReferenceType? _destination;
        [JsonPropertyName("destination")]
        public ReferenceType? Destination { get => _destination; set { _destination = value; } }

            private CodeableConcept? _dischargeDisposition;
        [JsonPropertyName("dischargeDisposition")]
        public CodeableConcept? DischargeDisposition { get => _dischargeDisposition; set { _dischargeDisposition = value; } }

            private ReferenceType? _origin;
        [JsonPropertyName("origin")]
        public ReferenceType? Origin { get => _origin; set { _origin = value; } }

            private Identifier? _preAdmissionIdentifier;
        [JsonPropertyName("preAdmissionIdentifier")]
        public Identifier? PreAdmissionIdentifier { get => _preAdmissionIdentifier; set { _preAdmissionIdentifier = value; } }

            private CodeableConcept? _reAdmission;
        [JsonPropertyName("reAdmission")]
        public CodeableConcept? ReAdmission { get => _reAdmission; set { _reAdmission = value; } }

        }

        private List<ReferenceType>? _appointment;
        [JsonPropertyName("appointment")]
        public List<ReferenceType>? Appointment { get => _appointment; set { _appointment = value; OnPropertyChangedByClr(nameof(Appointment), value); } }

        private List<ReferenceType>? _basedOn;
        [JsonPropertyName("basedOn")]
        public List<ReferenceType>? BasedOn { get => _basedOn; set { _basedOn = value; OnPropertyChangedByClr(nameof(BasedOn), value); } }

        private List<ReferenceType>? _careTeam;
        [JsonPropertyName("careTeam")]
        public List<ReferenceType>? CareTeam { get => _careTeam; set { _careTeam = value; OnPropertyChangedByClr(nameof(CareTeam), value); } }

        private List<CodeableConcept>? _class;
        [JsonPropertyName("class")]
        public List<CodeableConcept>? Class { get => _class; set { _class = value; OnPropertyChangedByClr(nameof(Class), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private List<Encounter_Diagnosis>? _diagnosis;
        [JsonPropertyName("diagnosis")]
        public List<Encounter_Diagnosis>? Diagnosis { get => _diagnosis; set { _diagnosis = value; OnPropertyChangedByClr(nameof(Diagnosis), value); } }

        /// <summary>
        /// The list of diagnosis relevant to this encounter
        /// </summary>
        public partial class Encounter_Diagnosis : BackboneElement<Encounter_Diagnosis>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Encounter_Diagnosis" : "encounter_Diagnosis";
            private List<CodeableReference>? _condition;
        [JsonPropertyName("condition")]
        public List<CodeableReference>? Condition { get => _condition; set { _condition = value; } }

            private List<CodeableConcept>? _use;
        [JsonPropertyName("use")]
        public List<CodeableConcept>? Use { get => _use; set { _use = value; } }

        }

        private List<CodeableConcept>? _dietPreference;
        [JsonPropertyName("dietPreference")]
        public List<CodeableConcept>? DietPreference { get => _dietPreference; set { _dietPreference = value; OnPropertyChangedByClr(nameof(DietPreference), value); } }

        private List<ReferenceType>? _episodeOfCare;
        [JsonPropertyName("episodeOfCare")]
        public List<ReferenceType>? EpisodeOfCare { get => _episodeOfCare; set { _episodeOfCare = value; OnPropertyChangedByClr(nameof(EpisodeOfCare), value); } }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private Duration? _length;
        [JsonPropertyName("length")]
        public Duration? Length { get => _length; set { _length = value; OnPropertyChangedByClr(nameof(Length), value); } }

        private List<Encounter_Location>? _location;
        [JsonPropertyName("location")]
        public List<Encounter_Location>? Location { get => _location; set { _location = value; OnPropertyChangedByClr(nameof(Location), value); } }

        /// <summary>
        /// List of locations where the patient has been
        /// </summary>
        public partial class Encounter_Location : BackboneElement<Encounter_Location>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Encounter_Location" : "encounter_Location";
            private CodeableConcept? _form;
        [JsonPropertyName("form")]
        public CodeableConcept? Form { get => _form; set { _form = value; } }

            private ReferenceType? _location;
        [JsonPropertyName("location")]
        public ReferenceType Location { get => _location ?? throw new InvalidOperationException("Location is required"); set { _location = value; } }

            private Period? _period;
        [JsonPropertyName("period")]
        public Period? Period { get => _period; set { _period = value; } }

            private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode? Status { get => _status; set { _status = value; } }

        }

        private List<Encounter_Participant>? _participant;
        [JsonPropertyName("participant")]
        public List<Encounter_Participant>? Participant { get => _participant; set { _participant = value; OnPropertyChangedByClr(nameof(Participant), value); } }

        /// <summary>
        /// List of participants involved in the encounter
        /// </summary>
        public partial class Encounter_Participant : BackboneElement<Encounter_Participant>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Encounter_Participant" : "encounter_Participant";
            private ReferenceType? _actor;
        [JsonPropertyName("actor")]
        public ReferenceType? Actor { get => _actor; set { _actor = value; } }

            private Period? _period;
        [JsonPropertyName("period")]
        public Period? Period { get => _period; set { _period = value; } }

            private List<CodeableConcept>? _type;
        [JsonPropertyName("type")]
        public List<CodeableConcept>? Type { get => _type; set { _type = value; } }

        }

        private ReferenceType? _partOf;
        [JsonPropertyName("partOf")]
        public ReferenceType? PartOf { get => _partOf; set { _partOf = value; OnPropertyChangedByClr(nameof(PartOf), value); } }

        private FhirDateTime? _plannedEndDate;
        [JsonPropertyName("plannedEndDate")]
        public FhirDateTime? PlannedEndDate { get => _plannedEndDate; set { _plannedEndDate = value; OnPropertyChangedByClr(nameof(PlannedEndDate), value); } }

        private FhirDateTime? _plannedStartDate;
        [JsonPropertyName("plannedStartDate")]
        public FhirDateTime? PlannedStartDate { get => _plannedStartDate; set { _plannedStartDate = value; OnPropertyChangedByClr(nameof(PlannedStartDate), value); } }

        private CodeableConcept? _priority;
        [JsonPropertyName("priority")]
        public CodeableConcept? Priority { get => _priority; set { _priority = value; OnPropertyChangedByClr(nameof(Priority), value); } }

        private List<Encounter_Reason>? _reason;
        [JsonPropertyName("reason")]
        public List<Encounter_Reason>? Reason { get => _reason; set { _reason = value; OnPropertyChangedByClr(nameof(Reason), value); } }

        /// <summary>
        /// The list of medical reasons that are expected to be addressed during the episode of care
        /// </summary>
        public partial class Encounter_Reason : BackboneElement<Encounter_Reason>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Encounter_Reason" : "encounter_Reason";
            private List<CodeableConcept>? _use;
        [JsonPropertyName("use")]
        public List<CodeableConcept>? Use { get => _use; set { _use = value; } }

            private List<CodeableReference>? _value;
        [JsonPropertyName("value")]
        public List<CodeableReference>? Value { get => _value; set { _value = value; } }

        }

        private ReferenceType? _serviceProvider;
        [JsonPropertyName("serviceProvider")]
        public ReferenceType? ServiceProvider { get => _serviceProvider; set { _serviceProvider = value; OnPropertyChangedByClr(nameof(ServiceProvider), value); } }

        private List<CodeableReference>? _serviceType;
        [JsonPropertyName("serviceType")]
        public List<CodeableReference>? ServiceType { get => _serviceType; set { _serviceType = value; OnPropertyChangedByClr(nameof(ServiceType), value); } }

        private List<CodeableConcept>? _specialArrangement;
        [JsonPropertyName("specialArrangement")]
        public List<CodeableConcept>? SpecialArrangement { get => _specialArrangement; set { _specialArrangement = value; OnPropertyChangedByClr(nameof(SpecialArrangement), value); } }

        private List<CodeableConcept>? _specialCourtesy;
        [JsonPropertyName("specialCourtesy")]
        public List<CodeableConcept>? SpecialCourtesy { get => _specialCourtesy; set { _specialCourtesy = value; OnPropertyChangedByClr(nameof(SpecialCourtesy), value); } }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode Status { get => _status ?? throw new InvalidOperationException("Status is required"); set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private ReferenceType? _subject;
        [JsonPropertyName("subject")]
        public ReferenceType? Subject { get => _subject; set { _subject = value; OnPropertyChangedByClr(nameof(Subject), value); } }

        private CodeableConcept? _subjectStatus;
        [JsonPropertyName("subjectStatus")]
        public CodeableConcept? SubjectStatus { get => _subjectStatus; set { _subjectStatus = value; OnPropertyChangedByClr(nameof(SubjectStatus), value); } }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

        private List<CodeableConcept>? _type;
        [JsonPropertyName("type")]
        public List<CodeableConcept>? Type { get => _type; set { _type = value; OnPropertyChangedByClr(nameof(Type), value); } }

        private List<VirtualServiceDetail>? _virtualService;
        [JsonPropertyName("virtualService")]
        public List<VirtualServiceDetail>? VirtualService { get => _virtualService; set { _virtualService = value; OnPropertyChangedByClr(nameof(VirtualService), value); } }

    }
}
