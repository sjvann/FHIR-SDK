// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class EvidenceReportFluentExtensions
    {
        public static EvidenceReport AddAuthor(this EvidenceReport r, ContactDetail item) { r.Author ??= new List<ContactDetail>(); r.Author!.Add(item); return r; }
        public static EvidenceReport WithCiteAsReference(this EvidenceReport r, ReferenceType value) { r.CiteAsReference = value; return r; }
        public static EvidenceReport WithCiteAsmarkdown(this EvidenceReport r, FhirMarkdown value) { r.CiteAsmarkdown = value; return r; }
        public static EvidenceReport AddContact(this EvidenceReport r, ContactDetail item) { r.Contact ??= new List<ContactDetail>(); r.Contact!.Add(item); return r; }
        public static EvidenceReport AddContained(this EvidenceReport r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static EvidenceReport AddEditor(this EvidenceReport r, ContactDetail item) { r.Editor ??= new List<ContactDetail>(); r.Editor!.Add(item); return r; }
        public static EvidenceReport AddEndorser(this EvidenceReport r, ContactDetail item) { r.Endorser ??= new List<ContactDetail>(); r.Endorser!.Add(item); return r; }
        public static EvidenceReport AddIdentifier(this EvidenceReport r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static EvidenceReport AddNote(this EvidenceReport r, Annotation item) { r.Note ??= new List<Annotation>(); r.Note!.Add(item); return r; }
        public static EvidenceReport WithPublisher(this EvidenceReport r, FhirString value) { r.Publisher = value; return r; }
        public static EvidenceReport AddRelatedArtifact(this EvidenceReport r, RelatedArtifact item) { r.RelatedArtifact ??= new List<RelatedArtifact>(); r.RelatedArtifact!.Add(item); return r; }
        public static EvidenceReport AddRelatedIdentifier(this EvidenceReport r, Identifier item) { r.RelatedIdentifier ??= new List<Identifier>(); r.RelatedIdentifier!.Add(item); return r; }
        public static EvidenceReport AddRelatesTo(this EvidenceReport r, BackboneElement item) { r.RelatesTo ??= new List<BackboneElement>(); r.RelatesTo!.Add(item); return r; }
        public static EvidenceReport AddReviewer(this EvidenceReport r, ContactDetail item) { r.Reviewer ??= new List<ContactDetail>(); r.Reviewer!.Add(item); return r; }
        public static EvidenceReport AddSection(this EvidenceReport r, BackboneElement item) { r.Section ??= new List<BackboneElement>(); r.Section!.Add(item); return r; }
        public static EvidenceReport WithStatus(this EvidenceReport r, FhirCode value) { r.Status = value; return r; }
        public static EvidenceReport WithSubject(this EvidenceReport r, BackboneElement value) { r.Subject = value; return r; }
        public static EvidenceReport WithText(this EvidenceReport r, Narrative value) { r.Text = value; return r; }
        public static EvidenceReport WithType(this EvidenceReport r, CodeableConcept value) { r.Type = value; return r; }
        public static EvidenceReport WithUrl(this EvidenceReport r, FhirUri value) { r.Url = value; return r; }
        public static EvidenceReport AddUseContext(this EvidenceReport r, UsageContext item) { r.UseContext ??= new List<UsageContext>(); r.UseContext!.Add(item); return r; }
    }
}
