// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// The definition of a specific activity to be taken, independent of any particular patient or context
    /// </summary>
    public partial class ActivityDefinition : ResourceBase
    {
        public override string ResourceType => "ActivityDefinition";

        public ActivityDefinition() { }
        public ActivityDefinition(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public ActivityDefinition(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private FhirDate? _approvalDate;
        [JsonPropertyName("approvalDate")]
        public FhirDate? ApprovalDate { get => _approvalDate; set { _approvalDate = value; OnPropertyChangedByClr(nameof(ApprovalDate), value); } }

        private FhirBoolean? _asNeededBoolean;
        [JsonPropertyName("asNeededBoolean")]
        public FhirBoolean? AsNeededBoolean { get => _asNeededBoolean; set { _asNeededBoolean = value; if (value != null) {{ _asNeededCodeableConcept = null; OnPropertyChangedByClr(nameof(AsNeededCodeableConcept), null); }}; OnPropertyChangedByClr(nameof(AsNeededBoolean), value); } }

        private CodeableConcept? _asNeededCodeableConcept;
        [JsonPropertyName("asNeededCodeableConcept")]
        public CodeableConcept? AsNeededCodeableConcept { get => _asNeededCodeableConcept; set { _asNeededCodeableConcept = value; if (value != null) {{ _asNeededBoolean = null; OnPropertyChangedByClr(nameof(AsNeededBoolean), null); }}; OnPropertyChangedByClr(nameof(AsNeededCodeableConcept), value); } }

        private List<ContactDetail>? _author;
        [JsonPropertyName("author")]
        public List<ContactDetail>? Author { get => _author; set { _author = value; OnPropertyChangedByClr(nameof(Author), value); } }

        private List<CodeableConcept>? _bodySite;
        [JsonPropertyName("bodySite")]
        public List<CodeableConcept>? BodySite { get => _bodySite; set { _bodySite = value; OnPropertyChangedByClr(nameof(BodySite), value); } }

        private CodeableConcept? _code;
        [JsonPropertyName("code")]
        public CodeableConcept? Code { get => _code; set { _code = value; OnPropertyChangedByClr(nameof(Code), value); } }

        private List<ContactDetail>? _contact;
        [JsonPropertyName("contact")]
        public List<ContactDetail>? Contact { get => _contact; set { _contact = value; OnPropertyChangedByClr(nameof(Contact), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private FhirMarkdown? _copyright;
        [JsonPropertyName("copyright")]
        public FhirMarkdown? Copyright { get => _copyright; set { _copyright = value; OnPropertyChangedByClr(nameof(Copyright), value); } }

        private FhirString? _copyrightLabel;
        [JsonPropertyName("copyrightLabel")]
        public FhirString? CopyrightLabel { get => _copyrightLabel; set { _copyrightLabel = value; OnPropertyChangedByClr(nameof(CopyrightLabel), value); } }

        private FhirDateTime? _date;
        [JsonPropertyName("date")]
        public FhirDateTime? Date { get => _date; set { _date = value; OnPropertyChangedByClr(nameof(Date), value); } }

        private FhirMarkdown? _description;
        [JsonPropertyName("description")]
        public FhirMarkdown? Description { get => _description; set { _description = value; OnPropertyChangedByClr(nameof(Description), value); } }

        private FhirBoolean? _doNotPerform;
        [JsonPropertyName("doNotPerform")]
        public FhirBoolean? DoNotPerform { get => _doNotPerform; set { _doNotPerform = value; OnPropertyChangedByClr(nameof(DoNotPerform), value); } }

        private List<Dosage>? _dosage;
        [JsonPropertyName("dosage")]
        public List<Dosage>? Dosage { get => _dosage; set { _dosage = value; OnPropertyChangedByClr(nameof(Dosage), value); } }

        private List<ActivityDefinition_DynamicValue>? _dynamicValue;
        [JsonPropertyName("dynamicValue")]
        public List<ActivityDefinition_DynamicValue>? DynamicValue { get => _dynamicValue; set { _dynamicValue = value; OnPropertyChangedByClr(nameof(DynamicValue), value); } }

        /// <summary>
        /// Dynamic aspects of the definition
        /// </summary>
        public partial class ActivityDefinition_DynamicValue : BackboneElement<ActivityDefinition_DynamicValue>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ActivityDefinition_DynamicValue" : "activityDefinition_DynamicValue";
            private DataTypeServices.DataTypes.MetaTypes.ExpressionType? _expression;
        [JsonPropertyName("expression")]
        public DataTypeServices.DataTypes.MetaTypes.ExpressionType Expression { get => _expression ?? throw new InvalidOperationException("Expression is required"); set { _expression = value; } }

            private FhirString? _path;
        [JsonPropertyName("path")]
        public FhirString Path { get => _path ?? throw new InvalidOperationException("Path is required"); set { _path = value; } }

        }

        private List<ContactDetail>? _editor;
        [JsonPropertyName("editor")]
        public List<ContactDetail>? Editor { get => _editor; set { _editor = value; OnPropertyChangedByClr(nameof(Editor), value); } }

        private Period? _effectivePeriod;
        [JsonPropertyName("effectivePeriod")]
        public Period? EffectivePeriod { get => _effectivePeriod; set { _effectivePeriod = value; OnPropertyChangedByClr(nameof(EffectivePeriod), value); } }

        private List<ContactDetail>? _endorser;
        [JsonPropertyName("endorser")]
        public List<ContactDetail>? Endorser { get => _endorser; set { _endorser = value; OnPropertyChangedByClr(nameof(Endorser), value); } }

        private FhirBoolean? _experimental;
        [JsonPropertyName("experimental")]
        public FhirBoolean? Experimental { get => _experimental; set { _experimental = value; OnPropertyChangedByClr(nameof(Experimental), value); } }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private FhirCode? _intent;
        [JsonPropertyName("intent")]
        public FhirCode? Intent { get => _intent; set { _intent = value; OnPropertyChangedByClr(nameof(Intent), value); } }

        private List<CodeableConcept>? _jurisdiction;
        [JsonPropertyName("jurisdiction")]
        public List<CodeableConcept>? Jurisdiction { get => _jurisdiction; set { _jurisdiction = value; OnPropertyChangedByClr(nameof(Jurisdiction), value); } }

        private FhirCode? _kind;
        [JsonPropertyName("kind")]
        public FhirCode? Kind { get => _kind; set { _kind = value; OnPropertyChangedByClr(nameof(Kind), value); } }

        private FhirDate? _lastReviewDate;
        [JsonPropertyName("lastReviewDate")]
        public FhirDate? LastReviewDate { get => _lastReviewDate; set { _lastReviewDate = value; OnPropertyChangedByClr(nameof(LastReviewDate), value); } }

        private List<FhirCanonical>? _library;
        [JsonPropertyName("library")]
        public List<FhirCanonical>? Library { get => _library; set { _library = value; OnPropertyChangedByClr(nameof(Library), value); } }

        private CodeableReference? _location;
        [JsonPropertyName("location")]
        public CodeableReference? Location { get => _location; set { _location = value; OnPropertyChangedByClr(nameof(Location), value); } }

        private FhirString? _name;
        [JsonPropertyName("name")]
        public FhirString? Name { get => _name; set { _name = value; OnPropertyChangedByClr(nameof(Name), value); } }

        private List<FhirCanonical>? _observationRequirement;
        [JsonPropertyName("observationRequirement")]
        public List<FhirCanonical>? ObservationRequirement { get => _observationRequirement; set { _observationRequirement = value; OnPropertyChangedByClr(nameof(ObservationRequirement), value); } }

        private List<FhirCanonical>? _observationResultRequirement;
        [JsonPropertyName("observationResultRequirement")]
        public List<FhirCanonical>? ObservationResultRequirement { get => _observationResultRequirement; set { _observationResultRequirement = value; OnPropertyChangedByClr(nameof(ObservationResultRequirement), value); } }

        private List<ActivityDefinition_Participant>? _participant;
        [JsonPropertyName("participant")]
        public List<ActivityDefinition_Participant>? Participant { get => _participant; set { _participant = value; OnPropertyChangedByClr(nameof(Participant), value); } }

        /// <summary>
        /// Who should participate in the action
        /// </summary>
        public partial class ActivityDefinition_Participant : BackboneElement<ActivityDefinition_Participant>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ActivityDefinition_Participant" : "activityDefinition_Participant";
            private CodeableConcept? _function;
        [JsonPropertyName("function")]
        public CodeableConcept? Function { get => _function; set { _function = value; } }

            private CodeableConcept? _role;
        [JsonPropertyName("role")]
        public CodeableConcept? Role { get => _role; set { _role = value; } }

            private FhirCode? _type;
        [JsonPropertyName("type")]
        public FhirCode? Type { get => _type; set { _type = value; } }

            private FhirCanonical? _typeCanonical;
        [JsonPropertyName("typeCanonical")]
        public FhirCanonical? TypeCanonical { get => _typeCanonical; set { _typeCanonical = value; } }

            private ReferenceType? _typeReference;
        [JsonPropertyName("typeReference")]
        public ReferenceType? TypeReference { get => _typeReference; set { _typeReference = value; } }

        }

        private FhirCode? _priority;
        [JsonPropertyName("priority")]
        public FhirCode? Priority { get => _priority; set { _priority = value; OnPropertyChangedByClr(nameof(Priority), value); } }

        private ReferenceType? _productReference;
        [JsonPropertyName("productReference")]
        public ReferenceType? ProductReference { get => _productReference; set { _productReference = value; if (value != null) {{ _productCodeableConcept = null; OnPropertyChangedByClr(nameof(ProductCodeableConcept), null); }}; OnPropertyChangedByClr(nameof(ProductReference), value); } }

        private CodeableConcept? _productCodeableConcept;
        [JsonPropertyName("productCodeableConcept")]
        public CodeableConcept? ProductCodeableConcept { get => _productCodeableConcept; set { _productCodeableConcept = value; if (value != null) {{ _productReference = null; OnPropertyChangedByClr(nameof(ProductReference), null); }}; OnPropertyChangedByClr(nameof(ProductCodeableConcept), value); } }

        private FhirCanonical? _profile;
        [JsonPropertyName("profile")]
        public FhirCanonical? Profile { get => _profile; set { _profile = value; OnPropertyChangedByClr(nameof(Profile), value); } }

        private FhirString? _publisher;
        [JsonPropertyName("publisher")]
        public FhirString? Publisher { get => _publisher; set { _publisher = value; OnPropertyChangedByClr(nameof(Publisher), value); } }

        private FhirMarkdown? _purpose;
        [JsonPropertyName("purpose")]
        public FhirMarkdown? Purpose { get => _purpose; set { _purpose = value; OnPropertyChangedByClr(nameof(Purpose), value); } }

        private Quantity? _quantity;
        [JsonPropertyName("quantity")]
        public Quantity? Quantity { get => _quantity; set { _quantity = value; OnPropertyChangedByClr(nameof(Quantity), value); } }

        private List<RelatedArtifact>? _relatedArtifact;
        [JsonPropertyName("relatedArtifact")]
        public List<RelatedArtifact>? RelatedArtifact { get => _relatedArtifact; set { _relatedArtifact = value; OnPropertyChangedByClr(nameof(RelatedArtifact), value); } }

        private List<ContactDetail>? _reviewer;
        [JsonPropertyName("reviewer")]
        public List<ContactDetail>? Reviewer { get => _reviewer; set { _reviewer = value; OnPropertyChangedByClr(nameof(Reviewer), value); } }

        private List<FhirCanonical>? _specimenRequirement;
        [JsonPropertyName("specimenRequirement")]
        public List<FhirCanonical>? SpecimenRequirement { get => _specimenRequirement; set { _specimenRequirement = value; OnPropertyChangedByClr(nameof(SpecimenRequirement), value); } }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode Status { get => _status ?? throw new InvalidOperationException("Status is required"); set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private CodeableConcept? _subjectCodeableConcept;
        [JsonPropertyName("subjectCodeableConcept")]
        public CodeableConcept? SubjectCodeableConcept { get => _subjectCodeableConcept; set { _subjectCodeableConcept = value; if (value != null) {{ _subjectReference = null; OnPropertyChangedByClr(nameof(SubjectReference), null); _subjectcanonical = null; OnPropertyChangedByClr(nameof(Subjectcanonical), null); }}; OnPropertyChangedByClr(nameof(SubjectCodeableConcept), value); } }

        private ReferenceType? _subjectReference;
        [JsonPropertyName("subjectReference")]
        public ReferenceType? SubjectReference { get => _subjectReference; set { _subjectReference = value; if (value != null) {{ _subjectCodeableConcept = null; OnPropertyChangedByClr(nameof(SubjectCodeableConcept), null); _subjectcanonical = null; OnPropertyChangedByClr(nameof(Subjectcanonical), null); }}; OnPropertyChangedByClr(nameof(SubjectReference), value); } }

        private FhirCanonical? _subjectcanonical;
        [JsonPropertyName("subjectcanonical")]
        public FhirCanonical? Subjectcanonical { get => _subjectcanonical; set { _subjectcanonical = value; if (value != null) {{ _subjectCodeableConcept = null; OnPropertyChangedByClr(nameof(SubjectCodeableConcept), null); _subjectReference = null; OnPropertyChangedByClr(nameof(SubjectReference), null); }}; OnPropertyChangedByClr(nameof(Subjectcanonical), value); } }

        private FhirString? _subtitle;
        [JsonPropertyName("subtitle")]
        public FhirString? Subtitle { get => _subtitle; set { _subtitle = value; OnPropertyChangedByClr(nameof(Subtitle), value); } }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

        private Timing? _timingTiming;
        [JsonPropertyName("timingTiming")]
        public Timing? TimingTiming { get => _timingTiming; set { _timingTiming = value; if (value != null) {{ _timingAge = null; OnPropertyChangedByClr(nameof(TimingAge), null); _timingRange = null; OnPropertyChangedByClr(nameof(TimingRange), null); _timingDuration = null; OnPropertyChangedByClr(nameof(TimingDuration), null); }}; OnPropertyChangedByClr(nameof(TimingTiming), value); } }

        private Age? _timingAge;
        [JsonPropertyName("timingAge")]
        public Age? TimingAge { get => _timingAge; set { _timingAge = value; if (value != null) {{ _timingTiming = null; OnPropertyChangedByClr(nameof(TimingTiming), null); _timingRange = null; OnPropertyChangedByClr(nameof(TimingRange), null); _timingDuration = null; OnPropertyChangedByClr(nameof(TimingDuration), null); }}; OnPropertyChangedByClr(nameof(TimingAge), value); } }

        private DataTypeServices.DataTypes.ComplexTypes.Range? _timingRange;
        [JsonPropertyName("timingRange")]
        public DataTypeServices.DataTypes.ComplexTypes.Range? TimingRange { get => _timingRange; set { _timingRange = value; if (value != null) {{ _timingTiming = null; OnPropertyChangedByClr(nameof(TimingTiming), null); _timingAge = null; OnPropertyChangedByClr(nameof(TimingAge), null); _timingDuration = null; OnPropertyChangedByClr(nameof(TimingDuration), null); }}; OnPropertyChangedByClr(nameof(TimingRange), value); } }

        private Duration? _timingDuration;
        [JsonPropertyName("timingDuration")]
        public Duration? TimingDuration { get => _timingDuration; set { _timingDuration = value; if (value != null) {{ _timingTiming = null; OnPropertyChangedByClr(nameof(TimingTiming), null); _timingAge = null; OnPropertyChangedByClr(nameof(TimingAge), null); _timingRange = null; OnPropertyChangedByClr(nameof(TimingRange), null); }}; OnPropertyChangedByClr(nameof(TimingDuration), value); } }

        private FhirString? _title;
        [JsonPropertyName("title")]
        public FhirString? Title { get => _title; set { _title = value; OnPropertyChangedByClr(nameof(Title), value); } }

        private List<CodeableConcept>? _topic;
        [JsonPropertyName("topic")]
        public List<CodeableConcept>? Topic { get => _topic; set { _topic = value; OnPropertyChangedByClr(nameof(Topic), value); } }

        private FhirCanonical? _transform;
        [JsonPropertyName("transform")]
        public FhirCanonical? Transform { get => _transform; set { _transform = value; OnPropertyChangedByClr(nameof(Transform), value); } }

        private FhirUri? _url;
        [JsonPropertyName("url")]
        public FhirUri? Url { get => _url; set { _url = value; OnPropertyChangedByClr(nameof(Url), value); } }

        private FhirMarkdown? _usage;
        [JsonPropertyName("usage")]
        public FhirMarkdown? Usage { get => _usage; set { _usage = value; OnPropertyChangedByClr(nameof(Usage), value); } }

        private List<UsageContext>? _useContext;
        [JsonPropertyName("useContext")]
        public List<UsageContext>? UseContext { get => _useContext; set { _useContext = value; OnPropertyChangedByClr(nameof(UseContext), value); } }

        private FhirString? _version;
        [JsonPropertyName("version")]
        public FhirString? Version { get => _version; set { _version = value; OnPropertyChangedByClr(nameof(Version), value); } }

        private FhirString? _versionAlgorithmString;
        [JsonPropertyName("versionAlgorithmString")]
        public FhirString? VersionAlgorithmString { get => _versionAlgorithmString; set { _versionAlgorithmString = value; if (value != null) {{ _versionAlgorithmCoding = null; OnPropertyChangedByClr(nameof(VersionAlgorithmCoding), null); }}; OnPropertyChangedByClr(nameof(VersionAlgorithmString), value); } }

        private Coding? _versionAlgorithmCoding;
        [JsonPropertyName("versionAlgorithmCoding")]
        public Coding? VersionAlgorithmCoding { get => _versionAlgorithmCoding; set { _versionAlgorithmCoding = value; if (value != null) {{ _versionAlgorithmString = null; OnPropertyChangedByClr(nameof(VersionAlgorithmString), null); }}; OnPropertyChangedByClr(nameof(VersionAlgorithmCoding), value); } }

    }
}
