// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class SubstanceDefinitionFluentExtensions
    {
        public static SubstanceDefinition AddCharacterization(this SubstanceDefinition r, BackboneElement item) { r.Characterization ??= new List<BackboneElement>(); r.Characterization!.Add(item); return r; }
        public static SubstanceDefinition AddClassification(this SubstanceDefinition r, CodeableConcept item) { r.Classification ??= new List<CodeableConcept>(); r.Classification!.Add(item); return r; }
        public static SubstanceDefinition AddCode(this SubstanceDefinition r, BackboneElement item) { r.Code ??= new List<BackboneElement>(); r.Code!.Add(item); return r; }
        public static SubstanceDefinition AddContained(this SubstanceDefinition r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static SubstanceDefinition WithDescription(this SubstanceDefinition r, FhirMarkdown value) { r.Description = value; return r; }
        public static SubstanceDefinition WithDomain(this SubstanceDefinition r, CodeableConcept value) { r.Domain = value; return r; }
        public static SubstanceDefinition AddGrade(this SubstanceDefinition r, CodeableConcept item) { r.Grade ??= new List<CodeableConcept>(); r.Grade!.Add(item); return r; }
        public static SubstanceDefinition AddIdentifier(this SubstanceDefinition r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static SubstanceDefinition AddInformationSource(this SubstanceDefinition r, ReferenceType item) { r.InformationSource ??= new List<ReferenceType>(); r.InformationSource!.Add(item); return r; }
        public static SubstanceDefinition AddManufacturer(this SubstanceDefinition r, ReferenceType item) { r.Manufacturer ??= new List<ReferenceType>(); r.Manufacturer!.Add(item); return r; }
        public static SubstanceDefinition AddMoiety(this SubstanceDefinition r, BackboneElement item) { r.Moiety ??= new List<BackboneElement>(); r.Moiety!.Add(item); return r; }
        public static SubstanceDefinition AddMolecularWeight(this SubstanceDefinition r, BackboneElement item) { r.MolecularWeight ??= new List<BackboneElement>(); r.MolecularWeight!.Add(item); return r; }
        public static SubstanceDefinition AddName(this SubstanceDefinition r, BackboneElement item) { r.Name ??= new List<BackboneElement>(); r.Name!.Add(item); return r; }
        public static SubstanceDefinition AddNote(this SubstanceDefinition r, Annotation item) { r.Note ??= new List<Annotation>(); r.Note!.Add(item); return r; }
        public static SubstanceDefinition WithNucleicAcid(this SubstanceDefinition r, ReferenceType value) { r.NucleicAcid = value; return r; }
        public static SubstanceDefinition WithPolymer(this SubstanceDefinition r, ReferenceType value) { r.Polymer = value; return r; }
        public static SubstanceDefinition AddProperty(this SubstanceDefinition r, BackboneElement item) { r.Property ??= new List<BackboneElement>(); r.Property!.Add(item); return r; }
        public static SubstanceDefinition WithProtein(this SubstanceDefinition r, ReferenceType value) { r.Protein = value; return r; }
        public static SubstanceDefinition WithReferenceInformation(this SubstanceDefinition r, ReferenceType value) { r.ReferenceInformation = value; return r; }
        public static SubstanceDefinition AddRelationship(this SubstanceDefinition r, BackboneElement item) { r.Relationship ??= new List<BackboneElement>(); r.Relationship!.Add(item); return r; }
        public static SubstanceDefinition WithSourceMaterial(this SubstanceDefinition r, BackboneElement value) { r.SourceMaterial = value; return r; }
        public static SubstanceDefinition WithStatus(this SubstanceDefinition r, CodeableConcept value) { r.Status = value; return r; }
        public static SubstanceDefinition WithStructure(this SubstanceDefinition r, BackboneElement value) { r.Structure = value; return r; }
        public static SubstanceDefinition AddSupplier(this SubstanceDefinition r, ReferenceType item) { r.Supplier ??= new List<ReferenceType>(); r.Supplier!.Add(item); return r; }
        public static SubstanceDefinition WithText(this SubstanceDefinition r, Narrative value) { r.Text = value; return r; }
        public static SubstanceDefinition WithVersion(this SubstanceDefinition r, FhirString value) { r.Version = value; return r; }
    }
}
