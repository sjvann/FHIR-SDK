// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// An ingredient of a manufactured item or pharmaceutical product
    /// </summary>
    public partial class Ingredient : ResourceBase
    {
        public override string ResourceType => "Ingredient";

        public Ingredient() { }
        public Ingredient(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public Ingredient(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private FhirBoolean? _allergenicIndicator;
        [JsonPropertyName("allergenicIndicator")]
        public FhirBoolean? AllergenicIndicator { get => _allergenicIndicator; set { _allergenicIndicator = value; OnPropertyChangedByClr(nameof(AllergenicIndicator), value); } }

        private FhirMarkdown? _comment;
        [JsonPropertyName("comment")]
        public FhirMarkdown? Comment { get => _comment; set { _comment = value; OnPropertyChangedByClr(nameof(Comment), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private List<ReferenceType>? _for;
        [JsonPropertyName("for")]
        public List<ReferenceType>? For { get => _for; set { _for = value; OnPropertyChangedByClr(nameof(For), value); } }

        private List<CodeableConcept>? _function;
        [JsonPropertyName("function")]
        public List<CodeableConcept>? Function { get => _function; set { _function = value; OnPropertyChangedByClr(nameof(Function), value); } }

        private CodeableConcept? _group;
        [JsonPropertyName("group")]
        public CodeableConcept? Group { get => _group; set { _group = value; OnPropertyChangedByClr(nameof(Group), value); } }

        private Identifier? _identifier;
        [JsonPropertyName("identifier")]
        public Identifier? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private List<Ingredient_Manufacturer>? _manufacturer;
        [JsonPropertyName("manufacturer")]
        public List<Ingredient_Manufacturer>? Manufacturer { get => _manufacturer; set { _manufacturer = value; OnPropertyChangedByClr(nameof(Manufacturer), value); } }

        /// <summary>
        /// An organization that manufactures this ingredient
        /// </summary>
        public partial class Ingredient_Manufacturer : BackboneElement<Ingredient_Manufacturer>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Ingredient_Manufacturer" : "ingredient_Manufacturer";
            private ReferenceType? _manufacturer;
        [JsonPropertyName("manufacturer")]
        public ReferenceType Manufacturer { get => _manufacturer ?? throw new InvalidOperationException("Manufacturer is required"); set { _manufacturer = value; } }

            private FhirCode? _role;
        [JsonPropertyName("role")]
        public FhirCode? Role { get => _role; set { _role = value; } }

        }

        private CodeableConcept? _role;
        [JsonPropertyName("role")]
        public CodeableConcept Role { get => _role ?? throw new InvalidOperationException("Role is required"); set { _role = value; OnPropertyChangedByClr(nameof(Role), value); } }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode Status { get => _status ?? throw new InvalidOperationException("Status is required"); set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private Ingredient_Substance? _substance;
        [JsonPropertyName("substance")]
        public Ingredient_Substance Substance { get => _substance ?? throw new InvalidOperationException("Substance is required"); set { _substance = value; OnPropertyChangedByClr(nameof(Substance), value); } }

        /// <summary>
        /// The substance that comprises this ingredient
        /// </summary>
        public partial class Ingredient_Substance : BackboneElement<Ingredient_Substance>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Ingredient_Substance" : "ingredient_Substance";
            private CodeableReference? _code;
        [JsonPropertyName("code")]
        public CodeableReference Code { get => _code ?? throw new InvalidOperationException("Code is required"); set { _code = value; } }

            private List<Ingredient_Substance_Strength>? _strength;
        [JsonPropertyName("strength")]
        public List<Ingredient_Substance_Strength>? Strength { get => _strength; set { _strength = value; } }

            /// <summary>
            /// The quantity of substance, per presentation, or per volume or mass, and type of quantity
            /// </summary>
            public partial class Ingredient_Substance_Strength : BackboneElement<Ingredient_Substance_Strength>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Ingredient_Substance_Strength" : "ingredient_Substance_Strength";
                private CodeableConcept? _basis;
        [JsonPropertyName("basis")]
        public CodeableConcept? Basis { get => _basis; set { _basis = value; } }

                private Ratio? _concentrationRatio;
        [JsonPropertyName("concentrationRatio")]
        public Ratio? ConcentrationRatio { get => _concentrationRatio; set { _concentrationRatio = value; if (value != null) {{ _concentrationRatioRange = null; OnPropertyChanged("concentrationRatioRange", null); _concentrationCodeableConcept = null; OnPropertyChanged("concentrationCodeableConcept", null); _concentrationQuantity = null; OnPropertyChanged("concentrationQuantity", null); }}; OnPropertyChanged("concentrationRatio", value); } }

                private RatioRange? _concentrationRatioRange;
        [JsonPropertyName("concentrationRatioRange")]
        public RatioRange? ConcentrationRatioRange { get => _concentrationRatioRange; set { _concentrationRatioRange = value; if (value != null) {{ _concentrationRatio = null; OnPropertyChanged("concentrationRatio", null); _concentrationCodeableConcept = null; OnPropertyChanged("concentrationCodeableConcept", null); _concentrationQuantity = null; OnPropertyChanged("concentrationQuantity", null); }}; OnPropertyChanged("concentrationRatioRange", value); } }

                private CodeableConcept? _concentrationCodeableConcept;
        [JsonPropertyName("concentrationCodeableConcept")]
        public CodeableConcept? ConcentrationCodeableConcept { get => _concentrationCodeableConcept; set { _concentrationCodeableConcept = value; if (value != null) {{ _concentrationRatio = null; OnPropertyChanged("concentrationRatio", null); _concentrationRatioRange = null; OnPropertyChanged("concentrationRatioRange", null); _concentrationQuantity = null; OnPropertyChanged("concentrationQuantity", null); }}; OnPropertyChanged("concentrationCodeableConcept", value); } }

                private Quantity? _concentrationQuantity;
        [JsonPropertyName("concentrationQuantity")]
        public Quantity? ConcentrationQuantity { get => _concentrationQuantity; set { _concentrationQuantity = value; if (value != null) {{ _concentrationRatio = null; OnPropertyChanged("concentrationRatio", null); _concentrationRatioRange = null; OnPropertyChanged("concentrationRatioRange", null); _concentrationCodeableConcept = null; OnPropertyChanged("concentrationCodeableConcept", null); }}; OnPropertyChanged("concentrationQuantity", value); } }

                private List<CodeableConcept>? _country;
        [JsonPropertyName("country")]
        public List<CodeableConcept>? Country { get => _country; set { _country = value; } }

                private FhirString? _measurementPoint;
        [JsonPropertyName("measurementPoint")]
        public FhirString? MeasurementPoint { get => _measurementPoint; set { _measurementPoint = value; } }

                private Ratio? _presentationRatio;
        [JsonPropertyName("presentationRatio")]
        public Ratio? PresentationRatio { get => _presentationRatio; set { _presentationRatio = value; if (value != null) {{ _presentationRatioRange = null; OnPropertyChanged("presentationRatioRange", null); _presentationCodeableConcept = null; OnPropertyChanged("presentationCodeableConcept", null); _presentationQuantity = null; OnPropertyChanged("presentationQuantity", null); }}; OnPropertyChanged("presentationRatio", value); } }

                private RatioRange? _presentationRatioRange;
        [JsonPropertyName("presentationRatioRange")]
        public RatioRange? PresentationRatioRange { get => _presentationRatioRange; set { _presentationRatioRange = value; if (value != null) {{ _presentationRatio = null; OnPropertyChanged("presentationRatio", null); _presentationCodeableConcept = null; OnPropertyChanged("presentationCodeableConcept", null); _presentationQuantity = null; OnPropertyChanged("presentationQuantity", null); }}; OnPropertyChanged("presentationRatioRange", value); } }

                private CodeableConcept? _presentationCodeableConcept;
        [JsonPropertyName("presentationCodeableConcept")]
        public CodeableConcept? PresentationCodeableConcept { get => _presentationCodeableConcept; set { _presentationCodeableConcept = value; if (value != null) {{ _presentationRatio = null; OnPropertyChanged("presentationRatio", null); _presentationRatioRange = null; OnPropertyChanged("presentationRatioRange", null); _presentationQuantity = null; OnPropertyChanged("presentationQuantity", null); }}; OnPropertyChanged("presentationCodeableConcept", value); } }

                private Quantity? _presentationQuantity;
        [JsonPropertyName("presentationQuantity")]
        public Quantity? PresentationQuantity { get => _presentationQuantity; set { _presentationQuantity = value; if (value != null) {{ _presentationRatio = null; OnPropertyChanged("presentationRatio", null); _presentationRatioRange = null; OnPropertyChanged("presentationRatioRange", null); _presentationCodeableConcept = null; OnPropertyChanged("presentationCodeableConcept", null); }}; OnPropertyChanged("presentationQuantity", value); } }

                private List<Ingredient_Substance_Strength_ReferenceStrength>? _referenceStrength;
        [JsonPropertyName("referenceStrength")]
        public List<Ingredient_Substance_Strength_ReferenceStrength>? ReferenceStrength { get => _referenceStrength; set { _referenceStrength = value; } }

                /// <summary>
                /// Strength expressed in terms of a reference substance
                /// </summary>
                public partial class Ingredient_Substance_Strength_ReferenceStrength : BackboneElement<Ingredient_Substance_Strength_ReferenceStrength>
                {
                    public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Ingredient_Substance_Strength_ReferenceStrength" : "ingredient_Substance_Strength_ReferenceStrength";
                    private List<CodeableConcept>? _country;
        [JsonPropertyName("country")]
        public List<CodeableConcept>? Country { get => _country; set { _country = value; } }

                    private FhirString? _measurementPoint;
        [JsonPropertyName("measurementPoint")]
        public FhirString? MeasurementPoint { get => _measurementPoint; set { _measurementPoint = value; } }

                    private Ratio? _strengthRatio;
        [JsonPropertyName("strengthRatio")]
        public Ratio? StrengthRatio { get => _strengthRatio; set { _strengthRatio = value; if (value != null) {{ }}; OnPropertyChanged("strengthRatio", value); } }

                    private RatioRange? _strengthRatioRange;
        [JsonPropertyName("strengthRatioRange")]
        public RatioRange? StrengthRatioRange { get => _strengthRatioRange; set { _strengthRatioRange = value; if (value != null) {{ _strengthRatio = null; OnPropertyChanged("strengthRatio", null); }}; OnPropertyChanged("strengthRatioRange", value); } }

                    private Quantity? _strengthQuantity;
        [JsonPropertyName("strengthQuantity")]
        public Quantity? StrengthQuantity { get => _strengthQuantity; set { _strengthQuantity = value; if (value != null) {{ _strengthRatio = null; OnPropertyChanged("strengthRatio", null); _strengthRatioRange = null; OnPropertyChanged("strengthRatioRange", null); }}; OnPropertyChanged("strengthQuantity", value); } }

                    private CodeableReference? _substance;
        [JsonPropertyName("substance")]
        public CodeableReference Substance { get => _substance ?? throw new InvalidOperationException("Substance is required"); set { _substance = value; } }

                }

                private FhirString? _textConcentration;
        [JsonPropertyName("textConcentration")]
        public FhirString? TextConcentration { get => _textConcentration; set { _textConcentration = value; } }

                private FhirString? _textPresentation;
        [JsonPropertyName("textPresentation")]
        public FhirString? TextPresentation { get => _textPresentation; set { _textPresentation = value; } }

            }

        }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

    }
}
