// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class ExampleScenarioFluentExtensions
    {
        public static ExampleScenario AddActor(this ExampleScenario r, BackboneElement item) { r.Actor ??= new List<BackboneElement>(); r.Actor!.Add(item); return r; }
        public static ExampleScenario AddContact(this ExampleScenario r, ContactDetail item) { r.Contact ??= new List<ContactDetail>(); r.Contact!.Add(item); return r; }
        public static ExampleScenario AddContained(this ExampleScenario r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static ExampleScenario WithCopyright(this ExampleScenario r, FhirMarkdown value) { r.Copyright = value; return r; }
        public static ExampleScenario WithCopyrightLabel(this ExampleScenario r, FhirString value) { r.CopyrightLabel = value; return r; }
        public static ExampleScenario WithDate(this ExampleScenario r, FhirDateTime value) { r.Date = value; return r; }
        public static ExampleScenario WithDescription(this ExampleScenario r, FhirMarkdown value) { r.Description = value; return r; }
        public static ExampleScenario WithExperimental(this ExampleScenario r, FhirBoolean value) { r.Experimental = value; return r; }
        public static ExampleScenario AddIdentifier(this ExampleScenario r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static ExampleScenario AddInstance(this ExampleScenario r, BackboneElement item) { r.Instance ??= new List<BackboneElement>(); r.Instance!.Add(item); return r; }
        public static ExampleScenario AddJurisdiction(this ExampleScenario r, CodeableConcept item) { r.Jurisdiction ??= new List<CodeableConcept>(); r.Jurisdiction!.Add(item); return r; }
        public static ExampleScenario WithName(this ExampleScenario r, FhirString value) { r.Name = value; return r; }
        public static ExampleScenario AddProcess(this ExampleScenario r, BackboneElement item) { r.Process ??= new List<BackboneElement>(); r.Process!.Add(item); return r; }
        public static ExampleScenario WithPublisher(this ExampleScenario r, FhirString value) { r.Publisher = value; return r; }
        public static ExampleScenario WithPurpose(this ExampleScenario r, FhirMarkdown value) { r.Purpose = value; return r; }
        public static ExampleScenario WithStatus(this ExampleScenario r, FhirCode value) { r.Status = value; return r; }
        public static ExampleScenario WithText(this ExampleScenario r, Narrative value) { r.Text = value; return r; }
        public static ExampleScenario WithTitle(this ExampleScenario r, FhirString value) { r.Title = value; return r; }
        public static ExampleScenario WithUrl(this ExampleScenario r, FhirUri value) { r.Url = value; return r; }
        public static ExampleScenario AddUseContext(this ExampleScenario r, UsageContext item) { r.UseContext ??= new List<UsageContext>(); r.UseContext!.Add(item); return r; }
        public static ExampleScenario WithVersion(this ExampleScenario r, FhirString value) { r.Version = value; return r; }
        public static ExampleScenario WithVersionAlgorithmString(this ExampleScenario r, FhirString value) { r.VersionAlgorithmString = value; return r; }
        public static ExampleScenario WithVersionAlgorithmCoding(this ExampleScenario r, Coding value) { r.VersionAlgorithmCoding = value; return r; }
    }
}
