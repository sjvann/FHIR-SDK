// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// Describes the intended objective(s) for a patient, group or organization
    /// </summary>
    public partial class Goal : ResourceBase
    {
        public override string ResourceType => "Goal";

        public Goal() { }
        public Goal(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public Goal(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private CodeableConcept? _achievementStatus;
        [JsonPropertyName("achievementStatus")]
        public CodeableConcept? AchievementStatus { get => _achievementStatus; set { _achievementStatus = value; OnPropertyChangedByClr(nameof(AchievementStatus), value); } }

        private List<ReferenceType>? _addresses;
        [JsonPropertyName("addresses")]
        public List<ReferenceType>? Addresses { get => _addresses; set { _addresses = value; OnPropertyChangedByClr(nameof(Addresses), value); } }

        private List<CodeableConcept>? _category;
        [JsonPropertyName("category")]
        public List<CodeableConcept>? Category { get => _category; set { _category = value; OnPropertyChangedByClr(nameof(Category), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private FhirBoolean? _continuous;
        [JsonPropertyName("continuous")]
        public FhirBoolean? Continuous { get => _continuous; set { _continuous = value; OnPropertyChangedByClr(nameof(Continuous), value); } }

        private CodeableConcept? _description;
        [JsonPropertyName("description")]
        public CodeableConcept Description { get => _description ?? throw new InvalidOperationException("Description is required"); set { _description = value; OnPropertyChangedByClr(nameof(Description), value); } }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private FhirCode? _lifecycleStatus;
        [JsonPropertyName("lifecycleStatus")]
        public FhirCode LifecycleStatus { get => _lifecycleStatus ?? throw new InvalidOperationException("LifecycleStatus is required"); set { _lifecycleStatus = value; OnPropertyChangedByClr(nameof(LifecycleStatus), value); } }

        private List<Annotation>? _note;
        [JsonPropertyName("note")]
        public List<Annotation>? Note { get => _note; set { _note = value; OnPropertyChangedByClr(nameof(Note), value); } }

        private List<CodeableReference>? _outcome;
        [JsonPropertyName("outcome")]
        public List<CodeableReference>? Outcome { get => _outcome; set { _outcome = value; OnPropertyChangedByClr(nameof(Outcome), value); } }

        private CodeableConcept? _priority;
        [JsonPropertyName("priority")]
        public CodeableConcept? Priority { get => _priority; set { _priority = value; OnPropertyChangedByClr(nameof(Priority), value); } }

        private ReferenceType? _source;
        [JsonPropertyName("source")]
        public ReferenceType? Source { get => _source; set { _source = value; OnPropertyChangedByClr(nameof(Source), value); } }

        private FhirDate? _startdate;
        [JsonPropertyName("startdate")]
        public FhirDate? Startdate { get => _startdate; set { _startdate = value; if (value != null) {{ _startCodeableConcept = null; OnPropertyChangedByClr(nameof(StartCodeableConcept), null); }}; OnPropertyChangedByClr(nameof(Startdate), value); } }

        private CodeableConcept? _startCodeableConcept;
        [JsonPropertyName("startCodeableConcept")]
        public CodeableConcept? StartCodeableConcept { get => _startCodeableConcept; set { _startCodeableConcept = value; if (value != null) {{ _startdate = null; OnPropertyChangedByClr(nameof(Startdate), null); }}; OnPropertyChangedByClr(nameof(StartCodeableConcept), value); } }

        private FhirDate? _statusDate;
        [JsonPropertyName("statusDate")]
        public FhirDate? StatusDate { get => _statusDate; set { _statusDate = value; OnPropertyChangedByClr(nameof(StatusDate), value); } }

        private FhirString? _statusReason;
        [JsonPropertyName("statusReason")]
        public FhirString? StatusReason { get => _statusReason; set { _statusReason = value; OnPropertyChangedByClr(nameof(StatusReason), value); } }

        private ReferenceType? _subject;
        [JsonPropertyName("subject")]
        public ReferenceType Subject { get => _subject ?? throw new InvalidOperationException("Subject is required"); set { _subject = value; OnPropertyChangedByClr(nameof(Subject), value); } }

        private List<Goal_Target>? _target;
        [JsonPropertyName("target")]
        public List<Goal_Target>? Target { get => _target; set { _target = value; OnPropertyChangedByClr(nameof(Target), value); } }

        /// <summary>
        /// Target outcome for the goal
        /// </summary>
        public partial class Goal_Target : BackboneElement<Goal_Target>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Goal_Target" : "goal_Target";
            private Quantity? _detailQuantity;
        [JsonPropertyName("detailQuantity")]
        public Quantity? DetailQuantity { get => _detailQuantity; set { _detailQuantity = value; if (value != null) {{ _detailRange = null; OnPropertyChanged("detailRange", null); _detailCodeableConcept = null; OnPropertyChanged("detailCodeableConcept", null); _detailString = null; OnPropertyChanged("detailString", null); _detailBoolean = null; OnPropertyChanged("detailBoolean", null); _detailInteger = null; OnPropertyChanged("detailInteger", null); _detailRatio = null; OnPropertyChanged("detailRatio", null); }}; OnPropertyChanged("detailQuantity", value); } }

            private DataTypeServices.DataTypes.ComplexTypes.Range? _detailRange;
        [JsonPropertyName("detailRange")]
        public DataTypeServices.DataTypes.ComplexTypes.Range? DetailRange { get => _detailRange; set { _detailRange = value; if (value != null) {{ _detailQuantity = null; OnPropertyChanged("detailQuantity", null); _detailCodeableConcept = null; OnPropertyChanged("detailCodeableConcept", null); _detailString = null; OnPropertyChanged("detailString", null); _detailBoolean = null; OnPropertyChanged("detailBoolean", null); _detailInteger = null; OnPropertyChanged("detailInteger", null); _detailRatio = null; OnPropertyChanged("detailRatio", null); }}; OnPropertyChanged("detailRange", value); } }

            private CodeableConcept? _detailCodeableConcept;
        [JsonPropertyName("detailCodeableConcept")]
        public CodeableConcept? DetailCodeableConcept { get => _detailCodeableConcept; set { _detailCodeableConcept = value; if (value != null) {{ _detailQuantity = null; OnPropertyChanged("detailQuantity", null); _detailRange = null; OnPropertyChanged("detailRange", null); _detailString = null; OnPropertyChanged("detailString", null); _detailBoolean = null; OnPropertyChanged("detailBoolean", null); _detailInteger = null; OnPropertyChanged("detailInteger", null); _detailRatio = null; OnPropertyChanged("detailRatio", null); }}; OnPropertyChanged("detailCodeableConcept", value); } }

            private FhirString? _detailString;
        [JsonPropertyName("detailString")]
        public FhirString? DetailString { get => _detailString; set { _detailString = value; if (value != null) {{ _detailQuantity = null; OnPropertyChanged("detailQuantity", null); _detailRange = null; OnPropertyChanged("detailRange", null); _detailCodeableConcept = null; OnPropertyChanged("detailCodeableConcept", null); _detailBoolean = null; OnPropertyChanged("detailBoolean", null); _detailInteger = null; OnPropertyChanged("detailInteger", null); _detailRatio = null; OnPropertyChanged("detailRatio", null); }}; OnPropertyChanged("detailString", value); } }

            private FhirBoolean? _detailBoolean;
        [JsonPropertyName("detailBoolean")]
        public FhirBoolean? DetailBoolean { get => _detailBoolean; set { _detailBoolean = value; if (value != null) {{ _detailQuantity = null; OnPropertyChanged("detailQuantity", null); _detailRange = null; OnPropertyChanged("detailRange", null); _detailCodeableConcept = null; OnPropertyChanged("detailCodeableConcept", null); _detailString = null; OnPropertyChanged("detailString", null); _detailInteger = null; OnPropertyChanged("detailInteger", null); _detailRatio = null; OnPropertyChanged("detailRatio", null); }}; OnPropertyChanged("detailBoolean", value); } }

            private FhirInteger? _detailInteger;
        [JsonPropertyName("detailInteger")]
        public FhirInteger? DetailInteger { get => _detailInteger; set { _detailInteger = value; if (value != null) {{ _detailQuantity = null; OnPropertyChanged("detailQuantity", null); _detailRange = null; OnPropertyChanged("detailRange", null); _detailCodeableConcept = null; OnPropertyChanged("detailCodeableConcept", null); _detailString = null; OnPropertyChanged("detailString", null); _detailBoolean = null; OnPropertyChanged("detailBoolean", null); _detailRatio = null; OnPropertyChanged("detailRatio", null); }}; OnPropertyChanged("detailInteger", value); } }

            private Ratio? _detailRatio;
        [JsonPropertyName("detailRatio")]
        public Ratio? DetailRatio { get => _detailRatio; set { _detailRatio = value; if (value != null) {{ _detailQuantity = null; OnPropertyChanged("detailQuantity", null); _detailRange = null; OnPropertyChanged("detailRange", null); _detailCodeableConcept = null; OnPropertyChanged("detailCodeableConcept", null); _detailString = null; OnPropertyChanged("detailString", null); _detailBoolean = null; OnPropertyChanged("detailBoolean", null); _detailInteger = null; OnPropertyChanged("detailInteger", null); }}; OnPropertyChanged("detailRatio", value); } }

            private FhirDate? _duedate;
        [JsonPropertyName("duedate")]
        public FhirDate? Duedate { get => _duedate; set { _duedate = value; if (value != null) {{ _dueDuration = null; OnPropertyChanged("dueDuration", null); }}; OnPropertyChanged("duedate", value); } }

            private Duration? _dueDuration;
        [JsonPropertyName("dueDuration")]
        public Duration? DueDuration { get => _dueDuration; set { _dueDuration = value; if (value != null) {{ _duedate = null; OnPropertyChanged("duedate", null); }}; OnPropertyChanged("dueDuration", value); } }

            private CodeableConcept? _measure;
        [JsonPropertyName("measure")]
        public CodeableConcept? Measure { get => _measure; set { _measure = value; } }

        }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

    }
}
