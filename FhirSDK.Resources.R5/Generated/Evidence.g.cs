// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// Single evidence bit
    /// </summary>
    public partial class Evidence : ResourceBase
    {
        public override string ResourceType => "Evidence";

        public Evidence() { }
        public Evidence(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public Evidence(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private FhirDate? _approvalDate;
        [JsonPropertyName("approvalDate")]
        public FhirDate? ApprovalDate { get => _approvalDate; set { _approvalDate = value; OnPropertyChangedByClr(nameof(ApprovalDate), value); } }

        private FhirMarkdown? _assertion;
        [JsonPropertyName("assertion")]
        public FhirMarkdown? Assertion { get => _assertion; set { _assertion = value; OnPropertyChangedByClr(nameof(Assertion), value); } }

        private List<ContactDetail>? _author;
        [JsonPropertyName("author")]
        public List<ContactDetail>? Author { get => _author; set { _author = value; OnPropertyChangedByClr(nameof(Author), value); } }

        private List<Evidence_Certainty>? _certainty;
        [JsonPropertyName("certainty")]
        public List<Evidence_Certainty>? Certainty { get => _certainty; set { _certainty = value; OnPropertyChangedByClr(nameof(Certainty), value); } }

        /// <summary>
        /// Certainty or quality of the evidence
        /// </summary>
        public partial class Evidence_Certainty : BackboneElement<Evidence_Certainty>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Evidence_Certainty" : "evidence_Certainty";
            private FhirMarkdown? _description;
        [JsonPropertyName("description")]
        public FhirMarkdown? Description { get => _description; set { _description = value; } }

            private List<Annotation>? _note;
        [JsonPropertyName("note")]
        public List<Annotation>? Note { get => _note; set { _note = value; } }

            private FhirString? _rater;
        [JsonPropertyName("rater")]
        public FhirString? Rater { get => _rater; set { _rater = value; } }

            private CodeableConcept? _rating;
        [JsonPropertyName("rating")]
        public CodeableConcept? Rating { get => _rating; set { _rating = value; } }

            private List<FhirString>? _subcomponent;
        [JsonPropertyName("subcomponent")]
        public List<FhirString>? Subcomponent { get => _subcomponent; set { _subcomponent = value; } }

            private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept? Type { get => _type; set { _type = value; } }

        }

        private ReferenceType? _citeAsReference;
        [JsonPropertyName("citeAsReference")]
        public ReferenceType? CiteAsReference { get => _citeAsReference; set { _citeAsReference = value; if (value != null) {{ _citeAsmarkdown = null; OnPropertyChangedByClr(nameof(CiteAsmarkdown), null); }}; OnPropertyChangedByClr(nameof(CiteAsReference), value); } }

        private FhirMarkdown? _citeAsmarkdown;
        [JsonPropertyName("citeAsmarkdown")]
        public FhirMarkdown? CiteAsmarkdown { get => _citeAsmarkdown; set { _citeAsmarkdown = value; if (value != null) {{ _citeAsReference = null; OnPropertyChangedByClr(nameof(CiteAsReference), null); }}; OnPropertyChangedByClr(nameof(CiteAsmarkdown), value); } }

        private List<ContactDetail>? _contact;
        [JsonPropertyName("contact")]
        public List<ContactDetail>? Contact { get => _contact; set { _contact = value; OnPropertyChangedByClr(nameof(Contact), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private FhirMarkdown? _copyright;
        [JsonPropertyName("copyright")]
        public FhirMarkdown? Copyright { get => _copyright; set { _copyright = value; OnPropertyChangedByClr(nameof(Copyright), value); } }

        private FhirString? _copyrightLabel;
        [JsonPropertyName("copyrightLabel")]
        public FhirString? CopyrightLabel { get => _copyrightLabel; set { _copyrightLabel = value; OnPropertyChangedByClr(nameof(CopyrightLabel), value); } }

        private FhirDateTime? _date;
        [JsonPropertyName("date")]
        public FhirDateTime? Date { get => _date; set { _date = value; OnPropertyChangedByClr(nameof(Date), value); } }

        private FhirMarkdown? _description;
        [JsonPropertyName("description")]
        public FhirMarkdown? Description { get => _description; set { _description = value; OnPropertyChangedByClr(nameof(Description), value); } }

        private List<ContactDetail>? _editor;
        [JsonPropertyName("editor")]
        public List<ContactDetail>? Editor { get => _editor; set { _editor = value; OnPropertyChangedByClr(nameof(Editor), value); } }

        private List<ContactDetail>? _endorser;
        [JsonPropertyName("endorser")]
        public List<ContactDetail>? Endorser { get => _endorser; set { _endorser = value; OnPropertyChangedByClr(nameof(Endorser), value); } }

        private FhirBoolean? _experimental;
        [JsonPropertyName("experimental")]
        public FhirBoolean? Experimental { get => _experimental; set { _experimental = value; OnPropertyChangedByClr(nameof(Experimental), value); } }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private FhirDate? _lastReviewDate;
        [JsonPropertyName("lastReviewDate")]
        public FhirDate? LastReviewDate { get => _lastReviewDate; set { _lastReviewDate = value; OnPropertyChangedByClr(nameof(LastReviewDate), value); } }

        private FhirString? _name;
        [JsonPropertyName("name")]
        public FhirString? Name { get => _name; set { _name = value; OnPropertyChangedByClr(nameof(Name), value); } }

        private List<Annotation>? _note;
        [JsonPropertyName("note")]
        public List<Annotation>? Note { get => _note; set { _note = value; OnPropertyChangedByClr(nameof(Note), value); } }

        private FhirString? _publisher;
        [JsonPropertyName("publisher")]
        public FhirString? Publisher { get => _publisher; set { _publisher = value; OnPropertyChangedByClr(nameof(Publisher), value); } }

        private FhirMarkdown? _purpose;
        [JsonPropertyName("purpose")]
        public FhirMarkdown? Purpose { get => _purpose; set { _purpose = value; OnPropertyChangedByClr(nameof(Purpose), value); } }

        private List<RelatedArtifact>? _relatedArtifact;
        [JsonPropertyName("relatedArtifact")]
        public List<RelatedArtifact>? RelatedArtifact { get => _relatedArtifact; set { _relatedArtifact = value; OnPropertyChangedByClr(nameof(RelatedArtifact), value); } }

        private List<ContactDetail>? _reviewer;
        [JsonPropertyName("reviewer")]
        public List<ContactDetail>? Reviewer { get => _reviewer; set { _reviewer = value; OnPropertyChangedByClr(nameof(Reviewer), value); } }

        private List<Evidence_Statistic>? _statistic;
        [JsonPropertyName("statistic")]
        public List<Evidence_Statistic>? Statistic { get => _statistic; set { _statistic = value; OnPropertyChangedByClr(nameof(Statistic), value); } }

        /// <summary>
        /// Values and parameters for a single statistic
        /// </summary>
        public partial class Evidence_Statistic : BackboneElement<Evidence_Statistic>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Evidence_Statistic" : "evidence_Statistic";
            private List<Evidence_Statistic_AttributeEstimate>? _attributeEstimate;
        [JsonPropertyName("attributeEstimate")]
        public List<Evidence_Statistic_AttributeEstimate>? AttributeEstimate { get => _attributeEstimate; set { _attributeEstimate = value; } }

            /// <summary>
            /// An attribute of the Statistic
            /// </summary>
            public partial class Evidence_Statistic_AttributeEstimate : BackboneElement<Evidence_Statistic_AttributeEstimate>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Evidence_Statistic_AttributeEstimate" : "evidence_Statistic_AttributeEstimate";
                private List<FhirString>? _attributeEstimate;
        [JsonPropertyName("attributeEstimate")]
        public List<FhirString>? AttributeEstimate { get => _attributeEstimate; set { _attributeEstimate = value; } }

                private FhirMarkdown? _description;
        [JsonPropertyName("description")]
        public FhirMarkdown? Description { get => _description; set { _description = value; } }

                private FhirDecimal? _level;
        [JsonPropertyName("level")]
        public FhirDecimal? Level { get => _level; set { _level = value; } }

                private List<Annotation>? _note;
        [JsonPropertyName("note")]
        public List<Annotation>? Note { get => _note; set { _note = value; } }

                private Quantity? _quantity;
        [JsonPropertyName("quantity")]
        public Quantity? Quantity { get => _quantity; set { _quantity = value; } }

                private DataTypeServices.DataTypes.ComplexTypes.Range? _range;
        [JsonPropertyName("range")]
        public DataTypeServices.DataTypes.ComplexTypes.Range? Range { get => _range; set { _range = value; } }

                private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept? Type { get => _type; set { _type = value; } }

            }

            private CodeableConcept? _category;
        [JsonPropertyName("category")]
        public CodeableConcept? Category { get => _category; set { _category = value; } }

            private FhirMarkdown? _description;
        [JsonPropertyName("description")]
        public FhirMarkdown? Description { get => _description; set { _description = value; } }

            private List<Evidence_Statistic_ModelCharacteristic>? _modelCharacteristic;
        [JsonPropertyName("modelCharacteristic")]
        public List<Evidence_Statistic_ModelCharacteristic>? ModelCharacteristic { get => _modelCharacteristic; set { _modelCharacteristic = value; } }

            /// <summary>
            /// An aspect of the statistical model
            /// </summary>
            public partial class Evidence_Statistic_ModelCharacteristic : BackboneElement<Evidence_Statistic_ModelCharacteristic>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Evidence_Statistic_ModelCharacteristic" : "evidence_Statistic_ModelCharacteristic";
                private List<FhirString>? _attributeEstimate;
        [JsonPropertyName("attributeEstimate")]
        public List<FhirString>? AttributeEstimate { get => _attributeEstimate; set { _attributeEstimate = value; } }

                private CodeableConcept? _code;
        [JsonPropertyName("code")]
        public CodeableConcept Code { get => _code ?? throw new InvalidOperationException("Code is required"); set { _code = value; } }

                private Quantity? _value;
        [JsonPropertyName("value")]
        public Quantity? Value { get => _value; set { _value = value; } }

                private List<Evidence_Statistic_ModelCharacteristic_Variable>? _variable;
        [JsonPropertyName("variable")]
        public List<Evidence_Statistic_ModelCharacteristic_Variable>? Variable { get => _variable; set { _variable = value; } }

                /// <summary>
                /// A variable adjusted for in the adjusted analysis
                /// </summary>
                public partial class Evidence_Statistic_ModelCharacteristic_Variable : BackboneElement<Evidence_Statistic_ModelCharacteristic_Variable>
                {
                    public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Evidence_Statistic_ModelCharacteristic_Variable" : "evidence_Statistic_ModelCharacteristic_Variable";
                    private FhirCode? _handling;
        [JsonPropertyName("handling")]
        public FhirCode? Handling { get => _handling; set { _handling = value; } }

                    private List<CodeableConcept>? _valueCategory;
        [JsonPropertyName("valueCategory")]
        public List<CodeableConcept>? ValueCategory { get => _valueCategory; set { _valueCategory = value; } }

                    private List<Quantity>? _valueQuantity;
        [JsonPropertyName("valueQuantity")]
        public List<Quantity>? ValueQuantity { get => _valueQuantity; set { _valueQuantity = value; } }

                    private List<DataTypeServices.DataTypes.ComplexTypes.Range>? _valueRange;
        [JsonPropertyName("valueRange")]
        public List<DataTypeServices.DataTypes.ComplexTypes.Range>? ValueRange { get => _valueRange; set { _valueRange = value; } }

                    private ReferenceType? _variableDefinition;
        [JsonPropertyName("variableDefinition")]
        public ReferenceType VariableDefinition { get => _variableDefinition ?? throw new InvalidOperationException("VariableDefinition is required"); set { _variableDefinition = value; } }

                }

            }

            private List<Annotation>? _note;
        [JsonPropertyName("note")]
        public List<Annotation>? Note { get => _note; set { _note = value; } }

            private FhirUnsignedInt? _numberAffected;
        [JsonPropertyName("numberAffected")]
        public FhirUnsignedInt? NumberAffected { get => _numberAffected; set { _numberAffected = value; } }

            private FhirUnsignedInt? _numberOfEvents;
        [JsonPropertyName("numberOfEvents")]
        public FhirUnsignedInt? NumberOfEvents { get => _numberOfEvents; set { _numberOfEvents = value; } }

            private Quantity? _quantity;
        [JsonPropertyName("quantity")]
        public Quantity? Quantity { get => _quantity; set { _quantity = value; } }

            private Evidence_Statistic_SampleSize? _sampleSize;
        [JsonPropertyName("sampleSize")]
        public Evidence_Statistic_SampleSize? SampleSize { get => _sampleSize; set { _sampleSize = value; } }

            /// <summary>
            /// Number of samples in the statistic
            /// </summary>
            public partial class Evidence_Statistic_SampleSize : BackboneElement<Evidence_Statistic_SampleSize>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Evidence_Statistic_SampleSize" : "evidence_Statistic_SampleSize";
                private FhirMarkdown? _description;
        [JsonPropertyName("description")]
        public FhirMarkdown? Description { get => _description; set { _description = value; } }

                private FhirUnsignedInt? _knownDataCount;
        [JsonPropertyName("knownDataCount")]
        public FhirUnsignedInt? KnownDataCount { get => _knownDataCount; set { _knownDataCount = value; } }

                private List<Annotation>? _note;
        [JsonPropertyName("note")]
        public List<Annotation>? Note { get => _note; set { _note = value; } }

                private FhirUnsignedInt? _numberOfParticipants;
        [JsonPropertyName("numberOfParticipants")]
        public FhirUnsignedInt? NumberOfParticipants { get => _numberOfParticipants; set { _numberOfParticipants = value; } }

                private FhirUnsignedInt? _numberOfStudies;
        [JsonPropertyName("numberOfStudies")]
        public FhirUnsignedInt? NumberOfStudies { get => _numberOfStudies; set { _numberOfStudies = value; } }

            }

            private CodeableConcept? _statisticType;
        [JsonPropertyName("statisticType")]
        public CodeableConcept? StatisticType { get => _statisticType; set { _statisticType = value; } }

        }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode Status { get => _status ?? throw new InvalidOperationException("Status is required"); set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private List<CodeableConcept>? _studyDesign;
        [JsonPropertyName("studyDesign")]
        public List<CodeableConcept>? StudyDesign { get => _studyDesign; set { _studyDesign = value; OnPropertyChangedByClr(nameof(StudyDesign), value); } }

        private CodeableConcept? _synthesisType;
        [JsonPropertyName("synthesisType")]
        public CodeableConcept? SynthesisType { get => _synthesisType; set { _synthesisType = value; OnPropertyChangedByClr(nameof(SynthesisType), value); } }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

        private FhirString? _title;
        [JsonPropertyName("title")]
        public FhirString? Title { get => _title; set { _title = value; OnPropertyChangedByClr(nameof(Title), value); } }

        private FhirUri? _url;
        [JsonPropertyName("url")]
        public FhirUri? Url { get => _url; set { _url = value; OnPropertyChangedByClr(nameof(Url), value); } }

        private List<UsageContext>? _useContext;
        [JsonPropertyName("useContext")]
        public List<UsageContext>? UseContext { get => _useContext; set { _useContext = value; OnPropertyChangedByClr(nameof(UseContext), value); } }

        private List<Evidence_VariableDefinition> _variableDefinition = new();
        [JsonPropertyName("variableDefinition")]
        public List<Evidence_VariableDefinition> VariableDefinition { get => _variableDefinition; set { _variableDefinition = value; OnPropertyChangedByClr(nameof(VariableDefinition), value); } }

        /// <summary>
        /// Evidence variable such as population, exposure, or outcome
        /// </summary>
        public partial class Evidence_VariableDefinition : BackboneElement<Evidence_VariableDefinition>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Evidence_VariableDefinition" : "evidence_VariableDefinition";
            private FhirMarkdown? _description;
        [JsonPropertyName("description")]
        public FhirMarkdown? Description { get => _description; set { _description = value; } }

            private CodeableConcept? _directnessMatch;
        [JsonPropertyName("directnessMatch")]
        public CodeableConcept? DirectnessMatch { get => _directnessMatch; set { _directnessMatch = value; } }

            private ReferenceType? _intended;
        [JsonPropertyName("intended")]
        public ReferenceType? Intended { get => _intended; set { _intended = value; } }

            private List<Annotation>? _note;
        [JsonPropertyName("note")]
        public List<Annotation>? Note { get => _note; set { _note = value; } }

            private ReferenceType? _observed;
        [JsonPropertyName("observed")]
        public ReferenceType? Observed { get => _observed; set { _observed = value; } }

            private CodeableConcept? _variableRole;
        [JsonPropertyName("variableRole")]
        public CodeableConcept VariableRole { get => _variableRole ?? throw new InvalidOperationException("VariableRole is required"); set { _variableRole = value; } }

        }

        private FhirString? _version;
        [JsonPropertyName("version")]
        public FhirString? Version { get => _version; set { _version = value; OnPropertyChangedByClr(nameof(Version), value); } }

        private FhirString? _versionAlgorithmString;
        [JsonPropertyName("versionAlgorithmString")]
        public FhirString? VersionAlgorithmString { get => _versionAlgorithmString; set { _versionAlgorithmString = value; if (value != null) {{ _versionAlgorithmCoding = null; OnPropertyChangedByClr(nameof(VersionAlgorithmCoding), null); }}; OnPropertyChangedByClr(nameof(VersionAlgorithmString), value); } }

        private Coding? _versionAlgorithmCoding;
        [JsonPropertyName("versionAlgorithmCoding")]
        public Coding? VersionAlgorithmCoding { get => _versionAlgorithmCoding; set { _versionAlgorithmCoding = value; if (value != null) {{ _versionAlgorithmString = null; OnPropertyChangedByClr(nameof(VersionAlgorithmString), null); }}; OnPropertyChangedByClr(nameof(VersionAlgorithmCoding), value); } }

    }
}
