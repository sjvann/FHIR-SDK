// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// A slot of time on a schedule that may be available for booking appointments
    /// </summary>
    public partial class Slot : ResourceBase
    {
        public override string ResourceType => "Slot";

        public Slot() { }
        public Slot(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public Slot(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private List<CodeableConcept>? _appointmentType;
        [JsonPropertyName("appointmentType")]
        public List<CodeableConcept>? AppointmentType { get => _appointmentType; set { _appointmentType = value; OnPropertyChangedByClr(nameof(AppointmentType), value); } }

        private FhirString? _comment;
        [JsonPropertyName("comment")]
        public FhirString? Comment { get => _comment; set { _comment = value; OnPropertyChangedByClr(nameof(Comment), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private FhirInstant? _end;
        [JsonPropertyName("end")]
        public FhirInstant End { get => _end ?? throw new InvalidOperationException("End is required"); set { _end = value; OnPropertyChangedByClr(nameof(End), value); } }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private FhirBoolean? _overbooked;
        [JsonPropertyName("overbooked")]
        public FhirBoolean? Overbooked { get => _overbooked; set { _overbooked = value; OnPropertyChangedByClr(nameof(Overbooked), value); } }

        private ReferenceType? _schedule;
        [JsonPropertyName("schedule")]
        public ReferenceType Schedule { get => _schedule ?? throw new InvalidOperationException("Schedule is required"); set { _schedule = value; OnPropertyChangedByClr(nameof(Schedule), value); } }

        private List<CodeableConcept>? _serviceCategory;
        [JsonPropertyName("serviceCategory")]
        public List<CodeableConcept>? ServiceCategory { get => _serviceCategory; set { _serviceCategory = value; OnPropertyChangedByClr(nameof(ServiceCategory), value); } }

        private List<CodeableReference>? _serviceType;
        [JsonPropertyName("serviceType")]
        public List<CodeableReference>? ServiceType { get => _serviceType; set { _serviceType = value; OnPropertyChangedByClr(nameof(ServiceType), value); } }

        private List<CodeableConcept>? _specialty;
        [JsonPropertyName("specialty")]
        public List<CodeableConcept>? Specialty { get => _specialty; set { _specialty = value; OnPropertyChangedByClr(nameof(Specialty), value); } }

        private FhirInstant? _start;
        [JsonPropertyName("start")]
        public FhirInstant Start { get => _start ?? throw new InvalidOperationException("Start is required"); set { _start = value; OnPropertyChangedByClr(nameof(Start), value); } }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode Status { get => _status ?? throw new InvalidOperationException("Status is required"); set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

    }
}
