// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class InventoryReportFluentExtensions
    {
        public static InventoryReport AddContained(this InventoryReport r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static InventoryReport WithCountType(this InventoryReport r, FhirCode value) { r.CountType = value; return r; }
        public static InventoryReport AddIdentifier(this InventoryReport r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static InventoryReport AddInventoryListing(this InventoryReport r, BackboneElement item) { r.InventoryListing ??= new List<BackboneElement>(); r.InventoryListing!.Add(item); return r; }
        public static InventoryReport AddNote(this InventoryReport r, Annotation item) { r.Note ??= new List<Annotation>(); r.Note!.Add(item); return r; }
        public static InventoryReport WithOperationType(this InventoryReport r, CodeableConcept value) { r.OperationType = value; return r; }
        public static InventoryReport WithOperationTypeReason(this InventoryReport r, CodeableConcept value) { r.OperationTypeReason = value; return r; }
        public static InventoryReport WithReportedDateTime(this InventoryReport r, FhirDateTime value) { r.ReportedDateTime = value; return r; }
        public static InventoryReport WithReporter(this InventoryReport r, ReferenceType value) { r.Reporter = value; return r; }
        public static InventoryReport WithReportingPeriod(this InventoryReport r, Period value) { r.ReportingPeriod = value; return r; }
        public static InventoryReport WithStatus(this InventoryReport r, FhirCode value) { r.Status = value; return r; }
        public static InventoryReport WithText(this InventoryReport r, Narrative value) { r.Text = value; return r; }
    }
}
