// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class ClinicalImpressionFluentExtensions
    {
        public static ClinicalImpression WithChangePattern(this ClinicalImpression r, CodeableConcept value) { r.ChangePattern = value; return r; }
        public static ClinicalImpression AddContained(this ClinicalImpression r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static ClinicalImpression WithDate(this ClinicalImpression r, FhirDateTime value) { r.Date = value; return r; }
        public static ClinicalImpression WithDescription(this ClinicalImpression r, FhirString value) { r.Description = value; return r; }
        public static ClinicalImpression WithEffectiveDateTime(this ClinicalImpression r, FhirDateTime value) { r.EffectiveDateTime = value; return r; }
        public static ClinicalImpression WithEffectivePeriod(this ClinicalImpression r, Period value) { r.EffectivePeriod = value; return r; }
        public static ClinicalImpression WithEncounter(this ClinicalImpression r, ReferenceType value) { r.Encounter = value; return r; }
        public static ClinicalImpression AddFinding(this ClinicalImpression r, BackboneElement item) { r.Finding ??= new List<BackboneElement>(); r.Finding!.Add(item); return r; }
        public static ClinicalImpression AddIdentifier(this ClinicalImpression r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static ClinicalImpression AddNote(this ClinicalImpression r, Annotation item) { r.Note ??= new List<Annotation>(); r.Note!.Add(item); return r; }
        public static ClinicalImpression WithPerformer(this ClinicalImpression r, ReferenceType value) { r.Performer = value; return r; }
        public static ClinicalImpression WithPrevious(this ClinicalImpression r, ReferenceType value) { r.Previous = value; return r; }
        public static ClinicalImpression AddProblem(this ClinicalImpression r, ReferenceType item) { r.Problem ??= new List<ReferenceType>(); r.Problem!.Add(item); return r; }
        public static ClinicalImpression AddPrognosisCodeableConcept(this ClinicalImpression r, CodeableConcept item) { r.PrognosisCodeableConcept ??= new List<CodeableConcept>(); r.PrognosisCodeableConcept!.Add(item); return r; }
        public static ClinicalImpression AddPrognosisReference(this ClinicalImpression r, ReferenceType item) { r.PrognosisReference ??= new List<ReferenceType>(); r.PrognosisReference!.Add(item); return r; }
        public static ClinicalImpression AddProtocol(this ClinicalImpression r, FhirUri item) { r.Protocol ??= new List<FhirUri>(); r.Protocol!.Add(item); return r; }
        public static ClinicalImpression WithStatus(this ClinicalImpression r, FhirCode value) { r.Status = value; return r; }
        public static ClinicalImpression WithStatusReason(this ClinicalImpression r, CodeableConcept value) { r.StatusReason = value; return r; }
        public static ClinicalImpression WithSubject(this ClinicalImpression r, ReferenceType value) { r.Subject = value; return r; }
        public static ClinicalImpression WithSummary(this ClinicalImpression r, FhirString value) { r.Summary = value; return r; }
        public static ClinicalImpression AddSupportingInfo(this ClinicalImpression r, ReferenceType item) { r.SupportingInfo ??= new List<ReferenceType>(); r.SupportingInfo!.Add(item); return r; }
        public static ClinicalImpression WithText(this ClinicalImpression r, Narrative value) { r.Text = value; return r; }
    }
}
