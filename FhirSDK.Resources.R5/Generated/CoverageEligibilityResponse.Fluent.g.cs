// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class CoverageEligibilityResponseFluentExtensions
    {
        public static CoverageEligibilityResponse AddContained(this CoverageEligibilityResponse r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static CoverageEligibilityResponse WithCreated(this CoverageEligibilityResponse r, FhirDateTime value) { r.Created = value; return r; }
        public static CoverageEligibilityResponse WithDisposition(this CoverageEligibilityResponse r, FhirString value) { r.Disposition = value; return r; }
        public static CoverageEligibilityResponse AddError(this CoverageEligibilityResponse r, BackboneElement item) { r.Error ??= new List<BackboneElement>(); r.Error!.Add(item); return r; }
        public static CoverageEligibilityResponse AddEvent(this CoverageEligibilityResponse r, BackboneElement item) { r.Event ??= new List<BackboneElement>(); r.Event!.Add(item); return r; }
        public static CoverageEligibilityResponse WithForm(this CoverageEligibilityResponse r, CodeableConcept value) { r.Form = value; return r; }
        public static CoverageEligibilityResponse AddIdentifier(this CoverageEligibilityResponse r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static CoverageEligibilityResponse AddInsurance(this CoverageEligibilityResponse r, BackboneElement item) { r.Insurance ??= new List<BackboneElement>(); r.Insurance!.Add(item); return r; }
        public static CoverageEligibilityResponse WithInsurer(this CoverageEligibilityResponse r, ReferenceType value) { r.Insurer = value; return r; }
        public static CoverageEligibilityResponse WithOutcome(this CoverageEligibilityResponse r, FhirCode value) { r.Outcome = value; return r; }
        public static CoverageEligibilityResponse WithPatient(this CoverageEligibilityResponse r, ReferenceType value) { r.Patient = value; return r; }
        public static CoverageEligibilityResponse WithPreAuthRef(this CoverageEligibilityResponse r, FhirString value) { r.PreAuthRef = value; return r; }
        public static CoverageEligibilityResponse AddPurpose(this CoverageEligibilityResponse r, FhirCode item) { r.Purpose ??= new List<FhirCode>(); r.Purpose!.Add(item); return r; }
        public static CoverageEligibilityResponse WithRequest(this CoverageEligibilityResponse r, ReferenceType value) { r.Request = value; return r; }
        public static CoverageEligibilityResponse WithRequestor(this CoverageEligibilityResponse r, ReferenceType value) { r.Requestor = value; return r; }
        public static CoverageEligibilityResponse WithServiceddate(this CoverageEligibilityResponse r, FhirDate value) { r.Serviceddate = value; return r; }
        public static CoverageEligibilityResponse WithServicedPeriod(this CoverageEligibilityResponse r, Period value) { r.ServicedPeriod = value; return r; }
        public static CoverageEligibilityResponse WithStatus(this CoverageEligibilityResponse r, FhirCode value) { r.Status = value; return r; }
        public static CoverageEligibilityResponse WithText(this CoverageEligibilityResponse r, Narrative value) { r.Text = value; return r; }
    }
}
