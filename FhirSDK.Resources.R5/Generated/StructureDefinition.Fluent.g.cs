// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class StructureDefinitionFluentExtensions
    {
        public static StructureDefinition WithAbstract(this StructureDefinition r, FhirBoolean value) { r.Abstract = value; return r; }
        public static StructureDefinition WithBaseDefinition(this StructureDefinition r, FhirCanonical value) { r.BaseDefinition = value; return r; }
        public static StructureDefinition AddContact(this StructureDefinition r, ContactDetail item) { r.Contact ??= new List<ContactDetail>(); r.Contact!.Add(item); return r; }
        public static StructureDefinition AddContained(this StructureDefinition r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static StructureDefinition AddContext(this StructureDefinition r, BackboneElement item) { r.Context ??= new List<BackboneElement>(); r.Context!.Add(item); return r; }
        public static StructureDefinition AddContextInvariant(this StructureDefinition r, FhirString item) { r.ContextInvariant ??= new List<FhirString>(); r.ContextInvariant!.Add(item); return r; }
        public static StructureDefinition WithCopyright(this StructureDefinition r, FhirMarkdown value) { r.Copyright = value; return r; }
        public static StructureDefinition WithCopyrightLabel(this StructureDefinition r, FhirString value) { r.CopyrightLabel = value; return r; }
        public static StructureDefinition WithDate(this StructureDefinition r, FhirDateTime value) { r.Date = value; return r; }
        public static StructureDefinition WithDerivation(this StructureDefinition r, FhirCode value) { r.Derivation = value; return r; }
        public static StructureDefinition WithDescription(this StructureDefinition r, FhirMarkdown value) { r.Description = value; return r; }
        public static StructureDefinition WithDifferential(this StructureDefinition r, BackboneElement value) { r.Differential = value; return r; }
        public static StructureDefinition WithExperimental(this StructureDefinition r, FhirBoolean value) { r.Experimental = value; return r; }
        public static StructureDefinition WithFhirVersion(this StructureDefinition r, FhirCode value) { r.FhirVersion = value; return r; }
        public static StructureDefinition AddIdentifier(this StructureDefinition r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static StructureDefinition AddJurisdiction(this StructureDefinition r, CodeableConcept item) { r.Jurisdiction ??= new List<CodeableConcept>(); r.Jurisdiction!.Add(item); return r; }
        public static StructureDefinition AddKeyword(this StructureDefinition r, Coding item) { r.Keyword ??= new List<Coding>(); r.Keyword!.Add(item); return r; }
        public static StructureDefinition WithKind(this StructureDefinition r, FhirCode value) { r.Kind = value; return r; }
        public static StructureDefinition AddMapping(this StructureDefinition r, BackboneElement item) { r.Mapping ??= new List<BackboneElement>(); r.Mapping!.Add(item); return r; }
        public static StructureDefinition WithName(this StructureDefinition r, FhirString value) { r.Name = value; return r; }
        public static StructureDefinition WithPublisher(this StructureDefinition r, FhirString value) { r.Publisher = value; return r; }
        public static StructureDefinition WithPurpose(this StructureDefinition r, FhirMarkdown value) { r.Purpose = value; return r; }
        public static StructureDefinition WithSnapshot(this StructureDefinition r, BackboneElement value) { r.Snapshot = value; return r; }
        public static StructureDefinition WithStatus(this StructureDefinition r, FhirCode value) { r.Status = value; return r; }
        public static StructureDefinition WithText(this StructureDefinition r, Narrative value) { r.Text = value; return r; }
        public static StructureDefinition WithTitle(this StructureDefinition r, FhirString value) { r.Title = value; return r; }
        public static StructureDefinition WithType(this StructureDefinition r, FhirUri value) { r.Type = value; return r; }
        public static StructureDefinition WithUrl(this StructureDefinition r, FhirUri value) { r.Url = value; return r; }
        public static StructureDefinition AddUseContext(this StructureDefinition r, UsageContext item) { r.UseContext ??= new List<UsageContext>(); r.UseContext!.Add(item); return r; }
        public static StructureDefinition WithVersion(this StructureDefinition r, FhirString value) { r.Version = value; return r; }
        public static StructureDefinition WithVersionAlgorithmString(this StructureDefinition r, FhirString value) { r.VersionAlgorithmString = value; return r; }
        public static StructureDefinition WithVersionAlgorithmCoding(this StructureDefinition r, Coding value) { r.VersionAlgorithmCoding = value; return r; }
    }
}
