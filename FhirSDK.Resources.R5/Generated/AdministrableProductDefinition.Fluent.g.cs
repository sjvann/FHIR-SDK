// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class AdministrableProductDefinitionFluentExtensions
    {
        public static AdministrableProductDefinition WithAdministrableDoseForm(this AdministrableProductDefinition r, CodeableConcept value) { r.AdministrableDoseForm = value; return r; }
        public static AdministrableProductDefinition AddContained(this AdministrableProductDefinition r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static AdministrableProductDefinition WithDescription(this AdministrableProductDefinition r, FhirMarkdown value) { r.Description = value; return r; }
        public static AdministrableProductDefinition WithDevice(this AdministrableProductDefinition r, ReferenceType value) { r.Device = value; return r; }
        public static AdministrableProductDefinition AddFormOf(this AdministrableProductDefinition r, ReferenceType item) { r.FormOf ??= new List<ReferenceType>(); r.FormOf!.Add(item); return r; }
        public static AdministrableProductDefinition AddIdentifier(this AdministrableProductDefinition r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static AdministrableProductDefinition AddIngredient(this AdministrableProductDefinition r, CodeableConcept item) { r.Ingredient ??= new List<CodeableConcept>(); r.Ingredient!.Add(item); return r; }
        public static AdministrableProductDefinition AddProducedFrom(this AdministrableProductDefinition r, ReferenceType item) { r.ProducedFrom ??= new List<ReferenceType>(); r.ProducedFrom!.Add(item); return r; }
        public static AdministrableProductDefinition AddProperty(this AdministrableProductDefinition r, BackboneElement item) { r.Property ??= new List<BackboneElement>(); r.Property!.Add(item); return r; }
        public static AdministrableProductDefinition AddRouteOfAdministration(this AdministrableProductDefinition r, BackboneElement item) { r.RouteOfAdministration ??= new List<BackboneElement>(); r.RouteOfAdministration!.Add(item); return r; }
        public static AdministrableProductDefinition WithStatus(this AdministrableProductDefinition r, FhirCode value) { r.Status = value; return r; }
        public static AdministrableProductDefinition WithText(this AdministrableProductDefinition r, Narrative value) { r.Text = value; return r; }
        public static AdministrableProductDefinition WithUnitOfPresentation(this AdministrableProductDefinition r, CodeableConcept value) { r.UnitOfPresentation = value; return r; }
    }
}
