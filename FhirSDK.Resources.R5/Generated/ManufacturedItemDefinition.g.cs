// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// The definition and characteristics of a medicinal manufactured item, such as a tablet or capsule, as contained in a packaged medicinal product
    /// </summary>
    public partial class ManufacturedItemDefinition : ResourceBase
    {
        public override string ResourceType => "ManufacturedItemDefinition";

        public ManufacturedItemDefinition() { }
        public ManufacturedItemDefinition(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public ManufacturedItemDefinition(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private List<ManufacturedItemDefinition_Component>? _component;
        [JsonPropertyName("component")]
        public List<ManufacturedItemDefinition_Component>? Component { get => _component; set { _component = value; OnPropertyChangedByClr(nameof(Component), value); } }

        /// <summary>
        /// Physical parts of the manufactured item, that it is intrisically made from. This is distinct from the ingredients that are part of its chemical makeup
        /// </summary>
        public partial class ManufacturedItemDefinition_Component : BackboneElement<ManufacturedItemDefinition_Component>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ManufacturedItemDefinition_Component" : "manufacturedItemDefinition_Component";
            private List<Quantity>? _amount;
        [JsonPropertyName("amount")]
        public List<Quantity>? Amount { get => _amount; set { _amount = value; } }

            private List<FhirString>? _component;
        [JsonPropertyName("component")]
        public List<FhirString>? Component { get => _component; set { _component = value; } }

            private List<ManufacturedItemDefinition_Component_Constituent>? _constituent;
        [JsonPropertyName("constituent")]
        public List<ManufacturedItemDefinition_Component_Constituent>? Constituent { get => _constituent; set { _constituent = value; } }

            /// <summary>
            /// A reference to a constituent of the manufactured item as a whole, linked here so that its component location within the item can be indicated. This not where the item's ingredient are primarily stated (for which see Ingredient.for or ManufacturedItemDefinition.ingredient)
            /// </summary>
            public partial class ManufacturedItemDefinition_Component_Constituent : BackboneElement<ManufacturedItemDefinition_Component_Constituent>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ManufacturedItemDefinition_Component_Constituent" : "manufacturedItemDefinition_Component_Constituent";
                private List<Quantity>? _amount;
        [JsonPropertyName("amount")]
        public List<Quantity>? Amount { get => _amount; set { _amount = value; } }

                private List<CodeableConcept>? _function;
        [JsonPropertyName("function")]
        public List<CodeableConcept>? Function { get => _function; set { _function = value; } }

                private List<CodeableReference>? _hasIngredient;
        [JsonPropertyName("hasIngredient")]
        public List<CodeableReference>? HasIngredient { get => _hasIngredient; set { _hasIngredient = value; } }

                private List<CodeableConcept>? _location;
        [JsonPropertyName("location")]
        public List<CodeableConcept>? Location { get => _location; set { _location = value; } }

            }

            private List<CodeableConcept>? _function;
        [JsonPropertyName("function")]
        public List<CodeableConcept>? Function { get => _function; set { _function = value; } }

            private List<FhirString>? _property;
        [JsonPropertyName("property")]
        public List<FhirString>? Property { get => _property; set { _property = value; } }

            private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept Type { get => _type ?? throw new InvalidOperationException("Type is required"); set { _type = value; } }

        }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private List<CodeableConcept>? _ingredient;
        [JsonPropertyName("ingredient")]
        public List<CodeableConcept>? Ingredient { get => _ingredient; set { _ingredient = value; OnPropertyChangedByClr(nameof(Ingredient), value); } }

        private CodeableConcept? _manufacturedDoseForm;
        [JsonPropertyName("manufacturedDoseForm")]
        public CodeableConcept ManufacturedDoseForm { get => _manufacturedDoseForm ?? throw new InvalidOperationException("ManufacturedDoseForm is required"); set { _manufacturedDoseForm = value; OnPropertyChangedByClr(nameof(ManufacturedDoseForm), value); } }

        private List<ReferenceType>? _manufacturer;
        [JsonPropertyName("manufacturer")]
        public List<ReferenceType>? Manufacturer { get => _manufacturer; set { _manufacturer = value; OnPropertyChangedByClr(nameof(Manufacturer), value); } }

        private List<MarketingStatus>? _marketingStatus;
        [JsonPropertyName("marketingStatus")]
        public List<MarketingStatus>? MarketingStatus { get => _marketingStatus; set { _marketingStatus = value; OnPropertyChangedByClr(nameof(MarketingStatus), value); } }

        private FhirString? _name;
        [JsonPropertyName("name")]
        public FhirString? Name { get => _name; set { _name = value; OnPropertyChangedByClr(nameof(Name), value); } }

        private List<ManufacturedItemDefinition_Property>? _property;
        [JsonPropertyName("property")]
        public List<ManufacturedItemDefinition_Property>? Property { get => _property; set { _property = value; OnPropertyChangedByClr(nameof(Property), value); } }

        /// <summary>
        /// General characteristics of this item
        /// </summary>
        public partial class ManufacturedItemDefinition_Property : BackboneElement<ManufacturedItemDefinition_Property>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ManufacturedItemDefinition_Property" : "manufacturedItemDefinition_Property";
            private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept Type { get => _type ?? throw new InvalidOperationException("Type is required"); set { _type = value; } }

            private CodeableConcept? _valueCodeableConcept;
        [JsonPropertyName("valueCodeableConcept")]
        public CodeableConcept? ValueCodeableConcept { get => _valueCodeableConcept; set { _valueCodeableConcept = value; if (value != null) {{ _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valuedate = null; OnPropertyChanged("valuedate", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valuemarkdown = null; OnPropertyChanged("valuemarkdown", null); _valueAttachment = null; OnPropertyChanged("valueAttachment", null); _valueReference = null; OnPropertyChanged("valueReference", null); }}; OnPropertyChanged("valueCodeableConcept", value); } }

            private Quantity? _valueQuantity;
        [JsonPropertyName("valueQuantity")]
        public Quantity? ValueQuantity { get => _valueQuantity; set { _valueQuantity = value; if (value != null) {{ _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valuedate = null; OnPropertyChanged("valuedate", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valuemarkdown = null; OnPropertyChanged("valuemarkdown", null); _valueAttachment = null; OnPropertyChanged("valueAttachment", null); _valueReference = null; OnPropertyChanged("valueReference", null); }}; OnPropertyChanged("valueQuantity", value); } }

            private FhirDate? _valuedate;
        [JsonPropertyName("valuedate")]
        public FhirDate? Valuedate { get => _valuedate; set { _valuedate = value; if (value != null) {{ _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valuemarkdown = null; OnPropertyChanged("valuemarkdown", null); _valueAttachment = null; OnPropertyChanged("valueAttachment", null); _valueReference = null; OnPropertyChanged("valueReference", null); }}; OnPropertyChanged("valuedate", value); } }

            private FhirBoolean? _valueBoolean;
        [JsonPropertyName("valueBoolean")]
        public FhirBoolean? ValueBoolean { get => _valueBoolean; set { _valueBoolean = value; if (value != null) {{ _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valuedate = null; OnPropertyChanged("valuedate", null); _valuemarkdown = null; OnPropertyChanged("valuemarkdown", null); _valueAttachment = null; OnPropertyChanged("valueAttachment", null); _valueReference = null; OnPropertyChanged("valueReference", null); }}; OnPropertyChanged("valueBoolean", value); } }

            private FhirMarkdown? _valuemarkdown;
        [JsonPropertyName("valuemarkdown")]
        public FhirMarkdown? Valuemarkdown { get => _valuemarkdown; set { _valuemarkdown = value; if (value != null) {{ _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valuedate = null; OnPropertyChanged("valuedate", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueAttachment = null; OnPropertyChanged("valueAttachment", null); _valueReference = null; OnPropertyChanged("valueReference", null); }}; OnPropertyChanged("valuemarkdown", value); } }

            private Attachment? _valueAttachment;
        [JsonPropertyName("valueAttachment")]
        public Attachment? ValueAttachment { get => _valueAttachment; set { _valueAttachment = value; if (value != null) {{ _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valuedate = null; OnPropertyChanged("valuedate", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valuemarkdown = null; OnPropertyChanged("valuemarkdown", null); _valueReference = null; OnPropertyChanged("valueReference", null); }}; OnPropertyChanged("valueAttachment", value); } }

            private ReferenceType? _valueReference;
        [JsonPropertyName("valueReference")]
        public ReferenceType? ValueReference { get => _valueReference; set { _valueReference = value; if (value != null) {{ _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valuedate = null; OnPropertyChanged("valuedate", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valuemarkdown = null; OnPropertyChanged("valuemarkdown", null); _valueAttachment = null; OnPropertyChanged("valueAttachment", null); }}; OnPropertyChanged("valueReference", value); } }

        }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode Status { get => _status ?? throw new InvalidOperationException("Status is required"); set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

        private CodeableConcept? _unitOfPresentation;
        [JsonPropertyName("unitOfPresentation")]
        public CodeableConcept? UnitOfPresentation { get => _unitOfPresentation; set { _unitOfPresentation = value; OnPropertyChangedByClr(nameof(UnitOfPresentation), value); } }

    }
}
