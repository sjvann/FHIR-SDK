// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class OperationDefinitionFluentExtensions
    {
        public static OperationDefinition WithAffectsState(this OperationDefinition r, FhirBoolean value) { r.AffectsState = value; return r; }
        public static OperationDefinition WithBase(this OperationDefinition r, FhirCanonical value) { r.Base = value; return r; }
        public static OperationDefinition WithCode(this OperationDefinition r, FhirCode value) { r.Code = value; return r; }
        public static OperationDefinition WithComment(this OperationDefinition r, FhirMarkdown value) { r.Comment = value; return r; }
        public static OperationDefinition AddContact(this OperationDefinition r, ContactDetail item) { r.Contact ??= new List<ContactDetail>(); r.Contact!.Add(item); return r; }
        public static OperationDefinition AddContained(this OperationDefinition r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static OperationDefinition WithCopyright(this OperationDefinition r, FhirMarkdown value) { r.Copyright = value; return r; }
        public static OperationDefinition WithCopyrightLabel(this OperationDefinition r, FhirString value) { r.CopyrightLabel = value; return r; }
        public static OperationDefinition WithDate(this OperationDefinition r, FhirDateTime value) { r.Date = value; return r; }
        public static OperationDefinition WithDescription(this OperationDefinition r, FhirMarkdown value) { r.Description = value; return r; }
        public static OperationDefinition WithExperimental(this OperationDefinition r, FhirBoolean value) { r.Experimental = value; return r; }
        public static OperationDefinition AddIdentifier(this OperationDefinition r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static OperationDefinition WithInputProfile(this OperationDefinition r, FhirCanonical value) { r.InputProfile = value; return r; }
        public static OperationDefinition WithInstance(this OperationDefinition r, FhirBoolean value) { r.Instance = value; return r; }
        public static OperationDefinition AddJurisdiction(this OperationDefinition r, CodeableConcept item) { r.Jurisdiction ??= new List<CodeableConcept>(); r.Jurisdiction!.Add(item); return r; }
        public static OperationDefinition WithKind(this OperationDefinition r, FhirCode value) { r.Kind = value; return r; }
        public static OperationDefinition WithName(this OperationDefinition r, FhirString value) { r.Name = value; return r; }
        public static OperationDefinition WithOutputProfile(this OperationDefinition r, FhirCanonical value) { r.OutputProfile = value; return r; }
        public static OperationDefinition AddOverload(this OperationDefinition r, BackboneElement item) { r.Overload ??= new List<BackboneElement>(); r.Overload!.Add(item); return r; }
        public static OperationDefinition AddParameter(this OperationDefinition r, BackboneElement item) { r.Parameter ??= new List<BackboneElement>(); r.Parameter!.Add(item); return r; }
        public static OperationDefinition WithPublisher(this OperationDefinition r, FhirString value) { r.Publisher = value; return r; }
        public static OperationDefinition WithPurpose(this OperationDefinition r, FhirMarkdown value) { r.Purpose = value; return r; }
        public static OperationDefinition AddResource(this OperationDefinition r, FhirCode item) { r.Resource ??= new List<FhirCode>(); r.Resource!.Add(item); return r; }
        public static OperationDefinition WithStatus(this OperationDefinition r, FhirCode value) { r.Status = value; return r; }
        public static OperationDefinition WithSystem(this OperationDefinition r, FhirBoolean value) { r.System = value; return r; }
        public static OperationDefinition WithText(this OperationDefinition r, Narrative value) { r.Text = value; return r; }
        public static OperationDefinition WithTitle(this OperationDefinition r, FhirString value) { r.Title = value; return r; }
        public static OperationDefinition WithType(this OperationDefinition r, FhirBoolean value) { r.Type = value; return r; }
        public static OperationDefinition WithUrl(this OperationDefinition r, FhirUri value) { r.Url = value; return r; }
        public static OperationDefinition AddUseContext(this OperationDefinition r, UsageContext item) { r.UseContext ??= new List<UsageContext>(); r.UseContext!.Add(item); return r; }
        public static OperationDefinition WithVersion(this OperationDefinition r, FhirString value) { r.Version = value; return r; }
        public static OperationDefinition WithVersionAlgorithmString(this OperationDefinition r, FhirString value) { r.VersionAlgorithmString = value; return r; }
        public static OperationDefinition WithVersionAlgorithmCoding(this OperationDefinition r, Coding value) { r.VersionAlgorithmCoding = value; return r; }
    }
}
