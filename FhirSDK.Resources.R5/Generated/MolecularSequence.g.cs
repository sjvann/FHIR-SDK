// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// Representation of a molecular sequence
    /// </summary>
    public partial class MolecularSequence : ResourceBase
    {
        public override string ResourceType => "MolecularSequence";

        public MolecularSequence() { }
        public MolecularSequence(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public MolecularSequence(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private ReferenceType? _device;
        [JsonPropertyName("device")]
        public ReferenceType? Device { get => _device; set { _device = value; OnPropertyChangedByClr(nameof(Device), value); } }

        private List<ReferenceType>? _focus;
        [JsonPropertyName("focus")]
        public List<ReferenceType>? Focus { get => _focus; set { _focus = value; OnPropertyChangedByClr(nameof(Focus), value); } }

        private List<Attachment>? _formatted;
        [JsonPropertyName("formatted")]
        public List<Attachment>? Formatted { get => _formatted; set { _formatted = value; OnPropertyChangedByClr(nameof(Formatted), value); } }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private FhirString? _literal;
        [JsonPropertyName("literal")]
        public FhirString? Literal { get => _literal; set { _literal = value; OnPropertyChangedByClr(nameof(Literal), value); } }

        private ReferenceType? _performer;
        [JsonPropertyName("performer")]
        public ReferenceType? Performer { get => _performer; set { _performer = value; OnPropertyChangedByClr(nameof(Performer), value); } }

        private List<MolecularSequence_Relative>? _relative;
        [JsonPropertyName("relative")]
        public List<MolecularSequence_Relative>? Relative { get => _relative; set { _relative = value; OnPropertyChangedByClr(nameof(Relative), value); } }

        /// <summary>
        /// A sequence defined relative to another sequence
        /// </summary>
        public partial class MolecularSequence_Relative : BackboneElement<MolecularSequence_Relative>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "MolecularSequence_Relative" : "molecularSequence_Relative";
            private CodeableConcept? _coordinateSystem;
        [JsonPropertyName("coordinateSystem")]
        public CodeableConcept CoordinateSystem { get => _coordinateSystem ?? throw new InvalidOperationException("CoordinateSystem is required"); set { _coordinateSystem = value; } }

            private List<MolecularSequence_Relative_Edit>? _edit;
        [JsonPropertyName("edit")]
        public List<MolecularSequence_Relative_Edit>? Edit { get => _edit; set { _edit = value; } }

            /// <summary>
            /// Changes in sequence from the starting sequence
            /// </summary>
            public partial class MolecularSequence_Relative_Edit : BackboneElement<MolecularSequence_Relative_Edit>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "MolecularSequence_Relative_Edit" : "molecularSequence_Relative_Edit";
                private FhirInteger? _end;
        [JsonPropertyName("end")]
        public FhirInteger? End { get => _end; set { _end = value; } }

                private FhirString? _replacedSequence;
        [JsonPropertyName("replacedSequence")]
        public FhirString? ReplacedSequence { get => _replacedSequence; set { _replacedSequence = value; } }

                private FhirString? _replacementSequence;
        [JsonPropertyName("replacementSequence")]
        public FhirString? ReplacementSequence { get => _replacementSequence; set { _replacementSequence = value; } }

                private FhirInteger? _start;
        [JsonPropertyName("start")]
        public FhirInteger? Start { get => _start; set { _start = value; } }

            }

            private FhirInteger? _ordinalPosition;
        [JsonPropertyName("ordinalPosition")]
        public FhirInteger? OrdinalPosition { get => _ordinalPosition; set { _ordinalPosition = value; } }

            private DataTypeServices.DataTypes.ComplexTypes.Range? _sequenceRange;
        [JsonPropertyName("sequenceRange")]
        public DataTypeServices.DataTypes.ComplexTypes.Range? SequenceRange { get => _sequenceRange; set { _sequenceRange = value; } }

            private MolecularSequence_Relative_StartingSequence? _startingSequence;
        [JsonPropertyName("startingSequence")]
        public MolecularSequence_Relative_StartingSequence? StartingSequence { get => _startingSequence; set { _startingSequence = value; } }

            /// <summary>
            /// A sequence used as starting sequence
            /// </summary>
            public partial class MolecularSequence_Relative_StartingSequence : BackboneElement<MolecularSequence_Relative_StartingSequence>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "MolecularSequence_Relative_StartingSequence" : "molecularSequence_Relative_StartingSequence";
                private CodeableConcept? _chromosome;
        [JsonPropertyName("chromosome")]
        public CodeableConcept? Chromosome { get => _chromosome; set { _chromosome = value; } }

                private CodeableConcept? _genomeAssembly;
        [JsonPropertyName("genomeAssembly")]
        public CodeableConcept? GenomeAssembly { get => _genomeAssembly; set { _genomeAssembly = value; } }

                private FhirCode? _orientation;
        [JsonPropertyName("orientation")]
        public FhirCode? Orientation { get => _orientation; set { _orientation = value; } }

                private CodeableConcept? _sequenceCodeableConcept;
        [JsonPropertyName("sequenceCodeableConcept")]
        public CodeableConcept? SequenceCodeableConcept { get => _sequenceCodeableConcept; set { _sequenceCodeableConcept = value; if (value != null) {{ _sequenceString = null; OnPropertyChanged("sequenceString", null); _sequenceReference = null; OnPropertyChanged("sequenceReference", null); }}; OnPropertyChanged("sequenceCodeableConcept", value); } }

                private FhirString? _sequenceString;
        [JsonPropertyName("sequenceString")]
        public FhirString? SequenceString { get => _sequenceString; set { _sequenceString = value; if (value != null) {{ _sequenceCodeableConcept = null; OnPropertyChanged("sequenceCodeableConcept", null); _sequenceReference = null; OnPropertyChanged("sequenceReference", null); }}; OnPropertyChanged("sequenceString", value); } }

                private ReferenceType? _sequenceReference;
        [JsonPropertyName("sequenceReference")]
        public ReferenceType? SequenceReference { get => _sequenceReference; set { _sequenceReference = value; if (value != null) {{ _sequenceCodeableConcept = null; OnPropertyChanged("sequenceCodeableConcept", null); _sequenceString = null; OnPropertyChanged("sequenceString", null); }}; OnPropertyChanged("sequenceReference", value); } }

                private FhirCode? _strand;
        [JsonPropertyName("strand")]
        public FhirCode? Strand { get => _strand; set { _strand = value; } }

                private FhirInteger? _windowEnd;
        [JsonPropertyName("windowEnd")]
        public FhirInteger? WindowEnd { get => _windowEnd; set { _windowEnd = value; } }

                private FhirInteger? _windowStart;
        [JsonPropertyName("windowStart")]
        public FhirInteger? WindowStart { get => _windowStart; set { _windowStart = value; } }

            }

        }

        private ReferenceType? _specimen;
        [JsonPropertyName("specimen")]
        public ReferenceType? Specimen { get => _specimen; set { _specimen = value; OnPropertyChangedByClr(nameof(Specimen), value); } }

        private ReferenceType? _subject;
        [JsonPropertyName("subject")]
        public ReferenceType? Subject { get => _subject; set { _subject = value; OnPropertyChangedByClr(nameof(Subject), value); } }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

        private FhirCode? _type;
        [JsonPropertyName("type")]
        public FhirCode? Type { get => _type; set { _type = value; OnPropertyChangedByClr(nameof(Type), value); } }

    }
}
