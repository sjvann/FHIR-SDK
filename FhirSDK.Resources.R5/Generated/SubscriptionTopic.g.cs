// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// The definition of a specific topic for triggering events within the Subscriptions framework
    /// </summary>
    public partial class SubscriptionTopic : ResourceBase
    {
        public override string ResourceType => "SubscriptionTopic";

        public SubscriptionTopic() { }
        public SubscriptionTopic(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public SubscriptionTopic(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private FhirDate? _approvalDate;
        [JsonPropertyName("approvalDate")]
        public FhirDate? ApprovalDate { get => _approvalDate; set { _approvalDate = value; OnPropertyChangedByClr(nameof(ApprovalDate), value); } }

        private List<SubscriptionTopic_CanFilterBy>? _canFilterBy;
        [JsonPropertyName("canFilterBy")]
        public List<SubscriptionTopic_CanFilterBy>? CanFilterBy { get => _canFilterBy; set { _canFilterBy = value; OnPropertyChangedByClr(nameof(CanFilterBy), value); } }

        /// <summary>
        /// Properties by which a Subscription can filter notifications from the SubscriptionTopic
        /// </summary>
        public partial class SubscriptionTopic_CanFilterBy : BackboneElement<SubscriptionTopic_CanFilterBy>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "SubscriptionTopic_CanFilterBy" : "subscriptionTopic_CanFilterBy";
            private List<FhirCode>? _comparator;
        [JsonPropertyName("comparator")]
        public List<FhirCode>? Comparator { get => _comparator; set { _comparator = value; } }

            private FhirMarkdown? _description;
        [JsonPropertyName("description")]
        public FhirMarkdown? Description { get => _description; set { _description = value; } }

            private FhirUri? _filterDefinition;
        [JsonPropertyName("filterDefinition")]
        public FhirUri? FilterDefinition { get => _filterDefinition; set { _filterDefinition = value; } }

            private FhirString? _filterParameter;
        [JsonPropertyName("filterParameter")]
        public FhirString FilterParameter { get => _filterParameter ?? throw new InvalidOperationException("FilterParameter is required"); set { _filterParameter = value; } }

            private List<FhirCode>? _modifier;
        [JsonPropertyName("modifier")]
        public List<FhirCode>? Modifier { get => _modifier; set { _modifier = value; } }

            private FhirUri? _resource;
        [JsonPropertyName("resource")]
        public FhirUri? Resource { get => _resource; set { _resource = value; } }

        }

        private List<ContactDetail>? _contact;
        [JsonPropertyName("contact")]
        public List<ContactDetail>? Contact { get => _contact; set { _contact = value; OnPropertyChangedByClr(nameof(Contact), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private FhirMarkdown? _copyright;
        [JsonPropertyName("copyright")]
        public FhirMarkdown? Copyright { get => _copyright; set { _copyright = value; OnPropertyChangedByClr(nameof(Copyright), value); } }

        private FhirString? _copyrightLabel;
        [JsonPropertyName("copyrightLabel")]
        public FhirString? CopyrightLabel { get => _copyrightLabel; set { _copyrightLabel = value; OnPropertyChangedByClr(nameof(CopyrightLabel), value); } }

        private FhirDateTime? _date;
        [JsonPropertyName("date")]
        public FhirDateTime? Date { get => _date; set { _date = value; OnPropertyChangedByClr(nameof(Date), value); } }

        private List<FhirCanonical>? _derivedFrom;
        [JsonPropertyName("derivedFrom")]
        public List<FhirCanonical>? DerivedFrom { get => _derivedFrom; set { _derivedFrom = value; OnPropertyChangedByClr(nameof(DerivedFrom), value); } }

        private FhirMarkdown? _description;
        [JsonPropertyName("description")]
        public FhirMarkdown? Description { get => _description; set { _description = value; OnPropertyChangedByClr(nameof(Description), value); } }

        private Period? _effectivePeriod;
        [JsonPropertyName("effectivePeriod")]
        public Period? EffectivePeriod { get => _effectivePeriod; set { _effectivePeriod = value; OnPropertyChangedByClr(nameof(EffectivePeriod), value); } }

        private List<SubscriptionTopic_EventTrigger>? _eventTrigger;
        [JsonPropertyName("eventTrigger")]
        public List<SubscriptionTopic_EventTrigger>? EventTrigger { get => _eventTrigger; set { _eventTrigger = value; OnPropertyChangedByClr(nameof(EventTrigger), value); } }

        /// <summary>
        /// Event definitions the SubscriptionTopic
        /// </summary>
        public partial class SubscriptionTopic_EventTrigger : BackboneElement<SubscriptionTopic_EventTrigger>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "SubscriptionTopic_EventTrigger" : "subscriptionTopic_EventTrigger";
            private FhirMarkdown? _description;
        [JsonPropertyName("description")]
        public FhirMarkdown? Description { get => _description; set { _description = value; } }

            private CodeableConcept? _event;
        [JsonPropertyName("event")]
        public CodeableConcept Event { get => _event ?? throw new InvalidOperationException("Event is required"); set { _event = value; } }

            private FhirUri? _resource;
        [JsonPropertyName("resource")]
        public FhirUri Resource { get => _resource ?? throw new InvalidOperationException("Resource is required"); set { _resource = value; } }

        }

        private FhirBoolean? _experimental;
        [JsonPropertyName("experimental")]
        public FhirBoolean? Experimental { get => _experimental; set { _experimental = value; OnPropertyChangedByClr(nameof(Experimental), value); } }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private List<CodeableConcept>? _jurisdiction;
        [JsonPropertyName("jurisdiction")]
        public List<CodeableConcept>? Jurisdiction { get => _jurisdiction; set { _jurisdiction = value; OnPropertyChangedByClr(nameof(Jurisdiction), value); } }

        private FhirDate? _lastReviewDate;
        [JsonPropertyName("lastReviewDate")]
        public FhirDate? LastReviewDate { get => _lastReviewDate; set { _lastReviewDate = value; OnPropertyChangedByClr(nameof(LastReviewDate), value); } }

        private FhirString? _name;
        [JsonPropertyName("name")]
        public FhirString? Name { get => _name; set { _name = value; OnPropertyChangedByClr(nameof(Name), value); } }

        private List<SubscriptionTopic_NotificationShape>? _notificationShape;
        [JsonPropertyName("notificationShape")]
        public List<SubscriptionTopic_NotificationShape>? NotificationShape { get => _notificationShape; set { _notificationShape = value; OnPropertyChangedByClr(nameof(NotificationShape), value); } }

        /// <summary>
        /// Properties for describing the shape of notifications generated by this topic
        /// </summary>
        public partial class SubscriptionTopic_NotificationShape : BackboneElement<SubscriptionTopic_NotificationShape>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "SubscriptionTopic_NotificationShape" : "subscriptionTopic_NotificationShape";
            private List<FhirString>? _include;
        [JsonPropertyName("include")]
        public List<FhirString>? Include { get => _include; set { _include = value; } }

            private FhirUri? _resource;
        [JsonPropertyName("resource")]
        public FhirUri Resource { get => _resource ?? throw new InvalidOperationException("Resource is required"); set { _resource = value; } }

            private List<FhirString>? _revInclude;
        [JsonPropertyName("revInclude")]
        public List<FhirString>? RevInclude { get => _revInclude; set { _revInclude = value; } }

        }

        private FhirString? _publisher;
        [JsonPropertyName("publisher")]
        public FhirString? Publisher { get => _publisher; set { _publisher = value; OnPropertyChangedByClr(nameof(Publisher), value); } }

        private FhirMarkdown? _purpose;
        [JsonPropertyName("purpose")]
        public FhirMarkdown? Purpose { get => _purpose; set { _purpose = value; OnPropertyChangedByClr(nameof(Purpose), value); } }

        private List<SubscriptionTopic_ResourceTrigger>? _resourceTrigger;
        [JsonPropertyName("resourceTrigger")]
        public List<SubscriptionTopic_ResourceTrigger>? ResourceTrigger { get => _resourceTrigger; set { _resourceTrigger = value; OnPropertyChangedByClr(nameof(ResourceTrigger), value); } }

        /// <summary>
        /// Definition of a resource-based trigger for the subscription topic
        /// </summary>
        public partial class SubscriptionTopic_ResourceTrigger : BackboneElement<SubscriptionTopic_ResourceTrigger>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "SubscriptionTopic_ResourceTrigger" : "subscriptionTopic_ResourceTrigger";
            private FhirMarkdown? _description;
        [JsonPropertyName("description")]
        public FhirMarkdown? Description { get => _description; set { _description = value; } }

            private FhirString? _fhirPathCriteria;
        [JsonPropertyName("fhirPathCriteria")]
        public FhirString? FhirPathCriteria { get => _fhirPathCriteria; set { _fhirPathCriteria = value; } }

            private SubscriptionTopic_ResourceTrigger_QueryCriteria? _queryCriteria;
        [JsonPropertyName("queryCriteria")]
        public SubscriptionTopic_ResourceTrigger_QueryCriteria? QueryCriteria { get => _queryCriteria; set { _queryCriteria = value; } }

            /// <summary>
            /// Query based trigger rule
            /// </summary>
            public partial class SubscriptionTopic_ResourceTrigger_QueryCriteria : BackboneElement<SubscriptionTopic_ResourceTrigger_QueryCriteria>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "SubscriptionTopic_ResourceTrigger_QueryCriteria" : "subscriptionTopic_ResourceTrigger_QueryCriteria";
                private FhirString? _current;
        [JsonPropertyName("current")]
        public FhirString? Current { get => _current; set { _current = value; } }

                private FhirString? _previous;
        [JsonPropertyName("previous")]
        public FhirString? Previous { get => _previous; set { _previous = value; } }

                private FhirBoolean? _requireBoth;
        [JsonPropertyName("requireBoth")]
        public FhirBoolean? RequireBoth { get => _requireBoth; set { _requireBoth = value; } }

                private FhirCode? _resultForCreate;
        [JsonPropertyName("resultForCreate")]
        public FhirCode? ResultForCreate { get => _resultForCreate; set { _resultForCreate = value; } }

                private FhirCode? _resultForDelete;
        [JsonPropertyName("resultForDelete")]
        public FhirCode? ResultForDelete { get => _resultForDelete; set { _resultForDelete = value; } }

            }

            private FhirUri? _resource;
        [JsonPropertyName("resource")]
        public FhirUri Resource { get => _resource ?? throw new InvalidOperationException("Resource is required"); set { _resource = value; } }

            private List<FhirCode>? _supportedInteraction;
        [JsonPropertyName("supportedInteraction")]
        public List<FhirCode>? SupportedInteraction { get => _supportedInteraction; set { _supportedInteraction = value; } }

        }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode Status { get => _status ?? throw new InvalidOperationException("Status is required"); set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

        private FhirString? _title;
        [JsonPropertyName("title")]
        public FhirString? Title { get => _title; set { _title = value; OnPropertyChangedByClr(nameof(Title), value); } }

        private FhirUri? _url;
        [JsonPropertyName("url")]
        public FhirUri Url { get => _url ?? throw new InvalidOperationException("Url is required"); set { _url = value; OnPropertyChangedByClr(nameof(Url), value); } }

        private List<UsageContext>? _useContext;
        [JsonPropertyName("useContext")]
        public List<UsageContext>? UseContext { get => _useContext; set { _useContext = value; OnPropertyChangedByClr(nameof(UseContext), value); } }

        private FhirString? _version;
        [JsonPropertyName("version")]
        public FhirString? Version { get => _version; set { _version = value; OnPropertyChangedByClr(nameof(Version), value); } }

        private FhirString? _versionAlgorithmString;
        [JsonPropertyName("versionAlgorithmString")]
        public FhirString? VersionAlgorithmString { get => _versionAlgorithmString; set { _versionAlgorithmString = value; if (value != null) {{ _versionAlgorithmCoding = null; OnPropertyChangedByClr(nameof(VersionAlgorithmCoding), null); }}; OnPropertyChangedByClr(nameof(VersionAlgorithmString), value); } }

        private Coding? _versionAlgorithmCoding;
        [JsonPropertyName("versionAlgorithmCoding")]
        public Coding? VersionAlgorithmCoding { get => _versionAlgorithmCoding; set { _versionAlgorithmCoding = value; if (value != null) {{ _versionAlgorithmString = null; OnPropertyChangedByClr(nameof(VersionAlgorithmString), null); }}; OnPropertyChangedByClr(nameof(VersionAlgorithmCoding), value); } }

    }
}
