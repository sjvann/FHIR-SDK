// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class CommunicationFluentExtensions
    {
        public static Communication AddAbout(this Communication r, ReferenceType item) { r.About ??= new List<ReferenceType>(); r.About!.Add(item); return r; }
        public static Communication AddBasedOn(this Communication r, ReferenceType item) { r.BasedOn ??= new List<ReferenceType>(); r.BasedOn!.Add(item); return r; }
        public static Communication AddCategory(this Communication r, CodeableConcept item) { r.Category ??= new List<CodeableConcept>(); r.Category!.Add(item); return r; }
        public static Communication AddContained(this Communication r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static Communication WithEncounter(this Communication r, ReferenceType value) { r.Encounter = value; return r; }
        public static Communication AddIdentifier(this Communication r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static Communication AddInResponseTo(this Communication r, ReferenceType item) { r.InResponseTo ??= new List<ReferenceType>(); r.InResponseTo!.Add(item); return r; }
        public static Communication AddInstantiatesCanonical(this Communication r, FhirCanonical item) { r.InstantiatesCanonical ??= new List<FhirCanonical>(); r.InstantiatesCanonical!.Add(item); return r; }
        public static Communication AddInstantiatesUri(this Communication r, FhirUri item) { r.InstantiatesUri ??= new List<FhirUri>(); r.InstantiatesUri!.Add(item); return r; }
        public static Communication AddMedium(this Communication r, CodeableConcept item) { r.Medium ??= new List<CodeableConcept>(); r.Medium!.Add(item); return r; }
        public static Communication AddNote(this Communication r, Annotation item) { r.Note ??= new List<Annotation>(); r.Note!.Add(item); return r; }
        public static Communication AddPartOf(this Communication r, ReferenceType item) { r.PartOf ??= new List<ReferenceType>(); r.PartOf!.Add(item); return r; }
        public static Communication AddPayload(this Communication r, BackboneElement item) { r.Payload ??= new List<BackboneElement>(); r.Payload!.Add(item); return r; }
        public static Communication WithPriority(this Communication r, FhirCode value) { r.Priority = value; return r; }
        public static Communication AddReason(this Communication r, CodeableReference item) { r.Reason ??= new List<CodeableReference>(); r.Reason!.Add(item); return r; }
        public static Communication WithReceived(this Communication r, FhirDateTime value) { r.Received = value; return r; }
        public static Communication AddRecipient(this Communication r, ReferenceType item) { r.Recipient ??= new List<ReferenceType>(); r.Recipient!.Add(item); return r; }
        public static Communication WithSender(this Communication r, ReferenceType value) { r.Sender = value; return r; }
        public static Communication WithSent(this Communication r, FhirDateTime value) { r.Sent = value; return r; }
        public static Communication WithStatus(this Communication r, FhirCode value) { r.Status = value; return r; }
        public static Communication WithStatusReason(this Communication r, CodeableConcept value) { r.StatusReason = value; return r; }
        public static Communication WithSubject(this Communication r, ReferenceType value) { r.Subject = value; return r; }
        public static Communication WithText(this Communication r, Narrative value) { r.Text = value; return r; }
        public static Communication WithTopic(this Communication r, CodeableConcept value) { r.Topic = value; return r; }
    }
}
