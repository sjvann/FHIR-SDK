// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// A EvidenceReport
    /// </summary>
    public partial class EvidenceReport : ResourceBase
    {
        public override string ResourceType => "EvidenceReport";

        public EvidenceReport() { }
        public EvidenceReport(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public EvidenceReport(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private List<ContactDetail>? _author;
        [JsonPropertyName("author")]
        public List<ContactDetail>? Author { get => _author; set { _author = value; OnPropertyChangedByClr(nameof(Author), value); } }

        private ReferenceType? _citeAsReference;
        [JsonPropertyName("citeAsReference")]
        public ReferenceType? CiteAsReference { get => _citeAsReference; set { _citeAsReference = value; if (value != null) {{ _citeAsmarkdown = null; OnPropertyChangedByClr(nameof(CiteAsmarkdown), null); }}; OnPropertyChangedByClr(nameof(CiteAsReference), value); } }

        private FhirMarkdown? _citeAsmarkdown;
        [JsonPropertyName("citeAsmarkdown")]
        public FhirMarkdown? CiteAsmarkdown { get => _citeAsmarkdown; set { _citeAsmarkdown = value; if (value != null) {{ _citeAsReference = null; OnPropertyChangedByClr(nameof(CiteAsReference), null); }}; OnPropertyChangedByClr(nameof(CiteAsmarkdown), value); } }

        private List<ContactDetail>? _contact;
        [JsonPropertyName("contact")]
        public List<ContactDetail>? Contact { get => _contact; set { _contact = value; OnPropertyChangedByClr(nameof(Contact), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private List<ContactDetail>? _editor;
        [JsonPropertyName("editor")]
        public List<ContactDetail>? Editor { get => _editor; set { _editor = value; OnPropertyChangedByClr(nameof(Editor), value); } }

        private List<ContactDetail>? _endorser;
        [JsonPropertyName("endorser")]
        public List<ContactDetail>? Endorser { get => _endorser; set { _endorser = value; OnPropertyChangedByClr(nameof(Endorser), value); } }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private List<Annotation>? _note;
        [JsonPropertyName("note")]
        public List<Annotation>? Note { get => _note; set { _note = value; OnPropertyChangedByClr(nameof(Note), value); } }

        private FhirString? _publisher;
        [JsonPropertyName("publisher")]
        public FhirString? Publisher { get => _publisher; set { _publisher = value; OnPropertyChangedByClr(nameof(Publisher), value); } }

        private List<RelatedArtifact>? _relatedArtifact;
        [JsonPropertyName("relatedArtifact")]
        public List<RelatedArtifact>? RelatedArtifact { get => _relatedArtifact; set { _relatedArtifact = value; OnPropertyChangedByClr(nameof(RelatedArtifact), value); } }

        private List<Identifier>? _relatedIdentifier;
        [JsonPropertyName("relatedIdentifier")]
        public List<Identifier>? RelatedIdentifier { get => _relatedIdentifier; set { _relatedIdentifier = value; OnPropertyChangedByClr(nameof(RelatedIdentifier), value); } }

        private List<EvidenceReport_RelatesTo>? _relatesTo;
        [JsonPropertyName("relatesTo")]
        public List<EvidenceReport_RelatesTo>? RelatesTo { get => _relatesTo; set { _relatesTo = value; OnPropertyChangedByClr(nameof(RelatesTo), value); } }

        /// <summary>
        /// Relationships to other compositions/documents
        /// </summary>
        public partial class EvidenceReport_RelatesTo : BackboneElement<EvidenceReport_RelatesTo>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "EvidenceReport_RelatesTo" : "evidenceReport_RelatesTo";
            private FhirCode? _code;
        [JsonPropertyName("code")]
        public FhirCode Code { get => _code ?? throw new InvalidOperationException("Code is required"); set { _code = value; } }

            private EvidenceReport_RelatesTo_Target? _target;
        [JsonPropertyName("target")]
        public EvidenceReport_RelatesTo_Target Target { get => _target ?? throw new InvalidOperationException("Target is required"); set { _target = value; } }

            /// <summary>
            /// Target of the relationship
            /// </summary>
            public partial class EvidenceReport_RelatesTo_Target : BackboneElement<EvidenceReport_RelatesTo_Target>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "EvidenceReport_RelatesTo_Target" : "evidenceReport_RelatesTo_Target";
                private FhirMarkdown? _display;
        [JsonPropertyName("display")]
        public FhirMarkdown? Display { get => _display; set { _display = value; } }

                private Identifier? _identifier;
        [JsonPropertyName("identifier")]
        public Identifier? Identifier { get => _identifier; set { _identifier = value; } }

                private ReferenceType? _resource;
        [JsonPropertyName("resource")]
        public ReferenceType? Resource { get => _resource; set { _resource = value; } }

                private FhirUri? _url;
        [JsonPropertyName("url")]
        public FhirUri? Url { get => _url; set { _url = value; } }

            }

        }

        private List<ContactDetail>? _reviewer;
        [JsonPropertyName("reviewer")]
        public List<ContactDetail>? Reviewer { get => _reviewer; set { _reviewer = value; OnPropertyChangedByClr(nameof(Reviewer), value); } }

        private List<EvidenceReport_Section>? _section;
        [JsonPropertyName("section")]
        public List<EvidenceReport_Section>? Section { get => _section; set { _section = value; OnPropertyChangedByClr(nameof(Section), value); } }

        /// <summary>
        /// Composition is broken into sections
        /// </summary>
        public partial class EvidenceReport_Section : BackboneElement<EvidenceReport_Section>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "EvidenceReport_Section" : "evidenceReport_Section";
            private List<ReferenceType>? _author;
        [JsonPropertyName("author")]
        public List<ReferenceType>? Author { get => _author; set { _author = value; } }

            private CodeableConcept? _emptyReason;
        [JsonPropertyName("emptyReason")]
        public CodeableConcept? EmptyReason { get => _emptyReason; set { _emptyReason = value; } }

            private List<CodeableConcept>? _entryClassifier;
        [JsonPropertyName("entryClassifier")]
        public List<CodeableConcept>? EntryClassifier { get => _entryClassifier; set { _entryClassifier = value; } }

            private List<Quantity>? _entryQuantity;
        [JsonPropertyName("entryQuantity")]
        public List<Quantity>? EntryQuantity { get => _entryQuantity; set { _entryQuantity = value; } }

            private List<ReferenceType>? _entryReference;
        [JsonPropertyName("entryReference")]
        public List<ReferenceType>? EntryReference { get => _entryReference; set { _entryReference = value; } }

            private CodeableConcept? _focus;
        [JsonPropertyName("focus")]
        public CodeableConcept? Focus { get => _focus; set { _focus = value; } }

            private ReferenceType? _focusReference;
        [JsonPropertyName("focusReference")]
        public ReferenceType? FocusReference { get => _focusReference; set { _focusReference = value; } }

            private FhirCode? _mode;
        [JsonPropertyName("mode")]
        public FhirCode? Mode { get => _mode; set { _mode = value; } }

            private CodeableConcept? _orderedBy;
        [JsonPropertyName("orderedBy")]
        public CodeableConcept? OrderedBy { get => _orderedBy; set { _orderedBy = value; } }

            private List<FhirString>? _section;
        [JsonPropertyName("section")]
        public List<FhirString>? Section { get => _section; set { _section = value; } }

            private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; } }

            private FhirString? _title;
        [JsonPropertyName("title")]
        public FhirString? Title { get => _title; set { _title = value; } }

        }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode Status { get => _status ?? throw new InvalidOperationException("Status is required"); set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private EvidenceReport_Subject? _subject;
        [JsonPropertyName("subject")]
        public EvidenceReport_Subject Subject { get => _subject ?? throw new InvalidOperationException("Subject is required"); set { _subject = value; OnPropertyChangedByClr(nameof(Subject), value); } }

        /// <summary>
        /// Focus of the report
        /// </summary>
        public partial class EvidenceReport_Subject : BackboneElement<EvidenceReport_Subject>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "EvidenceReport_Subject" : "evidenceReport_Subject";
            private List<EvidenceReport_Subject_Characteristic>? _characteristic;
        [JsonPropertyName("characteristic")]
        public List<EvidenceReport_Subject_Characteristic>? Characteristic { get => _characteristic; set { _characteristic = value; } }

            /// <summary>
            /// Characteristic
            /// </summary>
            public partial class EvidenceReport_Subject_Characteristic : BackboneElement<EvidenceReport_Subject_Characteristic>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "EvidenceReport_Subject_Characteristic" : "evidenceReport_Subject_Characteristic";
                private CodeableConcept? _code;
        [JsonPropertyName("code")]
        public CodeableConcept Code { get => _code ?? throw new InvalidOperationException("Code is required"); set { _code = value; } }

                private FhirBoolean? _exclude;
        [JsonPropertyName("exclude")]
        public FhirBoolean? Exclude { get => _exclude; set { _exclude = value; } }

                private Period? _period;
        [JsonPropertyName("period")]
        public Period? Period { get => _period; set { _period = value; } }

                private ReferenceType? _valueReference;
        [JsonPropertyName("valueReference")]
        public ReferenceType? ValueReference { get => _valueReference; set { _valueReference = value; if (value != null) {{ _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueRange = null; OnPropertyChanged("valueRange", null); }}; OnPropertyChanged("valueReference", value); } }

                private CodeableConcept? _valueCodeableConcept;
        [JsonPropertyName("valueCodeableConcept")]
        public CodeableConcept? ValueCodeableConcept { get => _valueCodeableConcept; set { _valueCodeableConcept = value; if (value != null) {{ _valueReference = null; OnPropertyChanged("valueReference", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueRange = null; OnPropertyChanged("valueRange", null); }}; OnPropertyChanged("valueCodeableConcept", value); } }

                private FhirBoolean? _valueBoolean;
        [JsonPropertyName("valueBoolean")]
        public FhirBoolean? ValueBoolean { get => _valueBoolean; set { _valueBoolean = value; if (value != null) {{ _valueReference = null; OnPropertyChanged("valueReference", null); _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueRange = null; OnPropertyChanged("valueRange", null); }}; OnPropertyChanged("valueBoolean", value); } }

                private Quantity? _valueQuantity;
        [JsonPropertyName("valueQuantity")]
        public Quantity? ValueQuantity { get => _valueQuantity; set { _valueQuantity = value; if (value != null) {{ _valueReference = null; OnPropertyChanged("valueReference", null); _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueRange = null; OnPropertyChanged("valueRange", null); }}; OnPropertyChanged("valueQuantity", value); } }

                private DataTypeServices.DataTypes.ComplexTypes.Range? _valueRange;
        [JsonPropertyName("valueRange")]
        public DataTypeServices.DataTypes.ComplexTypes.Range? ValueRange { get => _valueRange; set { _valueRange = value; if (value != null) {{ _valueReference = null; OnPropertyChanged("valueReference", null); _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); }}; OnPropertyChanged("valueRange", value); } }

            }

            private List<Annotation>? _note;
        [JsonPropertyName("note")]
        public List<Annotation>? Note { get => _note; set { _note = value; } }

        }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

        private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept? Type { get => _type; set { _type = value; OnPropertyChangedByClr(nameof(Type), value); } }

        private FhirUri? _url;
        [JsonPropertyName("url")]
        public FhirUri? Url { get => _url; set { _url = value; OnPropertyChangedByClr(nameof(Url), value); } }

        private List<UsageContext>? _useContext;
        [JsonPropertyName("useContext")]
        public List<UsageContext>? UseContext { get => _useContext; set { _useContext = value; OnPropertyChangedByClr(nameof(UseContext), value); } }

    }
}
