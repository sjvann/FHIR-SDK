// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class MeasureReportFluentExtensions
    {
        public static MeasureReport AddContained(this MeasureReport r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static MeasureReport WithDataUpdateType(this MeasureReport r, FhirCode value) { r.DataUpdateType = value; return r; }
        public static MeasureReport WithDate(this MeasureReport r, FhirDateTime value) { r.Date = value; return r; }
        public static MeasureReport AddEvaluatedResource(this MeasureReport r, ReferenceType item) { r.EvaluatedResource ??= new List<ReferenceType>(); r.EvaluatedResource!.Add(item); return r; }
        public static MeasureReport AddGroup(this MeasureReport r, BackboneElement item) { r.Group ??= new List<BackboneElement>(); r.Group!.Add(item); return r; }
        public static MeasureReport AddIdentifier(this MeasureReport r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static MeasureReport WithImprovementNotation(this MeasureReport r, CodeableConcept value) { r.ImprovementNotation = value; return r; }
        public static MeasureReport WithInputParameters(this MeasureReport r, ReferenceType value) { r.InputParameters = value; return r; }
        public static MeasureReport WithLocation(this MeasureReport r, ReferenceType value) { r.Location = value; return r; }
        public static MeasureReport WithMeasure(this MeasureReport r, FhirCanonical value) { r.Measure = value; return r; }
        public static MeasureReport WithPeriod(this MeasureReport r, Period value) { r.Period = value; return r; }
        public static MeasureReport WithReporter(this MeasureReport r, ReferenceType value) { r.Reporter = value; return r; }
        public static MeasureReport WithReportingVendor(this MeasureReport r, ReferenceType value) { r.ReportingVendor = value; return r; }
        public static MeasureReport WithScoring(this MeasureReport r, CodeableConcept value) { r.Scoring = value; return r; }
        public static MeasureReport WithStatus(this MeasureReport r, FhirCode value) { r.Status = value; return r; }
        public static MeasureReport WithSubject(this MeasureReport r, ReferenceType value) { r.Subject = value; return r; }
        public static MeasureReport AddSupplementalData(this MeasureReport r, ReferenceType item) { r.SupplementalData ??= new List<ReferenceType>(); r.SupplementalData!.Add(item); return r; }
        public static MeasureReport WithText(this MeasureReport r, Narrative value) { r.Text = value; return r; }
        public static MeasureReport WithType(this MeasureReport r, FhirCode value) { r.Type = value; return r; }
    }
}
