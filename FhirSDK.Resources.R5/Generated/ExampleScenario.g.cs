// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// Example of workflow instance
    /// </summary>
    public partial class ExampleScenario : ResourceBase
    {
        public override string ResourceType => "ExampleScenario";

        public ExampleScenario() { }
        public ExampleScenario(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public ExampleScenario(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private List<ExampleScenario_Actor>? _actor;
        [JsonPropertyName("actor")]
        public List<ExampleScenario_Actor>? Actor { get => _actor; set { _actor = value; OnPropertyChangedByClr(nameof(Actor), value); } }

        /// <summary>
        /// Individual involved in exchange
        /// </summary>
        public partial class ExampleScenario_Actor : BackboneElement<ExampleScenario_Actor>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ExampleScenario_Actor" : "exampleScenario_Actor";
            private FhirMarkdown? _description;
        [JsonPropertyName("description")]
        public FhirMarkdown? Description { get => _description; set { _description = value; } }

            private FhirString? _key;
        [JsonPropertyName("key")]
        public FhirString Key { get => _key ?? throw new InvalidOperationException("Key is required"); set { _key = value; } }

            private FhirString? _title;
        [JsonPropertyName("title")]
        public FhirString Title { get => _title ?? throw new InvalidOperationException("Title is required"); set { _title = value; } }

            private FhirCode? _type;
        [JsonPropertyName("type")]
        public FhirCode Type { get => _type ?? throw new InvalidOperationException("Type is required"); set { _type = value; } }

        }

        private List<ContactDetail>? _contact;
        [JsonPropertyName("contact")]
        public List<ContactDetail>? Contact { get => _contact; set { _contact = value; OnPropertyChangedByClr(nameof(Contact), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private FhirMarkdown? _copyright;
        [JsonPropertyName("copyright")]
        public FhirMarkdown? Copyright { get => _copyright; set { _copyright = value; OnPropertyChangedByClr(nameof(Copyright), value); } }

        private FhirString? _copyrightLabel;
        [JsonPropertyName("copyrightLabel")]
        public FhirString? CopyrightLabel { get => _copyrightLabel; set { _copyrightLabel = value; OnPropertyChangedByClr(nameof(CopyrightLabel), value); } }

        private FhirDateTime? _date;
        [JsonPropertyName("date")]
        public FhirDateTime? Date { get => _date; set { _date = value; OnPropertyChangedByClr(nameof(Date), value); } }

        private FhirMarkdown? _description;
        [JsonPropertyName("description")]
        public FhirMarkdown? Description { get => _description; set { _description = value; OnPropertyChangedByClr(nameof(Description), value); } }

        private FhirBoolean? _experimental;
        [JsonPropertyName("experimental")]
        public FhirBoolean? Experimental { get => _experimental; set { _experimental = value; OnPropertyChangedByClr(nameof(Experimental), value); } }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private List<ExampleScenario_Instance>? _instance;
        [JsonPropertyName("instance")]
        public List<ExampleScenario_Instance>? Instance { get => _instance; set { _instance = value; OnPropertyChangedByClr(nameof(Instance), value); } }

        /// <summary>
        /// Data used in the scenario
        /// </summary>
        public partial class ExampleScenario_Instance : BackboneElement<ExampleScenario_Instance>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ExampleScenario_Instance" : "exampleScenario_Instance";
            private List<ExampleScenario_Instance_ContainedInstance>? _containedInstance;
        [JsonPropertyName("containedInstance")]
        public List<ExampleScenario_Instance_ContainedInstance>? ContainedInstance { get => _containedInstance; set { _containedInstance = value; } }

            /// <summary>
            /// Resources contained in the instance
            /// </summary>
            public partial class ExampleScenario_Instance_ContainedInstance : BackboneElement<ExampleScenario_Instance_ContainedInstance>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ExampleScenario_Instance_ContainedInstance" : "exampleScenario_Instance_ContainedInstance";
                private FhirString? _instanceReference;
        [JsonPropertyName("instanceReference")]
        public FhirString InstanceReference { get => _instanceReference ?? throw new InvalidOperationException("InstanceReference is required"); set { _instanceReference = value; } }

                private FhirString? _versionReference;
        [JsonPropertyName("versionReference")]
        public FhirString? VersionReference { get => _versionReference; set { _versionReference = value; } }

            }

            private ReferenceType? _content;
        [JsonPropertyName("content")]
        public ReferenceType? Content { get => _content; set { _content = value; } }

            private FhirMarkdown? _description;
        [JsonPropertyName("description")]
        public FhirMarkdown? Description { get => _description; set { _description = value; } }

            private FhirString? _key;
        [JsonPropertyName("key")]
        public FhirString Key { get => _key ?? throw new InvalidOperationException("Key is required"); set { _key = value; } }

            private FhirCanonical? _structureProfilecanonical;
        [JsonPropertyName("structureProfilecanonical")]
        public FhirCanonical? StructureProfilecanonical { get => _structureProfilecanonical; set { _structureProfilecanonical = value; if (value != null) {{ _structureProfileuri = null; OnPropertyChanged("structureProfileuri", null); }}; OnPropertyChanged("structureProfilecanonical", value); } }

            private FhirUri? _structureProfileuri;
        [JsonPropertyName("structureProfileuri")]
        public FhirUri? StructureProfileuri { get => _structureProfileuri; set { _structureProfileuri = value; if (value != null) {{ _structureProfilecanonical = null; OnPropertyChanged("structureProfilecanonical", null); }}; OnPropertyChanged("structureProfileuri", value); } }

            private Coding? _structureType;
        [JsonPropertyName("structureType")]
        public Coding StructureType { get => _structureType ?? throw new InvalidOperationException("StructureType is required"); set { _structureType = value; } }

            private FhirString? _structureVersion;
        [JsonPropertyName("structureVersion")]
        public FhirString? StructureVersion { get => _structureVersion; set { _structureVersion = value; } }

            private FhirString? _title;
        [JsonPropertyName("title")]
        public FhirString Title { get => _title ?? throw new InvalidOperationException("Title is required"); set { _title = value; } }

            private List<ExampleScenario_Instance_Version>? _version;
        [JsonPropertyName("version")]
        public List<ExampleScenario_Instance_Version>? Version { get => _version; set { _version = value; } }

            /// <summary>
            /// Snapshot of instance that changes
            /// </summary>
            public partial class ExampleScenario_Instance_Version : BackboneElement<ExampleScenario_Instance_Version>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ExampleScenario_Instance_Version" : "exampleScenario_Instance_Version";
                private ReferenceType? _content;
        [JsonPropertyName("content")]
        public ReferenceType? Content { get => _content; set { _content = value; } }

                private FhirMarkdown? _description;
        [JsonPropertyName("description")]
        public FhirMarkdown? Description { get => _description; set { _description = value; } }

                private FhirString? _key;
        [JsonPropertyName("key")]
        public FhirString Key { get => _key ?? throw new InvalidOperationException("Key is required"); set { _key = value; } }

                private FhirString? _title;
        [JsonPropertyName("title")]
        public FhirString Title { get => _title ?? throw new InvalidOperationException("Title is required"); set { _title = value; } }

            }

        }

        private List<CodeableConcept>? _jurisdiction;
        [JsonPropertyName("jurisdiction")]
        public List<CodeableConcept>? Jurisdiction { get => _jurisdiction; set { _jurisdiction = value; OnPropertyChangedByClr(nameof(Jurisdiction), value); } }

        private FhirString? _name;
        [JsonPropertyName("name")]
        public FhirString? Name { get => _name; set { _name = value; OnPropertyChangedByClr(nameof(Name), value); } }

        private List<ExampleScenario_Process>? _process;
        [JsonPropertyName("process")]
        public List<ExampleScenario_Process>? Process { get => _process; set { _process = value; OnPropertyChangedByClr(nameof(Process), value); } }

        /// <summary>
        /// Major process within scenario
        /// </summary>
        public partial class ExampleScenario_Process : BackboneElement<ExampleScenario_Process>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ExampleScenario_Process" : "exampleScenario_Process";
            private FhirMarkdown? _description;
        [JsonPropertyName("description")]
        public FhirMarkdown? Description { get => _description; set { _description = value; } }

            private FhirMarkdown? _postConditions;
        [JsonPropertyName("postConditions")]
        public FhirMarkdown? PostConditions { get => _postConditions; set { _postConditions = value; } }

            private FhirMarkdown? _preConditions;
        [JsonPropertyName("preConditions")]
        public FhirMarkdown? PreConditions { get => _preConditions; set { _preConditions = value; } }

            private List<ExampleScenario_Process_Step>? _step;
        [JsonPropertyName("step")]
        public List<ExampleScenario_Process_Step>? Step { get => _step; set { _step = value; } }

            /// <summary>
            /// Event within of the process
            /// </summary>
            public partial class ExampleScenario_Process_Step : BackboneElement<ExampleScenario_Process_Step>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ExampleScenario_Process_Step" : "exampleScenario_Process_Step";
                private List<ExampleScenario_Process_Step_Alternative>? _alternative;
        [JsonPropertyName("alternative")]
        public List<ExampleScenario_Process_Step_Alternative>? Alternative { get => _alternative; set { _alternative = value; } }

                /// <summary>
                /// Alternate non-typical step action
                /// </summary>
                public partial class ExampleScenario_Process_Step_Alternative : BackboneElement<ExampleScenario_Process_Step_Alternative>
                {
                    public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ExampleScenario_Process_Step_Alternative" : "exampleScenario_Process_Step_Alternative";
                    private FhirMarkdown? _description;
        [JsonPropertyName("description")]
        public FhirMarkdown? Description { get => _description; set { _description = value; } }

                    private List<FhirString>? _step;
        [JsonPropertyName("step")]
        public List<FhirString>? Step { get => _step; set { _step = value; } }

                    private FhirString? _title;
        [JsonPropertyName("title")]
        public FhirString Title { get => _title ?? throw new InvalidOperationException("Title is required"); set { _title = value; } }

                }

                private FhirString? _number;
        [JsonPropertyName("number")]
        public FhirString? Number { get => _number; set { _number = value; } }

                private ExampleScenario_Process_Step_Operation? _operation;
        [JsonPropertyName("operation")]
        public ExampleScenario_Process_Step_Operation? Operation { get => _operation; set { _operation = value; } }

                /// <summary>
                /// Step is simple action
                /// </summary>
                public partial class ExampleScenario_Process_Step_Operation : BackboneElement<ExampleScenario_Process_Step_Operation>
                {
                    public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ExampleScenario_Process_Step_Operation" : "exampleScenario_Process_Step_Operation";
                    private FhirMarkdown? _description;
        [JsonPropertyName("description")]
        public FhirMarkdown? Description { get => _description; set { _description = value; } }

                    private FhirString? _initiator;
        [JsonPropertyName("initiator")]
        public FhirString? Initiator { get => _initiator; set { _initiator = value; } }

                    private FhirBoolean? _initiatorActive;
        [JsonPropertyName("initiatorActive")]
        public FhirBoolean? InitiatorActive { get => _initiatorActive; set { _initiatorActive = value; } }

                    private FhirString? _receiver;
        [JsonPropertyName("receiver")]
        public FhirString? Receiver { get => _receiver; set { _receiver = value; } }

                    private FhirBoolean? _receiverActive;
        [JsonPropertyName("receiverActive")]
        public FhirBoolean? ReceiverActive { get => _receiverActive; set { _receiverActive = value; } }

                    private FhirString? _request;
        [JsonPropertyName("request")]
        public FhirString? Request { get => _request; set { _request = value; } }

                    private FhirString? _response;
        [JsonPropertyName("response")]
        public FhirString? Response { get => _response; set { _response = value; } }

                    private FhirString? _title;
        [JsonPropertyName("title")]
        public FhirString Title { get => _title ?? throw new InvalidOperationException("Title is required"); set { _title = value; } }

                    private Coding? _type;
        [JsonPropertyName("type")]
        public Coding? Type { get => _type; set { _type = value; } }

                }

                private FhirBoolean? _pause;
        [JsonPropertyName("pause")]
        public FhirBoolean? Pause { get => _pause; set { _pause = value; } }

                private FhirString? _process;
        [JsonPropertyName("process")]
        public FhirString? Process { get => _process; set { _process = value; } }

                private FhirCanonical? _workflow;
        [JsonPropertyName("workflow")]
        public FhirCanonical? Workflow { get => _workflow; set { _workflow = value; } }

            }

            private FhirString? _title;
        [JsonPropertyName("title")]
        public FhirString Title { get => _title ?? throw new InvalidOperationException("Title is required"); set { _title = value; } }

        }

        private FhirString? _publisher;
        [JsonPropertyName("publisher")]
        public FhirString? Publisher { get => _publisher; set { _publisher = value; OnPropertyChangedByClr(nameof(Publisher), value); } }

        private FhirMarkdown? _purpose;
        [JsonPropertyName("purpose")]
        public FhirMarkdown? Purpose { get => _purpose; set { _purpose = value; OnPropertyChangedByClr(nameof(Purpose), value); } }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode Status { get => _status ?? throw new InvalidOperationException("Status is required"); set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

        private FhirString? _title;
        [JsonPropertyName("title")]
        public FhirString? Title { get => _title; set { _title = value; OnPropertyChangedByClr(nameof(Title), value); } }

        private FhirUri? _url;
        [JsonPropertyName("url")]
        public FhirUri? Url { get => _url; set { _url = value; OnPropertyChangedByClr(nameof(Url), value); } }

        private List<UsageContext>? _useContext;
        [JsonPropertyName("useContext")]
        public List<UsageContext>? UseContext { get => _useContext; set { _useContext = value; OnPropertyChangedByClr(nameof(UseContext), value); } }

        private FhirString? _version;
        [JsonPropertyName("version")]
        public FhirString? Version { get => _version; set { _version = value; OnPropertyChangedByClr(nameof(Version), value); } }

        private FhirString? _versionAlgorithmString;
        [JsonPropertyName("versionAlgorithmString")]
        public FhirString? VersionAlgorithmString { get => _versionAlgorithmString; set { _versionAlgorithmString = value; if (value != null) {{ _versionAlgorithmCoding = null; OnPropertyChangedByClr(nameof(VersionAlgorithmCoding), null); }}; OnPropertyChangedByClr(nameof(VersionAlgorithmString), value); } }

        private Coding? _versionAlgorithmCoding;
        [JsonPropertyName("versionAlgorithmCoding")]
        public Coding? VersionAlgorithmCoding { get => _versionAlgorithmCoding; set { _versionAlgorithmCoding = value; if (value != null) {{ _versionAlgorithmString = null; OnPropertyChangedByClr(nameof(VersionAlgorithmString), null); }}; OnPropertyChangedByClr(nameof(VersionAlgorithmCoding), value); } }

    }
}
