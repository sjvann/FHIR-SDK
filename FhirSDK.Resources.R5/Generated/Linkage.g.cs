// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// Links records for 'same' item
    /// </summary>
    public partial class Linkage : ResourceBase
    {
        public override string ResourceType => "Linkage";

        public Linkage() { }
        public Linkage(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public Linkage(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private FhirBoolean? _active;
        [JsonPropertyName("active")]
        public FhirBoolean? Active { get => _active; set { _active = value; OnPropertyChangedByClr(nameof(Active), value); } }

        private ReferenceType? _author;
        [JsonPropertyName("author")]
        public ReferenceType? Author { get => _author; set { _author = value; OnPropertyChangedByClr(nameof(Author), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private List<Linkage_Item> _item = new();
        [JsonPropertyName("item")]
        public List<Linkage_Item> Item { get => _item; set { _item = value; OnPropertyChangedByClr(nameof(Item), value); } }

        /// <summary>
        /// Item to be linked
        /// </summary>
        public partial class Linkage_Item : BackboneElement<Linkage_Item>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Linkage_Item" : "linkage_Item";
            private ReferenceType? _resource;
        [JsonPropertyName("resource")]
        public ReferenceType Resource { get => _resource ?? throw new InvalidOperationException("Resource is required"); set { _resource = value; } }

            private FhirCode? _type;
        [JsonPropertyName("type")]
        public FhirCode Type { get => _type ?? throw new InvalidOperationException("Type is required"); set { _type = value; } }

        }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

    }
}
