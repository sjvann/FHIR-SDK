// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class PractitionerRoleFluentExtensions
    {
        public static PractitionerRole WithActive(this PractitionerRole r, FhirBoolean value) { r.Active = value; return r; }
        public static PractitionerRole AddAvailability(this PractitionerRole r, Availability item) { r.Availability ??= new List<Availability>(); r.Availability!.Add(item); return r; }
        public static PractitionerRole AddCharacteristic(this PractitionerRole r, CodeableConcept item) { r.Characteristic ??= new List<CodeableConcept>(); r.Characteristic!.Add(item); return r; }
        public static PractitionerRole AddCode(this PractitionerRole r, CodeableConcept item) { r.Code ??= new List<CodeableConcept>(); r.Code!.Add(item); return r; }
        public static PractitionerRole AddCommunication(this PractitionerRole r, CodeableConcept item) { r.Communication ??= new List<CodeableConcept>(); r.Communication!.Add(item); return r; }
        public static PractitionerRole AddContact(this PractitionerRole r, ExtendedContactDetail item) { r.Contact ??= new List<ExtendedContactDetail>(); r.Contact!.Add(item); return r; }
        public static PractitionerRole AddContained(this PractitionerRole r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static PractitionerRole AddEndpoint(this PractitionerRole r, ReferenceType item) { r.Endpoint ??= new List<ReferenceType>(); r.Endpoint!.Add(item); return r; }
        public static PractitionerRole AddHealthcareService(this PractitionerRole r, ReferenceType item) { r.HealthcareService ??= new List<ReferenceType>(); r.HealthcareService!.Add(item); return r; }
        public static PractitionerRole AddIdentifier(this PractitionerRole r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static PractitionerRole AddLocation(this PractitionerRole r, ReferenceType item) { r.Location ??= new List<ReferenceType>(); r.Location!.Add(item); return r; }
        public static PractitionerRole WithOrganization(this PractitionerRole r, ReferenceType value) { r.Organization = value; return r; }
        public static PractitionerRole WithPeriod(this PractitionerRole r, Period value) { r.Period = value; return r; }
        public static PractitionerRole WithPractitioner(this PractitionerRole r, ReferenceType value) { r.Practitioner = value; return r; }
        public static PractitionerRole AddSpecialty(this PractitionerRole r, CodeableConcept item) { r.Specialty ??= new List<CodeableConcept>(); r.Specialty!.Add(item); return r; }
        public static PractitionerRole WithText(this PractitionerRole r, Narrative value) { r.Text = value; return r; }
    }
}
