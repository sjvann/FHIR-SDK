// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// Todo
    /// </summary>
    public partial class SubstanceReferenceInformation : ResourceBase
    {
        public override string ResourceType => "SubstanceReferenceInformation";

        public SubstanceReferenceInformation() { }
        public SubstanceReferenceInformation(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public SubstanceReferenceInformation(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private FhirString? _comment;
        [JsonPropertyName("comment")]
        public FhirString? Comment { get => _comment; set { _comment = value; OnPropertyChangedByClr(nameof(Comment), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private List<SubstanceReferenceInformation_Gene>? _gene;
        [JsonPropertyName("gene")]
        public List<SubstanceReferenceInformation_Gene>? Gene { get => _gene; set { _gene = value; OnPropertyChangedByClr(nameof(Gene), value); } }

        /// <summary>
        /// Todo
        /// </summary>
        public partial class SubstanceReferenceInformation_Gene : BackboneElement<SubstanceReferenceInformation_Gene>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "SubstanceReferenceInformation_Gene" : "substanceReferenceInformation_Gene";
            private CodeableConcept? _gene;
        [JsonPropertyName("gene")]
        public CodeableConcept? Gene { get => _gene; set { _gene = value; } }

            private CodeableConcept? _geneSequenceOrigin;
        [JsonPropertyName("geneSequenceOrigin")]
        public CodeableConcept? GeneSequenceOrigin { get => _geneSequenceOrigin; set { _geneSequenceOrigin = value; } }

            private List<ReferenceType>? _source;
        [JsonPropertyName("source")]
        public List<ReferenceType>? Source { get => _source; set { _source = value; } }

        }

        private List<SubstanceReferenceInformation_GeneElement>? _geneElement;
        [JsonPropertyName("geneElement")]
        public List<SubstanceReferenceInformation_GeneElement>? GeneElement { get => _geneElement; set { _geneElement = value; OnPropertyChangedByClr(nameof(GeneElement), value); } }

        /// <summary>
        /// Todo
        /// </summary>
        public partial class SubstanceReferenceInformation_GeneElement : BackboneElement<SubstanceReferenceInformation_GeneElement>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "SubstanceReferenceInformation_GeneElement" : "substanceReferenceInformation_GeneElement";
            private Identifier? _element;
        [JsonPropertyName("element")]
        public Identifier? Element { get => _element; set { _element = value; } }

            private List<ReferenceType>? _source;
        [JsonPropertyName("source")]
        public List<ReferenceType>? Source { get => _source; set { _source = value; } }

            private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept? Type { get => _type; set { _type = value; } }

        }

        private List<SubstanceReferenceInformation_Target>? _target;
        [JsonPropertyName("target")]
        public List<SubstanceReferenceInformation_Target>? Target { get => _target; set { _target = value; OnPropertyChangedByClr(nameof(Target), value); } }

        /// <summary>
        /// Todo
        /// </summary>
        public partial class SubstanceReferenceInformation_Target : BackboneElement<SubstanceReferenceInformation_Target>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "SubstanceReferenceInformation_Target" : "substanceReferenceInformation_Target";
            private CodeableConcept? _amountType;
        [JsonPropertyName("amountType")]
        public CodeableConcept? AmountType { get => _amountType; set { _amountType = value; } }

            private Quantity? _amountQuantity;
        [JsonPropertyName("amountQuantity")]
        public Quantity? AmountQuantity { get => _amountQuantity; set { _amountQuantity = value; if (value != null) {{ _amountRange = null; OnPropertyChanged("amountRange", null); _amountString = null; OnPropertyChanged("amountString", null); }}; OnPropertyChanged("amountQuantity", value); } }

            private DataTypeServices.DataTypes.ComplexTypes.Range? _amountRange;
        [JsonPropertyName("amountRange")]
        public DataTypeServices.DataTypes.ComplexTypes.Range? AmountRange { get => _amountRange; set { _amountRange = value; if (value != null) {{ _amountQuantity = null; OnPropertyChanged("amountQuantity", null); _amountString = null; OnPropertyChanged("amountString", null); }}; OnPropertyChanged("amountRange", value); } }

            private FhirString? _amountString;
        [JsonPropertyName("amountString")]
        public FhirString? AmountString { get => _amountString; set { _amountString = value; if (value != null) {{ _amountQuantity = null; OnPropertyChanged("amountQuantity", null); _amountRange = null; OnPropertyChanged("amountRange", null); }}; OnPropertyChanged("amountString", value); } }

            private CodeableConcept? _interaction;
        [JsonPropertyName("interaction")]
        public CodeableConcept? Interaction { get => _interaction; set { _interaction = value; } }

            private CodeableConcept? _organism;
        [JsonPropertyName("organism")]
        public CodeableConcept? Organism { get => _organism; set { _organism = value; } }

            private CodeableConcept? _organismType;
        [JsonPropertyName("organismType")]
        public CodeableConcept? OrganismType { get => _organismType; set { _organismType = value; } }

            private List<ReferenceType>? _source;
        [JsonPropertyName("source")]
        public List<ReferenceType>? Source { get => _source; set { _source = value; } }

            private Identifier? _target;
        [JsonPropertyName("target")]
        public Identifier? Target { get => _target; set { _target = value; } }

            private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept? Type { get => _type; set { _type = value; } }

        }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

    }
}
