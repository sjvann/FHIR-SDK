// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// A map from one set of concepts to one or more other concepts
    /// </summary>
    public partial class ConceptMap : ResourceBase
    {
        public override string ResourceType => "ConceptMap";

        public ConceptMap() { }
        public ConceptMap(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public ConceptMap(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private List<ConceptMap_AdditionalAttribute>? _additionalAttribute;
        [JsonPropertyName("additionalAttribute")]
        public List<ConceptMap_AdditionalAttribute>? AdditionalAttribute { get => _additionalAttribute; set { _additionalAttribute = value; OnPropertyChangedByClr(nameof(AdditionalAttribute), value); } }

        /// <summary>
        /// Definition of an additional attribute to act as a data source or target
        /// </summary>
        public partial class ConceptMap_AdditionalAttribute : BackboneElement<ConceptMap_AdditionalAttribute>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ConceptMap_AdditionalAttribute" : "conceptMap_AdditionalAttribute";
            private FhirCode? _code;
        [JsonPropertyName("code")]
        public FhirCode Code { get => _code ?? throw new InvalidOperationException("Code is required"); set { _code = value; } }

            private FhirString? _description;
        [JsonPropertyName("description")]
        public FhirString? Description { get => _description; set { _description = value; } }

            private FhirCode? _type;
        [JsonPropertyName("type")]
        public FhirCode Type { get => _type ?? throw new InvalidOperationException("Type is required"); set { _type = value; } }

            private FhirUri? _uri;
        [JsonPropertyName("uri")]
        public FhirUri? Uri { get => _uri; set { _uri = value; } }

        }

        private FhirDate? _approvalDate;
        [JsonPropertyName("approvalDate")]
        public FhirDate? ApprovalDate { get => _approvalDate; set { _approvalDate = value; OnPropertyChangedByClr(nameof(ApprovalDate), value); } }

        private List<ContactDetail>? _author;
        [JsonPropertyName("author")]
        public List<ContactDetail>? Author { get => _author; set { _author = value; OnPropertyChangedByClr(nameof(Author), value); } }

        private List<ContactDetail>? _contact;
        [JsonPropertyName("contact")]
        public List<ContactDetail>? Contact { get => _contact; set { _contact = value; OnPropertyChangedByClr(nameof(Contact), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private FhirMarkdown? _copyright;
        [JsonPropertyName("copyright")]
        public FhirMarkdown? Copyright { get => _copyright; set { _copyright = value; OnPropertyChangedByClr(nameof(Copyright), value); } }

        private FhirString? _copyrightLabel;
        [JsonPropertyName("copyrightLabel")]
        public FhirString? CopyrightLabel { get => _copyrightLabel; set { _copyrightLabel = value; OnPropertyChangedByClr(nameof(CopyrightLabel), value); } }

        private FhirDateTime? _date;
        [JsonPropertyName("date")]
        public FhirDateTime? Date { get => _date; set { _date = value; OnPropertyChangedByClr(nameof(Date), value); } }

        private FhirMarkdown? _description;
        [JsonPropertyName("description")]
        public FhirMarkdown? Description { get => _description; set { _description = value; OnPropertyChangedByClr(nameof(Description), value); } }

        private List<ContactDetail>? _editor;
        [JsonPropertyName("editor")]
        public List<ContactDetail>? Editor { get => _editor; set { _editor = value; OnPropertyChangedByClr(nameof(Editor), value); } }

        private Period? _effectivePeriod;
        [JsonPropertyName("effectivePeriod")]
        public Period? EffectivePeriod { get => _effectivePeriod; set { _effectivePeriod = value; OnPropertyChangedByClr(nameof(EffectivePeriod), value); } }

        private List<ContactDetail>? _endorser;
        [JsonPropertyName("endorser")]
        public List<ContactDetail>? Endorser { get => _endorser; set { _endorser = value; OnPropertyChangedByClr(nameof(Endorser), value); } }

        private FhirBoolean? _experimental;
        [JsonPropertyName("experimental")]
        public FhirBoolean? Experimental { get => _experimental; set { _experimental = value; OnPropertyChangedByClr(nameof(Experimental), value); } }

        private List<ConceptMap_Group>? _group;
        [JsonPropertyName("group")]
        public List<ConceptMap_Group>? Group { get => _group; set { _group = value; OnPropertyChangedByClr(nameof(Group), value); } }

        /// <summary>
        /// Same source and target systems
        /// </summary>
        public partial class ConceptMap_Group : BackboneElement<ConceptMap_Group>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ConceptMap_Group" : "conceptMap_Group";
            private List<ConceptMap_Group_Element> _element = new();
        [JsonPropertyName("element")]
        public List<ConceptMap_Group_Element> Element { get => _element; set { _element = value; } }

            /// <summary>
            /// Mappings for a concept from the source set
            /// </summary>
            public partial class ConceptMap_Group_Element : BackboneElement<ConceptMap_Group_Element>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ConceptMap_Group_Element" : "conceptMap_Group_Element";
                private FhirCode? _code;
        [JsonPropertyName("code")]
        public FhirCode? Code { get => _code; set { _code = value; } }

                private FhirString? _display;
        [JsonPropertyName("display")]
        public FhirString? Display { get => _display; set { _display = value; } }

                private FhirBoolean? _noMap;
        [JsonPropertyName("noMap")]
        public FhirBoolean? NoMap { get => _noMap; set { _noMap = value; } }

                private List<ConceptMap_Group_Element_Target>? _target;
        [JsonPropertyName("target")]
        public List<ConceptMap_Group_Element_Target>? Target { get => _target; set { _target = value; } }

                /// <summary>
                /// Concept in target system for element
                /// </summary>
                public partial class ConceptMap_Group_Element_Target : BackboneElement<ConceptMap_Group_Element_Target>
                {
                    public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ConceptMap_Group_Element_Target" : "conceptMap_Group_Element_Target";
                    private FhirCode? _code;
        [JsonPropertyName("code")]
        public FhirCode? Code { get => _code; set { _code = value; } }

                    private FhirString? _comment;
        [JsonPropertyName("comment")]
        public FhirString? Comment { get => _comment; set { _comment = value; } }

                    private List<ConceptMap_Group_Element_Target_DependsOn>? _dependsOn;
        [JsonPropertyName("dependsOn")]
        public List<ConceptMap_Group_Element_Target_DependsOn>? DependsOn { get => _dependsOn; set { _dependsOn = value; } }

                    /// <summary>
                    /// Other properties required for this mapping
                    /// </summary>
                    public partial class ConceptMap_Group_Element_Target_DependsOn : BackboneElement<ConceptMap_Group_Element_Target_DependsOn>
                    {
                        public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ConceptMap_Group_Element_Target_DependsOn" : "conceptMap_Group_Element_Target_DependsOn";
                        private FhirCode? _attribute;
        [JsonPropertyName("attribute")]
        public FhirCode Attribute { get => _attribute ?? throw new InvalidOperationException("Attribute is required"); set { _attribute = value; } }

                        private FhirCanonical? _valueSet;
        [JsonPropertyName("valueSet")]
        public FhirCanonical? ValueSet { get => _valueSet; set { _valueSet = value; } }

                        private FhirCode? _valuecode;
        [JsonPropertyName("valuecode")]
        public FhirCode? Valuecode { get => _valuecode; set { _valuecode = value; if (value != null) {{ _valueCoding = null; OnPropertyChanged("valueCoding", null); _valueString = null; OnPropertyChanged("valueString", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); }}; OnPropertyChanged("valuecode", value); } }

                        private Coding? _valueCoding;
        [JsonPropertyName("valueCoding")]
        public Coding? ValueCoding { get => _valueCoding; set { _valueCoding = value; if (value != null) {{ _valuecode = null; OnPropertyChanged("valuecode", null); _valueString = null; OnPropertyChanged("valueString", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); }}; OnPropertyChanged("valueCoding", value); } }

                        private FhirString? _valueString;
        [JsonPropertyName("valueString")]
        public FhirString? ValueString { get => _valueString; set { _valueString = value; if (value != null) {{ _valuecode = null; OnPropertyChanged("valuecode", null); _valueCoding = null; OnPropertyChanged("valueCoding", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); }}; OnPropertyChanged("valueString", value); } }

                        private FhirBoolean? _valueBoolean;
        [JsonPropertyName("valueBoolean")]
        public FhirBoolean? ValueBoolean { get => _valueBoolean; set { _valueBoolean = value; if (value != null) {{ _valuecode = null; OnPropertyChanged("valuecode", null); _valueCoding = null; OnPropertyChanged("valueCoding", null); _valueString = null; OnPropertyChanged("valueString", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); }}; OnPropertyChanged("valueBoolean", value); } }

                        private Quantity? _valueQuantity;
        [JsonPropertyName("valueQuantity")]
        public Quantity? ValueQuantity { get => _valueQuantity; set { _valueQuantity = value; if (value != null) {{ _valuecode = null; OnPropertyChanged("valuecode", null); _valueCoding = null; OnPropertyChanged("valueCoding", null); _valueString = null; OnPropertyChanged("valueString", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); }}; OnPropertyChanged("valueQuantity", value); } }

                    }

                    private FhirString? _display;
        [JsonPropertyName("display")]
        public FhirString? Display { get => _display; set { _display = value; } }

                    private List<FhirString>? _product;
        [JsonPropertyName("product")]
        public List<FhirString>? Product { get => _product; set { _product = value; } }

                    private List<ConceptMap_Group_Element_Target_Property>? _property;
        [JsonPropertyName("property")]
        public List<ConceptMap_Group_Element_Target_Property>? Property { get => _property; set { _property = value; } }

                    /// <summary>
                    /// Property value for the source -&gt; target mapping
                    /// </summary>
                    public partial class ConceptMap_Group_Element_Target_Property : BackboneElement<ConceptMap_Group_Element_Target_Property>
                    {
                        public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ConceptMap_Group_Element_Target_Property" : "conceptMap_Group_Element_Target_Property";
                        private FhirCode? _code;
        [JsonPropertyName("code")]
        public FhirCode Code { get => _code ?? throw new InvalidOperationException("Code is required"); set { _code = value; } }

                        private Coding? _valueCoding;
        [JsonPropertyName("valueCoding")]
        public Coding? ValueCoding { get => _valueCoding; set { _valueCoding = value; if (value != null) {{ _valueString = null; OnPropertyChanged("valueString", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueDateTime = null; OnPropertyChanged("valueDateTime", null); _valueDecimal = null; OnPropertyChanged("valueDecimal", null); _valuecode = null; OnPropertyChanged("valuecode", null); }}; OnPropertyChanged("valueCoding", value); } }

                        private FhirString? _valueString;
        [JsonPropertyName("valueString")]
        public FhirString? ValueString { get => _valueString; set { _valueString = value; if (value != null) {{ _valueCoding = null; OnPropertyChanged("valueCoding", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueDateTime = null; OnPropertyChanged("valueDateTime", null); _valueDecimal = null; OnPropertyChanged("valueDecimal", null); _valuecode = null; OnPropertyChanged("valuecode", null); }}; OnPropertyChanged("valueString", value); } }

                        private FhirInteger? _valueInteger;
        [JsonPropertyName("valueInteger")]
        public FhirInteger? ValueInteger { get => _valueInteger; set { _valueInteger = value; if (value != null) {{ _valueCoding = null; OnPropertyChanged("valueCoding", null); _valueString = null; OnPropertyChanged("valueString", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueDateTime = null; OnPropertyChanged("valueDateTime", null); _valueDecimal = null; OnPropertyChanged("valueDecimal", null); _valuecode = null; OnPropertyChanged("valuecode", null); }}; OnPropertyChanged("valueInteger", value); } }

                        private FhirBoolean? _valueBoolean;
        [JsonPropertyName("valueBoolean")]
        public FhirBoolean? ValueBoolean { get => _valueBoolean; set { _valueBoolean = value; if (value != null) {{ _valueCoding = null; OnPropertyChanged("valueCoding", null); _valueString = null; OnPropertyChanged("valueString", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valueDateTime = null; OnPropertyChanged("valueDateTime", null); _valueDecimal = null; OnPropertyChanged("valueDecimal", null); _valuecode = null; OnPropertyChanged("valuecode", null); }}; OnPropertyChanged("valueBoolean", value); } }

                        private FhirDateTime? _valueDateTime;
        [JsonPropertyName("valueDateTime")]
        public FhirDateTime? ValueDateTime { get => _valueDateTime; set { _valueDateTime = value; if (value != null) {{ _valueCoding = null; OnPropertyChanged("valueCoding", null); _valueString = null; OnPropertyChanged("valueString", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueDecimal = null; OnPropertyChanged("valueDecimal", null); _valuecode = null; OnPropertyChanged("valuecode", null); }}; OnPropertyChanged("valueDateTime", value); } }

                        private FhirDecimal? _valueDecimal;
        [JsonPropertyName("valueDecimal")]
        public FhirDecimal? ValueDecimal { get => _valueDecimal; set { _valueDecimal = value; if (value != null) {{ _valueCoding = null; OnPropertyChanged("valueCoding", null); _valueString = null; OnPropertyChanged("valueString", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueDateTime = null; OnPropertyChanged("valueDateTime", null); _valuecode = null; OnPropertyChanged("valuecode", null); }}; OnPropertyChanged("valueDecimal", value); } }

                        private FhirCode? _valuecode;
        [JsonPropertyName("valuecode")]
        public FhirCode? Valuecode { get => _valuecode; set { _valuecode = value; if (value != null) {{ _valueCoding = null; OnPropertyChanged("valueCoding", null); _valueString = null; OnPropertyChanged("valueString", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueDateTime = null; OnPropertyChanged("valueDateTime", null); _valueDecimal = null; OnPropertyChanged("valueDecimal", null); }}; OnPropertyChanged("valuecode", value); } }

                    }

                    private FhirCode? _relationship;
        [JsonPropertyName("relationship")]
        public FhirCode Relationship { get => _relationship ?? throw new InvalidOperationException("Relationship is required"); set { _relationship = value; } }

                    private FhirCanonical? _valueSet;
        [JsonPropertyName("valueSet")]
        public FhirCanonical? ValueSet { get => _valueSet; set { _valueSet = value; } }

                }

                private FhirCanonical? _valueSet;
        [JsonPropertyName("valueSet")]
        public FhirCanonical? ValueSet { get => _valueSet; set { _valueSet = value; } }

            }

            private FhirCanonical? _source;
        [JsonPropertyName("source")]
        public FhirCanonical? Source { get => _source; set { _source = value; } }

            private FhirCanonical? _target;
        [JsonPropertyName("target")]
        public FhirCanonical? Target { get => _target; set { _target = value; } }

            private ConceptMap_Group_Unmapped? _unmapped;
        [JsonPropertyName("unmapped")]
        public ConceptMap_Group_Unmapped? Unmapped { get => _unmapped; set { _unmapped = value; } }

            /// <summary>
            /// What to do when there is no mapping target for the source concept and ConceptMap.group.element.noMap is not true
            /// </summary>
            public partial class ConceptMap_Group_Unmapped : BackboneElement<ConceptMap_Group_Unmapped>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ConceptMap_Group_Unmapped" : "conceptMap_Group_Unmapped";
                private FhirCode? _code;
        [JsonPropertyName("code")]
        public FhirCode? Code { get => _code; set { _code = value; } }

                private FhirString? _display;
        [JsonPropertyName("display")]
        public FhirString? Display { get => _display; set { _display = value; } }

                private FhirCode? _mode;
        [JsonPropertyName("mode")]
        public FhirCode Mode { get => _mode ?? throw new InvalidOperationException("Mode is required"); set { _mode = value; } }

                private FhirCanonical? _otherMap;
        [JsonPropertyName("otherMap")]
        public FhirCanonical? OtherMap { get => _otherMap; set { _otherMap = value; } }

                private FhirCode? _relationship;
        [JsonPropertyName("relationship")]
        public FhirCode? Relationship { get => _relationship; set { _relationship = value; } }

                private FhirCanonical? _valueSet;
        [JsonPropertyName("valueSet")]
        public FhirCanonical? ValueSet { get => _valueSet; set { _valueSet = value; } }

            }

        }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private List<CodeableConcept>? _jurisdiction;
        [JsonPropertyName("jurisdiction")]
        public List<CodeableConcept>? Jurisdiction { get => _jurisdiction; set { _jurisdiction = value; OnPropertyChangedByClr(nameof(Jurisdiction), value); } }

        private FhirDate? _lastReviewDate;
        [JsonPropertyName("lastReviewDate")]
        public FhirDate? LastReviewDate { get => _lastReviewDate; set { _lastReviewDate = value; OnPropertyChangedByClr(nameof(LastReviewDate), value); } }

        private FhirString? _name;
        [JsonPropertyName("name")]
        public FhirString? Name { get => _name; set { _name = value; OnPropertyChangedByClr(nameof(Name), value); } }

        private List<ConceptMap_Property>? _property;
        [JsonPropertyName("property")]
        public List<ConceptMap_Property>? Property { get => _property; set { _property = value; OnPropertyChangedByClr(nameof(Property), value); } }

        /// <summary>
        /// Additional properties of the mapping
        /// </summary>
        public partial class ConceptMap_Property : BackboneElement<ConceptMap_Property>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ConceptMap_Property" : "conceptMap_Property";
            private FhirCode? _code;
        [JsonPropertyName("code")]
        public FhirCode Code { get => _code ?? throw new InvalidOperationException("Code is required"); set { _code = value; } }

            private FhirString? _description;
        [JsonPropertyName("description")]
        public FhirString? Description { get => _description; set { _description = value; } }

            private FhirCanonical? _system;
        [JsonPropertyName("system")]
        public FhirCanonical? System { get => _system; set { _system = value; } }

            private FhirCode? _type;
        [JsonPropertyName("type")]
        public FhirCode Type { get => _type ?? throw new InvalidOperationException("Type is required"); set { _type = value; } }

            private FhirUri? _uri;
        [JsonPropertyName("uri")]
        public FhirUri? Uri { get => _uri; set { _uri = value; } }

        }

        private FhirString? _publisher;
        [JsonPropertyName("publisher")]
        public FhirString? Publisher { get => _publisher; set { _publisher = value; OnPropertyChangedByClr(nameof(Publisher), value); } }

        private FhirMarkdown? _purpose;
        [JsonPropertyName("purpose")]
        public FhirMarkdown? Purpose { get => _purpose; set { _purpose = value; OnPropertyChangedByClr(nameof(Purpose), value); } }

        private List<RelatedArtifact>? _relatedArtifact;
        [JsonPropertyName("relatedArtifact")]
        public List<RelatedArtifact>? RelatedArtifact { get => _relatedArtifact; set { _relatedArtifact = value; OnPropertyChangedByClr(nameof(RelatedArtifact), value); } }

        private List<ContactDetail>? _reviewer;
        [JsonPropertyName("reviewer")]
        public List<ContactDetail>? Reviewer { get => _reviewer; set { _reviewer = value; OnPropertyChangedByClr(nameof(Reviewer), value); } }

        private FhirUri? _sourceScopeuri;
        [JsonPropertyName("sourceScopeuri")]
        public FhirUri? SourceScopeuri { get => _sourceScopeuri; set { _sourceScopeuri = value; if (value != null) {{ _sourceScopecanonical = null; OnPropertyChangedByClr(nameof(SourceScopecanonical), null); }}; OnPropertyChangedByClr(nameof(SourceScopeuri), value); } }

        private FhirCanonical? _sourceScopecanonical;
        [JsonPropertyName("sourceScopecanonical")]
        public FhirCanonical? SourceScopecanonical { get => _sourceScopecanonical; set { _sourceScopecanonical = value; if (value != null) {{ _sourceScopeuri = null; OnPropertyChangedByClr(nameof(SourceScopeuri), null); }}; OnPropertyChangedByClr(nameof(SourceScopecanonical), value); } }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode Status { get => _status ?? throw new InvalidOperationException("Status is required"); set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private FhirUri? _targetScopeuri;
        [JsonPropertyName("targetScopeuri")]
        public FhirUri? TargetScopeuri { get => _targetScopeuri; set { _targetScopeuri = value; if (value != null) {{ _targetScopecanonical = null; OnPropertyChangedByClr(nameof(TargetScopecanonical), null); }}; OnPropertyChangedByClr(nameof(TargetScopeuri), value); } }

        private FhirCanonical? _targetScopecanonical;
        [JsonPropertyName("targetScopecanonical")]
        public FhirCanonical? TargetScopecanonical { get => _targetScopecanonical; set { _targetScopecanonical = value; if (value != null) {{ _targetScopeuri = null; OnPropertyChangedByClr(nameof(TargetScopeuri), null); }}; OnPropertyChangedByClr(nameof(TargetScopecanonical), value); } }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

        private FhirString? _title;
        [JsonPropertyName("title")]
        public FhirString? Title { get => _title; set { _title = value; OnPropertyChangedByClr(nameof(Title), value); } }

        private List<CodeableConcept>? _topic;
        [JsonPropertyName("topic")]
        public List<CodeableConcept>? Topic { get => _topic; set { _topic = value; OnPropertyChangedByClr(nameof(Topic), value); } }

        private FhirUri? _url;
        [JsonPropertyName("url")]
        public FhirUri? Url { get => _url; set { _url = value; OnPropertyChangedByClr(nameof(Url), value); } }

        private List<UsageContext>? _useContext;
        [JsonPropertyName("useContext")]
        public List<UsageContext>? UseContext { get => _useContext; set { _useContext = value; OnPropertyChangedByClr(nameof(UseContext), value); } }

        private FhirString? _version;
        [JsonPropertyName("version")]
        public FhirString? Version { get => _version; set { _version = value; OnPropertyChangedByClr(nameof(Version), value); } }

        private FhirString? _versionAlgorithmString;
        [JsonPropertyName("versionAlgorithmString")]
        public FhirString? VersionAlgorithmString { get => _versionAlgorithmString; set { _versionAlgorithmString = value; if (value != null) {{ _versionAlgorithmCoding = null; OnPropertyChangedByClr(nameof(VersionAlgorithmCoding), null); }}; OnPropertyChangedByClr(nameof(VersionAlgorithmString), value); } }

        private Coding? _versionAlgorithmCoding;
        [JsonPropertyName("versionAlgorithmCoding")]
        public Coding? VersionAlgorithmCoding { get => _versionAlgorithmCoding; set { _versionAlgorithmCoding = value; if (value != null) {{ _versionAlgorithmString = null; OnPropertyChangedByClr(nameof(VersionAlgorithmString), null); }}; OnPropertyChangedByClr(nameof(VersionAlgorithmCoding), value); } }

    }
}
