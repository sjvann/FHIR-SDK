// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class SubscriptionFluentExtensions
    {
        public static Subscription WithChannelType(this Subscription r, Coding value) { r.ChannelType = value; return r; }
        public static Subscription AddContact(this Subscription r, ContactPoint item) { r.Contact ??= new List<ContactPoint>(); r.Contact!.Add(item); return r; }
        public static Subscription AddContained(this Subscription r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static Subscription WithContent(this Subscription r, FhirCode value) { r.Content = value; return r; }
        public static Subscription WithContentType(this Subscription r, FhirCode value) { r.ContentType = value; return r; }
        public static Subscription WithEnd(this Subscription r, FhirInstant value) { r.End = value; return r; }
        public static Subscription WithEndpoint(this Subscription r, FhirUrl value) { r.Endpoint = value; return r; }
        public static Subscription AddFilterBy(this Subscription r, BackboneElement item) { r.FilterBy ??= new List<BackboneElement>(); r.FilterBy!.Add(item); return r; }
        public static Subscription WithHeartbeatPeriod(this Subscription r, FhirUnsignedInt value) { r.HeartbeatPeriod = value; return r; }
        public static Subscription AddIdentifier(this Subscription r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static Subscription WithManagingEntity(this Subscription r, ReferenceType value) { r.ManagingEntity = value; return r; }
        public static Subscription WithMaxCount(this Subscription r, FhirPositiveInt value) { r.MaxCount = value; return r; }
        public static Subscription WithName(this Subscription r, FhirString value) { r.Name = value; return r; }
        public static Subscription AddParameter(this Subscription r, BackboneElement item) { r.Parameter ??= new List<BackboneElement>(); r.Parameter!.Add(item); return r; }
        public static Subscription WithReason(this Subscription r, FhirString value) { r.Reason = value; return r; }
        public static Subscription WithStatus(this Subscription r, FhirCode value) { r.Status = value; return r; }
        public static Subscription WithText(this Subscription r, Narrative value) { r.Text = value; return r; }
        public static Subscription WithTimeout(this Subscription r, FhirUnsignedInt value) { r.Timeout = value; return r; }
        public static Subscription WithTopic(this Subscription r, FhirCanonical value) { r.Topic = value; return r; }
    }
}
