// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class TerminologyCapabilitiesFluentExtensions
    {
        public static TerminologyCapabilities WithClosure(this TerminologyCapabilities r, BackboneElement value) { r.Closure = value; return r; }
        public static TerminologyCapabilities WithCodeSearch(this TerminologyCapabilities r, FhirCode value) { r.CodeSearch = value; return r; }
        public static TerminologyCapabilities AddCodeSystem(this TerminologyCapabilities r, BackboneElement item) { r.CodeSystem ??= new List<BackboneElement>(); r.CodeSystem!.Add(item); return r; }
        public static TerminologyCapabilities AddContact(this TerminologyCapabilities r, ContactDetail item) { r.Contact ??= new List<ContactDetail>(); r.Contact!.Add(item); return r; }
        public static TerminologyCapabilities AddContained(this TerminologyCapabilities r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static TerminologyCapabilities WithCopyright(this TerminologyCapabilities r, FhirMarkdown value) { r.Copyright = value; return r; }
        public static TerminologyCapabilities WithCopyrightLabel(this TerminologyCapabilities r, FhirString value) { r.CopyrightLabel = value; return r; }
        public static TerminologyCapabilities WithDate(this TerminologyCapabilities r, FhirDateTime value) { r.Date = value; return r; }
        public static TerminologyCapabilities WithDescription(this TerminologyCapabilities r, FhirMarkdown value) { r.Description = value; return r; }
        public static TerminologyCapabilities WithExpansion(this TerminologyCapabilities r, BackboneElement value) { r.Expansion = value; return r; }
        public static TerminologyCapabilities WithExperimental(this TerminologyCapabilities r, FhirBoolean value) { r.Experimental = value; return r; }
        public static TerminologyCapabilities AddIdentifier(this TerminologyCapabilities r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static TerminologyCapabilities WithImplementation(this TerminologyCapabilities r, BackboneElement value) { r.Implementation = value; return r; }
        public static TerminologyCapabilities AddJurisdiction(this TerminologyCapabilities r, CodeableConcept item) { r.Jurisdiction ??= new List<CodeableConcept>(); r.Jurisdiction!.Add(item); return r; }
        public static TerminologyCapabilities WithKind(this TerminologyCapabilities r, FhirCode value) { r.Kind = value; return r; }
        public static TerminologyCapabilities WithLockedDate(this TerminologyCapabilities r, FhirBoolean value) { r.LockedDate = value; return r; }
        public static TerminologyCapabilities WithName(this TerminologyCapabilities r, FhirString value) { r.Name = value; return r; }
        public static TerminologyCapabilities WithPublisher(this TerminologyCapabilities r, FhirString value) { r.Publisher = value; return r; }
        public static TerminologyCapabilities WithPurpose(this TerminologyCapabilities r, FhirMarkdown value) { r.Purpose = value; return r; }
        public static TerminologyCapabilities WithSoftware(this TerminologyCapabilities r, BackboneElement value) { r.Software = value; return r; }
        public static TerminologyCapabilities WithStatus(this TerminologyCapabilities r, FhirCode value) { r.Status = value; return r; }
        public static TerminologyCapabilities WithText(this TerminologyCapabilities r, Narrative value) { r.Text = value; return r; }
        public static TerminologyCapabilities WithTitle(this TerminologyCapabilities r, FhirString value) { r.Title = value; return r; }
        public static TerminologyCapabilities WithTranslation(this TerminologyCapabilities r, BackboneElement value) { r.Translation = value; return r; }
        public static TerminologyCapabilities WithUrl(this TerminologyCapabilities r, FhirUri value) { r.Url = value; return r; }
        public static TerminologyCapabilities AddUseContext(this TerminologyCapabilities r, UsageContext item) { r.UseContext ??= new List<UsageContext>(); r.UseContext!.Add(item); return r; }
        public static TerminologyCapabilities WithValidateCode(this TerminologyCapabilities r, BackboneElement value) { r.ValidateCode = value; return r; }
        public static TerminologyCapabilities WithVersion(this TerminologyCapabilities r, FhirString value) { r.Version = value; return r; }
        public static TerminologyCapabilities WithVersionAlgorithmString(this TerminologyCapabilities r, FhirString value) { r.VersionAlgorithmString = value; return r; }
        public static TerminologyCapabilities WithVersionAlgorithmCoding(this TerminologyCapabilities r, Coding value) { r.VersionAlgorithmCoding = value; return r; }
    }
}
