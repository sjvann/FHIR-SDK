// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// Adds metadata-supported comments, classifiers or ratings related to a Resource
    /// </summary>
    public partial class ArtifactAssessment : ResourceBase
    {
        public override string ResourceType => "ArtifactAssessment";

        public ArtifactAssessment() { }
        public ArtifactAssessment(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public ArtifactAssessment(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private FhirDate? _approvalDate;
        [JsonPropertyName("approvalDate")]
        public FhirDate? ApprovalDate { get => _approvalDate; set { _approvalDate = value; OnPropertyChangedByClr(nameof(ApprovalDate), value); } }

        private ReferenceType? _artifactReference;
        [JsonPropertyName("artifactReference")]
        public ReferenceType? ArtifactReference { get => _artifactReference; set { _artifactReference = value; if (value != null) {{ _artifactcanonical = null; OnPropertyChangedByClr(nameof(Artifactcanonical), null); _artifacturi = null; OnPropertyChangedByClr(nameof(Artifacturi), null); }}; OnPropertyChangedByClr(nameof(ArtifactReference), value); } }

        private FhirCanonical? _artifactcanonical;
        [JsonPropertyName("artifactcanonical")]
        public FhirCanonical? Artifactcanonical { get => _artifactcanonical; set { _artifactcanonical = value; if (value != null) {{ _artifactReference = null; OnPropertyChangedByClr(nameof(ArtifactReference), null); _artifacturi = null; OnPropertyChangedByClr(nameof(Artifacturi), null); }}; OnPropertyChangedByClr(nameof(Artifactcanonical), value); } }

        private FhirUri? _artifacturi;
        [JsonPropertyName("artifacturi")]
        public FhirUri? Artifacturi { get => _artifacturi; set { _artifacturi = value; if (value != null) {{ _artifactReference = null; OnPropertyChangedByClr(nameof(ArtifactReference), null); _artifactcanonical = null; OnPropertyChangedByClr(nameof(Artifactcanonical), null); }}; OnPropertyChangedByClr(nameof(Artifacturi), value); } }

        private ReferenceType? _citeAsReference;
        [JsonPropertyName("citeAsReference")]
        public ReferenceType? CiteAsReference { get => _citeAsReference; set { _citeAsReference = value; if (value != null) {{ _citeAsmarkdown = null; OnPropertyChangedByClr(nameof(CiteAsmarkdown), null); }}; OnPropertyChangedByClr(nameof(CiteAsReference), value); } }

        private FhirMarkdown? _citeAsmarkdown;
        [JsonPropertyName("citeAsmarkdown")]
        public FhirMarkdown? CiteAsmarkdown { get => _citeAsmarkdown; set { _citeAsmarkdown = value; if (value != null) {{ _citeAsReference = null; OnPropertyChangedByClr(nameof(CiteAsReference), null); }}; OnPropertyChangedByClr(nameof(CiteAsmarkdown), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private List<ArtifactAssessment_Content>? _content;
        [JsonPropertyName("content")]
        public List<ArtifactAssessment_Content>? Content { get => _content; set { _content = value; OnPropertyChangedByClr(nameof(Content), value); } }

        /// <summary>
        /// Comment, classifier, or rating content
        /// </summary>
        public partial class ArtifactAssessment_Content : BackboneElement<ArtifactAssessment_Content>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ArtifactAssessment_Content" : "artifactAssessment_Content";
            private ReferenceType? _author;
        [JsonPropertyName("author")]
        public ReferenceType? Author { get => _author; set { _author = value; } }

            private List<CodeableConcept>? _classifier;
        [JsonPropertyName("classifier")]
        public List<CodeableConcept>? Classifier { get => _classifier; set { _classifier = value; } }

            private List<FhirString>? _component;
        [JsonPropertyName("component")]
        public List<FhirString>? Component { get => _component; set { _component = value; } }

            private FhirBoolean? _freeToShare;
        [JsonPropertyName("freeToShare")]
        public FhirBoolean? FreeToShare { get => _freeToShare; set { _freeToShare = value; } }

            private FhirCode? _informationType;
        [JsonPropertyName("informationType")]
        public FhirCode? InformationType { get => _informationType; set { _informationType = value; } }

            private List<FhirUri>? _path;
        [JsonPropertyName("path")]
        public List<FhirUri>? Path { get => _path; set { _path = value; } }

            private Quantity? _quantity;
        [JsonPropertyName("quantity")]
        public Quantity? Quantity { get => _quantity; set { _quantity = value; } }

            private List<RelatedArtifact>? _relatedArtifact;
        [JsonPropertyName("relatedArtifact")]
        public List<RelatedArtifact>? RelatedArtifact { get => _relatedArtifact; set { _relatedArtifact = value; } }

            private FhirMarkdown? _summary;
        [JsonPropertyName("summary")]
        public FhirMarkdown? Summary { get => _summary; set { _summary = value; } }

            private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept? Type { get => _type; set { _type = value; } }

        }

        private FhirMarkdown? _copyright;
        [JsonPropertyName("copyright")]
        public FhirMarkdown? Copyright { get => _copyright; set { _copyright = value; OnPropertyChangedByClr(nameof(Copyright), value); } }

        private FhirDateTime? _date;
        [JsonPropertyName("date")]
        public FhirDateTime? Date { get => _date; set { _date = value; OnPropertyChangedByClr(nameof(Date), value); } }

        private FhirCode? _disposition;
        [JsonPropertyName("disposition")]
        public FhirCode? Disposition { get => _disposition; set { _disposition = value; OnPropertyChangedByClr(nameof(Disposition), value); } }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private FhirDate? _lastReviewDate;
        [JsonPropertyName("lastReviewDate")]
        public FhirDate? LastReviewDate { get => _lastReviewDate; set { _lastReviewDate = value; OnPropertyChangedByClr(nameof(LastReviewDate), value); } }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

        private FhirString? _title;
        [JsonPropertyName("title")]
        public FhirString? Title { get => _title; set { _title = value; OnPropertyChangedByClr(nameof(Title), value); } }

        private FhirCode? _workflowStatus;
        [JsonPropertyName("workflowStatus")]
        public FhirCode? WorkflowStatus { get => _workflowStatus; set { _workflowStatus = value; OnPropertyChangedByClr(nameof(WorkflowStatus), value); } }

    }
}
