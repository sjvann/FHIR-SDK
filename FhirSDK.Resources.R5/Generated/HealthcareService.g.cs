// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// The details of a healthcare service available at a location
    /// </summary>
    public partial class HealthcareService : ResourceBase
    {
        public override string ResourceType => "HealthcareService";

        public HealthcareService() { }
        public HealthcareService(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public HealthcareService(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private FhirBoolean? _active;
        [JsonPropertyName("active")]
        public FhirBoolean? Active { get => _active; set { _active = value; OnPropertyChangedByClr(nameof(Active), value); } }

        private FhirBoolean? _appointmentRequired;
        [JsonPropertyName("appointmentRequired")]
        public FhirBoolean? AppointmentRequired { get => _appointmentRequired; set { _appointmentRequired = value; OnPropertyChangedByClr(nameof(AppointmentRequired), value); } }

        private List<Availability>? _availability;
        [JsonPropertyName("availability")]
        public List<Availability>? Availability { get => _availability; set { _availability = value; OnPropertyChangedByClr(nameof(Availability), value); } }

        private List<CodeableConcept>? _category;
        [JsonPropertyName("category")]
        public List<CodeableConcept>? Category { get => _category; set { _category = value; OnPropertyChangedByClr(nameof(Category), value); } }

        private List<CodeableConcept>? _characteristic;
        [JsonPropertyName("characteristic")]
        public List<CodeableConcept>? Characteristic { get => _characteristic; set { _characteristic = value; OnPropertyChangedByClr(nameof(Characteristic), value); } }

        private FhirMarkdown? _comment;
        [JsonPropertyName("comment")]
        public FhirMarkdown? Comment { get => _comment; set { _comment = value; OnPropertyChangedByClr(nameof(Comment), value); } }

        private List<CodeableConcept>? _communication;
        [JsonPropertyName("communication")]
        public List<CodeableConcept>? Communication { get => _communication; set { _communication = value; OnPropertyChangedByClr(nameof(Communication), value); } }

        private List<ExtendedContactDetail>? _contact;
        [JsonPropertyName("contact")]
        public List<ExtendedContactDetail>? Contact { get => _contact; set { _contact = value; OnPropertyChangedByClr(nameof(Contact), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private List<ReferenceType>? _coverageArea;
        [JsonPropertyName("coverageArea")]
        public List<ReferenceType>? CoverageArea { get => _coverageArea; set { _coverageArea = value; OnPropertyChangedByClr(nameof(CoverageArea), value); } }

        private List<HealthcareService_Eligibility>? _eligibility;
        [JsonPropertyName("eligibility")]
        public List<HealthcareService_Eligibility>? Eligibility { get => _eligibility; set { _eligibility = value; OnPropertyChangedByClr(nameof(Eligibility), value); } }

        /// <summary>
        /// Specific eligibility requirements required to use the service
        /// </summary>
        public partial class HealthcareService_Eligibility : BackboneElement<HealthcareService_Eligibility>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "HealthcareService_Eligibility" : "healthcareService_Eligibility";
            private CodeableConcept? _code;
        [JsonPropertyName("code")]
        public CodeableConcept? Code { get => _code; set { _code = value; } }

            private FhirMarkdown? _comment;
        [JsonPropertyName("comment")]
        public FhirMarkdown? Comment { get => _comment; set { _comment = value; } }

        }

        private List<ReferenceType>? _endpoint;
        [JsonPropertyName("endpoint")]
        public List<ReferenceType>? Endpoint { get => _endpoint; set { _endpoint = value; OnPropertyChangedByClr(nameof(Endpoint), value); } }

        private FhirMarkdown? _extraDetails;
        [JsonPropertyName("extraDetails")]
        public FhirMarkdown? ExtraDetails { get => _extraDetails; set { _extraDetails = value; OnPropertyChangedByClr(nameof(ExtraDetails), value); } }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private List<ReferenceType>? _location;
        [JsonPropertyName("location")]
        public List<ReferenceType>? Location { get => _location; set { _location = value; OnPropertyChangedByClr(nameof(Location), value); } }

        private FhirString? _name;
        [JsonPropertyName("name")]
        public FhirString? Name { get => _name; set { _name = value; OnPropertyChangedByClr(nameof(Name), value); } }

        private List<ReferenceType>? _offeredIn;
        [JsonPropertyName("offeredIn")]
        public List<ReferenceType>? OfferedIn { get => _offeredIn; set { _offeredIn = value; OnPropertyChangedByClr(nameof(OfferedIn), value); } }

        private Attachment? _photo;
        [JsonPropertyName("photo")]
        public Attachment? Photo { get => _photo; set { _photo = value; OnPropertyChangedByClr(nameof(Photo), value); } }

        private List<CodeableConcept>? _program;
        [JsonPropertyName("program")]
        public List<CodeableConcept>? Program { get => _program; set { _program = value; OnPropertyChangedByClr(nameof(Program), value); } }

        private ReferenceType? _providedBy;
        [JsonPropertyName("providedBy")]
        public ReferenceType? ProvidedBy { get => _providedBy; set { _providedBy = value; OnPropertyChangedByClr(nameof(ProvidedBy), value); } }

        private List<CodeableConcept>? _referralMethod;
        [JsonPropertyName("referralMethod")]
        public List<CodeableConcept>? ReferralMethod { get => _referralMethod; set { _referralMethod = value; OnPropertyChangedByClr(nameof(ReferralMethod), value); } }

        private List<CodeableConcept>? _serviceProvisionCode;
        [JsonPropertyName("serviceProvisionCode")]
        public List<CodeableConcept>? ServiceProvisionCode { get => _serviceProvisionCode; set { _serviceProvisionCode = value; OnPropertyChangedByClr(nameof(ServiceProvisionCode), value); } }

        private List<CodeableConcept>? _specialty;
        [JsonPropertyName("specialty")]
        public List<CodeableConcept>? Specialty { get => _specialty; set { _specialty = value; OnPropertyChangedByClr(nameof(Specialty), value); } }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

        private List<CodeableConcept>? _type;
        [JsonPropertyName("type")]
        public List<CodeableConcept>? Type { get => _type; set { _type = value; OnPropertyChangedByClr(nameof(Type), value); } }

    }
}
