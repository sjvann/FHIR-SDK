// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class NutritionIntakeFluentExtensions
    {
        public static NutritionIntake AddBasedOn(this NutritionIntake r, ReferenceType item) { r.BasedOn ??= new List<ReferenceType>(); r.BasedOn!.Add(item); return r; }
        public static NutritionIntake WithCode(this NutritionIntake r, CodeableConcept value) { r.Code = value; return r; }
        public static NutritionIntake AddConsumedItem(this NutritionIntake r, BackboneElement item) { r.ConsumedItem ??= new List<BackboneElement>(); r.ConsumedItem!.Add(item); return r; }
        public static NutritionIntake AddContained(this NutritionIntake r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static NutritionIntake AddDerivedFrom(this NutritionIntake r, ReferenceType item) { r.DerivedFrom ??= new List<ReferenceType>(); r.DerivedFrom!.Add(item); return r; }
        public static NutritionIntake WithEncounter(this NutritionIntake r, ReferenceType value) { r.Encounter = value; return r; }
        public static NutritionIntake AddIdentifier(this NutritionIntake r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static NutritionIntake AddIngredientLabel(this NutritionIntake r, BackboneElement item) { r.IngredientLabel ??= new List<BackboneElement>(); r.IngredientLabel!.Add(item); return r; }
        public static NutritionIntake AddInstantiatesCanonical(this NutritionIntake r, FhirCanonical item) { r.InstantiatesCanonical ??= new List<FhirCanonical>(); r.InstantiatesCanonical!.Add(item); return r; }
        public static NutritionIntake AddInstantiatesUri(this NutritionIntake r, FhirUri item) { r.InstantiatesUri ??= new List<FhirUri>(); r.InstantiatesUri!.Add(item); return r; }
        public static NutritionIntake WithLocation(this NutritionIntake r, ReferenceType value) { r.Location = value; return r; }
        public static NutritionIntake AddNote(this NutritionIntake r, Annotation item) { r.Note ??= new List<Annotation>(); r.Note!.Add(item); return r; }
        public static NutritionIntake WithOccurrenceDateTime(this NutritionIntake r, FhirDateTime value) { r.OccurrenceDateTime = value; return r; }
        public static NutritionIntake WithOccurrencePeriod(this NutritionIntake r, Period value) { r.OccurrencePeriod = value; return r; }
        public static NutritionIntake AddPartOf(this NutritionIntake r, ReferenceType item) { r.PartOf ??= new List<ReferenceType>(); r.PartOf!.Add(item); return r; }
        public static NutritionIntake AddPerformer(this NutritionIntake r, BackboneElement item) { r.Performer ??= new List<BackboneElement>(); r.Performer!.Add(item); return r; }
        public static NutritionIntake AddReason(this NutritionIntake r, CodeableReference item) { r.Reason ??= new List<CodeableReference>(); r.Reason!.Add(item); return r; }
        public static NutritionIntake WithRecorded(this NutritionIntake r, FhirDateTime value) { r.Recorded = value; return r; }
        public static NutritionIntake WithReportedBoolean(this NutritionIntake r, FhirBoolean value) { r.ReportedBoolean = value; return r; }
        public static NutritionIntake WithReportedReference(this NutritionIntake r, ReferenceType value) { r.ReportedReference = value; return r; }
        public static NutritionIntake WithStatus(this NutritionIntake r, FhirCode value) { r.Status = value; return r; }
        public static NutritionIntake AddStatusReason(this NutritionIntake r, CodeableConcept item) { r.StatusReason ??= new List<CodeableConcept>(); r.StatusReason!.Add(item); return r; }
        public static NutritionIntake WithSubject(this NutritionIntake r, ReferenceType value) { r.Subject = value; return r; }
        public static NutritionIntake WithText(this NutritionIntake r, Narrative value) { r.Text = value; return r; }
    }
}
