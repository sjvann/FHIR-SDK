// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// Sample for analysis
    /// </summary>
    public partial class Specimen : ResourceBase
    {
        public override string ResourceType => "Specimen";

        public Specimen() { }
        public Specimen(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public Specimen(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private Identifier? _accessionIdentifier;
        [JsonPropertyName("accessionIdentifier")]
        public Identifier? AccessionIdentifier { get => _accessionIdentifier; set { _accessionIdentifier = value; OnPropertyChangedByClr(nameof(AccessionIdentifier), value); } }

        private Specimen_Collection? _collection;
        [JsonPropertyName("collection")]
        public Specimen_Collection? Collection { get => _collection; set { _collection = value; OnPropertyChangedByClr(nameof(Collection), value); } }

        /// <summary>
        /// Collection details
        /// </summary>
        public partial class Specimen_Collection : BackboneElement<Specimen_Collection>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Specimen_Collection" : "specimen_Collection";
            private CodeableReference? _bodySite;
        [JsonPropertyName("bodySite")]
        public CodeableReference? BodySite { get => _bodySite; set { _bodySite = value; } }

            private FhirDateTime? _collectedDateTime;
        [JsonPropertyName("collectedDateTime")]
        public FhirDateTime? CollectedDateTime { get => _collectedDateTime; set { _collectedDateTime = value; if (value != null) {{ _collectedPeriod = null; OnPropertyChanged("collectedPeriod", null); }}; OnPropertyChanged("collectedDateTime", value); } }

            private Period? _collectedPeriod;
        [JsonPropertyName("collectedPeriod")]
        public Period? CollectedPeriod { get => _collectedPeriod; set { _collectedPeriod = value; if (value != null) {{ _collectedDateTime = null; OnPropertyChanged("collectedDateTime", null); }}; OnPropertyChanged("collectedPeriod", value); } }

            private ReferenceType? _collector;
        [JsonPropertyName("collector")]
        public ReferenceType? Collector { get => _collector; set { _collector = value; } }

            private CodeableReference? _device;
        [JsonPropertyName("device")]
        public CodeableReference? Device { get => _device; set { _device = value; } }

            private Duration? _duration;
        [JsonPropertyName("duration")]
        public Duration? Duration { get => _duration; set { _duration = value; } }

            private CodeableConcept? _fastingStatusCodeableConcept;
        [JsonPropertyName("fastingStatusCodeableConcept")]
        public CodeableConcept? FastingStatusCodeableConcept { get => _fastingStatusCodeableConcept; set { _fastingStatusCodeableConcept = value; if (value != null) {{ _fastingStatusDuration = null; OnPropertyChanged("fastingStatusDuration", null); }}; OnPropertyChanged("fastingStatusCodeableConcept", value); } }

            private Duration? _fastingStatusDuration;
        [JsonPropertyName("fastingStatusDuration")]
        public Duration? FastingStatusDuration { get => _fastingStatusDuration; set { _fastingStatusDuration = value; if (value != null) {{ _fastingStatusCodeableConcept = null; OnPropertyChanged("fastingStatusCodeableConcept", null); }}; OnPropertyChanged("fastingStatusDuration", value); } }

            private CodeableConcept? _method;
        [JsonPropertyName("method")]
        public CodeableConcept? Method { get => _method; set { _method = value; } }

            private ReferenceType? _procedure;
        [JsonPropertyName("procedure")]
        public ReferenceType? Procedure { get => _procedure; set { _procedure = value; } }

            private Quantity? _quantity;
        [JsonPropertyName("quantity")]
        public Quantity? Quantity { get => _quantity; set { _quantity = value; } }

        }

        private FhirCode? _combined;
        [JsonPropertyName("combined")]
        public FhirCode? Combined { get => _combined; set { _combined = value; OnPropertyChangedByClr(nameof(Combined), value); } }

        private List<CodeableConcept>? _condition;
        [JsonPropertyName("condition")]
        public List<CodeableConcept>? Condition { get => _condition; set { _condition = value; OnPropertyChangedByClr(nameof(Condition), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private List<Specimen_Container>? _container;
        [JsonPropertyName("container")]
        public List<Specimen_Container>? Container { get => _container; set { _container = value; OnPropertyChangedByClr(nameof(Container), value); } }

        /// <summary>
        /// Direct container of specimen (tube/slide, etc.)
        /// </summary>
        public partial class Specimen_Container : BackboneElement<Specimen_Container>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Specimen_Container" : "specimen_Container";
            private ReferenceType? _device;
        [JsonPropertyName("device")]
        public ReferenceType Device { get => _device ?? throw new InvalidOperationException("Device is required"); set { _device = value; } }

            private ReferenceType? _location;
        [JsonPropertyName("location")]
        public ReferenceType? Location { get => _location; set { _location = value; } }

            private Quantity? _specimenQuantity;
        [JsonPropertyName("specimenQuantity")]
        public Quantity? SpecimenQuantity { get => _specimenQuantity; set { _specimenQuantity = value; } }

        }

        private List<Specimen_Feature>? _feature;
        [JsonPropertyName("feature")]
        public List<Specimen_Feature>? Feature { get => _feature; set { _feature = value; OnPropertyChangedByClr(nameof(Feature), value); } }

        /// <summary>
        /// The physical feature of a specimen
        /// </summary>
        public partial class Specimen_Feature : BackboneElement<Specimen_Feature>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Specimen_Feature" : "specimen_Feature";
            private FhirString? _description;
        [JsonPropertyName("description")]
        public FhirString Description { get => _description ?? throw new InvalidOperationException("Description is required"); set { _description = value; } }

            private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept Type { get => _type ?? throw new InvalidOperationException("Type is required"); set { _type = value; } }

        }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private List<Annotation>? _note;
        [JsonPropertyName("note")]
        public List<Annotation>? Note { get => _note; set { _note = value; OnPropertyChangedByClr(nameof(Note), value); } }

        private List<ReferenceType>? _parent;
        [JsonPropertyName("parent")]
        public List<ReferenceType>? Parent { get => _parent; set { _parent = value; OnPropertyChangedByClr(nameof(Parent), value); } }

        private List<Specimen_Processing>? _processing;
        [JsonPropertyName("processing")]
        public List<Specimen_Processing>? Processing { get => _processing; set { _processing = value; OnPropertyChangedByClr(nameof(Processing), value); } }

        /// <summary>
        /// Processing and processing step details
        /// </summary>
        public partial class Specimen_Processing : BackboneElement<Specimen_Processing>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Specimen_Processing" : "specimen_Processing";
            private List<ReferenceType>? _additive;
        [JsonPropertyName("additive")]
        public List<ReferenceType>? Additive { get => _additive; set { _additive = value; } }

            private FhirString? _description;
        [JsonPropertyName("description")]
        public FhirString? Description { get => _description; set { _description = value; } }

            private CodeableConcept? _method;
        [JsonPropertyName("method")]
        public CodeableConcept? Method { get => _method; set { _method = value; } }

            private FhirDateTime? _timeDateTime;
        [JsonPropertyName("timeDateTime")]
        public FhirDateTime? TimeDateTime { get => _timeDateTime; set { _timeDateTime = value; if (value != null) {{ _timePeriod = null; OnPropertyChanged("timePeriod", null); }}; OnPropertyChanged("timeDateTime", value); } }

            private Period? _timePeriod;
        [JsonPropertyName("timePeriod")]
        public Period? TimePeriod { get => _timePeriod; set { _timePeriod = value; if (value != null) {{ _timeDateTime = null; OnPropertyChanged("timeDateTime", null); }}; OnPropertyChanged("timePeriod", value); } }

        }

        private FhirDateTime? _receivedTime;
        [JsonPropertyName("receivedTime")]
        public FhirDateTime? ReceivedTime { get => _receivedTime; set { _receivedTime = value; OnPropertyChangedByClr(nameof(ReceivedTime), value); } }

        private List<ReferenceType>? _request;
        [JsonPropertyName("request")]
        public List<ReferenceType>? Request { get => _request; set { _request = value; OnPropertyChangedByClr(nameof(Request), value); } }

        private List<CodeableConcept>? _role;
        [JsonPropertyName("role")]
        public List<CodeableConcept>? Role { get => _role; set { _role = value; OnPropertyChangedByClr(nameof(Role), value); } }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode? Status { get => _status; set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private ReferenceType? _subject;
        [JsonPropertyName("subject")]
        public ReferenceType? Subject { get => _subject; set { _subject = value; OnPropertyChangedByClr(nameof(Subject), value); } }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

        private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept? Type { get => _type; set { _type = value; OnPropertyChangedByClr(nameof(Type), value); } }

    }
}
