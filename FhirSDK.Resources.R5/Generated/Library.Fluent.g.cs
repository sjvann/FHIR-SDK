// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class LibraryFluentExtensions
    {
        public static Library WithApprovalDate(this Library r, FhirDate value) { r.ApprovalDate = value; return r; }
        public static Library AddAuthor(this Library r, ContactDetail item) { r.Author ??= new List<ContactDetail>(); r.Author!.Add(item); return r; }
        public static Library AddContact(this Library r, ContactDetail item) { r.Contact ??= new List<ContactDetail>(); r.Contact!.Add(item); return r; }
        public static Library AddContained(this Library r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static Library AddContent(this Library r, Attachment item) { r.Content ??= new List<Attachment>(); r.Content!.Add(item); return r; }
        public static Library WithCopyright(this Library r, FhirMarkdown value) { r.Copyright = value; return r; }
        public static Library WithCopyrightLabel(this Library r, FhirString value) { r.CopyrightLabel = value; return r; }
        public static Library AddDataRequirement(this Library r, DataRequirement item) { r.DataRequirement ??= new List<DataRequirement>(); r.DataRequirement!.Add(item); return r; }
        public static Library WithDate(this Library r, FhirDateTime value) { r.Date = value; return r; }
        public static Library WithDescription(this Library r, FhirMarkdown value) { r.Description = value; return r; }
        public static Library AddEditor(this Library r, ContactDetail item) { r.Editor ??= new List<ContactDetail>(); r.Editor!.Add(item); return r; }
        public static Library WithEffectivePeriod(this Library r, Period value) { r.EffectivePeriod = value; return r; }
        public static Library AddEndorser(this Library r, ContactDetail item) { r.Endorser ??= new List<ContactDetail>(); r.Endorser!.Add(item); return r; }
        public static Library WithExperimental(this Library r, FhirBoolean value) { r.Experimental = value; return r; }
        public static Library AddIdentifier(this Library r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static Library AddJurisdiction(this Library r, CodeableConcept item) { r.Jurisdiction ??= new List<CodeableConcept>(); r.Jurisdiction!.Add(item); return r; }
        public static Library WithLastReviewDate(this Library r, FhirDate value) { r.LastReviewDate = value; return r; }
        public static Library WithName(this Library r, FhirString value) { r.Name = value; return r; }
        public static Library AddParameter(this Library r, ParameterDefinition item) { r.Parameter ??= new List<ParameterDefinition>(); r.Parameter!.Add(item); return r; }
        public static Library WithPublisher(this Library r, FhirString value) { r.Publisher = value; return r; }
        public static Library WithPurpose(this Library r, FhirMarkdown value) { r.Purpose = value; return r; }
        public static Library AddRelatedArtifact(this Library r, RelatedArtifact item) { r.RelatedArtifact ??= new List<RelatedArtifact>(); r.RelatedArtifact!.Add(item); return r; }
        public static Library AddReviewer(this Library r, ContactDetail item) { r.Reviewer ??= new List<ContactDetail>(); r.Reviewer!.Add(item); return r; }
        public static Library WithStatus(this Library r, FhirCode value) { r.Status = value; return r; }
        public static Library WithSubjectCodeableConcept(this Library r, CodeableConcept value) { r.SubjectCodeableConcept = value; return r; }
        public static Library WithSubjectReference(this Library r, ReferenceType value) { r.SubjectReference = value; return r; }
        public static Library WithSubtitle(this Library r, FhirString value) { r.Subtitle = value; return r; }
        public static Library WithText(this Library r, Narrative value) { r.Text = value; return r; }
        public static Library WithTitle(this Library r, FhirString value) { r.Title = value; return r; }
        public static Library AddTopic(this Library r, CodeableConcept item) { r.Topic ??= new List<CodeableConcept>(); r.Topic!.Add(item); return r; }
        public static Library WithType(this Library r, CodeableConcept value) { r.Type = value; return r; }
        public static Library WithUrl(this Library r, FhirUri value) { r.Url = value; return r; }
        public static Library WithUsage(this Library r, FhirMarkdown value) { r.Usage = value; return r; }
        public static Library AddUseContext(this Library r, UsageContext item) { r.UseContext ??= new List<UsageContext>(); r.UseContext!.Add(item); return r; }
        public static Library WithVersion(this Library r, FhirString value) { r.Version = value; return r; }
        public static Library WithVersionAlgorithmString(this Library r, FhirString value) { r.VersionAlgorithmString = value; return r; }
        public static Library WithVersionAlgorithmCoding(this Library r, Coding value) { r.VersionAlgorithmCoding = value; return r; }
    }
}
