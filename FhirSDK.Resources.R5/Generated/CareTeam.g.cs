// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// Planned participants in the coordination and delivery of care
    /// </summary>
    public partial class CareTeam : ResourceBase
    {
        public override string ResourceType => "CareTeam";

        public CareTeam() { }
        public CareTeam(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public CareTeam(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private List<CodeableConcept>? _category;
        [JsonPropertyName("category")]
        public List<CodeableConcept>? Category { get => _category; set { _category = value; OnPropertyChangedByClr(nameof(Category), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private List<ReferenceType>? _managingOrganization;
        [JsonPropertyName("managingOrganization")]
        public List<ReferenceType>? ManagingOrganization { get => _managingOrganization; set { _managingOrganization = value; OnPropertyChangedByClr(nameof(ManagingOrganization), value); } }

        private FhirString? _name;
        [JsonPropertyName("name")]
        public FhirString? Name { get => _name; set { _name = value; OnPropertyChangedByClr(nameof(Name), value); } }

        private List<Annotation>? _note;
        [JsonPropertyName("note")]
        public List<Annotation>? Note { get => _note; set { _note = value; OnPropertyChangedByClr(nameof(Note), value); } }

        private List<CareTeam_Participant>? _participant;
        [JsonPropertyName("participant")]
        public List<CareTeam_Participant>? Participant { get => _participant; set { _participant = value; OnPropertyChangedByClr(nameof(Participant), value); } }

        /// <summary>
        /// Members of the team
        /// </summary>
        public partial class CareTeam_Participant : BackboneElement<CareTeam_Participant>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "CareTeam_Participant" : "careTeam_Participant";
            private Period? _coveragePeriod;
        [JsonPropertyName("coveragePeriod")]
        public Period? CoveragePeriod { get => _coveragePeriod; set { _coveragePeriod = value; if (value != null) {{ _coverageTiming = null; OnPropertyChanged("coverageTiming", null); }}; OnPropertyChanged("coveragePeriod", value); } }

            private Timing? _coverageTiming;
        [JsonPropertyName("coverageTiming")]
        public Timing? CoverageTiming { get => _coverageTiming; set { _coverageTiming = value; if (value != null) {{ _coveragePeriod = null; OnPropertyChanged("coveragePeriod", null); }}; OnPropertyChanged("coverageTiming", value); } }

            private ReferenceType? _member;
        [JsonPropertyName("member")]
        public ReferenceType? Member { get => _member; set { _member = value; } }

            private ReferenceType? _onBehalfOf;
        [JsonPropertyName("onBehalfOf")]
        public ReferenceType? OnBehalfOf { get => _onBehalfOf; set { _onBehalfOf = value; } }

            private CodeableConcept? _role;
        [JsonPropertyName("role")]
        public CodeableConcept? Role { get => _role; set { _role = value; } }

        }

        private Period? _period;
        [JsonPropertyName("period")]
        public Period? Period { get => _period; set { _period = value; OnPropertyChangedByClr(nameof(Period), value); } }

        private List<CodeableReference>? _reason;
        [JsonPropertyName("reason")]
        public List<CodeableReference>? Reason { get => _reason; set { _reason = value; OnPropertyChangedByClr(nameof(Reason), value); } }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode? Status { get => _status; set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private ReferenceType? _subject;
        [JsonPropertyName("subject")]
        public ReferenceType? Subject { get => _subject; set { _subject = value; OnPropertyChangedByClr(nameof(Subject), value); } }

        private List<ContactPoint>? _telecom;
        [JsonPropertyName("telecom")]
        public List<ContactPoint>? Telecom { get => _telecom; set { _telecom = value; OnPropertyChangedByClr(nameof(Telecom), value); } }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

    }
}
