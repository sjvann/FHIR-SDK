// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class FamilyMemberHistoryFluentExtensions
    {
        public static FamilyMemberHistory WithAgeAge(this FamilyMemberHistory r, Age value) { r.AgeAge = value; return r; }
        public static FamilyMemberHistory WithAgeRange(this FamilyMemberHistory r, DataTypeServices.DataTypes.ComplexTypes.Range value) { r.AgeRange = value; return r; }
        public static FamilyMemberHistory WithAgeString(this FamilyMemberHistory r, FhirString value) { r.AgeString = value; return r; }
        public static FamilyMemberHistory WithBornPeriod(this FamilyMemberHistory r, Period value) { r.BornPeriod = value; return r; }
        public static FamilyMemberHistory WithBorndate(this FamilyMemberHistory r, FhirDate value) { r.Borndate = value; return r; }
        public static FamilyMemberHistory WithBornString(this FamilyMemberHistory r, FhirString value) { r.BornString = value; return r; }
        public static FamilyMemberHistory AddCondition(this FamilyMemberHistory r, BackboneElement item) { r.Condition ??= new List<BackboneElement>(); r.Condition!.Add(item); return r; }
        public static FamilyMemberHistory AddContained(this FamilyMemberHistory r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static FamilyMemberHistory WithDataAbsentReason(this FamilyMemberHistory r, CodeableConcept value) { r.DataAbsentReason = value; return r; }
        public static FamilyMemberHistory WithDate(this FamilyMemberHistory r, FhirDateTime value) { r.Date = value; return r; }
        public static FamilyMemberHistory WithDeceasedBoolean(this FamilyMemberHistory r, FhirBoolean value) { r.DeceasedBoolean = value; return r; }
        public static FamilyMemberHistory WithDeceasedAge(this FamilyMemberHistory r, Age value) { r.DeceasedAge = value; return r; }
        public static FamilyMemberHistory WithDeceasedRange(this FamilyMemberHistory r, DataTypeServices.DataTypes.ComplexTypes.Range value) { r.DeceasedRange = value; return r; }
        public static FamilyMemberHistory WithDeceaseddate(this FamilyMemberHistory r, FhirDate value) { r.Deceaseddate = value; return r; }
        public static FamilyMemberHistory WithDeceasedString(this FamilyMemberHistory r, FhirString value) { r.DeceasedString = value; return r; }
        public static FamilyMemberHistory WithEstimatedAge(this FamilyMemberHistory r, FhirBoolean value) { r.EstimatedAge = value; return r; }
        public static FamilyMemberHistory AddIdentifier(this FamilyMemberHistory r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static FamilyMemberHistory AddInstantiatesCanonical(this FamilyMemberHistory r, FhirCanonical item) { r.InstantiatesCanonical ??= new List<FhirCanonical>(); r.InstantiatesCanonical!.Add(item); return r; }
        public static FamilyMemberHistory AddInstantiatesUri(this FamilyMemberHistory r, FhirUri item) { r.InstantiatesUri ??= new List<FhirUri>(); r.InstantiatesUri!.Add(item); return r; }
        public static FamilyMemberHistory WithName(this FamilyMemberHistory r, FhirString value) { r.Name = value; return r; }
        public static FamilyMemberHistory AddNote(this FamilyMemberHistory r, Annotation item) { r.Note ??= new List<Annotation>(); r.Note!.Add(item); return r; }
        public static FamilyMemberHistory AddParticipant(this FamilyMemberHistory r, BackboneElement item) { r.Participant ??= new List<BackboneElement>(); r.Participant!.Add(item); return r; }
        public static FamilyMemberHistory WithPatient(this FamilyMemberHistory r, ReferenceType value) { r.Patient = value; return r; }
        public static FamilyMemberHistory AddProcedure(this FamilyMemberHistory r, BackboneElement item) { r.Procedure ??= new List<BackboneElement>(); r.Procedure!.Add(item); return r; }
        public static FamilyMemberHistory AddReason(this FamilyMemberHistory r, CodeableReference item) { r.Reason ??= new List<CodeableReference>(); r.Reason!.Add(item); return r; }
        public static FamilyMemberHistory WithRelationship(this FamilyMemberHistory r, CodeableConcept value) { r.Relationship = value; return r; }
        public static FamilyMemberHistory WithSex(this FamilyMemberHistory r, CodeableConcept value) { r.Sex = value; return r; }
        public static FamilyMemberHistory WithStatus(this FamilyMemberHistory r, FhirCode value) { r.Status = value; return r; }
        public static FamilyMemberHistory WithText(this FamilyMemberHistory r, Narrative value) { r.Text = value; return r; }
    }
}
