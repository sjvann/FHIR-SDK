// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class OrganizationFluentExtensions
    {
        public static Organization WithActive(this Organization r, FhirBoolean value) { r.Active = value; return r; }
        public static Organization AddAlias(this Organization r, FhirString item) { r.Alias ??= new List<FhirString>(); r.Alias!.Add(item); return r; }
        public static Organization AddContact(this Organization r, ExtendedContactDetail item) { r.Contact ??= new List<ExtendedContactDetail>(); r.Contact!.Add(item); return r; }
        public static Organization AddContained(this Organization r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static Organization WithDescription(this Organization r, FhirMarkdown value) { r.Description = value; return r; }
        public static Organization AddEndpoint(this Organization r, ReferenceType item) { r.Endpoint ??= new List<ReferenceType>(); r.Endpoint!.Add(item); return r; }
        public static Organization AddIdentifier(this Organization r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static Organization WithName(this Organization r, FhirString value) { r.Name = value; return r; }
        public static Organization WithPartOf(this Organization r, ReferenceType value) { r.PartOf = value; return r; }
        public static Organization AddQualification(this Organization r, BackboneElement item) { r.Qualification ??= new List<BackboneElement>(); r.Qualification!.Add(item); return r; }
        public static Organization WithText(this Organization r, Narrative value) { r.Text = value; return r; }
        public static Organization AddType(this Organization r, CodeableConcept item) { r.Type ??= new List<CodeableConcept>(); r.Type!.Add(item); return r; }
    }
}
