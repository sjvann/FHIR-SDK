// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// Tracks balance, charges, for patient or cost center
    /// </summary>
    public partial class Account : ResourceBase
    {
        public override string ResourceType => "Account";

        public Account() { }
        public Account(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public Account(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private List<Account_Balance>? _balance;
        [JsonPropertyName("balance")]
        public List<Account_Balance>? Balance { get => _balance; set { _balance = value; OnPropertyChangedByClr(nameof(Balance), value); } }

        /// <summary>
        /// Calculated account balance(s)
        /// </summary>
        public partial class Account_Balance : BackboneElement<Account_Balance>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Account_Balance" : "account_Balance";
            private CodeableConcept? _aggregate;
        [JsonPropertyName("aggregate")]
        public CodeableConcept? Aggregate { get => _aggregate; set { _aggregate = value; } }

            private Money? _amount;
        [JsonPropertyName("amount")]
        public Money Amount { get => _amount ?? throw new InvalidOperationException("Amount is required"); set { _amount = value; } }

            private FhirBoolean? _estimate;
        [JsonPropertyName("estimate")]
        public FhirBoolean? Estimate { get => _estimate; set { _estimate = value; } }

            private CodeableConcept? _term;
        [JsonPropertyName("term")]
        public CodeableConcept? Term { get => _term; set { _term = value; } }

        }

        private CodeableConcept? _billingStatus;
        [JsonPropertyName("billingStatus")]
        public CodeableConcept? BillingStatus { get => _billingStatus; set { _billingStatus = value; OnPropertyChangedByClr(nameof(BillingStatus), value); } }

        private FhirInstant? _calculatedAt;
        [JsonPropertyName("calculatedAt")]
        public FhirInstant? CalculatedAt { get => _calculatedAt; set { _calculatedAt = value; OnPropertyChangedByClr(nameof(CalculatedAt), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private List<Account_Coverage>? _coverage;
        [JsonPropertyName("coverage")]
        public List<Account_Coverage>? Coverage { get => _coverage; set { _coverage = value; OnPropertyChangedByClr(nameof(Coverage), value); } }

        /// <summary>
        /// The party(s) that are responsible for covering the payment of this account, and what order should they be applied to the account
        /// </summary>
        public partial class Account_Coverage : BackboneElement<Account_Coverage>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Account_Coverage" : "account_Coverage";
            private ReferenceType? _coverage;
        [JsonPropertyName("coverage")]
        public ReferenceType Coverage { get => _coverage ?? throw new InvalidOperationException("Coverage is required"); set { _coverage = value; } }

            private FhirPositiveInt? _priority;
        [JsonPropertyName("priority")]
        public FhirPositiveInt? Priority { get => _priority; set { _priority = value; } }

        }

        private CodeableConcept? _currency;
        [JsonPropertyName("currency")]
        public CodeableConcept? Currency { get => _currency; set { _currency = value; OnPropertyChangedByClr(nameof(Currency), value); } }

        private FhirMarkdown? _description;
        [JsonPropertyName("description")]
        public FhirMarkdown? Description { get => _description; set { _description = value; OnPropertyChangedByClr(nameof(Description), value); } }

        private List<Account_Diagnosis>? _diagnosis;
        [JsonPropertyName("diagnosis")]
        public List<Account_Diagnosis>? Diagnosis { get => _diagnosis; set { _diagnosis = value; OnPropertyChangedByClr(nameof(Diagnosis), value); } }

        /// <summary>
        /// The list of diagnoses relevant to this account
        /// </summary>
        public partial class Account_Diagnosis : BackboneElement<Account_Diagnosis>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Account_Diagnosis" : "account_Diagnosis";
            private CodeableReference? _condition;
        [JsonPropertyName("condition")]
        public CodeableReference Condition { get => _condition ?? throw new InvalidOperationException("Condition is required"); set { _condition = value; } }

            private FhirDateTime? _dateOfDiagnosis;
        [JsonPropertyName("dateOfDiagnosis")]
        public FhirDateTime? DateOfDiagnosis { get => _dateOfDiagnosis; set { _dateOfDiagnosis = value; } }

            private FhirBoolean? _onAdmission;
        [JsonPropertyName("onAdmission")]
        public FhirBoolean? OnAdmission { get => _onAdmission; set { _onAdmission = value; } }

            private List<CodeableConcept>? _packageCode;
        [JsonPropertyName("packageCode")]
        public List<CodeableConcept>? PackageCode { get => _packageCode; set { _packageCode = value; } }

            private FhirPositiveInt? _sequence;
        [JsonPropertyName("sequence")]
        public FhirPositiveInt? Sequence { get => _sequence; set { _sequence = value; } }

            private List<CodeableConcept>? _type;
        [JsonPropertyName("type")]
        public List<CodeableConcept>? Type { get => _type; set { _type = value; } }

        }

        private List<Account_Guarantor>? _guarantor;
        [JsonPropertyName("guarantor")]
        public List<Account_Guarantor>? Guarantor { get => _guarantor; set { _guarantor = value; OnPropertyChangedByClr(nameof(Guarantor), value); } }

        /// <summary>
        /// The parties ultimately responsible for balancing the Account
        /// </summary>
        public partial class Account_Guarantor : BackboneElement<Account_Guarantor>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Account_Guarantor" : "account_Guarantor";
            private FhirBoolean? _onHold;
        [JsonPropertyName("onHold")]
        public FhirBoolean? OnHold { get => _onHold; set { _onHold = value; } }

            private ReferenceType? _party;
        [JsonPropertyName("party")]
        public ReferenceType Party { get => _party ?? throw new InvalidOperationException("Party is required"); set { _party = value; } }

            private Period? _period;
        [JsonPropertyName("period")]
        public Period? Period { get => _period; set { _period = value; } }

        }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private FhirString? _name;
        [JsonPropertyName("name")]
        public FhirString? Name { get => _name; set { _name = value; OnPropertyChangedByClr(nameof(Name), value); } }

        private ReferenceType? _owner;
        [JsonPropertyName("owner")]
        public ReferenceType? Owner { get => _owner; set { _owner = value; OnPropertyChangedByClr(nameof(Owner), value); } }

        private List<Account_Procedure>? _procedure;
        [JsonPropertyName("procedure")]
        public List<Account_Procedure>? Procedure { get => _procedure; set { _procedure = value; OnPropertyChangedByClr(nameof(Procedure), value); } }

        /// <summary>
        /// The list of procedures relevant to this account
        /// </summary>
        public partial class Account_Procedure : BackboneElement<Account_Procedure>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Account_Procedure" : "account_Procedure";
            private CodeableReference? _code;
        [JsonPropertyName("code")]
        public CodeableReference Code { get => _code ?? throw new InvalidOperationException("Code is required"); set { _code = value; } }

            private FhirDateTime? _dateOfService;
        [JsonPropertyName("dateOfService")]
        public FhirDateTime? DateOfService { get => _dateOfService; set { _dateOfService = value; } }

            private List<ReferenceType>? _device;
        [JsonPropertyName("device")]
        public List<ReferenceType>? Device { get => _device; set { _device = value; } }

            private List<CodeableConcept>? _packageCode;
        [JsonPropertyName("packageCode")]
        public List<CodeableConcept>? PackageCode { get => _packageCode; set { _packageCode = value; } }

            private FhirPositiveInt? _sequence;
        [JsonPropertyName("sequence")]
        public FhirPositiveInt? Sequence { get => _sequence; set { _sequence = value; } }

            private List<CodeableConcept>? _type;
        [JsonPropertyName("type")]
        public List<CodeableConcept>? Type { get => _type; set { _type = value; } }

        }

        private List<Account_RelatedAccount>? _relatedAccount;
        [JsonPropertyName("relatedAccount")]
        public List<Account_RelatedAccount>? RelatedAccount { get => _relatedAccount; set { _relatedAccount = value; OnPropertyChangedByClr(nameof(RelatedAccount), value); } }

        /// <summary>
        /// Other associated accounts related to this account
        /// </summary>
        public partial class Account_RelatedAccount : BackboneElement<Account_RelatedAccount>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Account_RelatedAccount" : "account_RelatedAccount";
            private ReferenceType? _account;
        [JsonPropertyName("account")]
        public ReferenceType Account { get => _account ?? throw new InvalidOperationException("Account is required"); set { _account = value; } }

            private CodeableConcept? _relationship;
        [JsonPropertyName("relationship")]
        public CodeableConcept? Relationship { get => _relationship; set { _relationship = value; } }

        }

        private Period? _servicePeriod;
        [JsonPropertyName("servicePeriod")]
        public Period? ServicePeriod { get => _servicePeriod; set { _servicePeriod = value; OnPropertyChangedByClr(nameof(ServicePeriod), value); } }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode Status { get => _status ?? throw new InvalidOperationException("Status is required"); set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private List<ReferenceType>? _subject;
        [JsonPropertyName("subject")]
        public List<ReferenceType>? Subject { get => _subject; set { _subject = value; OnPropertyChangedByClr(nameof(Subject), value); } }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

        private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept? Type { get => _type; set { _type = value; OnPropertyChangedByClr(nameof(Type), value); } }

    }
}
