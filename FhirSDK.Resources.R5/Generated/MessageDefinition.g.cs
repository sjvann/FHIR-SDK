// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// A resource that defines a type of message that can be exchanged between systems
    /// </summary>
    public partial class MessageDefinition : ResourceBase
    {
        public override string ResourceType => "MessageDefinition";

        public MessageDefinition() { }
        public MessageDefinition(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public MessageDefinition(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private List<MessageDefinition_AllowedResponse>? _allowedResponse;
        [JsonPropertyName("allowedResponse")]
        public List<MessageDefinition_AllowedResponse>? AllowedResponse { get => _allowedResponse; set { _allowedResponse = value; OnPropertyChangedByClr(nameof(AllowedResponse), value); } }

        /// <summary>
        /// Responses to this message
        /// </summary>
        public partial class MessageDefinition_AllowedResponse : BackboneElement<MessageDefinition_AllowedResponse>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "MessageDefinition_AllowedResponse" : "messageDefinition_AllowedResponse";
            private FhirCanonical? _message;
        [JsonPropertyName("message")]
        public FhirCanonical Message { get => _message ?? throw new InvalidOperationException("Message is required"); set { _message = value; } }

            private FhirMarkdown? _situation;
        [JsonPropertyName("situation")]
        public FhirMarkdown? Situation { get => _situation; set { _situation = value; } }

        }

        private FhirCanonical? _base;
        [JsonPropertyName("base")]
        public FhirCanonical? Base { get => _base; set { _base = value; OnPropertyChangedByClr(nameof(Base), value); } }

        private FhirCode? _category;
        [JsonPropertyName("category")]
        public FhirCode? Category { get => _category; set { _category = value; OnPropertyChangedByClr(nameof(Category), value); } }

        private List<ContactDetail>? _contact;
        [JsonPropertyName("contact")]
        public List<ContactDetail>? Contact { get => _contact; set { _contact = value; OnPropertyChangedByClr(nameof(Contact), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private FhirMarkdown? _copyright;
        [JsonPropertyName("copyright")]
        public FhirMarkdown? Copyright { get => _copyright; set { _copyright = value; OnPropertyChangedByClr(nameof(Copyright), value); } }

        private FhirString? _copyrightLabel;
        [JsonPropertyName("copyrightLabel")]
        public FhirString? CopyrightLabel { get => _copyrightLabel; set { _copyrightLabel = value; OnPropertyChangedByClr(nameof(CopyrightLabel), value); } }

        private FhirDateTime? _date;
        [JsonPropertyName("date")]
        public FhirDateTime Date { get => _date ?? throw new InvalidOperationException("Date is required"); set { _date = value; OnPropertyChangedByClr(nameof(Date), value); } }

        private FhirMarkdown? _description;
        [JsonPropertyName("description")]
        public FhirMarkdown? Description { get => _description; set { _description = value; OnPropertyChangedByClr(nameof(Description), value); } }

        private Coding? _eventCoding;
        [JsonPropertyName("eventCoding")]
        public Coding? EventCoding { get => _eventCoding; set { _eventCoding = value; if (value != null) {{ _eventuri = null; OnPropertyChangedByClr(nameof(Eventuri), null); }}; OnPropertyChangedByClr(nameof(EventCoding), value); } }

        private FhirUri? _eventuri;
        [JsonPropertyName("eventuri")]
        public FhirUri? Eventuri { get => _eventuri; set { _eventuri = value; if (value != null) {{ _eventCoding = null; OnPropertyChangedByClr(nameof(EventCoding), null); }}; OnPropertyChangedByClr(nameof(Eventuri), value); } }

        private FhirBoolean? _experimental;
        [JsonPropertyName("experimental")]
        public FhirBoolean? Experimental { get => _experimental; set { _experimental = value; OnPropertyChangedByClr(nameof(Experimental), value); } }

        private List<MessageDefinition_Focus>? _focus;
        [JsonPropertyName("focus")]
        public List<MessageDefinition_Focus>? Focus { get => _focus; set { _focus = value; OnPropertyChangedByClr(nameof(Focus), value); } }

        /// <summary>
        /// Resource(s) that are the subject of the event
        /// </summary>
        public partial class MessageDefinition_Focus : BackboneElement<MessageDefinition_Focus>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "MessageDefinition_Focus" : "messageDefinition_Focus";
            private FhirCode? _code;
        [JsonPropertyName("code")]
        public FhirCode Code { get => _code ?? throw new InvalidOperationException("Code is required"); set { _code = value; } }

            private FhirString? _max;
        [JsonPropertyName("max")]
        public FhirString? Max { get => _max; set { _max = value; } }

            private FhirUnsignedInt? _min;
        [JsonPropertyName("min")]
        public FhirUnsignedInt Min { get => _min ?? throw new InvalidOperationException("Min is required"); set { _min = value; } }

            private FhirCanonical? _profile;
        [JsonPropertyName("profile")]
        public FhirCanonical? Profile { get => _profile; set { _profile = value; } }

        }

        private FhirCanonical? _graph;
        [JsonPropertyName("graph")]
        public FhirCanonical? Graph { get => _graph; set { _graph = value; OnPropertyChangedByClr(nameof(Graph), value); } }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private List<CodeableConcept>? _jurisdiction;
        [JsonPropertyName("jurisdiction")]
        public List<CodeableConcept>? Jurisdiction { get => _jurisdiction; set { _jurisdiction = value; OnPropertyChangedByClr(nameof(Jurisdiction), value); } }

        private FhirString? _name;
        [JsonPropertyName("name")]
        public FhirString? Name { get => _name; set { _name = value; OnPropertyChangedByClr(nameof(Name), value); } }

        private List<FhirCanonical>? _parent;
        [JsonPropertyName("parent")]
        public List<FhirCanonical>? Parent { get => _parent; set { _parent = value; OnPropertyChangedByClr(nameof(Parent), value); } }

        private FhirString? _publisher;
        [JsonPropertyName("publisher")]
        public FhirString? Publisher { get => _publisher; set { _publisher = value; OnPropertyChangedByClr(nameof(Publisher), value); } }

        private FhirMarkdown? _purpose;
        [JsonPropertyName("purpose")]
        public FhirMarkdown? Purpose { get => _purpose; set { _purpose = value; OnPropertyChangedByClr(nameof(Purpose), value); } }

        private List<FhirCanonical>? _replaces;
        [JsonPropertyName("replaces")]
        public List<FhirCanonical>? Replaces { get => _replaces; set { _replaces = value; OnPropertyChangedByClr(nameof(Replaces), value); } }

        private FhirCode? _responseRequired;
        [JsonPropertyName("responseRequired")]
        public FhirCode? ResponseRequired { get => _responseRequired; set { _responseRequired = value; OnPropertyChangedByClr(nameof(ResponseRequired), value); } }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode Status { get => _status ?? throw new InvalidOperationException("Status is required"); set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

        private FhirString? _title;
        [JsonPropertyName("title")]
        public FhirString? Title { get => _title; set { _title = value; OnPropertyChangedByClr(nameof(Title), value); } }

        private FhirUri? _url;
        [JsonPropertyName("url")]
        public FhirUri? Url { get => _url; set { _url = value; OnPropertyChangedByClr(nameof(Url), value); } }

        private List<UsageContext>? _useContext;
        [JsonPropertyName("useContext")]
        public List<UsageContext>? UseContext { get => _useContext; set { _useContext = value; OnPropertyChangedByClr(nameof(UseContext), value); } }

        private FhirString? _version;
        [JsonPropertyName("version")]
        public FhirString? Version { get => _version; set { _version = value; OnPropertyChangedByClr(nameof(Version), value); } }

        private FhirString? _versionAlgorithmString;
        [JsonPropertyName("versionAlgorithmString")]
        public FhirString? VersionAlgorithmString { get => _versionAlgorithmString; set { _versionAlgorithmString = value; if (value != null) {{ _versionAlgorithmCoding = null; OnPropertyChangedByClr(nameof(VersionAlgorithmCoding), null); }}; OnPropertyChangedByClr(nameof(VersionAlgorithmString), value); } }

        private Coding? _versionAlgorithmCoding;
        [JsonPropertyName("versionAlgorithmCoding")]
        public Coding? VersionAlgorithmCoding { get => _versionAlgorithmCoding; set { _versionAlgorithmCoding = value; if (value != null) {{ _versionAlgorithmString = null; OnPropertyChangedByClr(nameof(VersionAlgorithmString), null); }}; OnPropertyChangedByClr(nameof(VersionAlgorithmCoding), value); } }

    }
}
