// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class MedicationRequestFluentExtensions
    {
        public static MedicationRequest WithAuthoredOn(this MedicationRequest r, FhirDateTime value) { r.AuthoredOn = value; return r; }
        public static MedicationRequest AddBasedOn(this MedicationRequest r, ReferenceType item) { r.BasedOn ??= new List<ReferenceType>(); r.BasedOn!.Add(item); return r; }
        public static MedicationRequest AddCategory(this MedicationRequest r, CodeableConcept item) { r.Category ??= new List<CodeableConcept>(); r.Category!.Add(item); return r; }
        public static MedicationRequest AddContained(this MedicationRequest r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static MedicationRequest WithCourseOfTherapyType(this MedicationRequest r, CodeableConcept value) { r.CourseOfTherapyType = value; return r; }
        public static MedicationRequest AddDevice(this MedicationRequest r, CodeableReference item) { r.Device ??= new List<CodeableReference>(); r.Device!.Add(item); return r; }
        public static MedicationRequest WithDispenseRequest(this MedicationRequest r, BackboneElement value) { r.DispenseRequest = value; return r; }
        public static MedicationRequest WithDoNotPerform(this MedicationRequest r, FhirBoolean value) { r.DoNotPerform = value; return r; }
        public static MedicationRequest AddDosageInstruction(this MedicationRequest r, Dosage item) { r.DosageInstruction ??= new List<Dosage>(); r.DosageInstruction!.Add(item); return r; }
        public static MedicationRequest WithEffectiveDosePeriod(this MedicationRequest r, Period value) { r.EffectiveDosePeriod = value; return r; }
        public static MedicationRequest WithEncounter(this MedicationRequest r, ReferenceType value) { r.Encounter = value; return r; }
        public static MedicationRequest AddEventHistory(this MedicationRequest r, ReferenceType item) { r.EventHistory ??= new List<ReferenceType>(); r.EventHistory!.Add(item); return r; }
        public static MedicationRequest WithGroupIdentifier(this MedicationRequest r, Identifier value) { r.GroupIdentifier = value; return r; }
        public static MedicationRequest AddIdentifier(this MedicationRequest r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static MedicationRequest AddInformationSource(this MedicationRequest r, ReferenceType item) { r.InformationSource ??= new List<ReferenceType>(); r.InformationSource!.Add(item); return r; }
        public static MedicationRequest AddInsurance(this MedicationRequest r, ReferenceType item) { r.Insurance ??= new List<ReferenceType>(); r.Insurance!.Add(item); return r; }
        public static MedicationRequest WithIntent(this MedicationRequest r, FhirCode value) { r.Intent = value; return r; }
        public static MedicationRequest WithMedication(this MedicationRequest r, CodeableReference value) { r.Medication = value; return r; }
        public static MedicationRequest AddNote(this MedicationRequest r, Annotation item) { r.Note ??= new List<Annotation>(); r.Note!.Add(item); return r; }
        public static MedicationRequest AddPerformer(this MedicationRequest r, ReferenceType item) { r.Performer ??= new List<ReferenceType>(); r.Performer!.Add(item); return r; }
        public static MedicationRequest WithPerformerType(this MedicationRequest r, CodeableConcept value) { r.PerformerType = value; return r; }
        public static MedicationRequest WithPriority(this MedicationRequest r, FhirCode value) { r.Priority = value; return r; }
        public static MedicationRequest WithPriorPrescription(this MedicationRequest r, ReferenceType value) { r.PriorPrescription = value; return r; }
        public static MedicationRequest AddReason(this MedicationRequest r, CodeableReference item) { r.Reason ??= new List<CodeableReference>(); r.Reason!.Add(item); return r; }
        public static MedicationRequest WithRecorder(this MedicationRequest r, ReferenceType value) { r.Recorder = value; return r; }
        public static MedicationRequest WithRenderedDosageInstruction(this MedicationRequest r, FhirMarkdown value) { r.RenderedDosageInstruction = value; return r; }
        public static MedicationRequest WithReported(this MedicationRequest r, FhirBoolean value) { r.Reported = value; return r; }
        public static MedicationRequest WithRequester(this MedicationRequest r, ReferenceType value) { r.Requester = value; return r; }
        public static MedicationRequest WithStatus(this MedicationRequest r, FhirCode value) { r.Status = value; return r; }
        public static MedicationRequest WithStatusChanged(this MedicationRequest r, FhirDateTime value) { r.StatusChanged = value; return r; }
        public static MedicationRequest WithStatusReason(this MedicationRequest r, CodeableConcept value) { r.StatusReason = value; return r; }
        public static MedicationRequest WithSubject(this MedicationRequest r, ReferenceType value) { r.Subject = value; return r; }
        public static MedicationRequest WithSubstitution(this MedicationRequest r, BackboneElement value) { r.Substitution = value; return r; }
        public static MedicationRequest AddSupportingInformation(this MedicationRequest r, ReferenceType item) { r.SupportingInformation ??= new List<ReferenceType>(); r.SupportingInformation!.Add(item); return r; }
        public static MedicationRequest WithText(this MedicationRequest r, Narrative value) { r.Text = value; return r; }
    }
}
