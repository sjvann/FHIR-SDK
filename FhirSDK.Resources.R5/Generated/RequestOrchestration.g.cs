// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// A set of related requests
    /// </summary>
    public partial class RequestOrchestration : ResourceBase
    {
        public override string ResourceType => "RequestOrchestration";

        public RequestOrchestration() { }
        public RequestOrchestration(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public RequestOrchestration(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private List<RequestOrchestration_Action>? _action;
        [JsonPropertyName("action")]
        public List<RequestOrchestration_Action>? Action { get => _action; set { _action = value; OnPropertyChangedByClr(nameof(Action), value); } }

        /// <summary>
        /// Proposed actions, if any
        /// </summary>
        public partial class RequestOrchestration_Action : BackboneElement<RequestOrchestration_Action>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "RequestOrchestration_Action" : "requestOrchestration_Action";
            private List<FhirString>? _action;
        [JsonPropertyName("action")]
        public List<FhirString>? Action { get => _action; set { _action = value; } }

            private FhirCode? _cardinalityBehavior;
        [JsonPropertyName("cardinalityBehavior")]
        public FhirCode? CardinalityBehavior { get => _cardinalityBehavior; set { _cardinalityBehavior = value; } }

            private List<CodeableConcept>? _code;
        [JsonPropertyName("code")]
        public List<CodeableConcept>? Code { get => _code; set { _code = value; } }

            private List<RequestOrchestration_Action_Condition>? _condition;
        [JsonPropertyName("condition")]
        public List<RequestOrchestration_Action_Condition>? Condition { get => _condition; set { _condition = value; } }

            /// <summary>
            /// Whether or not the action is applicable
            /// </summary>
            public partial class RequestOrchestration_Action_Condition : BackboneElement<RequestOrchestration_Action_Condition>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "RequestOrchestration_Action_Condition" : "requestOrchestration_Action_Condition";
                private DataTypeServices.DataTypes.MetaTypes.ExpressionType? _expression;
        [JsonPropertyName("expression")]
        public DataTypeServices.DataTypes.MetaTypes.ExpressionType? Expression { get => _expression; set { _expression = value; } }

                private FhirCode? _kind;
        [JsonPropertyName("kind")]
        public FhirCode Kind { get => _kind ?? throw new InvalidOperationException("Kind is required"); set { _kind = value; } }

            }

            private FhirCanonical? _definitioncanonical;
        [JsonPropertyName("definitioncanonical")]
        public FhirCanonical? Definitioncanonical { get => _definitioncanonical; set { _definitioncanonical = value; if (value != null) {{ _definitionuri = null; OnPropertyChanged("definitionuri", null); }}; OnPropertyChanged("definitioncanonical", value); } }

            private FhirUri? _definitionuri;
        [JsonPropertyName("definitionuri")]
        public FhirUri? Definitionuri { get => _definitionuri; set { _definitionuri = value; if (value != null) {{ _definitioncanonical = null; OnPropertyChanged("definitioncanonical", null); }}; OnPropertyChanged("definitionuri", value); } }

            private FhirMarkdown? _description;
        [JsonPropertyName("description")]
        public FhirMarkdown? Description { get => _description; set { _description = value; } }

            private List<RelatedArtifact>? _documentation;
        [JsonPropertyName("documentation")]
        public List<RelatedArtifact>? Documentation { get => _documentation; set { _documentation = value; } }

            private List<RequestOrchestration_Action_DynamicValue>? _dynamicValue;
        [JsonPropertyName("dynamicValue")]
        public List<RequestOrchestration_Action_DynamicValue>? DynamicValue { get => _dynamicValue; set { _dynamicValue = value; } }

            /// <summary>
            /// Dynamic aspects of the definition
            /// </summary>
            public partial class RequestOrchestration_Action_DynamicValue : BackboneElement<RequestOrchestration_Action_DynamicValue>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "RequestOrchestration_Action_DynamicValue" : "requestOrchestration_Action_DynamicValue";
                private DataTypeServices.DataTypes.MetaTypes.ExpressionType? _expression;
        [JsonPropertyName("expression")]
        public DataTypeServices.DataTypes.MetaTypes.ExpressionType? Expression { get => _expression; set { _expression = value; } }

                private FhirString? _path;
        [JsonPropertyName("path")]
        public FhirString? Path { get => _path; set { _path = value; } }

            }

            private List<ReferenceType>? _goal;
        [JsonPropertyName("goal")]
        public List<ReferenceType>? Goal { get => _goal; set { _goal = value; } }

            private FhirCode? _groupingBehavior;
        [JsonPropertyName("groupingBehavior")]
        public FhirCode? GroupingBehavior { get => _groupingBehavior; set { _groupingBehavior = value; } }

            private List<RequestOrchestration_Action_Input>? _input;
        [JsonPropertyName("input")]
        public List<RequestOrchestration_Action_Input>? Input { get => _input; set { _input = value; } }

            /// <summary>
            /// Input data requirements
            /// </summary>
            public partial class RequestOrchestration_Action_Input : BackboneElement<RequestOrchestration_Action_Input>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "RequestOrchestration_Action_Input" : "requestOrchestration_Action_Input";
                private FhirId? _relatedData;
        [JsonPropertyName("relatedData")]
        public FhirId? RelatedData { get => _relatedData; set { _relatedData = value; } }

                private DataRequirement? _requirement;
        [JsonPropertyName("requirement")]
        public DataRequirement? Requirement { get => _requirement; set { _requirement = value; } }

                private FhirString? _title;
        [JsonPropertyName("title")]
        public FhirString? Title { get => _title; set { _title = value; } }

            }

            private FhirString? _linkId;
        [JsonPropertyName("linkId")]
        public FhirString? LinkId { get => _linkId; set { _linkId = value; } }

            private CodeableReference? _location;
        [JsonPropertyName("location")]
        public CodeableReference? Location { get => _location; set { _location = value; } }

            private List<RequestOrchestration_Action_Output>? _output;
        [JsonPropertyName("output")]
        public List<RequestOrchestration_Action_Output>? Output { get => _output; set { _output = value; } }

            /// <summary>
            /// Output data definition
            /// </summary>
            public partial class RequestOrchestration_Action_Output : BackboneElement<RequestOrchestration_Action_Output>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "RequestOrchestration_Action_Output" : "requestOrchestration_Action_Output";
                private FhirString? _relatedData;
        [JsonPropertyName("relatedData")]
        public FhirString? RelatedData { get => _relatedData; set { _relatedData = value; } }

                private DataRequirement? _requirement;
        [JsonPropertyName("requirement")]
        public DataRequirement? Requirement { get => _requirement; set { _requirement = value; } }

                private FhirString? _title;
        [JsonPropertyName("title")]
        public FhirString? Title { get => _title; set { _title = value; } }

            }

            private List<RequestOrchestration_Action_Participant>? _participant;
        [JsonPropertyName("participant")]
        public List<RequestOrchestration_Action_Participant>? Participant { get => _participant; set { _participant = value; } }

            /// <summary>
            /// Who should perform the action
            /// </summary>
            public partial class RequestOrchestration_Action_Participant : BackboneElement<RequestOrchestration_Action_Participant>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "RequestOrchestration_Action_Participant" : "requestOrchestration_Action_Participant";
                private FhirCanonical? _actorcanonical;
        [JsonPropertyName("actorcanonical")]
        public FhirCanonical? Actorcanonical { get => _actorcanonical; set { _actorcanonical = value; if (value != null) {{ _actorReference = null; OnPropertyChanged("actorReference", null); }}; OnPropertyChanged("actorcanonical", value); } }

                private ReferenceType? _actorReference;
        [JsonPropertyName("actorReference")]
        public ReferenceType? ActorReference { get => _actorReference; set { _actorReference = value; if (value != null) {{ _actorcanonical = null; OnPropertyChanged("actorcanonical", null); }}; OnPropertyChanged("actorReference", value); } }

                private CodeableConcept? _function;
        [JsonPropertyName("function")]
        public CodeableConcept? Function { get => _function; set { _function = value; } }

                private CodeableConcept? _role;
        [JsonPropertyName("role")]
        public CodeableConcept? Role { get => _role; set { _role = value; } }

                private FhirCode? _type;
        [JsonPropertyName("type")]
        public FhirCode? Type { get => _type; set { _type = value; } }

                private FhirCanonical? _typeCanonical;
        [JsonPropertyName("typeCanonical")]
        public FhirCanonical? TypeCanonical { get => _typeCanonical; set { _typeCanonical = value; } }

                private ReferenceType? _typeReference;
        [JsonPropertyName("typeReference")]
        public ReferenceType? TypeReference { get => _typeReference; set { _typeReference = value; } }

            }

            private FhirCode? _precheckBehavior;
        [JsonPropertyName("precheckBehavior")]
        public FhirCode? PrecheckBehavior { get => _precheckBehavior; set { _precheckBehavior = value; } }

            private FhirString? _prefix;
        [JsonPropertyName("prefix")]
        public FhirString? Prefix { get => _prefix; set { _prefix = value; } }

            private FhirCode? _priority;
        [JsonPropertyName("priority")]
        public FhirCode? Priority { get => _priority; set { _priority = value; } }

            private List<RequestOrchestration_Action_RelatedAction>? _relatedAction;
        [JsonPropertyName("relatedAction")]
        public List<RequestOrchestration_Action_RelatedAction>? RelatedAction { get => _relatedAction; set { _relatedAction = value; } }

            /// <summary>
            /// Relationship to another action
            /// </summary>
            public partial class RequestOrchestration_Action_RelatedAction : BackboneElement<RequestOrchestration_Action_RelatedAction>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "RequestOrchestration_Action_RelatedAction" : "requestOrchestration_Action_RelatedAction";
                private FhirCode? _endRelationship;
        [JsonPropertyName("endRelationship")]
        public FhirCode? EndRelationship { get => _endRelationship; set { _endRelationship = value; } }

                private Duration? _offsetDuration;
        [JsonPropertyName("offsetDuration")]
        public Duration? OffsetDuration { get => _offsetDuration; set { _offsetDuration = value; if (value != null) {{ _offsetRange = null; OnPropertyChanged("offsetRange", null); }}; OnPropertyChanged("offsetDuration", value); } }

                private DataTypeServices.DataTypes.ComplexTypes.Range? _offsetRange;
        [JsonPropertyName("offsetRange")]
        public DataTypeServices.DataTypes.ComplexTypes.Range? OffsetRange { get => _offsetRange; set { _offsetRange = value; if (value != null) {{ _offsetDuration = null; OnPropertyChanged("offsetDuration", null); }}; OnPropertyChanged("offsetRange", value); } }

                private FhirCode? _relationship;
        [JsonPropertyName("relationship")]
        public FhirCode Relationship { get => _relationship ?? throw new InvalidOperationException("Relationship is required"); set { _relationship = value; } }

                private FhirId? _targetId;
        [JsonPropertyName("targetId")]
        public FhirId TargetId { get => _targetId ?? throw new InvalidOperationException("TargetId is required"); set { _targetId = value; } }

            }

            private FhirCode? _requiredBehavior;
        [JsonPropertyName("requiredBehavior")]
        public FhirCode? RequiredBehavior { get => _requiredBehavior; set { _requiredBehavior = value; } }

            private ReferenceType? _resource;
        [JsonPropertyName("resource")]
        public ReferenceType? Resource { get => _resource; set { _resource = value; } }

            private FhirCode? _selectionBehavior;
        [JsonPropertyName("selectionBehavior")]
        public FhirCode? SelectionBehavior { get => _selectionBehavior; set { _selectionBehavior = value; } }

            private FhirMarkdown? _textEquivalent;
        [JsonPropertyName("textEquivalent")]
        public FhirMarkdown? TextEquivalent { get => _textEquivalent; set { _textEquivalent = value; } }

            private FhirDateTime? _timingDateTime;
        [JsonPropertyName("timingDateTime")]
        public FhirDateTime? TimingDateTime { get => _timingDateTime; set { _timingDateTime = value; if (value != null) {{ _timingAge = null; OnPropertyChanged("timingAge", null); _timingPeriod = null; OnPropertyChanged("timingPeriod", null); _timingDuration = null; OnPropertyChanged("timingDuration", null); _timingRange = null; OnPropertyChanged("timingRange", null); _timingTiming = null; OnPropertyChanged("timingTiming", null); }}; OnPropertyChanged("timingDateTime", value); } }

            private Age? _timingAge;
        [JsonPropertyName("timingAge")]
        public Age? TimingAge { get => _timingAge; set { _timingAge = value; if (value != null) {{ _timingDateTime = null; OnPropertyChanged("timingDateTime", null); _timingPeriod = null; OnPropertyChanged("timingPeriod", null); _timingDuration = null; OnPropertyChanged("timingDuration", null); _timingRange = null; OnPropertyChanged("timingRange", null); _timingTiming = null; OnPropertyChanged("timingTiming", null); }}; OnPropertyChanged("timingAge", value); } }

            private Period? _timingPeriod;
        [JsonPropertyName("timingPeriod")]
        public Period? TimingPeriod { get => _timingPeriod; set { _timingPeriod = value; if (value != null) {{ _timingDateTime = null; OnPropertyChanged("timingDateTime", null); _timingAge = null; OnPropertyChanged("timingAge", null); _timingDuration = null; OnPropertyChanged("timingDuration", null); _timingRange = null; OnPropertyChanged("timingRange", null); _timingTiming = null; OnPropertyChanged("timingTiming", null); }}; OnPropertyChanged("timingPeriod", value); } }

            private Duration? _timingDuration;
        [JsonPropertyName("timingDuration")]
        public Duration? TimingDuration { get => _timingDuration; set { _timingDuration = value; if (value != null) {{ _timingDateTime = null; OnPropertyChanged("timingDateTime", null); _timingAge = null; OnPropertyChanged("timingAge", null); _timingPeriod = null; OnPropertyChanged("timingPeriod", null); _timingRange = null; OnPropertyChanged("timingRange", null); _timingTiming = null; OnPropertyChanged("timingTiming", null); }}; OnPropertyChanged("timingDuration", value); } }

            private DataTypeServices.DataTypes.ComplexTypes.Range? _timingRange;
        [JsonPropertyName("timingRange")]
        public DataTypeServices.DataTypes.ComplexTypes.Range? TimingRange { get => _timingRange; set { _timingRange = value; if (value != null) {{ _timingDateTime = null; OnPropertyChanged("timingDateTime", null); _timingAge = null; OnPropertyChanged("timingAge", null); _timingPeriod = null; OnPropertyChanged("timingPeriod", null); _timingDuration = null; OnPropertyChanged("timingDuration", null); _timingTiming = null; OnPropertyChanged("timingTiming", null); }}; OnPropertyChanged("timingRange", value); } }

            private Timing? _timingTiming;
        [JsonPropertyName("timingTiming")]
        public Timing? TimingTiming { get => _timingTiming; set { _timingTiming = value; if (value != null) {{ _timingDateTime = null; OnPropertyChanged("timingDateTime", null); _timingAge = null; OnPropertyChanged("timingAge", null); _timingPeriod = null; OnPropertyChanged("timingPeriod", null); _timingDuration = null; OnPropertyChanged("timingDuration", null); _timingRange = null; OnPropertyChanged("timingRange", null); }}; OnPropertyChanged("timingTiming", value); } }

            private FhirString? _title;
        [JsonPropertyName("title")]
        public FhirString? Title { get => _title; set { _title = value; } }

            private FhirCanonical? _transform;
        [JsonPropertyName("transform")]
        public FhirCanonical? Transform { get => _transform; set { _transform = value; } }

            private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept? Type { get => _type; set { _type = value; } }

        }

        private ReferenceType? _author;
        [JsonPropertyName("author")]
        public ReferenceType? Author { get => _author; set { _author = value; OnPropertyChangedByClr(nameof(Author), value); } }

        private FhirDateTime? _authoredOn;
        [JsonPropertyName("authoredOn")]
        public FhirDateTime? AuthoredOn { get => _authoredOn; set { _authoredOn = value; OnPropertyChangedByClr(nameof(AuthoredOn), value); } }

        private List<ReferenceType>? _basedOn;
        [JsonPropertyName("basedOn")]
        public List<ReferenceType>? BasedOn { get => _basedOn; set { _basedOn = value; OnPropertyChangedByClr(nameof(BasedOn), value); } }

        private CodeableConcept? _code;
        [JsonPropertyName("code")]
        public CodeableConcept? Code { get => _code; set { _code = value; OnPropertyChangedByClr(nameof(Code), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private ReferenceType? _encounter;
        [JsonPropertyName("encounter")]
        public ReferenceType? Encounter { get => _encounter; set { _encounter = value; OnPropertyChangedByClr(nameof(Encounter), value); } }

        private List<ReferenceType>? _goal;
        [JsonPropertyName("goal")]
        public List<ReferenceType>? Goal { get => _goal; set { _goal = value; OnPropertyChangedByClr(nameof(Goal), value); } }

        private Identifier? _groupIdentifier;
        [JsonPropertyName("groupIdentifier")]
        public Identifier? GroupIdentifier { get => _groupIdentifier; set { _groupIdentifier = value; OnPropertyChangedByClr(nameof(GroupIdentifier), value); } }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private List<FhirCanonical>? _instantiatesCanonical;
        [JsonPropertyName("instantiatesCanonical")]
        public List<FhirCanonical>? InstantiatesCanonical { get => _instantiatesCanonical; set { _instantiatesCanonical = value; OnPropertyChangedByClr(nameof(InstantiatesCanonical), value); } }

        private List<FhirUri>? _instantiatesUri;
        [JsonPropertyName("instantiatesUri")]
        public List<FhirUri>? InstantiatesUri { get => _instantiatesUri; set { _instantiatesUri = value; OnPropertyChangedByClr(nameof(InstantiatesUri), value); } }

        private FhirCode? _intent;
        [JsonPropertyName("intent")]
        public FhirCode Intent { get => _intent ?? throw new InvalidOperationException("Intent is required"); set { _intent = value; OnPropertyChangedByClr(nameof(Intent), value); } }

        private List<Annotation>? _note;
        [JsonPropertyName("note")]
        public List<Annotation>? Note { get => _note; set { _note = value; OnPropertyChangedByClr(nameof(Note), value); } }

        private FhirCode? _priority;
        [JsonPropertyName("priority")]
        public FhirCode? Priority { get => _priority; set { _priority = value; OnPropertyChangedByClr(nameof(Priority), value); } }

        private List<CodeableReference>? _reason;
        [JsonPropertyName("reason")]
        public List<CodeableReference>? Reason { get => _reason; set { _reason = value; OnPropertyChangedByClr(nameof(Reason), value); } }

        private List<ReferenceType>? _replaces;
        [JsonPropertyName("replaces")]
        public List<ReferenceType>? Replaces { get => _replaces; set { _replaces = value; OnPropertyChangedByClr(nameof(Replaces), value); } }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode Status { get => _status ?? throw new InvalidOperationException("Status is required"); set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private ReferenceType? _subject;
        [JsonPropertyName("subject")]
        public ReferenceType? Subject { get => _subject; set { _subject = value; OnPropertyChangedByClr(nameof(Subject), value); } }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

    }
}
