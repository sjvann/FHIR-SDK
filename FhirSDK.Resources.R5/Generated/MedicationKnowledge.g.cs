// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// Definition of Medication Knowledge
    /// </summary>
    public partial class MedicationKnowledge : ResourceBase
    {
        public override string ResourceType => "MedicationKnowledge";

        public MedicationKnowledge() { }
        public MedicationKnowledge(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public MedicationKnowledge(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private List<ReferenceType>? _associatedMedication;
        [JsonPropertyName("associatedMedication")]
        public List<ReferenceType>? AssociatedMedication { get => _associatedMedication; set { _associatedMedication = value; OnPropertyChangedByClr(nameof(AssociatedMedication), value); } }

        private ReferenceType? _author;
        [JsonPropertyName("author")]
        public ReferenceType? Author { get => _author; set { _author = value; OnPropertyChangedByClr(nameof(Author), value); } }

        private List<ReferenceType>? _clinicalUseIssue;
        [JsonPropertyName("clinicalUseIssue")]
        public List<ReferenceType>? ClinicalUseIssue { get => _clinicalUseIssue; set { _clinicalUseIssue = value; OnPropertyChangedByClr(nameof(ClinicalUseIssue), value); } }

        private CodeableConcept? _code;
        [JsonPropertyName("code")]
        public CodeableConcept? Code { get => _code; set { _code = value; OnPropertyChangedByClr(nameof(Code), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private List<MedicationKnowledge_Cost>? _cost;
        [JsonPropertyName("cost")]
        public List<MedicationKnowledge_Cost>? Cost { get => _cost; set { _cost = value; OnPropertyChangedByClr(nameof(Cost), value); } }

        /// <summary>
        /// The pricing of the medication
        /// </summary>
        public partial class MedicationKnowledge_Cost : BackboneElement<MedicationKnowledge_Cost>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "MedicationKnowledge_Cost" : "medicationKnowledge_Cost";
            private Money? _costMoney;
        [JsonPropertyName("costMoney")]
        public Money? CostMoney { get => _costMoney; set { _costMoney = value; if (value != null) {{ _costCodeableConcept = null; OnPropertyChanged("costCodeableConcept", null); }}; OnPropertyChanged("costMoney", value); } }

            private CodeableConcept? _costCodeableConcept;
        [JsonPropertyName("costCodeableConcept")]
        public CodeableConcept? CostCodeableConcept { get => _costCodeableConcept; set { _costCodeableConcept = value; if (value != null) {{ _costMoney = null; OnPropertyChanged("costMoney", null); }}; OnPropertyChanged("costCodeableConcept", value); } }

            private List<Period>? _effectiveDate;
        [JsonPropertyName("effectiveDate")]
        public List<Period>? EffectiveDate { get => _effectiveDate; set { _effectiveDate = value; } }

            private FhirString? _source;
        [JsonPropertyName("source")]
        public FhirString? Source { get => _source; set { _source = value; } }

            private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept Type { get => _type ?? throw new InvalidOperationException("Type is required"); set { _type = value; } }

        }

        private MedicationKnowledge_Definitional? _definitional;
        [JsonPropertyName("definitional")]
        public MedicationKnowledge_Definitional? Definitional { get => _definitional; set { _definitional = value; OnPropertyChangedByClr(nameof(Definitional), value); } }

        /// <summary>
        /// Minimal definition information about the medication
        /// </summary>
        public partial class MedicationKnowledge_Definitional : BackboneElement<MedicationKnowledge_Definitional>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "MedicationKnowledge_Definitional" : "medicationKnowledge_Definitional";
            private List<ReferenceType>? _definition;
        [JsonPropertyName("definition")]
        public List<ReferenceType>? Definition { get => _definition; set { _definition = value; } }

            private CodeableConcept? _doseForm;
        [JsonPropertyName("doseForm")]
        public CodeableConcept? DoseForm { get => _doseForm; set { _doseForm = value; } }

            private List<MedicationKnowledge_Definitional_DrugCharacteristic>? _drugCharacteristic;
        [JsonPropertyName("drugCharacteristic")]
        public List<MedicationKnowledge_Definitional_DrugCharacteristic>? DrugCharacteristic { get => _drugCharacteristic; set { _drugCharacteristic = value; } }

            /// <summary>
            /// Specifies descriptive properties of the medicine
            /// </summary>
            public partial class MedicationKnowledge_Definitional_DrugCharacteristic : BackboneElement<MedicationKnowledge_Definitional_DrugCharacteristic>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "MedicationKnowledge_Definitional_DrugCharacteristic" : "medicationKnowledge_Definitional_DrugCharacteristic";
                private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept? Type { get => _type; set { _type = value; } }

                private CodeableConcept? _valueCodeableConcept;
        [JsonPropertyName("valueCodeableConcept")]
        public CodeableConcept? ValueCodeableConcept { get => _valueCodeableConcept; set { _valueCodeableConcept = value; if (value != null) {{ _valueString = null; OnPropertyChanged("valueString", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valuebase64Binary = null; OnPropertyChanged("valuebase64Binary", null); _valueAttachment = null; OnPropertyChanged("valueAttachment", null); }}; OnPropertyChanged("valueCodeableConcept", value); } }

                private FhirString? _valueString;
        [JsonPropertyName("valueString")]
        public FhirString? ValueString { get => _valueString; set { _valueString = value; if (value != null) {{ _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valuebase64Binary = null; OnPropertyChanged("valuebase64Binary", null); _valueAttachment = null; OnPropertyChanged("valueAttachment", null); }}; OnPropertyChanged("valueString", value); } }

                private Quantity? _valueQuantity;
        [JsonPropertyName("valueQuantity")]
        public Quantity? ValueQuantity { get => _valueQuantity; set { _valueQuantity = value; if (value != null) {{ _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueString = null; OnPropertyChanged("valueString", null); _valuebase64Binary = null; OnPropertyChanged("valuebase64Binary", null); _valueAttachment = null; OnPropertyChanged("valueAttachment", null); }}; OnPropertyChanged("valueQuantity", value); } }

                private FhirBase64Binary? _valuebase64Binary;
        [JsonPropertyName("valuebase64Binary")]
        public FhirBase64Binary? Valuebase64Binary { get => _valuebase64Binary; set { _valuebase64Binary = value; if (value != null) {{ _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueString = null; OnPropertyChanged("valueString", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueAttachment = null; OnPropertyChanged("valueAttachment", null); }}; OnPropertyChanged("valuebase64Binary", value); } }

                private Attachment? _valueAttachment;
        [JsonPropertyName("valueAttachment")]
        public Attachment? ValueAttachment { get => _valueAttachment; set { _valueAttachment = value; if (value != null) {{ _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueString = null; OnPropertyChanged("valueString", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valuebase64Binary = null; OnPropertyChanged("valuebase64Binary", null); }}; OnPropertyChanged("valueAttachment", value); } }

            }

            private List<MedicationKnowledge_Definitional_Ingredient>? _ingredient;
        [JsonPropertyName("ingredient")]
        public List<MedicationKnowledge_Definitional_Ingredient>? Ingredient { get => _ingredient; set { _ingredient = value; } }

            /// <summary>
            /// Active or inactive ingredient
            /// </summary>
            public partial class MedicationKnowledge_Definitional_Ingredient : BackboneElement<MedicationKnowledge_Definitional_Ingredient>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "MedicationKnowledge_Definitional_Ingredient" : "medicationKnowledge_Definitional_Ingredient";
                private CodeableReference? _item;
        [JsonPropertyName("item")]
        public CodeableReference Item { get => _item ?? throw new InvalidOperationException("Item is required"); set { _item = value; } }

                private Ratio? _strengthRatio;
        [JsonPropertyName("strengthRatio")]
        public Ratio? StrengthRatio { get => _strengthRatio; set { _strengthRatio = value; if (value != null) {{ _strengthCodeableConcept = null; OnPropertyChanged("strengthCodeableConcept", null); _strengthQuantity = null; OnPropertyChanged("strengthQuantity", null); }}; OnPropertyChanged("strengthRatio", value); } }

                private CodeableConcept? _strengthCodeableConcept;
        [JsonPropertyName("strengthCodeableConcept")]
        public CodeableConcept? StrengthCodeableConcept { get => _strengthCodeableConcept; set { _strengthCodeableConcept = value; if (value != null) {{ _strengthRatio = null; OnPropertyChanged("strengthRatio", null); _strengthQuantity = null; OnPropertyChanged("strengthQuantity", null); }}; OnPropertyChanged("strengthCodeableConcept", value); } }

                private Quantity? _strengthQuantity;
        [JsonPropertyName("strengthQuantity")]
        public Quantity? StrengthQuantity { get => _strengthQuantity; set { _strengthQuantity = value; if (value != null) {{ _strengthRatio = null; OnPropertyChanged("strengthRatio", null); _strengthCodeableConcept = null; OnPropertyChanged("strengthCodeableConcept", null); }}; OnPropertyChanged("strengthQuantity", value); } }

                private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept? Type { get => _type; set { _type = value; } }

            }

            private List<CodeableConcept>? _intendedRoute;
        [JsonPropertyName("intendedRoute")]
        public List<CodeableConcept>? IntendedRoute { get => _intendedRoute; set { _intendedRoute = value; } }

        }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private List<MedicationKnowledge_IndicationGuideline>? _indicationGuideline;
        [JsonPropertyName("indicationGuideline")]
        public List<MedicationKnowledge_IndicationGuideline>? IndicationGuideline { get => _indicationGuideline; set { _indicationGuideline = value; OnPropertyChangedByClr(nameof(IndicationGuideline), value); } }

        /// <summary>
        /// Guidelines or protocols for administration of the medication for an indication
        /// </summary>
        public partial class MedicationKnowledge_IndicationGuideline : BackboneElement<MedicationKnowledge_IndicationGuideline>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "MedicationKnowledge_IndicationGuideline" : "medicationKnowledge_IndicationGuideline";
            private List<MedicationKnowledge_IndicationGuideline_DosingGuideline>? _dosingGuideline;
        [JsonPropertyName("dosingGuideline")]
        public List<MedicationKnowledge_IndicationGuideline_DosingGuideline>? DosingGuideline { get => _dosingGuideline; set { _dosingGuideline = value; } }

            /// <summary>
            /// Guidelines for dosage of the medication
            /// </summary>
            public partial class MedicationKnowledge_IndicationGuideline_DosingGuideline : BackboneElement<MedicationKnowledge_IndicationGuideline_DosingGuideline>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "MedicationKnowledge_IndicationGuideline_DosingGuideline" : "medicationKnowledge_IndicationGuideline_DosingGuideline";
                private CodeableConcept? _administrationTreatment;
        [JsonPropertyName("administrationTreatment")]
        public CodeableConcept? AdministrationTreatment { get => _administrationTreatment; set { _administrationTreatment = value; } }

                private List<MedicationKnowledge_IndicationGuideline_DosingGuideline_Dosage>? _dosage;
        [JsonPropertyName("dosage")]
        public List<MedicationKnowledge_IndicationGuideline_DosingGuideline_Dosage>? Dosage { get => _dosage; set { _dosage = value; } }

                /// <summary>
                /// Dosage for the medication for the specific guidelines
                /// </summary>
                public partial class MedicationKnowledge_IndicationGuideline_DosingGuideline_Dosage : BackboneElement<MedicationKnowledge_IndicationGuideline_DosingGuideline_Dosage>
                {
                    public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "MedicationKnowledge_IndicationGuideline_DosingGuideline_Dosage" : "medicationKnowledge_IndicationGuideline_DosingGuideline_Dosage";
                    private List<Dosage> _dosage = new();
        [JsonPropertyName("dosage")]
        public List<Dosage> Dosage { get => _dosage; set { _dosage = value; } }

                    private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept Type { get => _type ?? throw new InvalidOperationException("Type is required"); set { _type = value; } }

                }

                private List<MedicationKnowledge_IndicationGuideline_DosingGuideline_PatientCharacteristic>? _patientCharacteristic;
        [JsonPropertyName("patientCharacteristic")]
        public List<MedicationKnowledge_IndicationGuideline_DosingGuideline_PatientCharacteristic>? PatientCharacteristic { get => _patientCharacteristic; set { _patientCharacteristic = value; } }

                /// <summary>
                /// Characteristics of the patient that are relevant to the administration guidelines
                /// </summary>
                public partial class MedicationKnowledge_IndicationGuideline_DosingGuideline_PatientCharacteristic : BackboneElement<MedicationKnowledge_IndicationGuideline_DosingGuideline_PatientCharacteristic>
                {
                    public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "MedicationKnowledge_IndicationGuideline_DosingGuideline_PatientCharacteristic" : "medicationKnowledge_IndicationGuideline_DosingGuideline_PatientCharacteristic";
                    private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept Type { get => _type ?? throw new InvalidOperationException("Type is required"); set { _type = value; } }

                    private CodeableConcept? _valueCodeableConcept;
        [JsonPropertyName("valueCodeableConcept")]
        public CodeableConcept? ValueCodeableConcept { get => _valueCodeableConcept; set { _valueCodeableConcept = value; if (value != null) {{ }}; OnPropertyChanged("valueCodeableConcept", value); } }

                    private Quantity? _valueQuantity;
        [JsonPropertyName("valueQuantity")]
        public Quantity? ValueQuantity { get => _valueQuantity; set { _valueQuantity = value; if (value != null) {{ _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); }}; OnPropertyChanged("valueQuantity", value); } }

                    private DataTypeServices.DataTypes.ComplexTypes.Range? _valueRange;
        [JsonPropertyName("valueRange")]
        public DataTypeServices.DataTypes.ComplexTypes.Range? ValueRange { get => _valueRange; set { _valueRange = value; if (value != null) {{ _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); }}; OnPropertyChanged("valueRange", value); } }

                }

                private CodeableConcept? _treatmentIntent;
        [JsonPropertyName("treatmentIntent")]
        public CodeableConcept? TreatmentIntent { get => _treatmentIntent; set { _treatmentIntent = value; } }

            }

            private List<CodeableReference>? _indication;
        [JsonPropertyName("indication")]
        public List<CodeableReference>? Indication { get => _indication; set { _indication = value; } }

        }

        private List<CodeableConcept>? _intendedJurisdiction;
        [JsonPropertyName("intendedJurisdiction")]
        public List<CodeableConcept>? IntendedJurisdiction { get => _intendedJurisdiction; set { _intendedJurisdiction = value; OnPropertyChangedByClr(nameof(IntendedJurisdiction), value); } }

        private List<MedicationKnowledge_MedicineClassification>? _medicineClassification;
        [JsonPropertyName("medicineClassification")]
        public List<MedicationKnowledge_MedicineClassification>? MedicineClassification { get => _medicineClassification; set { _medicineClassification = value; OnPropertyChangedByClr(nameof(MedicineClassification), value); } }

        /// <summary>
        /// Categorization of the medication within a formulary or classification system
        /// </summary>
        public partial class MedicationKnowledge_MedicineClassification : BackboneElement<MedicationKnowledge_MedicineClassification>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "MedicationKnowledge_MedicineClassification" : "medicationKnowledge_MedicineClassification";
            private List<CodeableConcept>? _classification;
        [JsonPropertyName("classification")]
        public List<CodeableConcept>? Classification { get => _classification; set { _classification = value; } }

            private FhirString? _sourceString;
        [JsonPropertyName("sourceString")]
        public FhirString? SourceString { get => _sourceString; set { _sourceString = value; if (value != null) {{ _sourceuri = null; OnPropertyChanged("sourceuri", null); }}; OnPropertyChanged("sourceString", value); } }

            private FhirUri? _sourceuri;
        [JsonPropertyName("sourceuri")]
        public FhirUri? Sourceuri { get => _sourceuri; set { _sourceuri = value; if (value != null) {{ _sourceString = null; OnPropertyChanged("sourceString", null); }}; OnPropertyChanged("sourceuri", value); } }

            private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept Type { get => _type ?? throw new InvalidOperationException("Type is required"); set { _type = value; } }

        }

        private List<MedicationKnowledge_MonitoringProgram>? _monitoringProgram;
        [JsonPropertyName("monitoringProgram")]
        public List<MedicationKnowledge_MonitoringProgram>? MonitoringProgram { get => _monitoringProgram; set { _monitoringProgram = value; OnPropertyChangedByClr(nameof(MonitoringProgram), value); } }

        /// <summary>
        /// Program under which a medication is reviewed
        /// </summary>
        public partial class MedicationKnowledge_MonitoringProgram : BackboneElement<MedicationKnowledge_MonitoringProgram>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "MedicationKnowledge_MonitoringProgram" : "medicationKnowledge_MonitoringProgram";
            private FhirString? _name;
        [JsonPropertyName("name")]
        public FhirString? Name { get => _name; set { _name = value; } }

            private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept? Type { get => _type; set { _type = value; } }

        }

        private List<MedicationKnowledge_Monograph>? _monograph;
        [JsonPropertyName("monograph")]
        public List<MedicationKnowledge_Monograph>? Monograph { get => _monograph; set { _monograph = value; OnPropertyChangedByClr(nameof(Monograph), value); } }

        /// <summary>
        /// Associated documentation about the medication
        /// </summary>
        public partial class MedicationKnowledge_Monograph : BackboneElement<MedicationKnowledge_Monograph>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "MedicationKnowledge_Monograph" : "medicationKnowledge_Monograph";
            private ReferenceType? _source;
        [JsonPropertyName("source")]
        public ReferenceType? Source { get => _source; set { _source = value; } }

            private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept? Type { get => _type; set { _type = value; } }

        }

        private List<FhirString>? _name;
        [JsonPropertyName("name")]
        public List<FhirString>? Name { get => _name; set { _name = value; OnPropertyChangedByClr(nameof(Name), value); } }

        private List<MedicationKnowledge_Packaging>? _packaging;
        [JsonPropertyName("packaging")]
        public List<MedicationKnowledge_Packaging>? Packaging { get => _packaging; set { _packaging = value; OnPropertyChangedByClr(nameof(Packaging), value); } }

        /// <summary>
        /// Details about packaged medications
        /// </summary>
        public partial class MedicationKnowledge_Packaging : BackboneElement<MedicationKnowledge_Packaging>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "MedicationKnowledge_Packaging" : "medicationKnowledge_Packaging";
            private List<FhirString>? _cost;
        [JsonPropertyName("cost")]
        public List<FhirString>? Cost { get => _cost; set { _cost = value; } }

            private ReferenceType? _packagedProduct;
        [JsonPropertyName("packagedProduct")]
        public ReferenceType? PackagedProduct { get => _packagedProduct; set { _packagedProduct = value; } }

        }

        private FhirMarkdown? _preparationInstruction;
        [JsonPropertyName("preparationInstruction")]
        public FhirMarkdown? PreparationInstruction { get => _preparationInstruction; set { _preparationInstruction = value; OnPropertyChangedByClr(nameof(PreparationInstruction), value); } }

        private List<CodeableConcept>? _productType;
        [JsonPropertyName("productType")]
        public List<CodeableConcept>? ProductType { get => _productType; set { _productType = value; OnPropertyChangedByClr(nameof(ProductType), value); } }

        private List<MedicationKnowledge_Regulatory>? _regulatory;
        [JsonPropertyName("regulatory")]
        public List<MedicationKnowledge_Regulatory>? Regulatory { get => _regulatory; set { _regulatory = value; OnPropertyChangedByClr(nameof(Regulatory), value); } }

        /// <summary>
        /// Regulatory information about a medication
        /// </summary>
        public partial class MedicationKnowledge_Regulatory : BackboneElement<MedicationKnowledge_Regulatory>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "MedicationKnowledge_Regulatory" : "medicationKnowledge_Regulatory";
            private MedicationKnowledge_Regulatory_MaxDispense? _maxDispense;
        [JsonPropertyName("maxDispense")]
        public MedicationKnowledge_Regulatory_MaxDispense? MaxDispense { get => _maxDispense; set { _maxDispense = value; } }

            /// <summary>
            /// The maximum number of units of the medication that can be dispensed in a period
            /// </summary>
            public partial class MedicationKnowledge_Regulatory_MaxDispense : BackboneElement<MedicationKnowledge_Regulatory_MaxDispense>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "MedicationKnowledge_Regulatory_MaxDispense" : "medicationKnowledge_Regulatory_MaxDispense";
                private Duration? _period;
        [JsonPropertyName("period")]
        public Duration? Period { get => _period; set { _period = value; } }

                private Quantity? _quantity;
        [JsonPropertyName("quantity")]
        public Quantity Quantity { get => _quantity ?? throw new InvalidOperationException("Quantity is required"); set { _quantity = value; } }

            }

            private ReferenceType? _regulatoryAuthority;
        [JsonPropertyName("regulatoryAuthority")]
        public ReferenceType RegulatoryAuthority { get => _regulatoryAuthority ?? throw new InvalidOperationException("RegulatoryAuthority is required"); set { _regulatoryAuthority = value; } }

            private List<CodeableConcept>? _schedule;
        [JsonPropertyName("schedule")]
        public List<CodeableConcept>? Schedule { get => _schedule; set { _schedule = value; } }

            private List<MedicationKnowledge_Regulatory_Substitution>? _substitution;
        [JsonPropertyName("substitution")]
        public List<MedicationKnowledge_Regulatory_Substitution>? Substitution { get => _substitution; set { _substitution = value; } }

            /// <summary>
            /// Specifies if changes are allowed when dispensing a medication from a regulatory perspective
            /// </summary>
            public partial class MedicationKnowledge_Regulatory_Substitution : BackboneElement<MedicationKnowledge_Regulatory_Substitution>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "MedicationKnowledge_Regulatory_Substitution" : "medicationKnowledge_Regulatory_Substitution";
                private FhirBoolean? _allowed;
        [JsonPropertyName("allowed")]
        public FhirBoolean Allowed { get => _allowed ?? throw new InvalidOperationException("Allowed is required"); set { _allowed = value; } }

                private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept Type { get => _type ?? throw new InvalidOperationException("Type is required"); set { _type = value; } }

            }

        }

        private List<MedicationKnowledge_RelatedMedicationKnowledge>? _relatedMedicationKnowledge;
        [JsonPropertyName("relatedMedicationKnowledge")]
        public List<MedicationKnowledge_RelatedMedicationKnowledge>? RelatedMedicationKnowledge { get => _relatedMedicationKnowledge; set { _relatedMedicationKnowledge = value; OnPropertyChangedByClr(nameof(RelatedMedicationKnowledge), value); } }

        /// <summary>
        /// Associated or related medication information
        /// </summary>
        public partial class MedicationKnowledge_RelatedMedicationKnowledge : BackboneElement<MedicationKnowledge_RelatedMedicationKnowledge>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "MedicationKnowledge_RelatedMedicationKnowledge" : "medicationKnowledge_RelatedMedicationKnowledge";
            private List<ReferenceType> _reference = new();
        [JsonPropertyName("reference")]
        public List<ReferenceType> Reference { get => _reference; set { _reference = value; } }

            private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept Type { get => _type ?? throw new InvalidOperationException("Type is required"); set { _type = value; } }

        }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode? Status { get => _status; set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private List<MedicationKnowledge_StorageGuideline>? _storageGuideline;
        [JsonPropertyName("storageGuideline")]
        public List<MedicationKnowledge_StorageGuideline>? StorageGuideline { get => _storageGuideline; set { _storageGuideline = value; OnPropertyChangedByClr(nameof(StorageGuideline), value); } }

        /// <summary>
        /// How the medication should be stored
        /// </summary>
        public partial class MedicationKnowledge_StorageGuideline : BackboneElement<MedicationKnowledge_StorageGuideline>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "MedicationKnowledge_StorageGuideline" : "medicationKnowledge_StorageGuideline";
            private List<MedicationKnowledge_StorageGuideline_EnvironmentalSetting>? _environmentalSetting;
        [JsonPropertyName("environmentalSetting")]
        public List<MedicationKnowledge_StorageGuideline_EnvironmentalSetting>? EnvironmentalSetting { get => _environmentalSetting; set { _environmentalSetting = value; } }

            /// <summary>
            /// Setting or value of environment for adequate storage
            /// </summary>
            public partial class MedicationKnowledge_StorageGuideline_EnvironmentalSetting : BackboneElement<MedicationKnowledge_StorageGuideline_EnvironmentalSetting>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "MedicationKnowledge_StorageGuideline_EnvironmentalSetting" : "medicationKnowledge_StorageGuideline_EnvironmentalSetting";
                private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept Type { get => _type ?? throw new InvalidOperationException("Type is required"); set { _type = value; } }

                private Quantity? _valueQuantity;
        [JsonPropertyName("valueQuantity")]
        public Quantity? ValueQuantity { get => _valueQuantity; set { _valueQuantity = value; if (value != null) {{ _valueRange = null; OnPropertyChanged("valueRange", null); _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); }}; OnPropertyChanged("valueQuantity", value); } }

                private DataTypeServices.DataTypes.ComplexTypes.Range? _valueRange;
        [JsonPropertyName("valueRange")]
        public DataTypeServices.DataTypes.ComplexTypes.Range? ValueRange { get => _valueRange; set { _valueRange = value; if (value != null) {{ _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); }}; OnPropertyChanged("valueRange", value); } }

                private CodeableConcept? _valueCodeableConcept;
        [JsonPropertyName("valueCodeableConcept")]
        public CodeableConcept? ValueCodeableConcept { get => _valueCodeableConcept; set { _valueCodeableConcept = value; if (value != null) {{ _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueRange = null; OnPropertyChanged("valueRange", null); }}; OnPropertyChanged("valueCodeableConcept", value); } }

            }

            private List<Annotation>? _note;
        [JsonPropertyName("note")]
        public List<Annotation>? Note { get => _note; set { _note = value; } }

            private FhirUri? _reference;
        [JsonPropertyName("reference")]
        public FhirUri? Reference { get => _reference; set { _reference = value; } }

            private Duration? _stabilityDuration;
        [JsonPropertyName("stabilityDuration")]
        public Duration? StabilityDuration { get => _stabilityDuration; set { _stabilityDuration = value; } }

        }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

    }
}
