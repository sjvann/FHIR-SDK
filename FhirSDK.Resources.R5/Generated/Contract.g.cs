// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// Legal Agreement
    /// </summary>
    public partial class Contract : ResourceBase
    {
        public override string ResourceType => "Contract";

        public Contract() { }
        public Contract(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public Contract(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private List<FhirString>? _alias;
        [JsonPropertyName("alias")]
        public List<FhirString>? Alias { get => _alias; set { _alias = value; OnPropertyChangedByClr(nameof(Alias), value); } }

        private Period? _applies;
        [JsonPropertyName("applies")]
        public Period? Applies { get => _applies; set { _applies = value; OnPropertyChangedByClr(nameof(Applies), value); } }

        private ReferenceType? _author;
        [JsonPropertyName("author")]
        public ReferenceType? Author { get => _author; set { _author = value; OnPropertyChangedByClr(nameof(Author), value); } }

        private List<ReferenceType>? _authority;
        [JsonPropertyName("authority")]
        public List<ReferenceType>? Authority { get => _authority; set { _authority = value; OnPropertyChangedByClr(nameof(Authority), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private Contract_ContentDefinition? _contentDefinition;
        [JsonPropertyName("contentDefinition")]
        public Contract_ContentDefinition? ContentDefinition { get => _contentDefinition; set { _contentDefinition = value; OnPropertyChangedByClr(nameof(ContentDefinition), value); } }

        /// <summary>
        /// Contract precursor content
        /// </summary>
        public partial class Contract_ContentDefinition : BackboneElement<Contract_ContentDefinition>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Contract_ContentDefinition" : "contract_ContentDefinition";
            private FhirMarkdown? _copyright;
        [JsonPropertyName("copyright")]
        public FhirMarkdown? Copyright { get => _copyright; set { _copyright = value; } }

            private FhirDateTime? _publicationDate;
        [JsonPropertyName("publicationDate")]
        public FhirDateTime? PublicationDate { get => _publicationDate; set { _publicationDate = value; } }

            private FhirCode? _publicationStatus;
        [JsonPropertyName("publicationStatus")]
        public FhirCode PublicationStatus { get => _publicationStatus ?? throw new InvalidOperationException("PublicationStatus is required"); set { _publicationStatus = value; } }

            private ReferenceType? _publisher;
        [JsonPropertyName("publisher")]
        public ReferenceType? Publisher { get => _publisher; set { _publisher = value; } }

            private CodeableConcept? _subType;
        [JsonPropertyName("subType")]
        public CodeableConcept? SubType { get => _subType; set { _subType = value; } }

            private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept Type { get => _type ?? throw new InvalidOperationException("Type is required"); set { _type = value; } }

        }

        private CodeableConcept? _contentDerivative;
        [JsonPropertyName("contentDerivative")]
        public CodeableConcept? ContentDerivative { get => _contentDerivative; set { _contentDerivative = value; OnPropertyChangedByClr(nameof(ContentDerivative), value); } }

        private List<ReferenceType>? _domain;
        [JsonPropertyName("domain")]
        public List<ReferenceType>? Domain { get => _domain; set { _domain = value; OnPropertyChangedByClr(nameof(Domain), value); } }

        private CodeableConcept? _expirationType;
        [JsonPropertyName("expirationType")]
        public CodeableConcept? ExpirationType { get => _expirationType; set { _expirationType = value; OnPropertyChangedByClr(nameof(ExpirationType), value); } }

        private List<Contract_Friendly>? _friendly;
        [JsonPropertyName("friendly")]
        public List<Contract_Friendly>? Friendly { get => _friendly; set { _friendly = value; OnPropertyChangedByClr(nameof(Friendly), value); } }

        /// <summary>
        /// Contract Friendly Language
        /// </summary>
        public partial class Contract_Friendly : BackboneElement<Contract_Friendly>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Contract_Friendly" : "contract_Friendly";
            private Attachment? _contentAttachment;
        [JsonPropertyName("contentAttachment")]
        public Attachment? ContentAttachment { get => _contentAttachment; set { _contentAttachment = value; if (value != null) {{ _contentReference = null; OnPropertyChanged("contentReference", null); }}; OnPropertyChanged("contentAttachment", value); } }

            private ReferenceType? _contentReference;
        [JsonPropertyName("contentReference")]
        public ReferenceType? ContentReference { get => _contentReference; set { _contentReference = value; if (value != null) {{ _contentAttachment = null; OnPropertyChanged("contentAttachment", null); }}; OnPropertyChanged("contentReference", value); } }

        }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private ReferenceType? _instantiatesCanonical;
        [JsonPropertyName("instantiatesCanonical")]
        public ReferenceType? InstantiatesCanonical { get => _instantiatesCanonical; set { _instantiatesCanonical = value; OnPropertyChangedByClr(nameof(InstantiatesCanonical), value); } }

        private FhirUri? _instantiatesUri;
        [JsonPropertyName("instantiatesUri")]
        public FhirUri? InstantiatesUri { get => _instantiatesUri; set { _instantiatesUri = value; OnPropertyChangedByClr(nameof(InstantiatesUri), value); } }

        private FhirDateTime? _issued;
        [JsonPropertyName("issued")]
        public FhirDateTime? Issued { get => _issued; set { _issued = value; OnPropertyChangedByClr(nameof(Issued), value); } }

        private List<Contract_Legal>? _legal;
        [JsonPropertyName("legal")]
        public List<Contract_Legal>? Legal { get => _legal; set { _legal = value; OnPropertyChangedByClr(nameof(Legal), value); } }

        /// <summary>
        /// Contract Legal Language
        /// </summary>
        public partial class Contract_Legal : BackboneElement<Contract_Legal>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Contract_Legal" : "contract_Legal";
            private Attachment? _contentAttachment;
        [JsonPropertyName("contentAttachment")]
        public Attachment? ContentAttachment { get => _contentAttachment; set { _contentAttachment = value; if (value != null) {{ _contentReference = null; OnPropertyChanged("contentReference", null); }}; OnPropertyChanged("contentAttachment", value); } }

            private ReferenceType? _contentReference;
        [JsonPropertyName("contentReference")]
        public ReferenceType? ContentReference { get => _contentReference; set { _contentReference = value; if (value != null) {{ _contentAttachment = null; OnPropertyChanged("contentAttachment", null); }}; OnPropertyChanged("contentReference", value); } }

        }

        private Attachment? _legallyBindingAttachment;
        [JsonPropertyName("legallyBindingAttachment")]
        public Attachment? LegallyBindingAttachment { get => _legallyBindingAttachment; set { _legallyBindingAttachment = value; if (value != null) {{ _legallyBindingReference = null; OnPropertyChangedByClr(nameof(LegallyBindingReference), null); }}; OnPropertyChangedByClr(nameof(LegallyBindingAttachment), value); } }

        private ReferenceType? _legallyBindingReference;
        [JsonPropertyName("legallyBindingReference")]
        public ReferenceType? LegallyBindingReference { get => _legallyBindingReference; set { _legallyBindingReference = value; if (value != null) {{ _legallyBindingAttachment = null; OnPropertyChangedByClr(nameof(LegallyBindingAttachment), null); }}; OnPropertyChangedByClr(nameof(LegallyBindingReference), value); } }

        private CodeableConcept? _legalState;
        [JsonPropertyName("legalState")]
        public CodeableConcept? LegalState { get => _legalState; set { _legalState = value; OnPropertyChangedByClr(nameof(LegalState), value); } }

        private FhirString? _name;
        [JsonPropertyName("name")]
        public FhirString? Name { get => _name; set { _name = value; OnPropertyChangedByClr(nameof(Name), value); } }

        private List<ReferenceType>? _relevantHistory;
        [JsonPropertyName("relevantHistory")]
        public List<ReferenceType>? RelevantHistory { get => _relevantHistory; set { _relevantHistory = value; OnPropertyChangedByClr(nameof(RelevantHistory), value); } }

        private List<Contract_Rule>? _rule;
        [JsonPropertyName("rule")]
        public List<Contract_Rule>? Rule { get => _rule; set { _rule = value; OnPropertyChangedByClr(nameof(Rule), value); } }

        /// <summary>
        /// Computable Contract Language
        /// </summary>
        public partial class Contract_Rule : BackboneElement<Contract_Rule>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Contract_Rule" : "contract_Rule";
            private Attachment? _contentAttachment;
        [JsonPropertyName("contentAttachment")]
        public Attachment? ContentAttachment { get => _contentAttachment; set { _contentAttachment = value; if (value != null) {{ _contentReference = null; OnPropertyChanged("contentReference", null); }}; OnPropertyChanged("contentAttachment", value); } }

            private ReferenceType? _contentReference;
        [JsonPropertyName("contentReference")]
        public ReferenceType? ContentReference { get => _contentReference; set { _contentReference = value; if (value != null) {{ _contentAttachment = null; OnPropertyChanged("contentAttachment", null); }}; OnPropertyChanged("contentReference", value); } }

        }

        private CodeableConcept? _scope;
        [JsonPropertyName("scope")]
        public CodeableConcept? Scope { get => _scope; set { _scope = value; OnPropertyChangedByClr(nameof(Scope), value); } }

        private List<Contract_Signer>? _signer;
        [JsonPropertyName("signer")]
        public List<Contract_Signer>? Signer { get => _signer; set { _signer = value; OnPropertyChangedByClr(nameof(Signer), value); } }

        /// <summary>
        /// Contract Signatory
        /// </summary>
        public partial class Contract_Signer : BackboneElement<Contract_Signer>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Contract_Signer" : "contract_Signer";
            private ReferenceType? _party;
        [JsonPropertyName("party")]
        public ReferenceType Party { get => _party ?? throw new InvalidOperationException("Party is required"); set { _party = value; } }

            private List<Signature> _signature = new();
        [JsonPropertyName("signature")]
        public List<Signature> Signature { get => _signature; set { _signature = value; } }

            private Coding? _type;
        [JsonPropertyName("type")]
        public Coding Type { get => _type ?? throw new InvalidOperationException("Type is required"); set { _type = value; } }

        }

        private List<ReferenceType>? _site;
        [JsonPropertyName("site")]
        public List<ReferenceType>? Site { get => _site; set { _site = value; OnPropertyChangedByClr(nameof(Site), value); } }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode? Status { get => _status; set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private List<ReferenceType>? _subject;
        [JsonPropertyName("subject")]
        public List<ReferenceType>? Subject { get => _subject; set { _subject = value; OnPropertyChangedByClr(nameof(Subject), value); } }

        private FhirString? _subtitle;
        [JsonPropertyName("subtitle")]
        public FhirString? Subtitle { get => _subtitle; set { _subtitle = value; OnPropertyChangedByClr(nameof(Subtitle), value); } }

        private List<CodeableConcept>? _subType;
        [JsonPropertyName("subType")]
        public List<CodeableConcept>? SubType { get => _subType; set { _subType = value; OnPropertyChangedByClr(nameof(SubType), value); } }

        private List<ReferenceType>? _supportingInfo;
        [JsonPropertyName("supportingInfo")]
        public List<ReferenceType>? SupportingInfo { get => _supportingInfo; set { _supportingInfo = value; OnPropertyChangedByClr(nameof(SupportingInfo), value); } }

        private List<Contract_Term>? _term;
        [JsonPropertyName("term")]
        public List<Contract_Term>? Term { get => _term; set { _term = value; OnPropertyChangedByClr(nameof(Term), value); } }

        /// <summary>
        /// Contract Term List
        /// </summary>
        public partial class Contract_Term : BackboneElement<Contract_Term>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Contract_Term" : "contract_Term";
            private List<Contract_Term_Action>? _action;
        [JsonPropertyName("action")]
        public List<Contract_Term_Action>? Action { get => _action; set { _action = value; } }

            /// <summary>
            /// Entity being ascribed responsibility
            /// </summary>
            public partial class Contract_Term_Action : BackboneElement<Contract_Term_Action>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Contract_Term_Action" : "contract_Term_Action";
                private ReferenceType? _context;
        [JsonPropertyName("context")]
        public ReferenceType? Context { get => _context; set { _context = value; } }

                private List<FhirString>? _contextLinkId;
        [JsonPropertyName("contextLinkId")]
        public List<FhirString>? ContextLinkId { get => _contextLinkId; set { _contextLinkId = value; } }

                private FhirBoolean? _doNotPerform;
        [JsonPropertyName("doNotPerform")]
        public FhirBoolean? DoNotPerform { get => _doNotPerform; set { _doNotPerform = value; } }

                private CodeableConcept? _intent;
        [JsonPropertyName("intent")]
        public CodeableConcept Intent { get => _intent ?? throw new InvalidOperationException("Intent is required"); set { _intent = value; } }

                private List<FhirString>? _linkId;
        [JsonPropertyName("linkId")]
        public List<FhirString>? LinkId { get => _linkId; set { _linkId = value; } }

                private List<Annotation>? _note;
        [JsonPropertyName("note")]
        public List<Annotation>? Note { get => _note; set { _note = value; } }

                private FhirDateTime? _occurrenceDateTime;
        [JsonPropertyName("occurrenceDateTime")]
        public FhirDateTime? OccurrenceDateTime { get => _occurrenceDateTime; set { _occurrenceDateTime = value; if (value != null) {{ _occurrencePeriod = null; OnPropertyChanged("occurrencePeriod", null); _occurrenceTiming = null; OnPropertyChanged("occurrenceTiming", null); }}; OnPropertyChanged("occurrenceDateTime", value); } }

                private Period? _occurrencePeriod;
        [JsonPropertyName("occurrencePeriod")]
        public Period? OccurrencePeriod { get => _occurrencePeriod; set { _occurrencePeriod = value; if (value != null) {{ _occurrenceDateTime = null; OnPropertyChanged("occurrenceDateTime", null); _occurrenceTiming = null; OnPropertyChanged("occurrenceTiming", null); }}; OnPropertyChanged("occurrencePeriod", value); } }

                private Timing? _occurrenceTiming;
        [JsonPropertyName("occurrenceTiming")]
        public Timing? OccurrenceTiming { get => _occurrenceTiming; set { _occurrenceTiming = value; if (value != null) {{ _occurrenceDateTime = null; OnPropertyChanged("occurrenceDateTime", null); _occurrencePeriod = null; OnPropertyChanged("occurrencePeriod", null); }}; OnPropertyChanged("occurrenceTiming", value); } }

                private ReferenceType? _performer;
        [JsonPropertyName("performer")]
        public ReferenceType? Performer { get => _performer; set { _performer = value; } }

                private List<FhirString>? _performerLinkId;
        [JsonPropertyName("performerLinkId")]
        public List<FhirString>? PerformerLinkId { get => _performerLinkId; set { _performerLinkId = value; } }

                private CodeableConcept? _performerRole;
        [JsonPropertyName("performerRole")]
        public CodeableConcept? PerformerRole { get => _performerRole; set { _performerRole = value; } }

                private List<CodeableConcept>? _performerType;
        [JsonPropertyName("performerType")]
        public List<CodeableConcept>? PerformerType { get => _performerType; set { _performerType = value; } }

                private List<CodeableReference>? _reason;
        [JsonPropertyName("reason")]
        public List<CodeableReference>? Reason { get => _reason; set { _reason = value; } }

                private List<FhirString>? _reasonLinkId;
        [JsonPropertyName("reasonLinkId")]
        public List<FhirString>? ReasonLinkId { get => _reasonLinkId; set { _reasonLinkId = value; } }

                private List<ReferenceType>? _requester;
        [JsonPropertyName("requester")]
        public List<ReferenceType>? Requester { get => _requester; set { _requester = value; } }

                private List<FhirString>? _requesterLinkId;
        [JsonPropertyName("requesterLinkId")]
        public List<FhirString>? RequesterLinkId { get => _requesterLinkId; set { _requesterLinkId = value; } }

                private List<FhirUnsignedInt>? _securityLabelNumber;
        [JsonPropertyName("securityLabelNumber")]
        public List<FhirUnsignedInt>? SecurityLabelNumber { get => _securityLabelNumber; set { _securityLabelNumber = value; } }

                private CodeableConcept? _status;
        [JsonPropertyName("status")]
        public CodeableConcept Status { get => _status ?? throw new InvalidOperationException("Status is required"); set { _status = value; } }

                private List<Contract_Term_Action_Subject>? _subject;
        [JsonPropertyName("subject")]
        public List<Contract_Term_Action_Subject>? Subject { get => _subject; set { _subject = value; } }

                /// <summary>
                /// Entity of the action
                /// </summary>
                public partial class Contract_Term_Action_Subject : BackboneElement<Contract_Term_Action_Subject>
                {
                    public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Contract_Term_Action_Subject" : "contract_Term_Action_Subject";
                    private List<ReferenceType> _reference = new();
        [JsonPropertyName("reference")]
        public List<ReferenceType> Reference { get => _reference; set { _reference = value; } }

                    private CodeableConcept? _role;
        [JsonPropertyName("role")]
        public CodeableConcept? Role { get => _role; set { _role = value; } }

                }

                private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept Type { get => _type ?? throw new InvalidOperationException("Type is required"); set { _type = value; } }

            }

            private Period? _applies;
        [JsonPropertyName("applies")]
        public Period? Applies { get => _applies; set { _applies = value; } }

            private List<Contract_Term_Asset>? _asset;
        [JsonPropertyName("asset")]
        public List<Contract_Term_Asset>? Asset { get => _asset; set { _asset = value; } }

            /// <summary>
            /// Contract Term Asset List
            /// </summary>
            public partial class Contract_Term_Asset : BackboneElement<Contract_Term_Asset>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Contract_Term_Asset" : "contract_Term_Asset";
                private List<FhirString>? _answer;
        [JsonPropertyName("answer")]
        public List<FhirString>? Answer { get => _answer; set { _answer = value; } }

                private FhirString? _condition;
        [JsonPropertyName("condition")]
        public FhirString? Condition { get => _condition; set { _condition = value; } }

                private List<Contract_Term_Asset_Context>? _context;
        [JsonPropertyName("context")]
        public List<Contract_Term_Asset_Context>? Context { get => _context; set { _context = value; } }

                /// <summary>
                /// Circumstance of the asset
                /// </summary>
                public partial class Contract_Term_Asset_Context : BackboneElement<Contract_Term_Asset_Context>
                {
                    public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Contract_Term_Asset_Context" : "contract_Term_Asset_Context";
                    private List<CodeableConcept>? _code;
        [JsonPropertyName("code")]
        public List<CodeableConcept>? Code { get => _code; set { _code = value; } }

                    private ReferenceType? _reference;
        [JsonPropertyName("reference")]
        public ReferenceType? Reference { get => _reference; set { _reference = value; } }

                    private FhirString? _text;
        [JsonPropertyName("text")]
        public FhirString? Text { get => _text; set { _text = value; } }

                }

                private List<FhirString>? _linkId;
        [JsonPropertyName("linkId")]
        public List<FhirString>? LinkId { get => _linkId; set { _linkId = value; } }

                private List<Period>? _period;
        [JsonPropertyName("period")]
        public List<Period>? Period { get => _period; set { _period = value; } }

                private List<CodeableConcept>? _periodType;
        [JsonPropertyName("periodType")]
        public List<CodeableConcept>? PeriodType { get => _periodType; set { _periodType = value; } }

                private Coding? _relationship;
        [JsonPropertyName("relationship")]
        public Coding? Relationship { get => _relationship; set { _relationship = value; } }

                private CodeableConcept? _scope;
        [JsonPropertyName("scope")]
        public CodeableConcept? Scope { get => _scope; set { _scope = value; } }

                private List<FhirUnsignedInt>? _securityLabelNumber;
        [JsonPropertyName("securityLabelNumber")]
        public List<FhirUnsignedInt>? SecurityLabelNumber { get => _securityLabelNumber; set { _securityLabelNumber = value; } }

                private List<CodeableConcept>? _subtype;
        [JsonPropertyName("subtype")]
        public List<CodeableConcept>? Subtype { get => _subtype; set { _subtype = value; } }

                private FhirString? _text;
        [JsonPropertyName("text")]
        public FhirString? Text { get => _text; set { _text = value; } }

                private List<CodeableConcept>? _type;
        [JsonPropertyName("type")]
        public List<CodeableConcept>? Type { get => _type; set { _type = value; } }

                private List<ReferenceType>? _typeReference;
        [JsonPropertyName("typeReference")]
        public List<ReferenceType>? TypeReference { get => _typeReference; set { _typeReference = value; } }

                private List<Period>? _usePeriod;
        [JsonPropertyName("usePeriod")]
        public List<Period>? UsePeriod { get => _usePeriod; set { _usePeriod = value; } }

                private List<Contract_Term_Asset_ValuedItem>? _valuedItem;
        [JsonPropertyName("valuedItem")]
        public List<Contract_Term_Asset_ValuedItem>? ValuedItem { get => _valuedItem; set { _valuedItem = value; } }

                /// <summary>
                /// Contract Valued Item List
                /// </summary>
                public partial class Contract_Term_Asset_ValuedItem : BackboneElement<Contract_Term_Asset_ValuedItem>
                {
                    public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Contract_Term_Asset_ValuedItem" : "contract_Term_Asset_ValuedItem";
                    private FhirDateTime? _effectiveTime;
        [JsonPropertyName("effectiveTime")]
        public FhirDateTime? EffectiveTime { get => _effectiveTime; set { _effectiveTime = value; } }

                    private CodeableConcept? _entityCodeableConcept;
        [JsonPropertyName("entityCodeableConcept")]
        public CodeableConcept? EntityCodeableConcept { get => _entityCodeableConcept; set { _entityCodeableConcept = value; if (value != null) {{ }}; OnPropertyChanged("entityCodeableConcept", value); } }

                    private ReferenceType? _entityReference;
        [JsonPropertyName("entityReference")]
        public ReferenceType? EntityReference { get => _entityReference; set { _entityReference = value; if (value != null) {{ _entityCodeableConcept = null; OnPropertyChanged("entityCodeableConcept", null); }}; OnPropertyChanged("entityReference", value); } }

                    private FhirDecimal? _factor;
        [JsonPropertyName("factor")]
        public FhirDecimal? Factor { get => _factor; set { _factor = value; } }

                    private Identifier? _identifier;
        [JsonPropertyName("identifier")]
        public Identifier? Identifier { get => _identifier; set { _identifier = value; } }

                    private List<FhirString>? _linkId;
        [JsonPropertyName("linkId")]
        public List<FhirString>? LinkId { get => _linkId; set { _linkId = value; } }

                    private Money? _net;
        [JsonPropertyName("net")]
        public Money? Net { get => _net; set { _net = value; } }

                    private FhirString? _payment;
        [JsonPropertyName("payment")]
        public FhirString? Payment { get => _payment; set { _payment = value; } }

                    private FhirDateTime? _paymentDate;
        [JsonPropertyName("paymentDate")]
        public FhirDateTime? PaymentDate { get => _paymentDate; set { _paymentDate = value; } }

                    private FhirDecimal? _points;
        [JsonPropertyName("points")]
        public FhirDecimal? Points { get => _points; set { _points = value; } }

                    private Quantity? _quantity;
        [JsonPropertyName("quantity")]
        public Quantity? Quantity { get => _quantity; set { _quantity = value; } }

                    private ReferenceType? _recipient;
        [JsonPropertyName("recipient")]
        public ReferenceType? Recipient { get => _recipient; set { _recipient = value; } }

                    private ReferenceType? _responsible;
        [JsonPropertyName("responsible")]
        public ReferenceType? Responsible { get => _responsible; set { _responsible = value; } }

                    private List<FhirUnsignedInt>? _securityLabelNumber;
        [JsonPropertyName("securityLabelNumber")]
        public List<FhirUnsignedInt>? SecurityLabelNumber { get => _securityLabelNumber; set { _securityLabelNumber = value; } }

                    private Money? _unitPrice;
        [JsonPropertyName("unitPrice")]
        public Money? UnitPrice { get => _unitPrice; set { _unitPrice = value; } }

                }

            }

            private List<FhirString>? _group;
        [JsonPropertyName("group")]
        public List<FhirString>? Group { get => _group; set { _group = value; } }

            private Identifier? _identifier;
        [JsonPropertyName("identifier")]
        public Identifier? Identifier { get => _identifier; set { _identifier = value; } }

            private FhirDateTime? _issued;
        [JsonPropertyName("issued")]
        public FhirDateTime? Issued { get => _issued; set { _issued = value; } }

            private Contract_Term_Offer? _offer;
        [JsonPropertyName("offer")]
        public Contract_Term_Offer Offer { get => _offer ?? throw new InvalidOperationException("Offer is required"); set { _offer = value; } }

            /// <summary>
            /// Context of the Contract term
            /// </summary>
            public partial class Contract_Term_Offer : BackboneElement<Contract_Term_Offer>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Contract_Term_Offer" : "contract_Term_Offer";
                private List<Contract_Term_Offer_Answer>? _answer;
        [JsonPropertyName("answer")]
        public List<Contract_Term_Offer_Answer>? Answer { get => _answer; set { _answer = value; } }

                /// <summary>
                /// Response to offer text
                /// </summary>
                public partial class Contract_Term_Offer_Answer : BackboneElement<Contract_Term_Offer_Answer>
                {
                    public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Contract_Term_Offer_Answer" : "contract_Term_Offer_Answer";
                    private FhirBoolean? _valueBoolean;
        [JsonPropertyName("valueBoolean")]
        public FhirBoolean? ValueBoolean { get => _valueBoolean; set { _valueBoolean = value; if (value != null) {{ }}; OnPropertyChanged("valueBoolean", value); } }

                    private FhirDecimal? _valueDecimal;
        [JsonPropertyName("valueDecimal")]
        public FhirDecimal? ValueDecimal { get => _valueDecimal; set { _valueDecimal = value; if (value != null) {{ _valueBoolean = null; OnPropertyChanged("valueBoolean", null); }}; OnPropertyChanged("valueDecimal", value); } }

                    private FhirInteger? _valueInteger;
        [JsonPropertyName("valueInteger")]
        public FhirInteger? ValueInteger { get => _valueInteger; set { _valueInteger = value; if (value != null) {{ _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueDecimal = null; OnPropertyChanged("valueDecimal", null); }}; OnPropertyChanged("valueInteger", value); } }

                    private FhirDate? _valuedate;
        [JsonPropertyName("valuedate")]
        public FhirDate? Valuedate { get => _valuedate; set { _valuedate = value; if (value != null) {{ _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueDecimal = null; OnPropertyChanged("valueDecimal", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); }}; OnPropertyChanged("valuedate", value); } }

                    private FhirDateTime? _valueDateTime;
        [JsonPropertyName("valueDateTime")]
        public FhirDateTime? ValueDateTime { get => _valueDateTime; set { _valueDateTime = value; if (value != null) {{ _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueDecimal = null; OnPropertyChanged("valueDecimal", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valuedate = null; OnPropertyChanged("valuedate", null); }}; OnPropertyChanged("valueDateTime", value); } }

                    private FhirTime? _valueTime;
        [JsonPropertyName("valueTime")]
        public FhirTime? ValueTime { get => _valueTime; set { _valueTime = value; if (value != null) {{ _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueDecimal = null; OnPropertyChanged("valueDecimal", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valuedate = null; OnPropertyChanged("valuedate", null); _valueDateTime = null; OnPropertyChanged("valueDateTime", null); }}; OnPropertyChanged("valueTime", value); } }

                    private FhirString? _valueString;
        [JsonPropertyName("valueString")]
        public FhirString? ValueString { get => _valueString; set { _valueString = value; if (value != null) {{ _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueDecimal = null; OnPropertyChanged("valueDecimal", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valuedate = null; OnPropertyChanged("valuedate", null); _valueDateTime = null; OnPropertyChanged("valueDateTime", null); _valueTime = null; OnPropertyChanged("valueTime", null); }}; OnPropertyChanged("valueString", value); } }

                    private FhirUri? _valueuri;
        [JsonPropertyName("valueuri")]
        public FhirUri? Valueuri { get => _valueuri; set { _valueuri = value; if (value != null) {{ _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueDecimal = null; OnPropertyChanged("valueDecimal", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valuedate = null; OnPropertyChanged("valuedate", null); _valueDateTime = null; OnPropertyChanged("valueDateTime", null); _valueTime = null; OnPropertyChanged("valueTime", null); _valueString = null; OnPropertyChanged("valueString", null); }}; OnPropertyChanged("valueuri", value); } }

                    private Attachment? _valueAttachment;
        [JsonPropertyName("valueAttachment")]
        public Attachment? ValueAttachment { get => _valueAttachment; set { _valueAttachment = value; if (value != null) {{ _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueDecimal = null; OnPropertyChanged("valueDecimal", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valuedate = null; OnPropertyChanged("valuedate", null); _valueDateTime = null; OnPropertyChanged("valueDateTime", null); _valueTime = null; OnPropertyChanged("valueTime", null); _valueString = null; OnPropertyChanged("valueString", null); _valueuri = null; OnPropertyChanged("valueuri", null); }}; OnPropertyChanged("valueAttachment", value); } }

                    private Coding? _valueCoding;
        [JsonPropertyName("valueCoding")]
        public Coding? ValueCoding { get => _valueCoding; set { _valueCoding = value; if (value != null) {{ _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueDecimal = null; OnPropertyChanged("valueDecimal", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valuedate = null; OnPropertyChanged("valuedate", null); _valueDateTime = null; OnPropertyChanged("valueDateTime", null); _valueTime = null; OnPropertyChanged("valueTime", null); _valueString = null; OnPropertyChanged("valueString", null); _valueuri = null; OnPropertyChanged("valueuri", null); _valueAttachment = null; OnPropertyChanged("valueAttachment", null); }}; OnPropertyChanged("valueCoding", value); } }

                    private Quantity? _valueQuantity;
        [JsonPropertyName("valueQuantity")]
        public Quantity? ValueQuantity { get => _valueQuantity; set { _valueQuantity = value; if (value != null) {{ _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueDecimal = null; OnPropertyChanged("valueDecimal", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valuedate = null; OnPropertyChanged("valuedate", null); _valueDateTime = null; OnPropertyChanged("valueDateTime", null); _valueTime = null; OnPropertyChanged("valueTime", null); _valueString = null; OnPropertyChanged("valueString", null); _valueuri = null; OnPropertyChanged("valueuri", null); _valueAttachment = null; OnPropertyChanged("valueAttachment", null); _valueCoding = null; OnPropertyChanged("valueCoding", null); }}; OnPropertyChanged("valueQuantity", value); } }

                    private ReferenceType? _valueReference;
        [JsonPropertyName("valueReference")]
        public ReferenceType? ValueReference { get => _valueReference; set { _valueReference = value; if (value != null) {{ _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueDecimal = null; OnPropertyChanged("valueDecimal", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valuedate = null; OnPropertyChanged("valuedate", null); _valueDateTime = null; OnPropertyChanged("valueDateTime", null); _valueTime = null; OnPropertyChanged("valueTime", null); _valueString = null; OnPropertyChanged("valueString", null); _valueuri = null; OnPropertyChanged("valueuri", null); _valueAttachment = null; OnPropertyChanged("valueAttachment", null); _valueCoding = null; OnPropertyChanged("valueCoding", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); }}; OnPropertyChanged("valueReference", value); } }

                }

                private CodeableConcept? _decision;
        [JsonPropertyName("decision")]
        public CodeableConcept? Decision { get => _decision; set { _decision = value; } }

                private List<CodeableConcept>? _decisionMode;
        [JsonPropertyName("decisionMode")]
        public List<CodeableConcept>? DecisionMode { get => _decisionMode; set { _decisionMode = value; } }

                private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; } }

                private List<FhirString>? _linkId;
        [JsonPropertyName("linkId")]
        public List<FhirString>? LinkId { get => _linkId; set { _linkId = value; } }

                private List<Contract_Term_Offer_Party>? _party;
        [JsonPropertyName("party")]
        public List<Contract_Term_Offer_Party>? Party { get => _party; set { _party = value; } }

                /// <summary>
                /// Offer Recipient
                /// </summary>
                public partial class Contract_Term_Offer_Party : BackboneElement<Contract_Term_Offer_Party>
                {
                    public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Contract_Term_Offer_Party" : "contract_Term_Offer_Party";
                    private List<ReferenceType> _reference = new();
        [JsonPropertyName("reference")]
        public List<ReferenceType> Reference { get => _reference; set { _reference = value; } }

                    private CodeableConcept? _role;
        [JsonPropertyName("role")]
        public CodeableConcept Role { get => _role ?? throw new InvalidOperationException("Role is required"); set { _role = value; } }

                }

                private List<FhirUnsignedInt>? _securityLabelNumber;
        [JsonPropertyName("securityLabelNumber")]
        public List<FhirUnsignedInt>? SecurityLabelNumber { get => _securityLabelNumber; set { _securityLabelNumber = value; } }

                private FhirString? _text;
        [JsonPropertyName("text")]
        public FhirString? Text { get => _text; set { _text = value; } }

                private ReferenceType? _topic;
        [JsonPropertyName("topic")]
        public ReferenceType? Topic { get => _topic; set { _topic = value; } }

                private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept? Type { get => _type; set { _type = value; } }

            }

            private List<Contract_Term_SecurityLabel>? _securityLabel;
        [JsonPropertyName("securityLabel")]
        public List<Contract_Term_SecurityLabel>? SecurityLabel { get => _securityLabel; set { _securityLabel = value; } }

            /// <summary>
            /// Protection for the Term
            /// </summary>
            public partial class Contract_Term_SecurityLabel : BackboneElement<Contract_Term_SecurityLabel>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Contract_Term_SecurityLabel" : "contract_Term_SecurityLabel";
                private List<Coding>? _category;
        [JsonPropertyName("category")]
        public List<Coding>? Category { get => _category; set { _category = value; } }

                private Coding? _classification;
        [JsonPropertyName("classification")]
        public Coding Classification { get => _classification ?? throw new InvalidOperationException("Classification is required"); set { _classification = value; } }

                private List<Coding>? _control;
        [JsonPropertyName("control")]
        public List<Coding>? Control { get => _control; set { _control = value; } }

                private List<FhirUnsignedInt>? _number;
        [JsonPropertyName("number")]
        public List<FhirUnsignedInt>? Number { get => _number; set { _number = value; } }

            }

            private CodeableConcept? _subType;
        [JsonPropertyName("subType")]
        public CodeableConcept? SubType { get => _subType; set { _subType = value; } }

            private FhirString? _text;
        [JsonPropertyName("text")]
        public FhirString? Text { get => _text; set { _text = value; } }

            private CodeableConcept? _topicCodeableConcept;
        [JsonPropertyName("topicCodeableConcept")]
        public CodeableConcept? TopicCodeableConcept { get => _topicCodeableConcept; set { _topicCodeableConcept = value; if (value != null) {{ _topicReference = null; OnPropertyChanged("topicReference", null); }}; OnPropertyChanged("topicCodeableConcept", value); } }

            private ReferenceType? _topicReference;
        [JsonPropertyName("topicReference")]
        public ReferenceType? TopicReference { get => _topicReference; set { _topicReference = value; if (value != null) {{ _topicCodeableConcept = null; OnPropertyChanged("topicCodeableConcept", null); }}; OnPropertyChanged("topicReference", value); } }

            private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept? Type { get => _type; set { _type = value; } }

        }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

        private FhirString? _title;
        [JsonPropertyName("title")]
        public FhirString? Title { get => _title; set { _title = value; OnPropertyChangedByClr(nameof(Title), value); } }

        private CodeableConcept? _topicCodeableConcept;
        [JsonPropertyName("topicCodeableConcept")]
        public CodeableConcept? TopicCodeableConcept { get => _topicCodeableConcept; set { _topicCodeableConcept = value; if (value != null) {{ _topicReference = null; OnPropertyChangedByClr(nameof(TopicReference), null); }}; OnPropertyChangedByClr(nameof(TopicCodeableConcept), value); } }

        private ReferenceType? _topicReference;
        [JsonPropertyName("topicReference")]
        public ReferenceType? TopicReference { get => _topicReference; set { _topicReference = value; if (value != null) {{ _topicCodeableConcept = null; OnPropertyChangedByClr(nameof(TopicCodeableConcept), null); }}; OnPropertyChangedByClr(nameof(TopicReference), value); } }

        private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept? Type { get => _type; set { _type = value; OnPropertyChangedByClr(nameof(Type), value); } }

        private FhirUri? _url;
        [JsonPropertyName("url")]
        public FhirUri? Url { get => _url; set { _url = value; OnPropertyChangedByClr(nameof(Url), value); } }

        private FhirString? _version;
        [JsonPropertyName("version")]
        public FhirString? Version { get => _version; set { _version = value; OnPropertyChangedByClr(nameof(Version), value); } }

    }
}
