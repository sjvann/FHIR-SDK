// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// Investigation to increase healthcare-related patient-independent knowledge
    /// </summary>
    public partial class ResearchStudy : ResourceBase
    {
        public override string ResourceType => "ResearchStudy";

        public ResearchStudy() { }
        public ResearchStudy(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public ResearchStudy(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private List<ResearchStudy_AssociatedParty>? _associatedParty;
        [JsonPropertyName("associatedParty")]
        public List<ResearchStudy_AssociatedParty>? AssociatedParty { get => _associatedParty; set { _associatedParty = value; OnPropertyChangedByClr(nameof(AssociatedParty), value); } }

        /// <summary>
        /// Sponsors, collaborators, and other parties
        /// </summary>
        public partial class ResearchStudy_AssociatedParty : BackboneElement<ResearchStudy_AssociatedParty>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ResearchStudy_AssociatedParty" : "researchStudy_AssociatedParty";
            private List<CodeableConcept>? _classifier;
        [JsonPropertyName("classifier")]
        public List<CodeableConcept>? Classifier { get => _classifier; set { _classifier = value; } }

            private FhirString? _name;
        [JsonPropertyName("name")]
        public FhirString? Name { get => _name; set { _name = value; } }

            private ReferenceType? _party;
        [JsonPropertyName("party")]
        public ReferenceType? Party { get => _party; set { _party = value; } }

            private List<Period>? _period;
        [JsonPropertyName("period")]
        public List<Period>? Period { get => _period; set { _period = value; } }

            private CodeableConcept? _role;
        [JsonPropertyName("role")]
        public CodeableConcept Role { get => _role ?? throw new InvalidOperationException("Role is required"); set { _role = value; } }

        }

        private List<CodeableConcept>? _classifier;
        [JsonPropertyName("classifier")]
        public List<CodeableConcept>? Classifier { get => _classifier; set { _classifier = value; OnPropertyChangedByClr(nameof(Classifier), value); } }

        private List<ResearchStudy_ComparisonGroup>? _comparisonGroup;
        [JsonPropertyName("comparisonGroup")]
        public List<ResearchStudy_ComparisonGroup>? ComparisonGroup { get => _comparisonGroup; set { _comparisonGroup = value; OnPropertyChangedByClr(nameof(ComparisonGroup), value); } }

        /// <summary>
        /// Defined path through the study for a subject
        /// </summary>
        public partial class ResearchStudy_ComparisonGroup : BackboneElement<ResearchStudy_ComparisonGroup>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ResearchStudy_ComparisonGroup" : "researchStudy_ComparisonGroup";
            private FhirMarkdown? _description;
        [JsonPropertyName("description")]
        public FhirMarkdown? Description { get => _description; set { _description = value; } }

            private List<ReferenceType>? _intendedExposure;
        [JsonPropertyName("intendedExposure")]
        public List<ReferenceType>? IntendedExposure { get => _intendedExposure; set { _intendedExposure = value; } }

            private FhirId? _linkId;
        [JsonPropertyName("linkId")]
        public FhirId? LinkId { get => _linkId; set { _linkId = value; } }

            private FhirString? _name;
        [JsonPropertyName("name")]
        public FhirString Name { get => _name ?? throw new InvalidOperationException("Name is required"); set { _name = value; } }

            private ReferenceType? _observedGroup;
        [JsonPropertyName("observedGroup")]
        public ReferenceType? ObservedGroup { get => _observedGroup; set { _observedGroup = value; } }

            private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept? Type { get => _type; set { _type = value; } }

        }

        private List<CodeableConcept>? _condition;
        [JsonPropertyName("condition")]
        public List<CodeableConcept>? Condition { get => _condition; set { _condition = value; OnPropertyChangedByClr(nameof(Condition), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private FhirDateTime? _date;
        [JsonPropertyName("date")]
        public FhirDateTime? Date { get => _date; set { _date = value; OnPropertyChangedByClr(nameof(Date), value); } }

        private FhirMarkdown? _description;
        [JsonPropertyName("description")]
        public FhirMarkdown? Description { get => _description; set { _description = value; OnPropertyChangedByClr(nameof(Description), value); } }

        private FhirMarkdown? _descriptionSummary;
        [JsonPropertyName("descriptionSummary")]
        public FhirMarkdown? DescriptionSummary { get => _descriptionSummary; set { _descriptionSummary = value; OnPropertyChangedByClr(nameof(DescriptionSummary), value); } }

        private List<CodeableReference>? _focus;
        [JsonPropertyName("focus")]
        public List<CodeableReference>? Focus { get => _focus; set { _focus = value; OnPropertyChangedByClr(nameof(Focus), value); } }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private List<CodeableConcept>? _keyword;
        [JsonPropertyName("keyword")]
        public List<CodeableConcept>? Keyword { get => _keyword; set { _keyword = value; OnPropertyChangedByClr(nameof(Keyword), value); } }

        private List<ResearchStudy_Label>? _label;
        [JsonPropertyName("label")]
        public List<ResearchStudy_Label>? Label { get => _label; set { _label = value; OnPropertyChangedByClr(nameof(Label), value); } }

        /// <summary>
        /// Additional names for the study
        /// </summary>
        public partial class ResearchStudy_Label : BackboneElement<ResearchStudy_Label>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ResearchStudy_Label" : "researchStudy_Label";
            private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept? Type { get => _type; set { _type = value; } }

            private FhirString? _value;
        [JsonPropertyName("value")]
        public FhirString? Value { get => _value; set { _value = value; } }

        }

        private FhirString? _name;
        [JsonPropertyName("name")]
        public FhirString? Name { get => _name; set { _name = value; OnPropertyChangedByClr(nameof(Name), value); } }

        private List<Annotation>? _note;
        [JsonPropertyName("note")]
        public List<Annotation>? Note { get => _note; set { _note = value; OnPropertyChangedByClr(nameof(Note), value); } }

        private List<ResearchStudy_Objective>? _objective;
        [JsonPropertyName("objective")]
        public List<ResearchStudy_Objective>? Objective { get => _objective; set { _objective = value; OnPropertyChangedByClr(nameof(Objective), value); } }

        /// <summary>
        /// A goal for the study
        /// </summary>
        public partial class ResearchStudy_Objective : BackboneElement<ResearchStudy_Objective>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ResearchStudy_Objective" : "researchStudy_Objective";
            private FhirMarkdown? _description;
        [JsonPropertyName("description")]
        public FhirMarkdown? Description { get => _description; set { _description = value; } }

            private FhirString? _name;
        [JsonPropertyName("name")]
        public FhirString? Name { get => _name; set { _name = value; } }

            private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept? Type { get => _type; set { _type = value; } }

        }

        private List<ResearchStudy_OutcomeMeasure>? _outcomeMeasure;
        [JsonPropertyName("outcomeMeasure")]
        public List<ResearchStudy_OutcomeMeasure>? OutcomeMeasure { get => _outcomeMeasure; set { _outcomeMeasure = value; OnPropertyChangedByClr(nameof(OutcomeMeasure), value); } }

        /// <summary>
        /// A variable measured during the study
        /// </summary>
        public partial class ResearchStudy_OutcomeMeasure : BackboneElement<ResearchStudy_OutcomeMeasure>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ResearchStudy_OutcomeMeasure" : "researchStudy_OutcomeMeasure";
            private FhirMarkdown? _description;
        [JsonPropertyName("description")]
        public FhirMarkdown? Description { get => _description; set { _description = value; } }

            private FhirString? _name;
        [JsonPropertyName("name")]
        public FhirString? Name { get => _name; set { _name = value; } }

            private ReferenceType? _reference;
        [JsonPropertyName("reference")]
        public ReferenceType? Reference { get => _reference; set { _reference = value; } }

            private List<CodeableConcept>? _type;
        [JsonPropertyName("type")]
        public List<CodeableConcept>? Type { get => _type; set { _type = value; } }

        }

        private List<ReferenceType>? _partOf;
        [JsonPropertyName("partOf")]
        public List<ReferenceType>? PartOf { get => _partOf; set { _partOf = value; OnPropertyChangedByClr(nameof(PartOf), value); } }

        private Period? _period;
        [JsonPropertyName("period")]
        public Period? Period { get => _period; set { _period = value; OnPropertyChangedByClr(nameof(Period), value); } }

        private CodeableConcept? _phase;
        [JsonPropertyName("phase")]
        public CodeableConcept? Phase { get => _phase; set { _phase = value; OnPropertyChangedByClr(nameof(Phase), value); } }

        private CodeableConcept? _primaryPurposeType;
        [JsonPropertyName("primaryPurposeType")]
        public CodeableConcept? PrimaryPurposeType { get => _primaryPurposeType; set { _primaryPurposeType = value; OnPropertyChangedByClr(nameof(PrimaryPurposeType), value); } }

        private List<ResearchStudy_ProgressStatus>? _progressStatus;
        [JsonPropertyName("progressStatus")]
        public List<ResearchStudy_ProgressStatus>? ProgressStatus { get => _progressStatus; set { _progressStatus = value; OnPropertyChangedByClr(nameof(ProgressStatus), value); } }

        /// <summary>
        /// Status of study with time for that status
        /// </summary>
        public partial class ResearchStudy_ProgressStatus : BackboneElement<ResearchStudy_ProgressStatus>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ResearchStudy_ProgressStatus" : "researchStudy_ProgressStatus";
            private FhirBoolean? _actual;
        [JsonPropertyName("actual")]
        public FhirBoolean? Actual { get => _actual; set { _actual = value; } }

            private Period? _period;
        [JsonPropertyName("period")]
        public Period? Period { get => _period; set { _period = value; } }

            private CodeableConcept? _state;
        [JsonPropertyName("state")]
        public CodeableConcept State { get => _state ?? throw new InvalidOperationException("State is required"); set { _state = value; } }

        }

        private List<ReferenceType>? _protocol;
        [JsonPropertyName("protocol")]
        public List<ReferenceType>? Protocol { get => _protocol; set { _protocol = value; OnPropertyChangedByClr(nameof(Protocol), value); } }

        private ResearchStudy_Recruitment? _recruitment;
        [JsonPropertyName("recruitment")]
        public ResearchStudy_Recruitment? Recruitment { get => _recruitment; set { _recruitment = value; OnPropertyChangedByClr(nameof(Recruitment), value); } }

        /// <summary>
        /// Target or actual group of participants enrolled in study
        /// </summary>
        public partial class ResearchStudy_Recruitment : BackboneElement<ResearchStudy_Recruitment>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ResearchStudy_Recruitment" : "researchStudy_Recruitment";
            private ReferenceType? _actualGroup;
        [JsonPropertyName("actualGroup")]
        public ReferenceType? ActualGroup { get => _actualGroup; set { _actualGroup = value; } }

            private FhirUnsignedInt? _actualNumber;
        [JsonPropertyName("actualNumber")]
        public FhirUnsignedInt? ActualNumber { get => _actualNumber; set { _actualNumber = value; } }

            private ReferenceType? _eligibility;
        [JsonPropertyName("eligibility")]
        public ReferenceType? Eligibility { get => _eligibility; set { _eligibility = value; } }

            private FhirUnsignedInt? _targetNumber;
        [JsonPropertyName("targetNumber")]
        public FhirUnsignedInt? TargetNumber { get => _targetNumber; set { _targetNumber = value; } }

        }

        private List<CodeableConcept>? _region;
        [JsonPropertyName("region")]
        public List<CodeableConcept>? Region { get => _region; set { _region = value; OnPropertyChangedByClr(nameof(Region), value); } }

        private List<RelatedArtifact>? _relatedArtifact;
        [JsonPropertyName("relatedArtifact")]
        public List<RelatedArtifact>? RelatedArtifact { get => _relatedArtifact; set { _relatedArtifact = value; OnPropertyChangedByClr(nameof(RelatedArtifact), value); } }

        private List<ReferenceType>? _result;
        [JsonPropertyName("result")]
        public List<ReferenceType>? Result { get => _result; set { _result = value; OnPropertyChangedByClr(nameof(Result), value); } }

        private List<ReferenceType>? _site;
        [JsonPropertyName("site")]
        public List<ReferenceType>? Site { get => _site; set { _site = value; OnPropertyChangedByClr(nameof(Site), value); } }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode Status { get => _status ?? throw new InvalidOperationException("Status is required"); set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private List<CodeableConcept>? _studyDesign;
        [JsonPropertyName("studyDesign")]
        public List<CodeableConcept>? StudyDesign { get => _studyDesign; set { _studyDesign = value; OnPropertyChangedByClr(nameof(StudyDesign), value); } }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

        private FhirString? _title;
        [JsonPropertyName("title")]
        public FhirString? Title { get => _title; set { _title = value; OnPropertyChangedByClr(nameof(Title), value); } }

        private FhirUri? _url;
        [JsonPropertyName("url")]
        public FhirUri? Url { get => _url; set { _url = value; OnPropertyChangedByClr(nameof(Url), value); } }

        private FhirString? _version;
        [JsonPropertyName("version")]
        public FhirString? Version { get => _version; set { _version = value; OnPropertyChangedByClr(nameof(Version), value); } }

        private CodeableConcept? _whyStopped;
        [JsonPropertyName("whyStopped")]
        public CodeableConcept? WhyStopped { get => _whyStopped; set { _whyStopped = value; OnPropertyChangedByClr(nameof(WhyStopped), value); } }

    }
}
