// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// Claim, Pre-determination or Pre-authorization
    /// </summary>
    public partial class Claim : ResourceBase
    {
        public override string ResourceType => "Claim";

        public Claim() { }
        public Claim(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public Claim(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private Claim_Accident? _accident;
        [JsonPropertyName("accident")]
        public Claim_Accident? Accident { get => _accident; set { _accident = value; OnPropertyChangedByClr(nameof(Accident), value); } }

        /// <summary>
        /// Details of the event
        /// </summary>
        public partial class Claim_Accident : BackboneElement<Claim_Accident>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Claim_Accident" : "claim_Accident";
            private FhirDate? _date;
        [JsonPropertyName("date")]
        public FhirDate Date { get => _date ?? throw new InvalidOperationException("Date is required"); set { _date = value; } }

            private Address? _locationAddress;
        [JsonPropertyName("locationAddress")]
        public Address? LocationAddress { get => _locationAddress; set { _locationAddress = value; if (value != null) {{ _locationReference = null; OnPropertyChanged("locationReference", null); }}; OnPropertyChanged("locationAddress", value); } }

            private ReferenceType? _locationReference;
        [JsonPropertyName("locationReference")]
        public ReferenceType? LocationReference { get => _locationReference; set { _locationReference = value; if (value != null) {{ _locationAddress = null; OnPropertyChanged("locationAddress", null); }}; OnPropertyChanged("locationReference", value); } }

            private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept? Type { get => _type; set { _type = value; } }

        }

        private Period? _billablePeriod;
        [JsonPropertyName("billablePeriod")]
        public Period? BillablePeriod { get => _billablePeriod; set { _billablePeriod = value; OnPropertyChangedByClr(nameof(BillablePeriod), value); } }

        private List<Claim_CareTeam>? _careTeam;
        [JsonPropertyName("careTeam")]
        public List<Claim_CareTeam>? CareTeam { get => _careTeam; set { _careTeam = value; OnPropertyChangedByClr(nameof(CareTeam), value); } }

        /// <summary>
        /// Members of the care team
        /// </summary>
        public partial class Claim_CareTeam : BackboneElement<Claim_CareTeam>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Claim_CareTeam" : "claim_CareTeam";
            private ReferenceType? _provider;
        [JsonPropertyName("provider")]
        public ReferenceType Provider { get => _provider ?? throw new InvalidOperationException("Provider is required"); set { _provider = value; } }

            private FhirBoolean? _responsible;
        [JsonPropertyName("responsible")]
        public FhirBoolean? Responsible { get => _responsible; set { _responsible = value; } }

            private CodeableConcept? _role;
        [JsonPropertyName("role")]
        public CodeableConcept? Role { get => _role; set { _role = value; } }

            private FhirPositiveInt? _sequence;
        [JsonPropertyName("sequence")]
        public FhirPositiveInt Sequence { get => _sequence ?? throw new InvalidOperationException("Sequence is required"); set { _sequence = value; } }

            private CodeableConcept? _specialty;
        [JsonPropertyName("specialty")]
        public CodeableConcept? Specialty { get => _specialty; set { _specialty = value; } }

        }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private FhirDateTime? _created;
        [JsonPropertyName("created")]
        public FhirDateTime Created { get => _created ?? throw new InvalidOperationException("Created is required"); set { _created = value; OnPropertyChangedByClr(nameof(Created), value); } }

        private List<Claim_Diagnosis>? _diagnosis;
        [JsonPropertyName("diagnosis")]
        public List<Claim_Diagnosis>? Diagnosis { get => _diagnosis; set { _diagnosis = value; OnPropertyChangedByClr(nameof(Diagnosis), value); } }

        /// <summary>
        /// Pertinent diagnosis information
        /// </summary>
        public partial class Claim_Diagnosis : BackboneElement<Claim_Diagnosis>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Claim_Diagnosis" : "claim_Diagnosis";
            private CodeableConcept? _diagnosisCodeableConcept;
        [JsonPropertyName("diagnosisCodeableConcept")]
        public CodeableConcept? DiagnosisCodeableConcept { get => _diagnosisCodeableConcept; set { _diagnosisCodeableConcept = value; if (value != null) {{ _diagnosisReference = null; OnPropertyChanged("diagnosisReference", null); }}; OnPropertyChanged("diagnosisCodeableConcept", value); } }

            private ReferenceType? _diagnosisReference;
        [JsonPropertyName("diagnosisReference")]
        public ReferenceType? DiagnosisReference { get => _diagnosisReference; set { _diagnosisReference = value; if (value != null) {{ _diagnosisCodeableConcept = null; OnPropertyChanged("diagnosisCodeableConcept", null); }}; OnPropertyChanged("diagnosisReference", value); } }

            private CodeableConcept? _onAdmission;
        [JsonPropertyName("onAdmission")]
        public CodeableConcept? OnAdmission { get => _onAdmission; set { _onAdmission = value; } }

            private FhirPositiveInt? _sequence;
        [JsonPropertyName("sequence")]
        public FhirPositiveInt Sequence { get => _sequence ?? throw new InvalidOperationException("Sequence is required"); set { _sequence = value; } }

            private List<CodeableConcept>? _type;
        [JsonPropertyName("type")]
        public List<CodeableConcept>? Type { get => _type; set { _type = value; } }

        }

        private CodeableConcept? _diagnosisRelatedGroup;
        [JsonPropertyName("diagnosisRelatedGroup")]
        public CodeableConcept? DiagnosisRelatedGroup { get => _diagnosisRelatedGroup; set { _diagnosisRelatedGroup = value; OnPropertyChangedByClr(nameof(DiagnosisRelatedGroup), value); } }

        private List<ReferenceType>? _encounter;
        [JsonPropertyName("encounter")]
        public List<ReferenceType>? Encounter { get => _encounter; set { _encounter = value; OnPropertyChangedByClr(nameof(Encounter), value); } }

        private ReferenceType? _enterer;
        [JsonPropertyName("enterer")]
        public ReferenceType? Enterer { get => _enterer; set { _enterer = value; OnPropertyChangedByClr(nameof(Enterer), value); } }

        private List<Claim_Event>? _event;
        [JsonPropertyName("event")]
        public List<Claim_Event>? Event { get => _event; set { _event = value; OnPropertyChangedByClr(nameof(Event), value); } }

        /// <summary>
        /// Event information
        /// </summary>
        public partial class Claim_Event : BackboneElement<Claim_Event>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Claim_Event" : "claim_Event";
            private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept Type { get => _type ?? throw new InvalidOperationException("Type is required"); set { _type = value; } }

            private FhirDateTime? _whenDateTime;
        [JsonPropertyName("whenDateTime")]
        public FhirDateTime? WhenDateTime { get => _whenDateTime; set { _whenDateTime = value; if (value != null) {{ _whenPeriod = null; OnPropertyChanged("whenPeriod", null); }}; OnPropertyChanged("whenDateTime", value); } }

            private Period? _whenPeriod;
        [JsonPropertyName("whenPeriod")]
        public Period? WhenPeriod { get => _whenPeriod; set { _whenPeriod = value; if (value != null) {{ _whenDateTime = null; OnPropertyChanged("whenDateTime", null); }}; OnPropertyChanged("whenPeriod", value); } }

        }

        private ReferenceType? _facility;
        [JsonPropertyName("facility")]
        public ReferenceType? Facility { get => _facility; set { _facility = value; OnPropertyChangedByClr(nameof(Facility), value); } }

        private CodeableConcept? _fundsReserve;
        [JsonPropertyName("fundsReserve")]
        public CodeableConcept? FundsReserve { get => _fundsReserve; set { _fundsReserve = value; OnPropertyChangedByClr(nameof(FundsReserve), value); } }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private List<Claim_Insurance>? _insurance;
        [JsonPropertyName("insurance")]
        public List<Claim_Insurance>? Insurance { get => _insurance; set { _insurance = value; OnPropertyChangedByClr(nameof(Insurance), value); } }

        /// <summary>
        /// Patient insurance information
        /// </summary>
        public partial class Claim_Insurance : BackboneElement<Claim_Insurance>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Claim_Insurance" : "claim_Insurance";
            private FhirString? _businessArrangement;
        [JsonPropertyName("businessArrangement")]
        public FhirString? BusinessArrangement { get => _businessArrangement; set { _businessArrangement = value; } }

            private ReferenceType? _claimResponse;
        [JsonPropertyName("claimResponse")]
        public ReferenceType? ClaimResponse { get => _claimResponse; set { _claimResponse = value; } }

            private ReferenceType? _coverage;
        [JsonPropertyName("coverage")]
        public ReferenceType Coverage { get => _coverage ?? throw new InvalidOperationException("Coverage is required"); set { _coverage = value; } }

            private FhirBoolean? _focal;
        [JsonPropertyName("focal")]
        public FhirBoolean Focal { get => _focal ?? throw new InvalidOperationException("Focal is required"); set { _focal = value; } }

            private Identifier? _identifier;
        [JsonPropertyName("identifier")]
        public Identifier? Identifier { get => _identifier; set { _identifier = value; } }

            private List<FhirString>? _preAuthRef;
        [JsonPropertyName("preAuthRef")]
        public List<FhirString>? PreAuthRef { get => _preAuthRef; set { _preAuthRef = value; } }

            private FhirPositiveInt? _sequence;
        [JsonPropertyName("sequence")]
        public FhirPositiveInt Sequence { get => _sequence ?? throw new InvalidOperationException("Sequence is required"); set { _sequence = value; } }

        }

        private ReferenceType? _insurer;
        [JsonPropertyName("insurer")]
        public ReferenceType? Insurer { get => _insurer; set { _insurer = value; OnPropertyChangedByClr(nameof(Insurer), value); } }

        private List<Claim_Item>? _item;
        [JsonPropertyName("item")]
        public List<Claim_Item>? Item { get => _item; set { _item = value; OnPropertyChangedByClr(nameof(Item), value); } }

        /// <summary>
        /// Product or service provided
        /// </summary>
        public partial class Claim_Item : BackboneElement<Claim_Item>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Claim_Item" : "claim_Item";
            private List<Claim_Item_BodySite>? _bodySite;
        [JsonPropertyName("bodySite")]
        public List<Claim_Item_BodySite>? BodySite { get => _bodySite; set { _bodySite = value; } }

            /// <summary>
            /// Anatomical location
            /// </summary>
            public partial class Claim_Item_BodySite : BackboneElement<Claim_Item_BodySite>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Claim_Item_BodySite" : "claim_Item_BodySite";
                private List<CodeableReference> _site = new();
        [JsonPropertyName("site")]
        public List<CodeableReference> Site { get => _site; set { _site = value; } }

                private List<CodeableConcept>? _subSite;
        [JsonPropertyName("subSite")]
        public List<CodeableConcept>? SubSite { get => _subSite; set { _subSite = value; } }

            }

            private List<FhirPositiveInt>? _careTeamSequence;
        [JsonPropertyName("careTeamSequence")]
        public List<FhirPositiveInt>? CareTeamSequence { get => _careTeamSequence; set { _careTeamSequence = value; } }

            private CodeableConcept? _category;
        [JsonPropertyName("category")]
        public CodeableConcept? Category { get => _category; set { _category = value; } }

            private List<Claim_Item_Detail>? _detail;
        [JsonPropertyName("detail")]
        public List<Claim_Item_Detail>? Detail { get => _detail; set { _detail = value; } }

            /// <summary>
            /// Product or service provided
            /// </summary>
            public partial class Claim_Item_Detail : BackboneElement<Claim_Item_Detail>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Claim_Item_Detail" : "claim_Item_Detail";
                private CodeableConcept? _category;
        [JsonPropertyName("category")]
        public CodeableConcept? Category { get => _category; set { _category = value; } }

                private FhirDecimal? _factor;
        [JsonPropertyName("factor")]
        public FhirDecimal? Factor { get => _factor; set { _factor = value; } }

                private List<CodeableConcept>? _modifier;
        [JsonPropertyName("modifier")]
        public List<CodeableConcept>? Modifier { get => _modifier; set { _modifier = value; } }

                private Money? _net;
        [JsonPropertyName("net")]
        public Money? Net { get => _net; set { _net = value; } }

                private Money? _patientPaid;
        [JsonPropertyName("patientPaid")]
        public Money? PatientPaid { get => _patientPaid; set { _patientPaid = value; } }

                private CodeableConcept? _productOrService;
        [JsonPropertyName("productOrService")]
        public CodeableConcept? ProductOrService { get => _productOrService; set { _productOrService = value; } }

                private CodeableConcept? _productOrServiceEnd;
        [JsonPropertyName("productOrServiceEnd")]
        public CodeableConcept? ProductOrServiceEnd { get => _productOrServiceEnd; set { _productOrServiceEnd = value; } }

                private List<CodeableConcept>? _programCode;
        [JsonPropertyName("programCode")]
        public List<CodeableConcept>? ProgramCode { get => _programCode; set { _programCode = value; } }

                private Quantity? _quantity;
        [JsonPropertyName("quantity")]
        public Quantity? Quantity { get => _quantity; set { _quantity = value; } }

                private CodeableConcept? _revenue;
        [JsonPropertyName("revenue")]
        public CodeableConcept? Revenue { get => _revenue; set { _revenue = value; } }

                private FhirPositiveInt? _sequence;
        [JsonPropertyName("sequence")]
        public FhirPositiveInt Sequence { get => _sequence ?? throw new InvalidOperationException("Sequence is required"); set { _sequence = value; } }

                private List<Claim_Item_Detail_SubDetail>? _subDetail;
        [JsonPropertyName("subDetail")]
        public List<Claim_Item_Detail_SubDetail>? SubDetail { get => _subDetail; set { _subDetail = value; } }

                /// <summary>
                /// Product or service provided
                /// </summary>
                public partial class Claim_Item_Detail_SubDetail : BackboneElement<Claim_Item_Detail_SubDetail>
                {
                    public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Claim_Item_Detail_SubDetail" : "claim_Item_Detail_SubDetail";
                    private CodeableConcept? _category;
        [JsonPropertyName("category")]
        public CodeableConcept? Category { get => _category; set { _category = value; } }

                    private FhirDecimal? _factor;
        [JsonPropertyName("factor")]
        public FhirDecimal? Factor { get => _factor; set { _factor = value; } }

                    private List<CodeableConcept>? _modifier;
        [JsonPropertyName("modifier")]
        public List<CodeableConcept>? Modifier { get => _modifier; set { _modifier = value; } }

                    private Money? _net;
        [JsonPropertyName("net")]
        public Money? Net { get => _net; set { _net = value; } }

                    private Money? _patientPaid;
        [JsonPropertyName("patientPaid")]
        public Money? PatientPaid { get => _patientPaid; set { _patientPaid = value; } }

                    private CodeableConcept? _productOrService;
        [JsonPropertyName("productOrService")]
        public CodeableConcept? ProductOrService { get => _productOrService; set { _productOrService = value; } }

                    private CodeableConcept? _productOrServiceEnd;
        [JsonPropertyName("productOrServiceEnd")]
        public CodeableConcept? ProductOrServiceEnd { get => _productOrServiceEnd; set { _productOrServiceEnd = value; } }

                    private List<CodeableConcept>? _programCode;
        [JsonPropertyName("programCode")]
        public List<CodeableConcept>? ProgramCode { get => _programCode; set { _programCode = value; } }

                    private Quantity? _quantity;
        [JsonPropertyName("quantity")]
        public Quantity? Quantity { get => _quantity; set { _quantity = value; } }

                    private CodeableConcept? _revenue;
        [JsonPropertyName("revenue")]
        public CodeableConcept? Revenue { get => _revenue; set { _revenue = value; } }

                    private FhirPositiveInt? _sequence;
        [JsonPropertyName("sequence")]
        public FhirPositiveInt Sequence { get => _sequence ?? throw new InvalidOperationException("Sequence is required"); set { _sequence = value; } }

                    private Money? _tax;
        [JsonPropertyName("tax")]
        public Money? Tax { get => _tax; set { _tax = value; } }

                    private List<Identifier>? _traceNumber;
        [JsonPropertyName("traceNumber")]
        public List<Identifier>? TraceNumber { get => _traceNumber; set { _traceNumber = value; } }

                    private List<ReferenceType>? _udi;
        [JsonPropertyName("udi")]
        public List<ReferenceType>? Udi { get => _udi; set { _udi = value; } }

                    private Money? _unitPrice;
        [JsonPropertyName("unitPrice")]
        public Money? UnitPrice { get => _unitPrice; set { _unitPrice = value; } }

                }

                private Money? _tax;
        [JsonPropertyName("tax")]
        public Money? Tax { get => _tax; set { _tax = value; } }

                private List<Identifier>? _traceNumber;
        [JsonPropertyName("traceNumber")]
        public List<Identifier>? TraceNumber { get => _traceNumber; set { _traceNumber = value; } }

                private List<ReferenceType>? _udi;
        [JsonPropertyName("udi")]
        public List<ReferenceType>? Udi { get => _udi; set { _udi = value; } }

                private Money? _unitPrice;
        [JsonPropertyName("unitPrice")]
        public Money? UnitPrice { get => _unitPrice; set { _unitPrice = value; } }

            }

            private List<FhirPositiveInt>? _diagnosisSequence;
        [JsonPropertyName("diagnosisSequence")]
        public List<FhirPositiveInt>? DiagnosisSequence { get => _diagnosisSequence; set { _diagnosisSequence = value; } }

            private List<ReferenceType>? _encounter;
        [JsonPropertyName("encounter")]
        public List<ReferenceType>? Encounter { get => _encounter; set { _encounter = value; } }

            private FhirDecimal? _factor;
        [JsonPropertyName("factor")]
        public FhirDecimal? Factor { get => _factor; set { _factor = value; } }

            private List<FhirPositiveInt>? _informationSequence;
        [JsonPropertyName("informationSequence")]
        public List<FhirPositiveInt>? InformationSequence { get => _informationSequence; set { _informationSequence = value; } }

            private CodeableConcept? _locationCodeableConcept;
        [JsonPropertyName("locationCodeableConcept")]
        public CodeableConcept? LocationCodeableConcept { get => _locationCodeableConcept; set { _locationCodeableConcept = value; if (value != null) {{ _locationAddress = null; OnPropertyChanged("locationAddress", null); _locationReference = null; OnPropertyChanged("locationReference", null); }}; OnPropertyChanged("locationCodeableConcept", value); } }

            private Address? _locationAddress;
        [JsonPropertyName("locationAddress")]
        public Address? LocationAddress { get => _locationAddress; set { _locationAddress = value; if (value != null) {{ _locationCodeableConcept = null; OnPropertyChanged("locationCodeableConcept", null); _locationReference = null; OnPropertyChanged("locationReference", null); }}; OnPropertyChanged("locationAddress", value); } }

            private ReferenceType? _locationReference;
        [JsonPropertyName("locationReference")]
        public ReferenceType? LocationReference { get => _locationReference; set { _locationReference = value; if (value != null) {{ _locationCodeableConcept = null; OnPropertyChanged("locationCodeableConcept", null); _locationAddress = null; OnPropertyChanged("locationAddress", null); }}; OnPropertyChanged("locationReference", value); } }

            private List<CodeableConcept>? _modifier;
        [JsonPropertyName("modifier")]
        public List<CodeableConcept>? Modifier { get => _modifier; set { _modifier = value; } }

            private Money? _net;
        [JsonPropertyName("net")]
        public Money? Net { get => _net; set { _net = value; } }

            private Money? _patientPaid;
        [JsonPropertyName("patientPaid")]
        public Money? PatientPaid { get => _patientPaid; set { _patientPaid = value; } }

            private List<FhirPositiveInt>? _procedureSequence;
        [JsonPropertyName("procedureSequence")]
        public List<FhirPositiveInt>? ProcedureSequence { get => _procedureSequence; set { _procedureSequence = value; } }

            private CodeableConcept? _productOrService;
        [JsonPropertyName("productOrService")]
        public CodeableConcept? ProductOrService { get => _productOrService; set { _productOrService = value; } }

            private CodeableConcept? _productOrServiceEnd;
        [JsonPropertyName("productOrServiceEnd")]
        public CodeableConcept? ProductOrServiceEnd { get => _productOrServiceEnd; set { _productOrServiceEnd = value; } }

            private List<CodeableConcept>? _programCode;
        [JsonPropertyName("programCode")]
        public List<CodeableConcept>? ProgramCode { get => _programCode; set { _programCode = value; } }

            private Quantity? _quantity;
        [JsonPropertyName("quantity")]
        public Quantity? Quantity { get => _quantity; set { _quantity = value; } }

            private List<ReferenceType>? _request;
        [JsonPropertyName("request")]
        public List<ReferenceType>? Request { get => _request; set { _request = value; } }

            private CodeableConcept? _revenue;
        [JsonPropertyName("revenue")]
        public CodeableConcept? Revenue { get => _revenue; set { _revenue = value; } }

            private FhirPositiveInt? _sequence;
        [JsonPropertyName("sequence")]
        public FhirPositiveInt Sequence { get => _sequence ?? throw new InvalidOperationException("Sequence is required"); set { _sequence = value; } }

            private FhirDate? _serviceddate;
        [JsonPropertyName("serviceddate")]
        public FhirDate? Serviceddate { get => _serviceddate; set { _serviceddate = value; if (value != null) {{ _servicedPeriod = null; OnPropertyChanged("servicedPeriod", null); }}; OnPropertyChanged("serviceddate", value); } }

            private Period? _servicedPeriod;
        [JsonPropertyName("servicedPeriod")]
        public Period? ServicedPeriod { get => _servicedPeriod; set { _servicedPeriod = value; if (value != null) {{ _serviceddate = null; OnPropertyChanged("serviceddate", null); }}; OnPropertyChanged("servicedPeriod", value); } }

            private Money? _tax;
        [JsonPropertyName("tax")]
        public Money? Tax { get => _tax; set { _tax = value; } }

            private List<Identifier>? _traceNumber;
        [JsonPropertyName("traceNumber")]
        public List<Identifier>? TraceNumber { get => _traceNumber; set { _traceNumber = value; } }

            private List<ReferenceType>? _udi;
        [JsonPropertyName("udi")]
        public List<ReferenceType>? Udi { get => _udi; set { _udi = value; } }

            private Money? _unitPrice;
        [JsonPropertyName("unitPrice")]
        public Money? UnitPrice { get => _unitPrice; set { _unitPrice = value; } }

        }

        private ReferenceType? _originalPrescription;
        [JsonPropertyName("originalPrescription")]
        public ReferenceType? OriginalPrescription { get => _originalPrescription; set { _originalPrescription = value; OnPropertyChangedByClr(nameof(OriginalPrescription), value); } }

        private ReferenceType? _patient;
        [JsonPropertyName("patient")]
        public ReferenceType Patient { get => _patient ?? throw new InvalidOperationException("Patient is required"); set { _patient = value; OnPropertyChangedByClr(nameof(Patient), value); } }

        private Money? _patientPaid;
        [JsonPropertyName("patientPaid")]
        public Money? PatientPaid { get => _patientPaid; set { _patientPaid = value; OnPropertyChangedByClr(nameof(PatientPaid), value); } }

        private Claim_Payee? _payee;
        [JsonPropertyName("payee")]
        public Claim_Payee? Payee { get => _payee; set { _payee = value; OnPropertyChangedByClr(nameof(Payee), value); } }

        /// <summary>
        /// Recipient of benefits payable
        /// </summary>
        public partial class Claim_Payee : BackboneElement<Claim_Payee>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Claim_Payee" : "claim_Payee";
            private ReferenceType? _party;
        [JsonPropertyName("party")]
        public ReferenceType? Party { get => _party; set { _party = value; } }

            private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept Type { get => _type ?? throw new InvalidOperationException("Type is required"); set { _type = value; } }

        }

        private ReferenceType? _prescription;
        [JsonPropertyName("prescription")]
        public ReferenceType? Prescription { get => _prescription; set { _prescription = value; OnPropertyChangedByClr(nameof(Prescription), value); } }

        private CodeableConcept? _priority;
        [JsonPropertyName("priority")]
        public CodeableConcept? Priority { get => _priority; set { _priority = value; OnPropertyChangedByClr(nameof(Priority), value); } }

        private List<Claim_Procedure>? _procedure;
        [JsonPropertyName("procedure")]
        public List<Claim_Procedure>? Procedure { get => _procedure; set { _procedure = value; OnPropertyChangedByClr(nameof(Procedure), value); } }

        /// <summary>
        /// Clinical procedures performed
        /// </summary>
        public partial class Claim_Procedure : BackboneElement<Claim_Procedure>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Claim_Procedure" : "claim_Procedure";
            private FhirDateTime? _date;
        [JsonPropertyName("date")]
        public FhirDateTime? Date { get => _date; set { _date = value; } }

            private CodeableConcept? _procedureCodeableConcept;
        [JsonPropertyName("procedureCodeableConcept")]
        public CodeableConcept? ProcedureCodeableConcept { get => _procedureCodeableConcept; set { _procedureCodeableConcept = value; if (value != null) {{ _procedureReference = null; OnPropertyChanged("procedureReference", null); }}; OnPropertyChanged("procedureCodeableConcept", value); } }

            private ReferenceType? _procedureReference;
        [JsonPropertyName("procedureReference")]
        public ReferenceType? ProcedureReference { get => _procedureReference; set { _procedureReference = value; if (value != null) {{ _procedureCodeableConcept = null; OnPropertyChanged("procedureCodeableConcept", null); }}; OnPropertyChanged("procedureReference", value); } }

            private FhirPositiveInt? _sequence;
        [JsonPropertyName("sequence")]
        public FhirPositiveInt Sequence { get => _sequence ?? throw new InvalidOperationException("Sequence is required"); set { _sequence = value; } }

            private List<CodeableConcept>? _type;
        [JsonPropertyName("type")]
        public List<CodeableConcept>? Type { get => _type; set { _type = value; } }

            private List<ReferenceType>? _udi;
        [JsonPropertyName("udi")]
        public List<ReferenceType>? Udi { get => _udi; set { _udi = value; } }

        }

        private ReferenceType? _provider;
        [JsonPropertyName("provider")]
        public ReferenceType? Provider { get => _provider; set { _provider = value; OnPropertyChangedByClr(nameof(Provider), value); } }

        private ReferenceType? _referral;
        [JsonPropertyName("referral")]
        public ReferenceType? Referral { get => _referral; set { _referral = value; OnPropertyChangedByClr(nameof(Referral), value); } }

        private List<Claim_Related>? _related;
        [JsonPropertyName("related")]
        public List<Claim_Related>? Related { get => _related; set { _related = value; OnPropertyChangedByClr(nameof(Related), value); } }

        /// <summary>
        /// Prior or corollary claims
        /// </summary>
        public partial class Claim_Related : BackboneElement<Claim_Related>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Claim_Related" : "claim_Related";
            private ReferenceType? _claim;
        [JsonPropertyName("claim")]
        public ReferenceType? Claim { get => _claim; set { _claim = value; } }

            private Identifier? _reference;
        [JsonPropertyName("reference")]
        public Identifier? Reference { get => _reference; set { _reference = value; } }

            private CodeableConcept? _relationship;
        [JsonPropertyName("relationship")]
        public CodeableConcept? Relationship { get => _relationship; set { _relationship = value; } }

        }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode Status { get => _status ?? throw new InvalidOperationException("Status is required"); set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private CodeableConcept? _subType;
        [JsonPropertyName("subType")]
        public CodeableConcept? SubType { get => _subType; set { _subType = value; OnPropertyChangedByClr(nameof(SubType), value); } }

        private List<Claim_SupportingInfo>? _supportingInfo;
        [JsonPropertyName("supportingInfo")]
        public List<Claim_SupportingInfo>? SupportingInfo { get => _supportingInfo; set { _supportingInfo = value; OnPropertyChangedByClr(nameof(SupportingInfo), value); } }

        /// <summary>
        /// Supporting information
        /// </summary>
        public partial class Claim_SupportingInfo : BackboneElement<Claim_SupportingInfo>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Claim_SupportingInfo" : "claim_SupportingInfo";
            private CodeableConcept? _category;
        [JsonPropertyName("category")]
        public CodeableConcept Category { get => _category ?? throw new InvalidOperationException("Category is required"); set { _category = value; } }

            private CodeableConcept? _code;
        [JsonPropertyName("code")]
        public CodeableConcept? Code { get => _code; set { _code = value; } }

            private CodeableConcept? _reason;
        [JsonPropertyName("reason")]
        public CodeableConcept? Reason { get => _reason; set { _reason = value; } }

            private FhirPositiveInt? _sequence;
        [JsonPropertyName("sequence")]
        public FhirPositiveInt Sequence { get => _sequence ?? throw new InvalidOperationException("Sequence is required"); set { _sequence = value; } }

            private FhirDate? _timingdate;
        [JsonPropertyName("timingdate")]
        public FhirDate? Timingdate { get => _timingdate; set { _timingdate = value; if (value != null) {{ _timingPeriod = null; OnPropertyChanged("timingPeriod", null); }}; OnPropertyChanged("timingdate", value); } }

            private Period? _timingPeriod;
        [JsonPropertyName("timingPeriod")]
        public Period? TimingPeriod { get => _timingPeriod; set { _timingPeriod = value; if (value != null) {{ _timingdate = null; OnPropertyChanged("timingdate", null); }}; OnPropertyChanged("timingPeriod", value); } }

            private FhirBoolean? _valueBoolean;
        [JsonPropertyName("valueBoolean")]
        public FhirBoolean? ValueBoolean { get => _valueBoolean; set { _valueBoolean = value; if (value != null) {{ _valueString = null; OnPropertyChanged("valueString", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueAttachment = null; OnPropertyChanged("valueAttachment", null); _valueReference = null; OnPropertyChanged("valueReference", null); _valueIdentifier = null; OnPropertyChanged("valueIdentifier", null); }}; OnPropertyChanged("valueBoolean", value); } }

            private FhirString? _valueString;
        [JsonPropertyName("valueString")]
        public FhirString? ValueString { get => _valueString; set { _valueString = value; if (value != null) {{ _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueAttachment = null; OnPropertyChanged("valueAttachment", null); _valueReference = null; OnPropertyChanged("valueReference", null); _valueIdentifier = null; OnPropertyChanged("valueIdentifier", null); }}; OnPropertyChanged("valueString", value); } }

            private Quantity? _valueQuantity;
        [JsonPropertyName("valueQuantity")]
        public Quantity? ValueQuantity { get => _valueQuantity; set { _valueQuantity = value; if (value != null) {{ _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueString = null; OnPropertyChanged("valueString", null); _valueAttachment = null; OnPropertyChanged("valueAttachment", null); _valueReference = null; OnPropertyChanged("valueReference", null); _valueIdentifier = null; OnPropertyChanged("valueIdentifier", null); }}; OnPropertyChanged("valueQuantity", value); } }

            private Attachment? _valueAttachment;
        [JsonPropertyName("valueAttachment")]
        public Attachment? ValueAttachment { get => _valueAttachment; set { _valueAttachment = value; if (value != null) {{ _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueString = null; OnPropertyChanged("valueString", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueReference = null; OnPropertyChanged("valueReference", null); _valueIdentifier = null; OnPropertyChanged("valueIdentifier", null); }}; OnPropertyChanged("valueAttachment", value); } }

            private ReferenceType? _valueReference;
        [JsonPropertyName("valueReference")]
        public ReferenceType? ValueReference { get => _valueReference; set { _valueReference = value; if (value != null) {{ _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueString = null; OnPropertyChanged("valueString", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueAttachment = null; OnPropertyChanged("valueAttachment", null); _valueIdentifier = null; OnPropertyChanged("valueIdentifier", null); }}; OnPropertyChanged("valueReference", value); } }

            private Identifier? _valueIdentifier;
        [JsonPropertyName("valueIdentifier")]
        public Identifier? ValueIdentifier { get => _valueIdentifier; set { _valueIdentifier = value; if (value != null) {{ _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueString = null; OnPropertyChanged("valueString", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueAttachment = null; OnPropertyChanged("valueAttachment", null); _valueReference = null; OnPropertyChanged("valueReference", null); }}; OnPropertyChanged("valueIdentifier", value); } }

        }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

        private Money? _total;
        [JsonPropertyName("total")]
        public Money? Total { get => _total; set { _total = value; OnPropertyChangedByClr(nameof(Total), value); } }

        private List<Identifier>? _traceNumber;
        [JsonPropertyName("traceNumber")]
        public List<Identifier>? TraceNumber { get => _traceNumber; set { _traceNumber = value; OnPropertyChangedByClr(nameof(TraceNumber), value); } }

        private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept Type { get => _type ?? throw new InvalidOperationException("Type is required"); set { _type = value; OnPropertyChangedByClr(nameof(Type), value); } }

        private FhirCode? _use;
        [JsonPropertyName("use")]
        public FhirCode Use { get => _use ?? throw new InvalidOperationException("Use is required"); set { _use = value; OnPropertyChangedByClr(nameof(Use), value); } }

    }
}
