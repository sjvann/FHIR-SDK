// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// Notification about a SubscriptionTopic
    /// </summary>
    public partial class Subscription : ResourceBase
    {
        public override string ResourceType => "Subscription";

        public Subscription() { }
        public Subscription(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public Subscription(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private Coding? _channelType;
        [JsonPropertyName("channelType")]
        public Coding ChannelType { get => _channelType ?? throw new InvalidOperationException("ChannelType is required"); set { _channelType = value; OnPropertyChangedByClr(nameof(ChannelType), value); } }

        private List<ContactPoint>? _contact;
        [JsonPropertyName("contact")]
        public List<ContactPoint>? Contact { get => _contact; set { _contact = value; OnPropertyChangedByClr(nameof(Contact), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private FhirCode? _content;
        [JsonPropertyName("content")]
        public FhirCode? Content { get => _content; set { _content = value; OnPropertyChangedByClr(nameof(Content), value); } }

        private FhirCode? _contentType;
        [JsonPropertyName("contentType")]
        public FhirCode? ContentType { get => _contentType; set { _contentType = value; OnPropertyChangedByClr(nameof(ContentType), value); } }

        private FhirInstant? _end;
        [JsonPropertyName("end")]
        public FhirInstant? End { get => _end; set { _end = value; OnPropertyChangedByClr(nameof(End), value); } }

        private FhirUrl? _endpoint;
        [JsonPropertyName("endpoint")]
        public FhirUrl? Endpoint { get => _endpoint; set { _endpoint = value; OnPropertyChangedByClr(nameof(Endpoint), value); } }

        private List<Subscription_FilterBy>? _filterBy;
        [JsonPropertyName("filterBy")]
        public List<Subscription_FilterBy>? FilterBy { get => _filterBy; set { _filterBy = value; OnPropertyChangedByClr(nameof(FilterBy), value); } }

        /// <summary>
        /// Criteria for narrowing the subscription topic stream
        /// </summary>
        public partial class Subscription_FilterBy : BackboneElement<Subscription_FilterBy>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Subscription_FilterBy" : "subscription_FilterBy";
            private FhirCode? _comparator;
        [JsonPropertyName("comparator")]
        public FhirCode? Comparator { get => _comparator; set { _comparator = value; } }

            private FhirString? _filterParameter;
        [JsonPropertyName("filterParameter")]
        public FhirString FilterParameter { get => _filterParameter ?? throw new InvalidOperationException("FilterParameter is required"); set { _filterParameter = value; } }

            private FhirCode? _modifier;
        [JsonPropertyName("modifier")]
        public FhirCode? Modifier { get => _modifier; set { _modifier = value; } }

            private FhirUri? _resourceType;
        [JsonPropertyName("resourceType")]
        public FhirUri? ResourceType { get => _resourceType; set { _resourceType = value; } }

            private FhirString? _value;
        [JsonPropertyName("value")]
        public FhirString Value { get => _value ?? throw new InvalidOperationException("Value is required"); set { _value = value; } }

        }

        private FhirUnsignedInt? _heartbeatPeriod;
        [JsonPropertyName("heartbeatPeriod")]
        public FhirUnsignedInt? HeartbeatPeriod { get => _heartbeatPeriod; set { _heartbeatPeriod = value; OnPropertyChangedByClr(nameof(HeartbeatPeriod), value); } }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private ReferenceType? _managingEntity;
        [JsonPropertyName("managingEntity")]
        public ReferenceType? ManagingEntity { get => _managingEntity; set { _managingEntity = value; OnPropertyChangedByClr(nameof(ManagingEntity), value); } }

        private FhirPositiveInt? _maxCount;
        [JsonPropertyName("maxCount")]
        public FhirPositiveInt? MaxCount { get => _maxCount; set { _maxCount = value; OnPropertyChangedByClr(nameof(MaxCount), value); } }

        private FhirString? _name;
        [JsonPropertyName("name")]
        public FhirString? Name { get => _name; set { _name = value; OnPropertyChangedByClr(nameof(Name), value); } }

        private List<Subscription_Parameter>? _parameter;
        [JsonPropertyName("parameter")]
        public List<Subscription_Parameter>? Parameter { get => _parameter; set { _parameter = value; OnPropertyChangedByClr(nameof(Parameter), value); } }

        /// <summary>
        /// Channel type
        /// </summary>
        public partial class Subscription_Parameter : BackboneElement<Subscription_Parameter>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Subscription_Parameter" : "subscription_Parameter";
            private FhirString? _name;
        [JsonPropertyName("name")]
        public FhirString Name { get => _name ?? throw new InvalidOperationException("Name is required"); set { _name = value; } }

            private FhirString? _value;
        [JsonPropertyName("value")]
        public FhirString Value { get => _value ?? throw new InvalidOperationException("Value is required"); set { _value = value; } }

        }

        private FhirString? _reason;
        [JsonPropertyName("reason")]
        public FhirString? Reason { get => _reason; set { _reason = value; OnPropertyChangedByClr(nameof(Reason), value); } }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode Status { get => _status ?? throw new InvalidOperationException("Status is required"); set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

        private FhirUnsignedInt? _timeout;
        [JsonPropertyName("timeout")]
        public FhirUnsignedInt? Timeout { get => _timeout; set { _timeout = value; OnPropertyChangedByClr(nameof(Timeout), value); } }

        private FhirCanonical? _topic;
        [JsonPropertyName("topic")]
        public FhirCanonical Topic { get => _topic ?? throw new InvalidOperationException("Topic is required"); set { _topic = value; OnPropertyChangedByClr(nameof(Topic), value); } }

    }
}
