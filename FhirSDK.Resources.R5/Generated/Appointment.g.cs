// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// A booking of a healthcare event among patient(s), practitioner(s), related person(s) and/or device(s) for a specific date/time. This may result in one or more Encounter(s)
    /// </summary>
    public partial class Appointment : ResourceBase
    {
        public override string ResourceType => "Appointment";

        public Appointment() { }
        public Appointment(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public Appointment(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private List<ReferenceType>? _account;
        [JsonPropertyName("account")]
        public List<ReferenceType>? Account { get => _account; set { _account = value; OnPropertyChangedByClr(nameof(Account), value); } }

        private CodeableConcept? _appointmentType;
        [JsonPropertyName("appointmentType")]
        public CodeableConcept? AppointmentType { get => _appointmentType; set { _appointmentType = value; OnPropertyChangedByClr(nameof(AppointmentType), value); } }

        private List<ReferenceType>? _basedOn;
        [JsonPropertyName("basedOn")]
        public List<ReferenceType>? BasedOn { get => _basedOn; set { _basedOn = value; OnPropertyChangedByClr(nameof(BasedOn), value); } }

        private FhirDateTime? _cancellationDate;
        [JsonPropertyName("cancellationDate")]
        public FhirDateTime? CancellationDate { get => _cancellationDate; set { _cancellationDate = value; OnPropertyChangedByClr(nameof(CancellationDate), value); } }

        private CodeableConcept? _cancellationReason;
        [JsonPropertyName("cancellationReason")]
        public CodeableConcept? CancellationReason { get => _cancellationReason; set { _cancellationReason = value; OnPropertyChangedByClr(nameof(CancellationReason), value); } }

        private List<CodeableConcept>? _class;
        [JsonPropertyName("class")]
        public List<CodeableConcept>? Class { get => _class; set { _class = value; OnPropertyChangedByClr(nameof(Class), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private FhirDateTime? _created;
        [JsonPropertyName("created")]
        public FhirDateTime? Created { get => _created; set { _created = value; OnPropertyChangedByClr(nameof(Created), value); } }

        private FhirString? _description;
        [JsonPropertyName("description")]
        public FhirString? Description { get => _description; set { _description = value; OnPropertyChangedByClr(nameof(Description), value); } }

        private FhirInstant? _end;
        [JsonPropertyName("end")]
        public FhirInstant? End { get => _end; set { _end = value; OnPropertyChangedByClr(nameof(End), value); } }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private FhirPositiveInt? _minutesDuration;
        [JsonPropertyName("minutesDuration")]
        public FhirPositiveInt? MinutesDuration { get => _minutesDuration; set { _minutesDuration = value; OnPropertyChangedByClr(nameof(MinutesDuration), value); } }

        private List<Annotation>? _note;
        [JsonPropertyName("note")]
        public List<Annotation>? Note { get => _note; set { _note = value; OnPropertyChangedByClr(nameof(Note), value); } }

        private FhirBoolean? _occurrenceChanged;
        [JsonPropertyName("occurrenceChanged")]
        public FhirBoolean? OccurrenceChanged { get => _occurrenceChanged; set { _occurrenceChanged = value; OnPropertyChangedByClr(nameof(OccurrenceChanged), value); } }

        private ReferenceType? _originatingAppointment;
        [JsonPropertyName("originatingAppointment")]
        public ReferenceType? OriginatingAppointment { get => _originatingAppointment; set { _originatingAppointment = value; OnPropertyChangedByClr(nameof(OriginatingAppointment), value); } }

        private List<Appointment_Participant> _participant = new();
        [JsonPropertyName("participant")]
        public List<Appointment_Participant> Participant { get => _participant; set { _participant = value; OnPropertyChangedByClr(nameof(Participant), value); } }

        /// <summary>
        /// Participants involved in appointment
        /// </summary>
        public partial class Appointment_Participant : BackboneElement<Appointment_Participant>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Appointment_Participant" : "appointment_Participant";
            private ReferenceType? _actor;
        [JsonPropertyName("actor")]
        public ReferenceType? Actor { get => _actor; set { _actor = value; } }

            private Period? _period;
        [JsonPropertyName("period")]
        public Period? Period { get => _period; set { _period = value; } }

            private FhirBoolean? _required;
        [JsonPropertyName("required")]
        public FhirBoolean? Required { get => _required; set { _required = value; } }

            private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode Status { get => _status ?? throw new InvalidOperationException("Status is required"); set { _status = value; } }

            private List<CodeableConcept>? _type;
        [JsonPropertyName("type")]
        public List<CodeableConcept>? Type { get => _type; set { _type = value; } }

        }

        private List<CodeableReference>? _patientInstruction;
        [JsonPropertyName("patientInstruction")]
        public List<CodeableReference>? PatientInstruction { get => _patientInstruction; set { _patientInstruction = value; OnPropertyChangedByClr(nameof(PatientInstruction), value); } }

        private ReferenceType? _previousAppointment;
        [JsonPropertyName("previousAppointment")]
        public ReferenceType? PreviousAppointment { get => _previousAppointment; set { _previousAppointment = value; OnPropertyChangedByClr(nameof(PreviousAppointment), value); } }

        private CodeableConcept? _priority;
        [JsonPropertyName("priority")]
        public CodeableConcept? Priority { get => _priority; set { _priority = value; OnPropertyChangedByClr(nameof(Priority), value); } }

        private List<CodeableReference>? _reason;
        [JsonPropertyName("reason")]
        public List<CodeableReference>? Reason { get => _reason; set { _reason = value; OnPropertyChangedByClr(nameof(Reason), value); } }

        private FhirPositiveInt? _recurrenceId;
        [JsonPropertyName("recurrenceId")]
        public FhirPositiveInt? RecurrenceId { get => _recurrenceId; set { _recurrenceId = value; OnPropertyChangedByClr(nameof(RecurrenceId), value); } }

        private List<Appointment_RecurrenceTemplate>? _recurrenceTemplate;
        [JsonPropertyName("recurrenceTemplate")]
        public List<Appointment_RecurrenceTemplate>? RecurrenceTemplate { get => _recurrenceTemplate; set { _recurrenceTemplate = value; OnPropertyChangedByClr(nameof(RecurrenceTemplate), value); } }

        /// <summary>
        /// Details of the recurrence pattern/template used to generate occurrences
        /// </summary>
        public partial class Appointment_RecurrenceTemplate : BackboneElement<Appointment_RecurrenceTemplate>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Appointment_RecurrenceTemplate" : "appointment_RecurrenceTemplate";
            private List<FhirDate>? _excludingDate;
        [JsonPropertyName("excludingDate")]
        public List<FhirDate>? ExcludingDate { get => _excludingDate; set { _excludingDate = value; } }

            private List<FhirPositiveInt>? _excludingRecurrenceId;
        [JsonPropertyName("excludingRecurrenceId")]
        public List<FhirPositiveInt>? ExcludingRecurrenceId { get => _excludingRecurrenceId; set { _excludingRecurrenceId = value; } }

            private FhirDate? _lastOccurrenceDate;
        [JsonPropertyName("lastOccurrenceDate")]
        public FhirDate? LastOccurrenceDate { get => _lastOccurrenceDate; set { _lastOccurrenceDate = value; } }

            private Appointment_RecurrenceTemplate_MonthlyTemplate? _monthlyTemplate;
        [JsonPropertyName("monthlyTemplate")]
        public Appointment_RecurrenceTemplate_MonthlyTemplate? MonthlyTemplate { get => _monthlyTemplate; set { _monthlyTemplate = value; } }

            /// <summary>
            /// Information about monthly recurring appointments
            /// </summary>
            public partial class Appointment_RecurrenceTemplate_MonthlyTemplate : BackboneElement<Appointment_RecurrenceTemplate_MonthlyTemplate>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Appointment_RecurrenceTemplate_MonthlyTemplate" : "appointment_RecurrenceTemplate_MonthlyTemplate";
                private FhirPositiveInt? _dayOfMonth;
        [JsonPropertyName("dayOfMonth")]
        public FhirPositiveInt? DayOfMonth { get => _dayOfMonth; set { _dayOfMonth = value; } }

                private Coding? _dayOfWeek;
        [JsonPropertyName("dayOfWeek")]
        public Coding? DayOfWeek { get => _dayOfWeek; set { _dayOfWeek = value; } }

                private FhirPositiveInt? _monthInterval;
        [JsonPropertyName("monthInterval")]
        public FhirPositiveInt MonthInterval { get => _monthInterval ?? throw new InvalidOperationException("MonthInterval is required"); set { _monthInterval = value; } }

                private Coding? _nthWeekOfMonth;
        [JsonPropertyName("nthWeekOfMonth")]
        public Coding? NthWeekOfMonth { get => _nthWeekOfMonth; set { _nthWeekOfMonth = value; } }

            }

            private FhirPositiveInt? _occurrenceCount;
        [JsonPropertyName("occurrenceCount")]
        public FhirPositiveInt? OccurrenceCount { get => _occurrenceCount; set { _occurrenceCount = value; } }

            private List<FhirDate>? _occurrenceDate;
        [JsonPropertyName("occurrenceDate")]
        public List<FhirDate>? OccurrenceDate { get => _occurrenceDate; set { _occurrenceDate = value; } }

            private CodeableConcept? _recurrenceType;
        [JsonPropertyName("recurrenceType")]
        public CodeableConcept RecurrenceType { get => _recurrenceType ?? throw new InvalidOperationException("RecurrenceType is required"); set { _recurrenceType = value; } }

            private CodeableConcept? _timezone;
        [JsonPropertyName("timezone")]
        public CodeableConcept? Timezone { get => _timezone; set { _timezone = value; } }

            private Appointment_RecurrenceTemplate_WeeklyTemplate? _weeklyTemplate;
        [JsonPropertyName("weeklyTemplate")]
        public Appointment_RecurrenceTemplate_WeeklyTemplate? WeeklyTemplate { get => _weeklyTemplate; set { _weeklyTemplate = value; } }

            /// <summary>
            /// Information about weekly recurring appointments
            /// </summary>
            public partial class Appointment_RecurrenceTemplate_WeeklyTemplate : BackboneElement<Appointment_RecurrenceTemplate_WeeklyTemplate>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Appointment_RecurrenceTemplate_WeeklyTemplate" : "appointment_RecurrenceTemplate_WeeklyTemplate";
                private FhirBoolean? _friday;
        [JsonPropertyName("friday")]
        public FhirBoolean? Friday { get => _friday; set { _friday = value; } }

                private FhirBoolean? _monday;
        [JsonPropertyName("monday")]
        public FhirBoolean? Monday { get => _monday; set { _monday = value; } }

                private FhirBoolean? _saturday;
        [JsonPropertyName("saturday")]
        public FhirBoolean? Saturday { get => _saturday; set { _saturday = value; } }

                private FhirBoolean? _sunday;
        [JsonPropertyName("sunday")]
        public FhirBoolean? Sunday { get => _sunday; set { _sunday = value; } }

                private FhirBoolean? _thursday;
        [JsonPropertyName("thursday")]
        public FhirBoolean? Thursday { get => _thursday; set { _thursday = value; } }

                private FhirBoolean? _tuesday;
        [JsonPropertyName("tuesday")]
        public FhirBoolean? Tuesday { get => _tuesday; set { _tuesday = value; } }

                private FhirBoolean? _wednesday;
        [JsonPropertyName("wednesday")]
        public FhirBoolean? Wednesday { get => _wednesday; set { _wednesday = value; } }

                private FhirPositiveInt? _weekInterval;
        [JsonPropertyName("weekInterval")]
        public FhirPositiveInt? WeekInterval { get => _weekInterval; set { _weekInterval = value; } }

            }

            private Appointment_RecurrenceTemplate_YearlyTemplate? _yearlyTemplate;
        [JsonPropertyName("yearlyTemplate")]
        public Appointment_RecurrenceTemplate_YearlyTemplate? YearlyTemplate { get => _yearlyTemplate; set { _yearlyTemplate = value; } }

            /// <summary>
            /// Information about yearly recurring appointments
            /// </summary>
            public partial class Appointment_RecurrenceTemplate_YearlyTemplate : BackboneElement<Appointment_RecurrenceTemplate_YearlyTemplate>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Appointment_RecurrenceTemplate_YearlyTemplate" : "appointment_RecurrenceTemplate_YearlyTemplate";
                private FhirPositiveInt? _yearInterval;
        [JsonPropertyName("yearInterval")]
        public FhirPositiveInt YearInterval { get => _yearInterval ?? throw new InvalidOperationException("YearInterval is required"); set { _yearInterval = value; } }

            }

        }

        private List<ReferenceType>? _replaces;
        [JsonPropertyName("replaces")]
        public List<ReferenceType>? Replaces { get => _replaces; set { _replaces = value; OnPropertyChangedByClr(nameof(Replaces), value); } }

        private List<Period>? _requestedPeriod;
        [JsonPropertyName("requestedPeriod")]
        public List<Period>? RequestedPeriod { get => _requestedPeriod; set { _requestedPeriod = value; OnPropertyChangedByClr(nameof(RequestedPeriod), value); } }

        private List<CodeableConcept>? _serviceCategory;
        [JsonPropertyName("serviceCategory")]
        public List<CodeableConcept>? ServiceCategory { get => _serviceCategory; set { _serviceCategory = value; OnPropertyChangedByClr(nameof(ServiceCategory), value); } }

        private List<CodeableReference>? _serviceType;
        [JsonPropertyName("serviceType")]
        public List<CodeableReference>? ServiceType { get => _serviceType; set { _serviceType = value; OnPropertyChangedByClr(nameof(ServiceType), value); } }

        private List<ReferenceType>? _slot;
        [JsonPropertyName("slot")]
        public List<ReferenceType>? Slot { get => _slot; set { _slot = value; OnPropertyChangedByClr(nameof(Slot), value); } }

        private List<CodeableConcept>? _specialty;
        [JsonPropertyName("specialty")]
        public List<CodeableConcept>? Specialty { get => _specialty; set { _specialty = value; OnPropertyChangedByClr(nameof(Specialty), value); } }

        private FhirInstant? _start;
        [JsonPropertyName("start")]
        public FhirInstant? Start { get => _start; set { _start = value; OnPropertyChangedByClr(nameof(Start), value); } }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode Status { get => _status ?? throw new InvalidOperationException("Status is required"); set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private ReferenceType? _subject;
        [JsonPropertyName("subject")]
        public ReferenceType? Subject { get => _subject; set { _subject = value; OnPropertyChangedByClr(nameof(Subject), value); } }

        private List<ReferenceType>? _supportingInformation;
        [JsonPropertyName("supportingInformation")]
        public List<ReferenceType>? SupportingInformation { get => _supportingInformation; set { _supportingInformation = value; OnPropertyChangedByClr(nameof(SupportingInformation), value); } }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

        private List<VirtualServiceDetail>? _virtualService;
        [JsonPropertyName("virtualService")]
        public List<VirtualServiceDetail>? VirtualService { get => _virtualService; set { _virtualService = value; OnPropertyChangedByClr(nameof(VirtualService), value); } }

    }
}
