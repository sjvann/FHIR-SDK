// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// A record of significant events/milestones key data throughout the history of an Encounter
    /// </summary>
    public partial class EncounterHistory : ResourceBase
    {
        public override string ResourceType => "EncounterHistory";

        public EncounterHistory() { }
        public EncounterHistory(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public EncounterHistory(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private Period? _actualPeriod;
        [JsonPropertyName("actualPeriod")]
        public Period? ActualPeriod { get => _actualPeriod; set { _actualPeriod = value; OnPropertyChangedByClr(nameof(ActualPeriod), value); } }

        private CodeableConcept? _class;
        [JsonPropertyName("class")]
        public CodeableConcept Class { get => _class ?? throw new InvalidOperationException("Class is required"); set { _class = value; OnPropertyChangedByClr(nameof(Class), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private ReferenceType? _encounter;
        [JsonPropertyName("encounter")]
        public ReferenceType? Encounter { get => _encounter; set { _encounter = value; OnPropertyChangedByClr(nameof(Encounter), value); } }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private Duration? _length;
        [JsonPropertyName("length")]
        public Duration? Length { get => _length; set { _length = value; OnPropertyChangedByClr(nameof(Length), value); } }

        private List<EncounterHistory_Location>? _location;
        [JsonPropertyName("location")]
        public List<EncounterHistory_Location>? Location { get => _location; set { _location = value; OnPropertyChangedByClr(nameof(Location), value); } }

        /// <summary>
        /// Location of the patient at this point in the encounter
        /// </summary>
        public partial class EncounterHistory_Location : BackboneElement<EncounterHistory_Location>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "EncounterHistory_Location" : "encounterHistory_Location";
            private CodeableConcept? _form;
        [JsonPropertyName("form")]
        public CodeableConcept? Form { get => _form; set { _form = value; } }

            private ReferenceType? _location;
        [JsonPropertyName("location")]
        public ReferenceType Location { get => _location ?? throw new InvalidOperationException("Location is required"); set { _location = value; } }

        }

        private FhirDateTime? _plannedEndDate;
        [JsonPropertyName("plannedEndDate")]
        public FhirDateTime? PlannedEndDate { get => _plannedEndDate; set { _plannedEndDate = value; OnPropertyChangedByClr(nameof(PlannedEndDate), value); } }

        private FhirDateTime? _plannedStartDate;
        [JsonPropertyName("plannedStartDate")]
        public FhirDateTime? PlannedStartDate { get => _plannedStartDate; set { _plannedStartDate = value; OnPropertyChangedByClr(nameof(PlannedStartDate), value); } }

        private List<CodeableReference>? _serviceType;
        [JsonPropertyName("serviceType")]
        public List<CodeableReference>? ServiceType { get => _serviceType; set { _serviceType = value; OnPropertyChangedByClr(nameof(ServiceType), value); } }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode Status { get => _status ?? throw new InvalidOperationException("Status is required"); set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private ReferenceType? _subject;
        [JsonPropertyName("subject")]
        public ReferenceType? Subject { get => _subject; set { _subject = value; OnPropertyChangedByClr(nameof(Subject), value); } }

        private CodeableConcept? _subjectStatus;
        [JsonPropertyName("subjectStatus")]
        public CodeableConcept? SubjectStatus { get => _subjectStatus; set { _subjectStatus = value; OnPropertyChangedByClr(nameof(SubjectStatus), value); } }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

        private List<CodeableConcept>? _type;
        [JsonPropertyName("type")]
        public List<CodeableConcept>? Type { get => _type; set { _type = value; OnPropertyChangedByClr(nameof(Type), value); } }

    }
}
