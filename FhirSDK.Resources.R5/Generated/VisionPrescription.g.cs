// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// Prescription for vision correction products for a patient
    /// </summary>
    public partial class VisionPrescription : ResourceBase
    {
        public override string ResourceType => "VisionPrescription";

        public VisionPrescription() { }
        public VisionPrescription(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public VisionPrescription(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private FhirDateTime? _created;
        [JsonPropertyName("created")]
        public FhirDateTime Created { get => _created ?? throw new InvalidOperationException("Created is required"); set { _created = value; OnPropertyChangedByClr(nameof(Created), value); } }

        private FhirDateTime? _dateWritten;
        [JsonPropertyName("dateWritten")]
        public FhirDateTime DateWritten { get => _dateWritten ?? throw new InvalidOperationException("DateWritten is required"); set { _dateWritten = value; OnPropertyChangedByClr(nameof(DateWritten), value); } }

        private ReferenceType? _encounter;
        [JsonPropertyName("encounter")]
        public ReferenceType? Encounter { get => _encounter; set { _encounter = value; OnPropertyChangedByClr(nameof(Encounter), value); } }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private List<VisionPrescription_LensSpecification> _lensSpecification = new();
        [JsonPropertyName("lensSpecification")]
        public List<VisionPrescription_LensSpecification> LensSpecification { get => _lensSpecification; set { _lensSpecification = value; OnPropertyChangedByClr(nameof(LensSpecification), value); } }

        /// <summary>
        /// Vision lens authorization
        /// </summary>
        public partial class VisionPrescription_LensSpecification : BackboneElement<VisionPrescription_LensSpecification>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "VisionPrescription_LensSpecification" : "visionPrescription_LensSpecification";
            private FhirDecimal? _add;
        [JsonPropertyName("add")]
        public FhirDecimal? Add { get => _add; set { _add = value; } }

            private FhirInteger? _axis;
        [JsonPropertyName("axis")]
        public FhirInteger? Axis { get => _axis; set { _axis = value; } }

            private FhirDecimal? _backCurve;
        [JsonPropertyName("backCurve")]
        public FhirDecimal? BackCurve { get => _backCurve; set { _backCurve = value; } }

            private FhirString? _brand;
        [JsonPropertyName("brand")]
        public FhirString? Brand { get => _brand; set { _brand = value; } }

            private FhirString? _color;
        [JsonPropertyName("color")]
        public FhirString? Color { get => _color; set { _color = value; } }

            private FhirDecimal? _cylinder;
        [JsonPropertyName("cylinder")]
        public FhirDecimal? Cylinder { get => _cylinder; set { _cylinder = value; } }

            private FhirDecimal? _diameter;
        [JsonPropertyName("diameter")]
        public FhirDecimal? Diameter { get => _diameter; set { _diameter = value; } }

            private Quantity? _duration;
        [JsonPropertyName("duration")]
        public Quantity? Duration { get => _duration; set { _duration = value; } }

            private FhirCode? _eye;
        [JsonPropertyName("eye")]
        public FhirCode Eye { get => _eye ?? throw new InvalidOperationException("Eye is required"); set { _eye = value; } }

            private List<Annotation>? _note;
        [JsonPropertyName("note")]
        public List<Annotation>? Note { get => _note; set { _note = value; } }

            private FhirDecimal? _power;
        [JsonPropertyName("power")]
        public FhirDecimal? Power { get => _power; set { _power = value; } }

            private List<VisionPrescription_LensSpecification_Prism>? _prism;
        [JsonPropertyName("prism")]
        public List<VisionPrescription_LensSpecification_Prism>? Prism { get => _prism; set { _prism = value; } }

            /// <summary>
            /// Eye alignment compensation
            /// </summary>
            public partial class VisionPrescription_LensSpecification_Prism : BackboneElement<VisionPrescription_LensSpecification_Prism>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "VisionPrescription_LensSpecification_Prism" : "visionPrescription_LensSpecification_Prism";
                private FhirDecimal? _amount;
        [JsonPropertyName("amount")]
        public FhirDecimal Amount { get => _amount ?? throw new InvalidOperationException("Amount is required"); set { _amount = value; } }

                private FhirCode? _base;
        [JsonPropertyName("base")]
        public FhirCode Base { get => _base ?? throw new InvalidOperationException("Base is required"); set { _base = value; } }

            }

            private CodeableConcept? _product;
        [JsonPropertyName("product")]
        public CodeableConcept Product { get => _product ?? throw new InvalidOperationException("Product is required"); set { _product = value; } }

            private FhirDecimal? _sphere;
        [JsonPropertyName("sphere")]
        public FhirDecimal? Sphere { get => _sphere; set { _sphere = value; } }

        }

        private ReferenceType? _patient;
        [JsonPropertyName("patient")]
        public ReferenceType Patient { get => _patient ?? throw new InvalidOperationException("Patient is required"); set { _patient = value; OnPropertyChangedByClr(nameof(Patient), value); } }

        private ReferenceType? _prescriber;
        [JsonPropertyName("prescriber")]
        public ReferenceType Prescriber { get => _prescriber ?? throw new InvalidOperationException("Prescriber is required"); set { _prescriber = value; OnPropertyChangedByClr(nameof(Prescriber), value); } }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode Status { get => _status ?? throw new InvalidOperationException("Status is required"); set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

    }
}
