// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class ChargeItemFluentExtensions
    {
        public static ChargeItem AddAccount(this ChargeItem r, ReferenceType item) { r.Account ??= new List<ReferenceType>(); r.Account!.Add(item); return r; }
        public static ChargeItem AddBodysite(this ChargeItem r, CodeableConcept item) { r.Bodysite ??= new List<CodeableConcept>(); r.Bodysite!.Add(item); return r; }
        public static ChargeItem WithCode(this ChargeItem r, CodeableConcept value) { r.Code = value; return r; }
        public static ChargeItem AddContained(this ChargeItem r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static ChargeItem WithCostCenter(this ChargeItem r, ReferenceType value) { r.CostCenter = value; return r; }
        public static ChargeItem AddDefinitionCanonical(this ChargeItem r, FhirCanonical item) { r.DefinitionCanonical ??= new List<FhirCanonical>(); r.DefinitionCanonical!.Add(item); return r; }
        public static ChargeItem AddDefinitionUri(this ChargeItem r, FhirUri item) { r.DefinitionUri ??= new List<FhirUri>(); r.DefinitionUri!.Add(item); return r; }
        public static ChargeItem WithEncounter(this ChargeItem r, ReferenceType value) { r.Encounter = value; return r; }
        public static ChargeItem WithEnteredDate(this ChargeItem r, FhirDateTime value) { r.EnteredDate = value; return r; }
        public static ChargeItem WithEnterer(this ChargeItem r, ReferenceType value) { r.Enterer = value; return r; }
        public static ChargeItem AddIdentifier(this ChargeItem r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static ChargeItem AddNote(this ChargeItem r, Annotation item) { r.Note ??= new List<Annotation>(); r.Note!.Add(item); return r; }
        public static ChargeItem WithOccurrenceDateTime(this ChargeItem r, FhirDateTime value) { r.OccurrenceDateTime = value; return r; }
        public static ChargeItem WithOccurrencePeriod(this ChargeItem r, Period value) { r.OccurrencePeriod = value; return r; }
        public static ChargeItem WithOccurrenceTiming(this ChargeItem r, Timing value) { r.OccurrenceTiming = value; return r; }
        public static ChargeItem WithOverrideReason(this ChargeItem r, CodeableConcept value) { r.OverrideReason = value; return r; }
        public static ChargeItem AddPartOf(this ChargeItem r, ReferenceType item) { r.PartOf ??= new List<ReferenceType>(); r.PartOf!.Add(item); return r; }
        public static ChargeItem AddPerformer(this ChargeItem r, BackboneElement item) { r.Performer ??= new List<BackboneElement>(); r.Performer!.Add(item); return r; }
        public static ChargeItem WithPerformingOrganization(this ChargeItem r, ReferenceType value) { r.PerformingOrganization = value; return r; }
        public static ChargeItem AddProduct(this ChargeItem r, CodeableReference item) { r.Product ??= new List<CodeableReference>(); r.Product!.Add(item); return r; }
        public static ChargeItem WithQuantity(this ChargeItem r, Quantity value) { r.Quantity = value; return r; }
        public static ChargeItem AddReason(this ChargeItem r, CodeableConcept item) { r.Reason ??= new List<CodeableConcept>(); r.Reason!.Add(item); return r; }
        public static ChargeItem WithRequestingOrganization(this ChargeItem r, ReferenceType value) { r.RequestingOrganization = value; return r; }
        public static ChargeItem AddService(this ChargeItem r, CodeableReference item) { r.Service ??= new List<CodeableReference>(); r.Service!.Add(item); return r; }
        public static ChargeItem WithStatus(this ChargeItem r, FhirCode value) { r.Status = value; return r; }
        public static ChargeItem WithSubject(this ChargeItem r, ReferenceType value) { r.Subject = value; return r; }
        public static ChargeItem AddSupportingInformation(this ChargeItem r, ReferenceType item) { r.SupportingInformation ??= new List<ReferenceType>(); r.SupportingInformation!.Add(item); return r; }
        public static ChargeItem WithText(this ChargeItem r, Narrative value) { r.Text = value; return r; }
        public static ChargeItem WithTotalPriceComponent(this ChargeItem r, MonetaryComponent value) { r.TotalPriceComponent = value; return r; }
        public static ChargeItem WithUnitPriceComponent(this ChargeItem r, MonetaryComponent value) { r.UnitPriceComponent = value; return r; }
    }
}
