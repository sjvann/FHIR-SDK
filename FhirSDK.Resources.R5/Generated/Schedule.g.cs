// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// A container for slots of time that may be available for booking appointments
    /// </summary>
    public partial class Schedule : ResourceBase
    {
        public override string ResourceType => "Schedule";

        public Schedule() { }
        public Schedule(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public Schedule(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private FhirBoolean? _active;
        [JsonPropertyName("active")]
        public FhirBoolean? Active { get => _active; set { _active = value; OnPropertyChangedByClr(nameof(Active), value); } }

        private List<ReferenceType> _actor = new();
        [JsonPropertyName("actor")]
        public List<ReferenceType> Actor { get => _actor; set { _actor = value; OnPropertyChangedByClr(nameof(Actor), value); } }

        private FhirMarkdown? _comment;
        [JsonPropertyName("comment")]
        public FhirMarkdown? Comment { get => _comment; set { _comment = value; OnPropertyChangedByClr(nameof(Comment), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private FhirString? _name;
        [JsonPropertyName("name")]
        public FhirString? Name { get => _name; set { _name = value; OnPropertyChangedByClr(nameof(Name), value); } }

        private Period? _planningHorizon;
        [JsonPropertyName("planningHorizon")]
        public Period? PlanningHorizon { get => _planningHorizon; set { _planningHorizon = value; OnPropertyChangedByClr(nameof(PlanningHorizon), value); } }

        private List<CodeableConcept>? _serviceCategory;
        [JsonPropertyName("serviceCategory")]
        public List<CodeableConcept>? ServiceCategory { get => _serviceCategory; set { _serviceCategory = value; OnPropertyChangedByClr(nameof(ServiceCategory), value); } }

        private List<CodeableReference>? _serviceType;
        [JsonPropertyName("serviceType")]
        public List<CodeableReference>? ServiceType { get => _serviceType; set { _serviceType = value; OnPropertyChangedByClr(nameof(ServiceType), value); } }

        private List<CodeableConcept>? _specialty;
        [JsonPropertyName("specialty")]
        public List<CodeableConcept>? Specialty { get => _specialty; set { _specialty = value; OnPropertyChangedByClr(nameof(Specialty), value); } }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

    }
}
