// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// Information about the success/failure of an action
    /// </summary>
    public partial class OperationOutcome : ResourceBase
    {
        public override string ResourceType => "OperationOutcome";

        public OperationOutcome() { }
        public OperationOutcome(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public OperationOutcome(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private List<OperationOutcome_Issue> _issue = new();
        [JsonPropertyName("issue")]
        public List<OperationOutcome_Issue> Issue { get => _issue; set { _issue = value; OnPropertyChangedByClr(nameof(Issue), value); } }

        /// <summary>
        /// A single issue associated with the action
        /// </summary>
        public partial class OperationOutcome_Issue : BackboneElement<OperationOutcome_Issue>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "OperationOutcome_Issue" : "operationOutcome_Issue";
            private FhirCode? _code;
        [JsonPropertyName("code")]
        public FhirCode Code { get => _code ?? throw new InvalidOperationException("Code is required"); set { _code = value; } }

            private CodeableConcept? _details;
        [JsonPropertyName("details")]
        public CodeableConcept? Details { get => _details; set { _details = value; } }

            private FhirString? _diagnostics;
        [JsonPropertyName("diagnostics")]
        public FhirString? Diagnostics { get => _diagnostics; set { _diagnostics = value; } }

            private List<FhirString>? _expression;
        [JsonPropertyName("expression")]
        public List<FhirString>? Expression { get => _expression; set { _expression = value; } }

            private List<FhirString>? _location;
        [JsonPropertyName("location")]
        public List<FhirString>? Location { get => _location; set { _location = value; } }

            private FhirCode? _severity;
        [JsonPropertyName("severity")]
        public FhirCode Severity { get => _severity ?? throw new InvalidOperationException("Severity is required"); set { _severity = value; } }

        }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

    }
}
