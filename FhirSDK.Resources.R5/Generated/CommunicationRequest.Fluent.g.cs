// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class CommunicationRequestFluentExtensions
    {
        public static CommunicationRequest AddAbout(this CommunicationRequest r, ReferenceType item) { r.About ??= new List<ReferenceType>(); r.About!.Add(item); return r; }
        public static CommunicationRequest WithAuthoredOn(this CommunicationRequest r, FhirDateTime value) { r.AuthoredOn = value; return r; }
        public static CommunicationRequest AddBasedOn(this CommunicationRequest r, ReferenceType item) { r.BasedOn ??= new List<ReferenceType>(); r.BasedOn!.Add(item); return r; }
        public static CommunicationRequest AddCategory(this CommunicationRequest r, CodeableConcept item) { r.Category ??= new List<CodeableConcept>(); r.Category!.Add(item); return r; }
        public static CommunicationRequest AddContained(this CommunicationRequest r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static CommunicationRequest WithDoNotPerform(this CommunicationRequest r, FhirBoolean value) { r.DoNotPerform = value; return r; }
        public static CommunicationRequest WithEncounter(this CommunicationRequest r, ReferenceType value) { r.Encounter = value; return r; }
        public static CommunicationRequest WithGroupIdentifier(this CommunicationRequest r, Identifier value) { r.GroupIdentifier = value; return r; }
        public static CommunicationRequest AddIdentifier(this CommunicationRequest r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static CommunicationRequest AddInformationProvider(this CommunicationRequest r, ReferenceType item) { r.InformationProvider ??= new List<ReferenceType>(); r.InformationProvider!.Add(item); return r; }
        public static CommunicationRequest WithIntent(this CommunicationRequest r, FhirCode value) { r.Intent = value; return r; }
        public static CommunicationRequest AddMedium(this CommunicationRequest r, CodeableConcept item) { r.Medium ??= new List<CodeableConcept>(); r.Medium!.Add(item); return r; }
        public static CommunicationRequest AddNote(this CommunicationRequest r, Annotation item) { r.Note ??= new List<Annotation>(); r.Note!.Add(item); return r; }
        public static CommunicationRequest WithOccurrenceDateTime(this CommunicationRequest r, FhirDateTime value) { r.OccurrenceDateTime = value; return r; }
        public static CommunicationRequest WithOccurrencePeriod(this CommunicationRequest r, Period value) { r.OccurrencePeriod = value; return r; }
        public static CommunicationRequest AddPayload(this CommunicationRequest r, BackboneElement item) { r.Payload ??= new List<BackboneElement>(); r.Payload!.Add(item); return r; }
        public static CommunicationRequest WithPriority(this CommunicationRequest r, FhirCode value) { r.Priority = value; return r; }
        public static CommunicationRequest AddReason(this CommunicationRequest r, CodeableReference item) { r.Reason ??= new List<CodeableReference>(); r.Reason!.Add(item); return r; }
        public static CommunicationRequest AddRecipient(this CommunicationRequest r, ReferenceType item) { r.Recipient ??= new List<ReferenceType>(); r.Recipient!.Add(item); return r; }
        public static CommunicationRequest AddReplaces(this CommunicationRequest r, ReferenceType item) { r.Replaces ??= new List<ReferenceType>(); r.Replaces!.Add(item); return r; }
        public static CommunicationRequest WithRequester(this CommunicationRequest r, ReferenceType value) { r.Requester = value; return r; }
        public static CommunicationRequest WithStatus(this CommunicationRequest r, FhirCode value) { r.Status = value; return r; }
        public static CommunicationRequest WithStatusReason(this CommunicationRequest r, CodeableConcept value) { r.StatusReason = value; return r; }
        public static CommunicationRequest WithSubject(this CommunicationRequest r, ReferenceType value) { r.Subject = value; return r; }
        public static CommunicationRequest WithText(this CommunicationRequest r, Narrative value) { r.Text = value; return r; }
    }
}
