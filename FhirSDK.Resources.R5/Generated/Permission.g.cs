// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// Access Rules
    /// </summary>
    public partial class Permission : ResourceBase
    {
        public override string ResourceType => "Permission";

        public Permission() { }
        public Permission(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public Permission(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private ReferenceType? _asserter;
        [JsonPropertyName("asserter")]
        public ReferenceType? Asserter { get => _asserter; set { _asserter = value; OnPropertyChangedByClr(nameof(Asserter), value); } }

        private FhirCode? _combining;
        [JsonPropertyName("combining")]
        public FhirCode Combining { get => _combining ?? throw new InvalidOperationException("Combining is required"); set { _combining = value; OnPropertyChangedByClr(nameof(Combining), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private List<FhirDateTime>? _date;
        [JsonPropertyName("date")]
        public List<FhirDateTime>? Date { get => _date; set { _date = value; OnPropertyChangedByClr(nameof(Date), value); } }

        private Permission_Justification? _justification;
        [JsonPropertyName("justification")]
        public Permission_Justification? Justification { get => _justification; set { _justification = value; OnPropertyChangedByClr(nameof(Justification), value); } }

        /// <summary>
        /// The asserted justification for using the data
        /// </summary>
        public partial class Permission_Justification : BackboneElement<Permission_Justification>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Permission_Justification" : "permission_Justification";
            private List<CodeableConcept>? _basis;
        [JsonPropertyName("basis")]
        public List<CodeableConcept>? Basis { get => _basis; set { _basis = value; } }

            private List<ReferenceType>? _evidence;
        [JsonPropertyName("evidence")]
        public List<ReferenceType>? Evidence { get => _evidence; set { _evidence = value; } }

        }

        private List<Permission_Rule>? _rule;
        [JsonPropertyName("rule")]
        public List<Permission_Rule>? Rule { get => _rule; set { _rule = value; OnPropertyChangedByClr(nameof(Rule), value); } }

        /// <summary>
        /// Constraints to the Permission
        /// </summary>
        public partial class Permission_Rule : BackboneElement<Permission_Rule>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Permission_Rule" : "permission_Rule";
            private List<Permission_Rule_Activity>? _activity;
        [JsonPropertyName("activity")]
        public List<Permission_Rule_Activity>? Activity { get => _activity; set { _activity = value; } }

            /// <summary>
            /// A description or definition of which activities are allowed to be done on the data
            /// </summary>
            public partial class Permission_Rule_Activity : BackboneElement<Permission_Rule_Activity>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Permission_Rule_Activity" : "permission_Rule_Activity";
                private List<CodeableConcept>? _action;
        [JsonPropertyName("action")]
        public List<CodeableConcept>? Action { get => _action; set { _action = value; } }

                private List<ReferenceType>? _actor;
        [JsonPropertyName("actor")]
        public List<ReferenceType>? Actor { get => _actor; set { _actor = value; } }

                private List<CodeableConcept>? _purpose;
        [JsonPropertyName("purpose")]
        public List<CodeableConcept>? Purpose { get => _purpose; set { _purpose = value; } }

            }

            private List<Permission_Rule_Data>? _data;
        [JsonPropertyName("data")]
        public List<Permission_Rule_Data>? Data { get => _data; set { _data = value; } }

            /// <summary>
            /// The selection criteria to identify data that is within scope of this provision
            /// </summary>
            public partial class Permission_Rule_Data : BackboneElement<Permission_Rule_Data>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Permission_Rule_Data" : "permission_Rule_Data";
                private DataTypeServices.DataTypes.MetaTypes.ExpressionType? _expression;
        [JsonPropertyName("expression")]
        public DataTypeServices.DataTypes.MetaTypes.ExpressionType? Expression { get => _expression; set { _expression = value; } }

                private List<Period>? _period;
        [JsonPropertyName("period")]
        public List<Period>? Period { get => _period; set { _period = value; } }

                private List<Permission_Rule_Data_Resource>? _resource;
        [JsonPropertyName("resource")]
        public List<Permission_Rule_Data_Resource>? Resource { get => _resource; set { _resource = value; } }

                /// <summary>
                /// Explicit FHIR Resource references
                /// </summary>
                public partial class Permission_Rule_Data_Resource : BackboneElement<Permission_Rule_Data_Resource>
                {
                    public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Permission_Rule_Data_Resource" : "permission_Rule_Data_Resource";
                    private FhirCode? _meaning;
        [JsonPropertyName("meaning")]
        public FhirCode Meaning { get => _meaning ?? throw new InvalidOperationException("Meaning is required"); set { _meaning = value; } }

                    private ReferenceType? _reference;
        [JsonPropertyName("reference")]
        public ReferenceType Reference { get => _reference ?? throw new InvalidOperationException("Reference is required"); set { _reference = value; } }

                }

                private List<Coding>? _security;
        [JsonPropertyName("security")]
        public List<Coding>? Security { get => _security; set { _security = value; } }

            }

            private List<CodeableConcept>? _limit;
        [JsonPropertyName("limit")]
        public List<CodeableConcept>? Limit { get => _limit; set { _limit = value; } }

            private FhirCode? _type;
        [JsonPropertyName("type")]
        public FhirCode? Type { get => _type; set { _type = value; } }

        }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode Status { get => _status ?? throw new InvalidOperationException("Status is required"); set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

        private Period? _validity;
        [JsonPropertyName("validity")]
        public Period? Validity { get => _validity; set { _validity = value; OnPropertyChangedByClr(nameof(Validity), value); } }

    }
}
