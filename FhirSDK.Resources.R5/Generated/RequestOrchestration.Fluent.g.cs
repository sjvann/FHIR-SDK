// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class RequestOrchestrationFluentExtensions
    {
        public static RequestOrchestration AddAction(this RequestOrchestration r, BackboneElement item) { r.Action ??= new List<BackboneElement>(); r.Action!.Add(item); return r; }
        public static RequestOrchestration WithAuthor(this RequestOrchestration r, ReferenceType value) { r.Author = value; return r; }
        public static RequestOrchestration WithAuthoredOn(this RequestOrchestration r, FhirDateTime value) { r.AuthoredOn = value; return r; }
        public static RequestOrchestration AddBasedOn(this RequestOrchestration r, ReferenceType item) { r.BasedOn ??= new List<ReferenceType>(); r.BasedOn!.Add(item); return r; }
        public static RequestOrchestration WithCode(this RequestOrchestration r, CodeableConcept value) { r.Code = value; return r; }
        public static RequestOrchestration AddContained(this RequestOrchestration r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static RequestOrchestration WithEncounter(this RequestOrchestration r, ReferenceType value) { r.Encounter = value; return r; }
        public static RequestOrchestration AddGoal(this RequestOrchestration r, ReferenceType item) { r.Goal ??= new List<ReferenceType>(); r.Goal!.Add(item); return r; }
        public static RequestOrchestration WithGroupIdentifier(this RequestOrchestration r, Identifier value) { r.GroupIdentifier = value; return r; }
        public static RequestOrchestration AddIdentifier(this RequestOrchestration r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static RequestOrchestration AddInstantiatesCanonical(this RequestOrchestration r, FhirCanonical item) { r.InstantiatesCanonical ??= new List<FhirCanonical>(); r.InstantiatesCanonical!.Add(item); return r; }
        public static RequestOrchestration AddInstantiatesUri(this RequestOrchestration r, FhirUri item) { r.InstantiatesUri ??= new List<FhirUri>(); r.InstantiatesUri!.Add(item); return r; }
        public static RequestOrchestration WithIntent(this RequestOrchestration r, FhirCode value) { r.Intent = value; return r; }
        public static RequestOrchestration AddNote(this RequestOrchestration r, Annotation item) { r.Note ??= new List<Annotation>(); r.Note!.Add(item); return r; }
        public static RequestOrchestration WithPriority(this RequestOrchestration r, FhirCode value) { r.Priority = value; return r; }
        public static RequestOrchestration AddReason(this RequestOrchestration r, CodeableReference item) { r.Reason ??= new List<CodeableReference>(); r.Reason!.Add(item); return r; }
        public static RequestOrchestration AddReplaces(this RequestOrchestration r, ReferenceType item) { r.Replaces ??= new List<ReferenceType>(); r.Replaces!.Add(item); return r; }
        public static RequestOrchestration WithStatus(this RequestOrchestration r, FhirCode value) { r.Status = value; return r; }
        public static RequestOrchestration WithSubject(this RequestOrchestration r, ReferenceType value) { r.Subject = value; return r; }
        public static RequestOrchestration WithText(this RequestOrchestration r, Narrative value) { r.Text = value; return r; }
    }
}
