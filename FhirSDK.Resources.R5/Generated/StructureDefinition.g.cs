// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// Structural Definition
    /// </summary>
    public partial class StructureDefinition : ResourceBase
    {
        public override string ResourceType => "StructureDefinition";

        public StructureDefinition() { }
        public StructureDefinition(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public StructureDefinition(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private FhirBoolean? _abstract;
        [JsonPropertyName("abstract")]
        public FhirBoolean Abstract { get => _abstract ?? throw new InvalidOperationException("Abstract is required"); set { _abstract = value; OnPropertyChangedByClr(nameof(Abstract), value); } }

        private FhirCanonical? _baseDefinition;
        [JsonPropertyName("baseDefinition")]
        public FhirCanonical? BaseDefinition { get => _baseDefinition; set { _baseDefinition = value; OnPropertyChangedByClr(nameof(BaseDefinition), value); } }

        private List<ContactDetail>? _contact;
        [JsonPropertyName("contact")]
        public List<ContactDetail>? Contact { get => _contact; set { _contact = value; OnPropertyChangedByClr(nameof(Contact), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private List<StructureDefinition_Context>? _context;
        [JsonPropertyName("context")]
        public List<StructureDefinition_Context>? Context { get => _context; set { _context = value; OnPropertyChangedByClr(nameof(Context), value); } }

        /// <summary>
        /// If an extension, where it can be used in instances
        /// </summary>
        public partial class StructureDefinition_Context : BackboneElement<StructureDefinition_Context>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "StructureDefinition_Context" : "structureDefinition_Context";
            private FhirString? _expression;
        [JsonPropertyName("expression")]
        public FhirString Expression { get => _expression ?? throw new InvalidOperationException("Expression is required"); set { _expression = value; } }

            private FhirCode? _type;
        [JsonPropertyName("type")]
        public FhirCode Type { get => _type ?? throw new InvalidOperationException("Type is required"); set { _type = value; } }

        }

        private List<FhirString>? _contextInvariant;
        [JsonPropertyName("contextInvariant")]
        public List<FhirString>? ContextInvariant { get => _contextInvariant; set { _contextInvariant = value; OnPropertyChangedByClr(nameof(ContextInvariant), value); } }

        private FhirMarkdown? _copyright;
        [JsonPropertyName("copyright")]
        public FhirMarkdown? Copyright { get => _copyright; set { _copyright = value; OnPropertyChangedByClr(nameof(Copyright), value); } }

        private FhirString? _copyrightLabel;
        [JsonPropertyName("copyrightLabel")]
        public FhirString? CopyrightLabel { get => _copyrightLabel; set { _copyrightLabel = value; OnPropertyChangedByClr(nameof(CopyrightLabel), value); } }

        private FhirDateTime? _date;
        [JsonPropertyName("date")]
        public FhirDateTime? Date { get => _date; set { _date = value; OnPropertyChangedByClr(nameof(Date), value); } }

        private FhirCode? _derivation;
        [JsonPropertyName("derivation")]
        public FhirCode? Derivation { get => _derivation; set { _derivation = value; OnPropertyChangedByClr(nameof(Derivation), value); } }

        private FhirMarkdown? _description;
        [JsonPropertyName("description")]
        public FhirMarkdown? Description { get => _description; set { _description = value; OnPropertyChangedByClr(nameof(Description), value); } }

        private StructureDefinition_Differential? _differential;
        [JsonPropertyName("differential")]
        public StructureDefinition_Differential? Differential { get => _differential; set { _differential = value; OnPropertyChangedByClr(nameof(Differential), value); } }

        /// <summary>
        /// Differential view of the structure
        /// </summary>
        public partial class StructureDefinition_Differential : BackboneElement<StructureDefinition_Differential>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "StructureDefinition_Differential" : "structureDefinition_Differential";
            private List<ElementDefinition> _element = new();
        [JsonPropertyName("element")]
        public List<ElementDefinition> Element { get => _element; set { _element = value; } }

        }

        private FhirBoolean? _experimental;
        [JsonPropertyName("experimental")]
        public FhirBoolean? Experimental { get => _experimental; set { _experimental = value; OnPropertyChangedByClr(nameof(Experimental), value); } }

        private FhirCode? _fhirVersion;
        [JsonPropertyName("fhirVersion")]
        public FhirCode? FhirVersion { get => _fhirVersion; set { _fhirVersion = value; OnPropertyChangedByClr(nameof(FhirVersion), value); } }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private List<CodeableConcept>? _jurisdiction;
        [JsonPropertyName("jurisdiction")]
        public List<CodeableConcept>? Jurisdiction { get => _jurisdiction; set { _jurisdiction = value; OnPropertyChangedByClr(nameof(Jurisdiction), value); } }

        private List<Coding>? _keyword;
        [JsonPropertyName("keyword")]
        public List<Coding>? Keyword { get => _keyword; set { _keyword = value; OnPropertyChangedByClr(nameof(Keyword), value); } }

        private FhirCode? _kind;
        [JsonPropertyName("kind")]
        public FhirCode Kind { get => _kind ?? throw new InvalidOperationException("Kind is required"); set { _kind = value; OnPropertyChangedByClr(nameof(Kind), value); } }

        private List<StructureDefinition_Mapping>? _mapping;
        [JsonPropertyName("mapping")]
        public List<StructureDefinition_Mapping>? Mapping { get => _mapping; set { _mapping = value; OnPropertyChangedByClr(nameof(Mapping), value); } }

        /// <summary>
        /// External specification that the content is mapped to
        /// </summary>
        public partial class StructureDefinition_Mapping : BackboneElement<StructureDefinition_Mapping>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "StructureDefinition_Mapping" : "structureDefinition_Mapping";
            private FhirString? _comment;
        [JsonPropertyName("comment")]
        public FhirString? Comment { get => _comment; set { _comment = value; } }

            private FhirId? _identity;
        [JsonPropertyName("identity")]
        public FhirId Identity { get => _identity ?? throw new InvalidOperationException("Identity is required"); set { _identity = value; } }

            private FhirString? _name;
        [JsonPropertyName("name")]
        public FhirString? Name { get => _name; set { _name = value; } }

            private FhirUri? _uri;
        [JsonPropertyName("uri")]
        public FhirUri? Uri { get => _uri; set { _uri = value; } }

        }

        private FhirString? _name;
        [JsonPropertyName("name")]
        public FhirString Name { get => _name ?? throw new InvalidOperationException("Name is required"); set { _name = value; OnPropertyChangedByClr(nameof(Name), value); } }

        private FhirString? _publisher;
        [JsonPropertyName("publisher")]
        public FhirString? Publisher { get => _publisher; set { _publisher = value; OnPropertyChangedByClr(nameof(Publisher), value); } }

        private FhirMarkdown? _purpose;
        [JsonPropertyName("purpose")]
        public FhirMarkdown? Purpose { get => _purpose; set { _purpose = value; OnPropertyChangedByClr(nameof(Purpose), value); } }

        private StructureDefinition_Snapshot? _snapshot;
        [JsonPropertyName("snapshot")]
        public StructureDefinition_Snapshot? Snapshot { get => _snapshot; set { _snapshot = value; OnPropertyChangedByClr(nameof(Snapshot), value); } }

        /// <summary>
        /// Snapshot view of the structure
        /// </summary>
        public partial class StructureDefinition_Snapshot : BackboneElement<StructureDefinition_Snapshot>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "StructureDefinition_Snapshot" : "structureDefinition_Snapshot";
            private List<ElementDefinition> _element = new();
        [JsonPropertyName("element")]
        public List<ElementDefinition> Element { get => _element; set { _element = value; } }

        }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode Status { get => _status ?? throw new InvalidOperationException("Status is required"); set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

        private FhirString? _title;
        [JsonPropertyName("title")]
        public FhirString? Title { get => _title; set { _title = value; OnPropertyChangedByClr(nameof(Title), value); } }

        private FhirUri? _type;
        [JsonPropertyName("type")]
        public FhirUri Type { get => _type ?? throw new InvalidOperationException("Type is required"); set { _type = value; OnPropertyChangedByClr(nameof(Type), value); } }

        private FhirUri? _url;
        [JsonPropertyName("url")]
        public FhirUri Url { get => _url ?? throw new InvalidOperationException("Url is required"); set { _url = value; OnPropertyChangedByClr(nameof(Url), value); } }

        private List<UsageContext>? _useContext;
        [JsonPropertyName("useContext")]
        public List<UsageContext>? UseContext { get => _useContext; set { _useContext = value; OnPropertyChangedByClr(nameof(UseContext), value); } }

        private FhirString? _version;
        [JsonPropertyName("version")]
        public FhirString? Version { get => _version; set { _version = value; OnPropertyChangedByClr(nameof(Version), value); } }

        private FhirString? _versionAlgorithmString;
        [JsonPropertyName("versionAlgorithmString")]
        public FhirString? VersionAlgorithmString { get => _versionAlgorithmString; set { _versionAlgorithmString = value; if (value != null) {{ _versionAlgorithmCoding = null; OnPropertyChangedByClr(nameof(VersionAlgorithmCoding), null); }}; OnPropertyChangedByClr(nameof(VersionAlgorithmString), value); } }

        private Coding? _versionAlgorithmCoding;
        [JsonPropertyName("versionAlgorithmCoding")]
        public Coding? VersionAlgorithmCoding { get => _versionAlgorithmCoding; set { _versionAlgorithmCoding = value; if (value != null) {{ _versionAlgorithmString = null; OnPropertyChangedByClr(nameof(VersionAlgorithmString), null); }}; OnPropertyChangedByClr(nameof(VersionAlgorithmCoding), value); } }

    }
}
