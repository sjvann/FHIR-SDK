// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class CareTeamFluentExtensions
    {
        public static CareTeam AddCategory(this CareTeam r, CodeableConcept item) { r.Category ??= new List<CodeableConcept>(); r.Category!.Add(item); return r; }
        public static CareTeam AddContained(this CareTeam r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static CareTeam AddIdentifier(this CareTeam r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static CareTeam AddManagingOrganization(this CareTeam r, ReferenceType item) { r.ManagingOrganization ??= new List<ReferenceType>(); r.ManagingOrganization!.Add(item); return r; }
        public static CareTeam WithName(this CareTeam r, FhirString value) { r.Name = value; return r; }
        public static CareTeam AddNote(this CareTeam r, Annotation item) { r.Note ??= new List<Annotation>(); r.Note!.Add(item); return r; }
        public static CareTeam AddParticipant(this CareTeam r, BackboneElement item) { r.Participant ??= new List<BackboneElement>(); r.Participant!.Add(item); return r; }
        public static CareTeam WithPeriod(this CareTeam r, Period value) { r.Period = value; return r; }
        public static CareTeam AddReason(this CareTeam r, CodeableReference item) { r.Reason ??= new List<CodeableReference>(); r.Reason!.Add(item); return r; }
        public static CareTeam WithStatus(this CareTeam r, FhirCode value) { r.Status = value; return r; }
        public static CareTeam WithSubject(this CareTeam r, ReferenceType value) { r.Subject = value; return r; }
        public static CareTeam AddTelecom(this CareTeam r, ContactPoint item) { r.Telecom ??= new List<ContactPoint>(); r.Telecom!.Add(item); return r; }
        public static CareTeam WithText(this CareTeam r, Narrative value) { r.Text = value; return r; }
    }
}
