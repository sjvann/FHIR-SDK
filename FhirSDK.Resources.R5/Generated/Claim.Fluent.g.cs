// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class ClaimFluentExtensions
    {
        public static Claim WithAccident(this Claim r, BackboneElement value) { r.Accident = value; return r; }
        public static Claim WithBillablePeriod(this Claim r, Period value) { r.BillablePeriod = value; return r; }
        public static Claim AddCareTeam(this Claim r, BackboneElement item) { r.CareTeam ??= new List<BackboneElement>(); r.CareTeam!.Add(item); return r; }
        public static Claim AddContained(this Claim r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static Claim WithCreated(this Claim r, FhirDateTime value) { r.Created = value; return r; }
        public static Claim AddDiagnosis(this Claim r, BackboneElement item) { r.Diagnosis ??= new List<BackboneElement>(); r.Diagnosis!.Add(item); return r; }
        public static Claim WithDiagnosisRelatedGroup(this Claim r, CodeableConcept value) { r.DiagnosisRelatedGroup = value; return r; }
        public static Claim AddEncounter(this Claim r, ReferenceType item) { r.Encounter ??= new List<ReferenceType>(); r.Encounter!.Add(item); return r; }
        public static Claim WithEnterer(this Claim r, ReferenceType value) { r.Enterer = value; return r; }
        public static Claim AddEvent(this Claim r, BackboneElement item) { r.Event ??= new List<BackboneElement>(); r.Event!.Add(item); return r; }
        public static Claim WithFacility(this Claim r, ReferenceType value) { r.Facility = value; return r; }
        public static Claim WithFundsReserve(this Claim r, CodeableConcept value) { r.FundsReserve = value; return r; }
        public static Claim AddIdentifier(this Claim r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static Claim AddInsurance(this Claim r, BackboneElement item) { r.Insurance ??= new List<BackboneElement>(); r.Insurance!.Add(item); return r; }
        public static Claim WithInsurer(this Claim r, ReferenceType value) { r.Insurer = value; return r; }
        public static Claim AddItem(this Claim r, BackboneElement item) { r.Item ??= new List<BackboneElement>(); r.Item!.Add(item); return r; }
        public static Claim WithOriginalPrescription(this Claim r, ReferenceType value) { r.OriginalPrescription = value; return r; }
        public static Claim WithPatient(this Claim r, ReferenceType value) { r.Patient = value; return r; }
        public static Claim WithPatientPaid(this Claim r, Money value) { r.PatientPaid = value; return r; }
        public static Claim WithPayee(this Claim r, BackboneElement value) { r.Payee = value; return r; }
        public static Claim WithPrescription(this Claim r, ReferenceType value) { r.Prescription = value; return r; }
        public static Claim WithPriority(this Claim r, CodeableConcept value) { r.Priority = value; return r; }
        public static Claim AddProcedure(this Claim r, BackboneElement item) { r.Procedure ??= new List<BackboneElement>(); r.Procedure!.Add(item); return r; }
        public static Claim WithProvider(this Claim r, ReferenceType value) { r.Provider = value; return r; }
        public static Claim WithReferral(this Claim r, ReferenceType value) { r.Referral = value; return r; }
        public static Claim AddRelated(this Claim r, BackboneElement item) { r.Related ??= new List<BackboneElement>(); r.Related!.Add(item); return r; }
        public static Claim WithStatus(this Claim r, FhirCode value) { r.Status = value; return r; }
        public static Claim WithSubType(this Claim r, CodeableConcept value) { r.SubType = value; return r; }
        public static Claim AddSupportingInfo(this Claim r, BackboneElement item) { r.SupportingInfo ??= new List<BackboneElement>(); r.SupportingInfo!.Add(item); return r; }
        public static Claim WithText(this Claim r, Narrative value) { r.Text = value; return r; }
        public static Claim WithTotal(this Claim r, Money value) { r.Total = value; return r; }
        public static Claim AddTraceNumber(this Claim r, Identifier item) { r.TraceNumber ??= new List<Identifier>(); r.TraceNumber!.Add(item); return r; }
        public static Claim WithType(this Claim r, CodeableConcept value) { r.Type = value; return r; }
        public static Claim WithUse(this Claim r, FhirCode value) { r.Use = value; return r; }
    }
}
