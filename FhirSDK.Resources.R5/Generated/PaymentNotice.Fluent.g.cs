// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class PaymentNoticeFluentExtensions
    {
        public static PaymentNotice WithAmount(this PaymentNotice r, Money value) { r.Amount = value; return r; }
        public static PaymentNotice AddContained(this PaymentNotice r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static PaymentNotice WithCreated(this PaymentNotice r, FhirDateTime value) { r.Created = value; return r; }
        public static PaymentNotice AddIdentifier(this PaymentNotice r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static PaymentNotice WithPayee(this PaymentNotice r, ReferenceType value) { r.Payee = value; return r; }
        public static PaymentNotice WithPayment(this PaymentNotice r, ReferenceType value) { r.Payment = value; return r; }
        public static PaymentNotice WithPaymentDate(this PaymentNotice r, FhirDate value) { r.PaymentDate = value; return r; }
        public static PaymentNotice WithPaymentStatus(this PaymentNotice r, CodeableConcept value) { r.PaymentStatus = value; return r; }
        public static PaymentNotice WithRecipient(this PaymentNotice r, ReferenceType value) { r.Recipient = value; return r; }
        public static PaymentNotice WithReporter(this PaymentNotice r, ReferenceType value) { r.Reporter = value; return r; }
        public static PaymentNotice WithRequest(this PaymentNotice r, ReferenceType value) { r.Request = value; return r; }
        public static PaymentNotice WithResponse(this PaymentNotice r, ReferenceType value) { r.Response = value; return r; }
        public static PaymentNotice WithStatus(this PaymentNotice r, FhirCode value) { r.Status = value; return r; }
        public static PaymentNotice WithText(this PaymentNotice r, Narrative value) { r.Text = value; return r; }
    }
}
