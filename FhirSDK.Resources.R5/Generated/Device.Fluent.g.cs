// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class DeviceFluentExtensions
    {
        public static Device WithAvailabilityStatus(this Device r, CodeableConcept value) { r.AvailabilityStatus = value; return r; }
        public static Device WithBiologicalSourceEvent(this Device r, Identifier value) { r.BiologicalSourceEvent = value; return r; }
        public static Device AddCategory(this Device r, CodeableConcept item) { r.Category ??= new List<CodeableConcept>(); r.Category!.Add(item); return r; }
        public static Device AddConformsTo(this Device r, BackboneElement item) { r.ConformsTo ??= new List<BackboneElement>(); r.ConformsTo!.Add(item); return r; }
        public static Device AddContact(this Device r, ContactPoint item) { r.Contact ??= new List<ContactPoint>(); r.Contact!.Add(item); return r; }
        public static Device AddContained(this Device r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static Device WithCycle(this Device r, Count value) { r.Cycle = value; return r; }
        public static Device WithDefinition(this Device r, CodeableReference value) { r.Definition = value; return r; }
        public static Device WithDisplayName(this Device r, FhirString value) { r.DisplayName = value; return r; }
        public static Device WithDuration(this Device r, Duration value) { r.Duration = value; return r; }
        public static Device AddEndpoint(this Device r, ReferenceType item) { r.Endpoint ??= new List<ReferenceType>(); r.Endpoint!.Add(item); return r; }
        public static Device WithExpirationDate(this Device r, FhirDateTime value) { r.ExpirationDate = value; return r; }
        public static Device AddGateway(this Device r, CodeableReference item) { r.Gateway ??= new List<CodeableReference>(); r.Gateway!.Add(item); return r; }
        public static Device AddIdentifier(this Device r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static Device WithLocation(this Device r, ReferenceType value) { r.Location = value; return r; }
        public static Device WithLotNumber(this Device r, FhirString value) { r.LotNumber = value; return r; }
        public static Device WithManufactureDate(this Device r, FhirDateTime value) { r.ManufactureDate = value; return r; }
        public static Device WithManufacturer(this Device r, FhirString value) { r.Manufacturer = value; return r; }
        public static Device WithMode(this Device r, CodeableConcept value) { r.Mode = value; return r; }
        public static Device WithModelNumber(this Device r, FhirString value) { r.ModelNumber = value; return r; }
        public static Device AddName(this Device r, BackboneElement item) { r.Name ??= new List<BackboneElement>(); r.Name!.Add(item); return r; }
        public static Device AddNote(this Device r, Annotation item) { r.Note ??= new List<Annotation>(); r.Note!.Add(item); return r; }
        public static Device WithOwner(this Device r, ReferenceType value) { r.Owner = value; return r; }
        public static Device WithParent(this Device r, ReferenceType value) { r.Parent = value; return r; }
        public static Device WithPartNumber(this Device r, FhirString value) { r.PartNumber = value; return r; }
        public static Device AddProperty(this Device r, BackboneElement item) { r.Property ??= new List<BackboneElement>(); r.Property!.Add(item); return r; }
        public static Device AddSafety(this Device r, CodeableConcept item) { r.Safety ??= new List<CodeableConcept>(); r.Safety!.Add(item); return r; }
        public static Device WithSerialNumber(this Device r, FhirString value) { r.SerialNumber = value; return r; }
        public static Device WithStatus(this Device r, FhirCode value) { r.Status = value; return r; }
        public static Device WithText(this Device r, Narrative value) { r.Text = value; return r; }
        public static Device AddType(this Device r, CodeableConcept item) { r.Type ??= new List<CodeableConcept>(); r.Type!.Add(item); return r; }
        public static Device AddUdiCarrier(this Device r, BackboneElement item) { r.UdiCarrier ??= new List<BackboneElement>(); r.UdiCarrier!.Add(item); return r; }
        public static Device WithUrl(this Device r, FhirUri value) { r.Url = value; return r; }
        public static Device AddVersion(this Device r, BackboneElement item) { r.Version ??= new List<BackboneElement>(); r.Version!.Add(item); return r; }
    }
}
