// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// This resource reflects an instance of a biologically derived product
    /// </summary>
    public partial class BiologicallyDerivedProduct : ResourceBase
    {
        public override string ResourceType => "BiologicallyDerivedProduct";

        public BiologicallyDerivedProduct() { }
        public BiologicallyDerivedProduct(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public BiologicallyDerivedProduct(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private Identifier? _biologicalSourceEvent;
        [JsonPropertyName("biologicalSourceEvent")]
        public Identifier? BiologicalSourceEvent { get => _biologicalSourceEvent; set { _biologicalSourceEvent = value; OnPropertyChangedByClr(nameof(BiologicalSourceEvent), value); } }

        private BiologicallyDerivedProduct_Collection? _collection;
        [JsonPropertyName("collection")]
        public BiologicallyDerivedProduct_Collection? Collection { get => _collection; set { _collection = value; OnPropertyChangedByClr(nameof(Collection), value); } }

        /// <summary>
        /// How this product was collected
        /// </summary>
        public partial class BiologicallyDerivedProduct_Collection : BackboneElement<BiologicallyDerivedProduct_Collection>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "BiologicallyDerivedProduct_Collection" : "biologicallyDerivedProduct_Collection";
            private FhirDateTime? _collectedDateTime;
        [JsonPropertyName("collectedDateTime")]
        public FhirDateTime? CollectedDateTime { get => _collectedDateTime; set { _collectedDateTime = value; if (value != null) {{ _collectedPeriod = null; OnPropertyChanged("collectedPeriod", null); }}; OnPropertyChanged("collectedDateTime", value); } }

            private Period? _collectedPeriod;
        [JsonPropertyName("collectedPeriod")]
        public Period? CollectedPeriod { get => _collectedPeriod; set { _collectedPeriod = value; if (value != null) {{ _collectedDateTime = null; OnPropertyChanged("collectedDateTime", null); }}; OnPropertyChanged("collectedPeriod", value); } }

            private ReferenceType? _collector;
        [JsonPropertyName("collector")]
        public ReferenceType? Collector { get => _collector; set { _collector = value; } }

            private ReferenceType? _source;
        [JsonPropertyName("source")]
        public ReferenceType? Source { get => _source; set { _source = value; } }

        }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private FhirString? _division;
        [JsonPropertyName("division")]
        public FhirString? Division { get => _division; set { _division = value; OnPropertyChangedByClr(nameof(Division), value); } }

        private FhirDateTime? _expirationDate;
        [JsonPropertyName("expirationDate")]
        public FhirDateTime? ExpirationDate { get => _expirationDate; set { _expirationDate = value; OnPropertyChangedByClr(nameof(ExpirationDate), value); } }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private List<ReferenceType>? _parent;
        [JsonPropertyName("parent")]
        public List<ReferenceType>? Parent { get => _parent; set { _parent = value; OnPropertyChangedByClr(nameof(Parent), value); } }

        private List<ReferenceType>? _processingFacility;
        [JsonPropertyName("processingFacility")]
        public List<ReferenceType>? ProcessingFacility { get => _processingFacility; set { _processingFacility = value; OnPropertyChangedByClr(nameof(ProcessingFacility), value); } }

        private Coding? _productCategory;
        [JsonPropertyName("productCategory")]
        public Coding? ProductCategory { get => _productCategory; set { _productCategory = value; OnPropertyChangedByClr(nameof(ProductCategory), value); } }

        private CodeableConcept? _productCode;
        [JsonPropertyName("productCode")]
        public CodeableConcept? ProductCode { get => _productCode; set { _productCode = value; OnPropertyChangedByClr(nameof(ProductCode), value); } }

        private Coding? _productStatus;
        [JsonPropertyName("productStatus")]
        public Coding? ProductStatus { get => _productStatus; set { _productStatus = value; OnPropertyChangedByClr(nameof(ProductStatus), value); } }

        private List<BiologicallyDerivedProduct_Property>? _property;
        [JsonPropertyName("property")]
        public List<BiologicallyDerivedProduct_Property>? Property { get => _property; set { _property = value; OnPropertyChangedByClr(nameof(Property), value); } }

        /// <summary>
        /// A property that is specific to this BiologicallyDerviedProduct instance
        /// </summary>
        public partial class BiologicallyDerivedProduct_Property : BackboneElement<BiologicallyDerivedProduct_Property>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "BiologicallyDerivedProduct_Property" : "biologicallyDerivedProduct_Property";
            private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept Type { get => _type ?? throw new InvalidOperationException("Type is required"); set { _type = value; } }

            private FhirBoolean? _valueBoolean;
        [JsonPropertyName("valueBoolean")]
        public FhirBoolean? ValueBoolean { get => _valueBoolean; set { _valueBoolean = value; if (value != null) {{ _valueInteger = null; OnPropertyChanged("valueInteger", null); _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valuePeriod = null; OnPropertyChanged("valuePeriod", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueRange = null; OnPropertyChanged("valueRange", null); _valueRatio = null; OnPropertyChanged("valueRatio", null); _valueString = null; OnPropertyChanged("valueString", null); _valueAttachment = null; OnPropertyChanged("valueAttachment", null); }}; OnPropertyChanged("valueBoolean", value); } }

            private FhirInteger? _valueInteger;
        [JsonPropertyName("valueInteger")]
        public FhirInteger? ValueInteger { get => _valueInteger; set { _valueInteger = value; if (value != null) {{ _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valuePeriod = null; OnPropertyChanged("valuePeriod", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueRange = null; OnPropertyChanged("valueRange", null); _valueRatio = null; OnPropertyChanged("valueRatio", null); _valueString = null; OnPropertyChanged("valueString", null); _valueAttachment = null; OnPropertyChanged("valueAttachment", null); }}; OnPropertyChanged("valueInteger", value); } }

            private CodeableConcept? _valueCodeableConcept;
        [JsonPropertyName("valueCodeableConcept")]
        public CodeableConcept? ValueCodeableConcept { get => _valueCodeableConcept; set { _valueCodeableConcept = value; if (value != null) {{ _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valuePeriod = null; OnPropertyChanged("valuePeriod", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueRange = null; OnPropertyChanged("valueRange", null); _valueRatio = null; OnPropertyChanged("valueRatio", null); _valueString = null; OnPropertyChanged("valueString", null); _valueAttachment = null; OnPropertyChanged("valueAttachment", null); }}; OnPropertyChanged("valueCodeableConcept", value); } }

            private Period? _valuePeriod;
        [JsonPropertyName("valuePeriod")]
        public Period? ValuePeriod { get => _valuePeriod; set { _valuePeriod = value; if (value != null) {{ _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueRange = null; OnPropertyChanged("valueRange", null); _valueRatio = null; OnPropertyChanged("valueRatio", null); _valueString = null; OnPropertyChanged("valueString", null); _valueAttachment = null; OnPropertyChanged("valueAttachment", null); }}; OnPropertyChanged("valuePeriod", value); } }

            private Quantity? _valueQuantity;
        [JsonPropertyName("valueQuantity")]
        public Quantity? ValueQuantity { get => _valueQuantity; set { _valueQuantity = value; if (value != null) {{ _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valuePeriod = null; OnPropertyChanged("valuePeriod", null); _valueRange = null; OnPropertyChanged("valueRange", null); _valueRatio = null; OnPropertyChanged("valueRatio", null); _valueString = null; OnPropertyChanged("valueString", null); _valueAttachment = null; OnPropertyChanged("valueAttachment", null); }}; OnPropertyChanged("valueQuantity", value); } }

            private DataTypeServices.DataTypes.ComplexTypes.Range? _valueRange;
        [JsonPropertyName("valueRange")]
        public DataTypeServices.DataTypes.ComplexTypes.Range? ValueRange { get => _valueRange; set { _valueRange = value; if (value != null) {{ _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valuePeriod = null; OnPropertyChanged("valuePeriod", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueRatio = null; OnPropertyChanged("valueRatio", null); _valueString = null; OnPropertyChanged("valueString", null); _valueAttachment = null; OnPropertyChanged("valueAttachment", null); }}; OnPropertyChanged("valueRange", value); } }

            private Ratio? _valueRatio;
        [JsonPropertyName("valueRatio")]
        public Ratio? ValueRatio { get => _valueRatio; set { _valueRatio = value; if (value != null) {{ _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valuePeriod = null; OnPropertyChanged("valuePeriod", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueRange = null; OnPropertyChanged("valueRange", null); _valueString = null; OnPropertyChanged("valueString", null); _valueAttachment = null; OnPropertyChanged("valueAttachment", null); }}; OnPropertyChanged("valueRatio", value); } }

            private FhirString? _valueString;
        [JsonPropertyName("valueString")]
        public FhirString? ValueString { get => _valueString; set { _valueString = value; if (value != null) {{ _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valuePeriod = null; OnPropertyChanged("valuePeriod", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueRange = null; OnPropertyChanged("valueRange", null); _valueRatio = null; OnPropertyChanged("valueRatio", null); _valueAttachment = null; OnPropertyChanged("valueAttachment", null); }}; OnPropertyChanged("valueString", value); } }

            private Attachment? _valueAttachment;
        [JsonPropertyName("valueAttachment")]
        public Attachment? ValueAttachment { get => _valueAttachment; set { _valueAttachment = value; if (value != null) {{ _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valuePeriod = null; OnPropertyChanged("valuePeriod", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueRange = null; OnPropertyChanged("valueRange", null); _valueRatio = null; OnPropertyChanged("valueRatio", null); _valueString = null; OnPropertyChanged("valueString", null); }}; OnPropertyChanged("valueAttachment", value); } }

        }

        private List<ReferenceType>? _request;
        [JsonPropertyName("request")]
        public List<ReferenceType>? Request { get => _request; set { _request = value; OnPropertyChangedByClr(nameof(Request), value); } }

        private DataTypeServices.DataTypes.ComplexTypes.Range? _storageTempRequirements;
        [JsonPropertyName("storageTempRequirements")]
        public DataTypeServices.DataTypes.ComplexTypes.Range? StorageTempRequirements { get => _storageTempRequirements; set { _storageTempRequirements = value; OnPropertyChangedByClr(nameof(StorageTempRequirements), value); } }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

    }
}
