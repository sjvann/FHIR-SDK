// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class PersonFluentExtensions
    {
        public static Person WithActive(this Person r, FhirBoolean value) { r.Active = value; return r; }
        public static Person AddAddress(this Person r, Address item) { r.Address ??= new List<Address>(); r.Address!.Add(item); return r; }
        public static Person WithBirthDate(this Person r, FhirDate value) { r.BirthDate = value; return r; }
        public static Person AddCommunication(this Person r, BackboneElement item) { r.Communication ??= new List<BackboneElement>(); r.Communication!.Add(item); return r; }
        public static Person AddContained(this Person r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static Person WithDeceasedBoolean(this Person r, FhirBoolean value) { r.DeceasedBoolean = value; return r; }
        public static Person WithDeceasedDateTime(this Person r, FhirDateTime value) { r.DeceasedDateTime = value; return r; }
        public static Person WithGender(this Person r, FhirCode value) { r.Gender = value; return r; }
        public static Person AddIdentifier(this Person r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static Person AddLink(this Person r, BackboneElement item) { r.Link ??= new List<BackboneElement>(); r.Link!.Add(item); return r; }
        public static Person WithManagingOrganization(this Person r, ReferenceType value) { r.ManagingOrganization = value; return r; }
        public static Person WithMaritalStatus(this Person r, CodeableConcept value) { r.MaritalStatus = value; return r; }
        public static Person AddName(this Person r, HumanName item) { r.Name ??= new List<HumanName>(); r.Name!.Add(item); return r; }
        public static Person AddPhoto(this Person r, Attachment item) { r.Photo ??= new List<Attachment>(); r.Photo!.Add(item); return r; }
        public static Person AddTelecom(this Person r, ContactPoint item) { r.Telecom ??= new List<ContactPoint>(); r.Telecom!.Add(item); return r; }
        public static Person WithText(this Person r, Narrative value) { r.Text = value; return r; }
    }
}
