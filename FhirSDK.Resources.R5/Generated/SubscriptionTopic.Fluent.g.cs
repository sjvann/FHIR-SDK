// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class SubscriptionTopicFluentExtensions
    {
        public static SubscriptionTopic WithApprovalDate(this SubscriptionTopic r, FhirDate value) { r.ApprovalDate = value; return r; }
        public static SubscriptionTopic AddCanFilterBy(this SubscriptionTopic r, BackboneElement item) { r.CanFilterBy ??= new List<BackboneElement>(); r.CanFilterBy!.Add(item); return r; }
        public static SubscriptionTopic AddContact(this SubscriptionTopic r, ContactDetail item) { r.Contact ??= new List<ContactDetail>(); r.Contact!.Add(item); return r; }
        public static SubscriptionTopic AddContained(this SubscriptionTopic r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static SubscriptionTopic WithCopyright(this SubscriptionTopic r, FhirMarkdown value) { r.Copyright = value; return r; }
        public static SubscriptionTopic WithCopyrightLabel(this SubscriptionTopic r, FhirString value) { r.CopyrightLabel = value; return r; }
        public static SubscriptionTopic WithDate(this SubscriptionTopic r, FhirDateTime value) { r.Date = value; return r; }
        public static SubscriptionTopic AddDerivedFrom(this SubscriptionTopic r, FhirCanonical item) { r.DerivedFrom ??= new List<FhirCanonical>(); r.DerivedFrom!.Add(item); return r; }
        public static SubscriptionTopic WithDescription(this SubscriptionTopic r, FhirMarkdown value) { r.Description = value; return r; }
        public static SubscriptionTopic WithEffectivePeriod(this SubscriptionTopic r, Period value) { r.EffectivePeriod = value; return r; }
        public static SubscriptionTopic AddEventTrigger(this SubscriptionTopic r, BackboneElement item) { r.EventTrigger ??= new List<BackboneElement>(); r.EventTrigger!.Add(item); return r; }
        public static SubscriptionTopic WithExperimental(this SubscriptionTopic r, FhirBoolean value) { r.Experimental = value; return r; }
        public static SubscriptionTopic AddIdentifier(this SubscriptionTopic r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static SubscriptionTopic AddJurisdiction(this SubscriptionTopic r, CodeableConcept item) { r.Jurisdiction ??= new List<CodeableConcept>(); r.Jurisdiction!.Add(item); return r; }
        public static SubscriptionTopic WithLastReviewDate(this SubscriptionTopic r, FhirDate value) { r.LastReviewDate = value; return r; }
        public static SubscriptionTopic WithName(this SubscriptionTopic r, FhirString value) { r.Name = value; return r; }
        public static SubscriptionTopic AddNotificationShape(this SubscriptionTopic r, BackboneElement item) { r.NotificationShape ??= new List<BackboneElement>(); r.NotificationShape!.Add(item); return r; }
        public static SubscriptionTopic WithPublisher(this SubscriptionTopic r, FhirString value) { r.Publisher = value; return r; }
        public static SubscriptionTopic WithPurpose(this SubscriptionTopic r, FhirMarkdown value) { r.Purpose = value; return r; }
        public static SubscriptionTopic AddResourceTrigger(this SubscriptionTopic r, BackboneElement item) { r.ResourceTrigger ??= new List<BackboneElement>(); r.ResourceTrigger!.Add(item); return r; }
        public static SubscriptionTopic WithStatus(this SubscriptionTopic r, FhirCode value) { r.Status = value; return r; }
        public static SubscriptionTopic WithText(this SubscriptionTopic r, Narrative value) { r.Text = value; return r; }
        public static SubscriptionTopic WithTitle(this SubscriptionTopic r, FhirString value) { r.Title = value; return r; }
        public static SubscriptionTopic WithUrl(this SubscriptionTopic r, FhirUri value) { r.Url = value; return r; }
        public static SubscriptionTopic AddUseContext(this SubscriptionTopic r, UsageContext item) { r.UseContext ??= new List<UsageContext>(); r.UseContext!.Add(item); return r; }
        public static SubscriptionTopic WithVersion(this SubscriptionTopic r, FhirString value) { r.Version = value; return r; }
        public static SubscriptionTopic WithVersionAlgorithmString(this SubscriptionTopic r, FhirString value) { r.VersionAlgorithmString = value; return r; }
        public static SubscriptionTopic WithVersionAlgorithmCoding(this SubscriptionTopic r, Coding value) { r.VersionAlgorithmCoding = value; return r; }
    }
}
