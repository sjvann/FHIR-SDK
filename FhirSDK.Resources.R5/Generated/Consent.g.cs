// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// A healthcare consumer's  or third party's choices to permit or deny recipients or roles to perform actions for specific purposes and periods of time
    /// </summary>
    public partial class Consent : ResourceBase
    {
        public override string ResourceType => "Consent";

        public Consent() { }
        public Consent(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public Consent(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private List<CodeableConcept>? _category;
        [JsonPropertyName("category")]
        public List<CodeableConcept>? Category { get => _category; set { _category = value; OnPropertyChangedByClr(nameof(Category), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private List<ReferenceType>? _controller;
        [JsonPropertyName("controller")]
        public List<ReferenceType>? Controller { get => _controller; set { _controller = value; OnPropertyChangedByClr(nameof(Controller), value); } }

        private FhirDate? _date;
        [JsonPropertyName("date")]
        public FhirDate? Date { get => _date; set { _date = value; OnPropertyChangedByClr(nameof(Date), value); } }

        private FhirCode? _decision;
        [JsonPropertyName("decision")]
        public FhirCode? Decision { get => _decision; set { _decision = value; OnPropertyChangedByClr(nameof(Decision), value); } }

        private List<ReferenceType>? _grantee;
        [JsonPropertyName("grantee")]
        public List<ReferenceType>? Grantee { get => _grantee; set { _grantee = value; OnPropertyChangedByClr(nameof(Grantee), value); } }

        private List<ReferenceType>? _grantor;
        [JsonPropertyName("grantor")]
        public List<ReferenceType>? Grantor { get => _grantor; set { _grantor = value; OnPropertyChangedByClr(nameof(Grantor), value); } }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private List<ReferenceType>? _manager;
        [JsonPropertyName("manager")]
        public List<ReferenceType>? Manager { get => _manager; set { _manager = value; OnPropertyChangedByClr(nameof(Manager), value); } }

        private Period? _period;
        [JsonPropertyName("period")]
        public Period? Period { get => _period; set { _period = value; OnPropertyChangedByClr(nameof(Period), value); } }

        private Consent_PolicyBasis? _policyBasis;
        [JsonPropertyName("policyBasis")]
        public Consent_PolicyBasis? PolicyBasis { get => _policyBasis; set { _policyBasis = value; OnPropertyChangedByClr(nameof(PolicyBasis), value); } }

        /// <summary>
        /// Computable version of the backing policy
        /// </summary>
        public partial class Consent_PolicyBasis : BackboneElement<Consent_PolicyBasis>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Consent_PolicyBasis" : "consent_PolicyBasis";
            private ReferenceType? _reference;
        [JsonPropertyName("reference")]
        public ReferenceType? Reference { get => _reference; set { _reference = value; } }

            private FhirUrl? _url;
        [JsonPropertyName("url")]
        public FhirUrl? Url { get => _url; set { _url = value; } }

        }

        private List<ReferenceType>? _policyText;
        [JsonPropertyName("policyText")]
        public List<ReferenceType>? PolicyText { get => _policyText; set { _policyText = value; OnPropertyChangedByClr(nameof(PolicyText), value); } }

        private List<Consent_Provision>? _provision;
        [JsonPropertyName("provision")]
        public List<Consent_Provision>? Provision { get => _provision; set { _provision = value; OnPropertyChangedByClr(nameof(Provision), value); } }

        /// <summary>
        /// Constraints to the base Consent.policyRule/Consent.policy
        /// </summary>
        public partial class Consent_Provision : BackboneElement<Consent_Provision>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Consent_Provision" : "consent_Provision";
            private List<CodeableConcept>? _action;
        [JsonPropertyName("action")]
        public List<CodeableConcept>? Action { get => _action; set { _action = value; } }

            private List<Consent_Provision_Actor>? _actor;
        [JsonPropertyName("actor")]
        public List<Consent_Provision_Actor>? Actor { get => _actor; set { _actor = value; } }

            /// <summary>
            /// Who|what controlled by this provision (or group, by role)
            /// </summary>
            public partial class Consent_Provision_Actor : BackboneElement<Consent_Provision_Actor>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Consent_Provision_Actor" : "consent_Provision_Actor";
                private ReferenceType? _reference;
        [JsonPropertyName("reference")]
        public ReferenceType? Reference { get => _reference; set { _reference = value; } }

                private CodeableConcept? _role;
        [JsonPropertyName("role")]
        public CodeableConcept? Role { get => _role; set { _role = value; } }

            }

            private List<CodeableConcept>? _code;
        [JsonPropertyName("code")]
        public List<CodeableConcept>? Code { get => _code; set { _code = value; } }

            private List<Consent_Provision_Data>? _data;
        [JsonPropertyName("data")]
        public List<Consent_Provision_Data>? Data { get => _data; set { _data = value; } }

            /// <summary>
            /// Data controlled by this provision
            /// </summary>
            public partial class Consent_Provision_Data : BackboneElement<Consent_Provision_Data>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Consent_Provision_Data" : "consent_Provision_Data";
                private FhirCode? _meaning;
        [JsonPropertyName("meaning")]
        public FhirCode Meaning { get => _meaning ?? throw new InvalidOperationException("Meaning is required"); set { _meaning = value; } }

                private ReferenceType? _reference;
        [JsonPropertyName("reference")]
        public ReferenceType Reference { get => _reference ?? throw new InvalidOperationException("Reference is required"); set { _reference = value; } }

            }

            private Period? _dataPeriod;
        [JsonPropertyName("dataPeriod")]
        public Period? DataPeriod { get => _dataPeriod; set { _dataPeriod = value; } }

            private List<Coding>? _documentType;
        [JsonPropertyName("documentType")]
        public List<Coding>? DocumentType { get => _documentType; set { _documentType = value; } }

            private DataTypeServices.DataTypes.MetaTypes.ExpressionType? _expression;
        [JsonPropertyName("expression")]
        public DataTypeServices.DataTypes.MetaTypes.ExpressionType? Expression { get => _expression; set { _expression = value; } }

            private Period? _period;
        [JsonPropertyName("period")]
        public Period? Period { get => _period; set { _period = value; } }

            private List<FhirString>? _provision;
        [JsonPropertyName("provision")]
        public List<FhirString>? Provision { get => _provision; set { _provision = value; } }

            private List<Coding>? _purpose;
        [JsonPropertyName("purpose")]
        public List<Coding>? Purpose { get => _purpose; set { _purpose = value; } }

            private List<Coding>? _resourceType;
        [JsonPropertyName("resourceType")]
        public List<Coding>? ResourceType { get => _resourceType; set { _resourceType = value; } }

            private List<Coding>? _securityLabel;
        [JsonPropertyName("securityLabel")]
        public List<Coding>? SecurityLabel { get => _securityLabel; set { _securityLabel = value; } }

        }

        private List<CodeableConcept>? _regulatoryBasis;
        [JsonPropertyName("regulatoryBasis")]
        public List<CodeableConcept>? RegulatoryBasis { get => _regulatoryBasis; set { _regulatoryBasis = value; OnPropertyChangedByClr(nameof(RegulatoryBasis), value); } }

        private List<Attachment>? _sourceAttachment;
        [JsonPropertyName("sourceAttachment")]
        public List<Attachment>? SourceAttachment { get => _sourceAttachment; set { _sourceAttachment = value; OnPropertyChangedByClr(nameof(SourceAttachment), value); } }

        private List<ReferenceType>? _sourceReference;
        [JsonPropertyName("sourceReference")]
        public List<ReferenceType>? SourceReference { get => _sourceReference; set { _sourceReference = value; OnPropertyChangedByClr(nameof(SourceReference), value); } }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode Status { get => _status ?? throw new InvalidOperationException("Status is required"); set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private ReferenceType? _subject;
        [JsonPropertyName("subject")]
        public ReferenceType? Subject { get => _subject; set { _subject = value; OnPropertyChangedByClr(nameof(Subject), value); } }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

        private List<Consent_Verification>? _verification;
        [JsonPropertyName("verification")]
        public List<Consent_Verification>? Verification { get => _verification; set { _verification = value; OnPropertyChangedByClr(nameof(Verification), value); } }

        /// <summary>
        /// Consent Verified by patient or family
        /// </summary>
        public partial class Consent_Verification : BackboneElement<Consent_Verification>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Consent_Verification" : "consent_Verification";
            private List<FhirDateTime>? _verificationDate;
        [JsonPropertyName("verificationDate")]
        public List<FhirDateTime>? VerificationDate { get => _verificationDate; set { _verificationDate = value; } }

            private CodeableConcept? _verificationType;
        [JsonPropertyName("verificationType")]
        public CodeableConcept? VerificationType { get => _verificationType; set { _verificationType = value; } }

            private FhirBoolean? _verified;
        [JsonPropertyName("verified")]
        public FhirBoolean Verified { get => _verified ?? throw new InvalidOperationException("Verified is required"); set { _verified = value; } }

            private ReferenceType? _verifiedBy;
        [JsonPropertyName("verifiedBy")]
        public ReferenceType? VerifiedBy { get => _verifiedBy; set { _verifiedBy = value; } }

            private ReferenceType? _verifiedWith;
        [JsonPropertyName("verifiedWith")]
        public ReferenceType? VerifiedWith { get => _verifiedWith; set { _verifiedWith = value; } }

        }

    }
}
