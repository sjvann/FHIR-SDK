// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// An event that may be related to unintended effects on a patient or research participant
    /// </summary>
    public partial class AdverseEvent : ResourceBase
    {
        public override string ResourceType => "AdverseEvent";

        public AdverseEvent() { }
        public AdverseEvent(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public AdverseEvent(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private FhirCode? _actuality;
        [JsonPropertyName("actuality")]
        public FhirCode Actuality { get => _actuality ?? throw new InvalidOperationException("Actuality is required"); set { _actuality = value; OnPropertyChangedByClr(nameof(Actuality), value); } }

        private List<CodeableConcept>? _category;
        [JsonPropertyName("category")]
        public List<CodeableConcept>? Category { get => _category; set { _category = value; OnPropertyChangedByClr(nameof(Category), value); } }

        private CodeableConcept? _code;
        [JsonPropertyName("code")]
        public CodeableConcept? Code { get => _code; set { _code = value; OnPropertyChangedByClr(nameof(Code), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private List<AdverseEvent_ContributingFactor>? _contributingFactor;
        [JsonPropertyName("contributingFactor")]
        public List<AdverseEvent_ContributingFactor>? ContributingFactor { get => _contributingFactor; set { _contributingFactor = value; OnPropertyChangedByClr(nameof(ContributingFactor), value); } }

        /// <summary>
        /// Contributing factors suspected to have increased the probability or severity of the adverse event
        /// </summary>
        public partial class AdverseEvent_ContributingFactor : BackboneElement<AdverseEvent_ContributingFactor>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "AdverseEvent_ContributingFactor" : "adverseEvent_ContributingFactor";
            private ReferenceType? _itemReference;
        [JsonPropertyName("itemReference")]
        public ReferenceType? ItemReference { get => _itemReference; set { _itemReference = value; if (value != null) {{ _itemCodeableConcept = null; OnPropertyChanged("itemCodeableConcept", null); }}; OnPropertyChanged("itemReference", value); } }

            private CodeableConcept? _itemCodeableConcept;
        [JsonPropertyName("itemCodeableConcept")]
        public CodeableConcept? ItemCodeableConcept { get => _itemCodeableConcept; set { _itemCodeableConcept = value; if (value != null) {{ _itemReference = null; OnPropertyChanged("itemReference", null); }}; OnPropertyChanged("itemCodeableConcept", value); } }

        }

        private FhirDateTime? _detected;
        [JsonPropertyName("detected")]
        public FhirDateTime? Detected { get => _detected; set { _detected = value; OnPropertyChangedByClr(nameof(Detected), value); } }

        private ReferenceType? _encounter;
        [JsonPropertyName("encounter")]
        public ReferenceType? Encounter { get => _encounter; set { _encounter = value; OnPropertyChangedByClr(nameof(Encounter), value); } }

        private FhirBoolean? _expectedInResearchStudy;
        [JsonPropertyName("expectedInResearchStudy")]
        public FhirBoolean? ExpectedInResearchStudy { get => _expectedInResearchStudy; set { _expectedInResearchStudy = value; OnPropertyChangedByClr(nameof(ExpectedInResearchStudy), value); } }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private ReferenceType? _location;
        [JsonPropertyName("location")]
        public ReferenceType? Location { get => _location; set { _location = value; OnPropertyChangedByClr(nameof(Location), value); } }

        private List<AdverseEvent_MitigatingAction>? _mitigatingAction;
        [JsonPropertyName("mitigatingAction")]
        public List<AdverseEvent_MitigatingAction>? MitigatingAction { get => _mitigatingAction; set { _mitigatingAction = value; OnPropertyChangedByClr(nameof(MitigatingAction), value); } }

        /// <summary>
        /// Ameliorating actions taken after the adverse event occured in order to reduce the extent of harm
        /// </summary>
        public partial class AdverseEvent_MitigatingAction : BackboneElement<AdverseEvent_MitigatingAction>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "AdverseEvent_MitigatingAction" : "adverseEvent_MitigatingAction";
            private ReferenceType? _itemReference;
        [JsonPropertyName("itemReference")]
        public ReferenceType? ItemReference { get => _itemReference; set { _itemReference = value; if (value != null) {{ _itemCodeableConcept = null; OnPropertyChanged("itemCodeableConcept", null); }}; OnPropertyChanged("itemReference", value); } }

            private CodeableConcept? _itemCodeableConcept;
        [JsonPropertyName("itemCodeableConcept")]
        public CodeableConcept? ItemCodeableConcept { get => _itemCodeableConcept; set { _itemCodeableConcept = value; if (value != null) {{ _itemReference = null; OnPropertyChanged("itemReference", null); }}; OnPropertyChanged("itemCodeableConcept", value); } }

        }

        private List<Annotation>? _note;
        [JsonPropertyName("note")]
        public List<Annotation>? Note { get => _note; set { _note = value; OnPropertyChangedByClr(nameof(Note), value); } }

        private FhirDateTime? _occurrenceDateTime;
        [JsonPropertyName("occurrenceDateTime")]
        public FhirDateTime? OccurrenceDateTime { get => _occurrenceDateTime; set { _occurrenceDateTime = value; if (value != null) {{ _occurrencePeriod = null; OnPropertyChangedByClr(nameof(OccurrencePeriod), null); _occurrenceTiming = null; OnPropertyChangedByClr(nameof(OccurrenceTiming), null); }}; OnPropertyChangedByClr(nameof(OccurrenceDateTime), value); } }

        private Period? _occurrencePeriod;
        [JsonPropertyName("occurrencePeriod")]
        public Period? OccurrencePeriod { get => _occurrencePeriod; set { _occurrencePeriod = value; if (value != null) {{ _occurrenceDateTime = null; OnPropertyChangedByClr(nameof(OccurrenceDateTime), null); _occurrenceTiming = null; OnPropertyChangedByClr(nameof(OccurrenceTiming), null); }}; OnPropertyChangedByClr(nameof(OccurrencePeriod), value); } }

        private Timing? _occurrenceTiming;
        [JsonPropertyName("occurrenceTiming")]
        public Timing? OccurrenceTiming { get => _occurrenceTiming; set { _occurrenceTiming = value; if (value != null) {{ _occurrenceDateTime = null; OnPropertyChangedByClr(nameof(OccurrenceDateTime), null); _occurrencePeriod = null; OnPropertyChangedByClr(nameof(OccurrencePeriod), null); }}; OnPropertyChangedByClr(nameof(OccurrenceTiming), value); } }

        private List<CodeableConcept>? _outcome;
        [JsonPropertyName("outcome")]
        public List<CodeableConcept>? Outcome { get => _outcome; set { _outcome = value; OnPropertyChangedByClr(nameof(Outcome), value); } }

        private List<AdverseEvent_Participant>? _participant;
        [JsonPropertyName("participant")]
        public List<AdverseEvent_Participant>? Participant { get => _participant; set { _participant = value; OnPropertyChangedByClr(nameof(Participant), value); } }

        /// <summary>
        /// Who was involved in the adverse event or the potential adverse event and what they did
        /// </summary>
        public partial class AdverseEvent_Participant : BackboneElement<AdverseEvent_Participant>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "AdverseEvent_Participant" : "adverseEvent_Participant";
            private ReferenceType? _actor;
        [JsonPropertyName("actor")]
        public ReferenceType Actor { get => _actor ?? throw new InvalidOperationException("Actor is required"); set { _actor = value; } }

            private CodeableConcept? _function;
        [JsonPropertyName("function")]
        public CodeableConcept? Function { get => _function; set { _function = value; } }

        }

        private List<AdverseEvent_PreventiveAction>? _preventiveAction;
        [JsonPropertyName("preventiveAction")]
        public List<AdverseEvent_PreventiveAction>? PreventiveAction { get => _preventiveAction; set { _preventiveAction = value; OnPropertyChangedByClr(nameof(PreventiveAction), value); } }

        /// <summary>
        /// Preventive actions that contributed to avoiding the adverse event
        /// </summary>
        public partial class AdverseEvent_PreventiveAction : BackboneElement<AdverseEvent_PreventiveAction>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "AdverseEvent_PreventiveAction" : "adverseEvent_PreventiveAction";
            private ReferenceType? _itemReference;
        [JsonPropertyName("itemReference")]
        public ReferenceType? ItemReference { get => _itemReference; set { _itemReference = value; if (value != null) {{ _itemCodeableConcept = null; OnPropertyChanged("itemCodeableConcept", null); }}; OnPropertyChanged("itemReference", value); } }

            private CodeableConcept? _itemCodeableConcept;
        [JsonPropertyName("itemCodeableConcept")]
        public CodeableConcept? ItemCodeableConcept { get => _itemCodeableConcept; set { _itemCodeableConcept = value; if (value != null) {{ _itemReference = null; OnPropertyChanged("itemReference", null); }}; OnPropertyChanged("itemCodeableConcept", value); } }

        }

        private FhirDateTime? _recordedDate;
        [JsonPropertyName("recordedDate")]
        public FhirDateTime? RecordedDate { get => _recordedDate; set { _recordedDate = value; OnPropertyChangedByClr(nameof(RecordedDate), value); } }

        private ReferenceType? _recorder;
        [JsonPropertyName("recorder")]
        public ReferenceType? Recorder { get => _recorder; set { _recorder = value; OnPropertyChangedByClr(nameof(Recorder), value); } }

        private List<ReferenceType>? _resultingEffect;
        [JsonPropertyName("resultingEffect")]
        public List<ReferenceType>? ResultingEffect { get => _resultingEffect; set { _resultingEffect = value; OnPropertyChangedByClr(nameof(ResultingEffect), value); } }

        private CodeableConcept? _seriousness;
        [JsonPropertyName("seriousness")]
        public CodeableConcept? Seriousness { get => _seriousness; set { _seriousness = value; OnPropertyChangedByClr(nameof(Seriousness), value); } }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode Status { get => _status ?? throw new InvalidOperationException("Status is required"); set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private List<ReferenceType>? _study;
        [JsonPropertyName("study")]
        public List<ReferenceType>? Study { get => _study; set { _study = value; OnPropertyChangedByClr(nameof(Study), value); } }

        private ReferenceType? _subject;
        [JsonPropertyName("subject")]
        public ReferenceType Subject { get => _subject ?? throw new InvalidOperationException("Subject is required"); set { _subject = value; OnPropertyChangedByClr(nameof(Subject), value); } }

        private List<AdverseEvent_SupportingInfo>? _supportingInfo;
        [JsonPropertyName("supportingInfo")]
        public List<AdverseEvent_SupportingInfo>? SupportingInfo { get => _supportingInfo; set { _supportingInfo = value; OnPropertyChangedByClr(nameof(SupportingInfo), value); } }

        /// <summary>
        /// Supporting information relevant to the event
        /// </summary>
        public partial class AdverseEvent_SupportingInfo : BackboneElement<AdverseEvent_SupportingInfo>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "AdverseEvent_SupportingInfo" : "adverseEvent_SupportingInfo";
            private ReferenceType? _itemReference;
        [JsonPropertyName("itemReference")]
        public ReferenceType? ItemReference { get => _itemReference; set { _itemReference = value; if (value != null) {{ _itemCodeableConcept = null; OnPropertyChanged("itemCodeableConcept", null); }}; OnPropertyChanged("itemReference", value); } }

            private CodeableConcept? _itemCodeableConcept;
        [JsonPropertyName("itemCodeableConcept")]
        public CodeableConcept? ItemCodeableConcept { get => _itemCodeableConcept; set { _itemCodeableConcept = value; if (value != null) {{ _itemReference = null; OnPropertyChanged("itemReference", null); }}; OnPropertyChanged("itemCodeableConcept", value); } }

        }

        private List<AdverseEvent_SuspectEntity>? _suspectEntity;
        [JsonPropertyName("suspectEntity")]
        public List<AdverseEvent_SuspectEntity>? SuspectEntity { get => _suspectEntity; set { _suspectEntity = value; OnPropertyChangedByClr(nameof(SuspectEntity), value); } }

        /// <summary>
        /// The suspected agent causing the adverse event
        /// </summary>
        public partial class AdverseEvent_SuspectEntity : BackboneElement<AdverseEvent_SuspectEntity>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "AdverseEvent_SuspectEntity" : "adverseEvent_SuspectEntity";
            private AdverseEvent_SuspectEntity_Causality? _causality;
        [JsonPropertyName("causality")]
        public AdverseEvent_SuspectEntity_Causality? Causality { get => _causality; set { _causality = value; } }

            /// <summary>
            /// Information on the possible cause of the event
            /// </summary>
            public partial class AdverseEvent_SuspectEntity_Causality : BackboneElement<AdverseEvent_SuspectEntity_Causality>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "AdverseEvent_SuspectEntity_Causality" : "adverseEvent_SuspectEntity_Causality";
                private CodeableConcept? _assessmentMethod;
        [JsonPropertyName("assessmentMethod")]
        public CodeableConcept? AssessmentMethod { get => _assessmentMethod; set { _assessmentMethod = value; } }

                private ReferenceType? _author;
        [JsonPropertyName("author")]
        public ReferenceType? Author { get => _author; set { _author = value; } }

                private CodeableConcept? _entityRelatedness;
        [JsonPropertyName("entityRelatedness")]
        public CodeableConcept? EntityRelatedness { get => _entityRelatedness; set { _entityRelatedness = value; } }

            }

            private CodeableConcept? _instanceCodeableConcept;
        [JsonPropertyName("instanceCodeableConcept")]
        public CodeableConcept? InstanceCodeableConcept { get => _instanceCodeableConcept; set { _instanceCodeableConcept = value; if (value != null) {{ _instanceReference = null; OnPropertyChanged("instanceReference", null); }}; OnPropertyChanged("instanceCodeableConcept", value); } }

            private ReferenceType? _instanceReference;
        [JsonPropertyName("instanceReference")]
        public ReferenceType? InstanceReference { get => _instanceReference; set { _instanceReference = value; if (value != null) {{ _instanceCodeableConcept = null; OnPropertyChanged("instanceCodeableConcept", null); }}; OnPropertyChanged("instanceReference", value); } }

        }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

    }
}
