// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// An instance of a medical-related component of a medical device
    /// </summary>
    public partial class DeviceDefinition : ResourceBase
    {
        public override string ResourceType => "DeviceDefinition";

        public DeviceDefinition() { }
        public DeviceDefinition(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public DeviceDefinition(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private List<DeviceDefinition_ChargeItem>? _chargeItem;
        [JsonPropertyName("chargeItem")]
        public List<DeviceDefinition_ChargeItem>? ChargeItem { get => _chargeItem; set { _chargeItem = value; OnPropertyChangedByClr(nameof(ChargeItem), value); } }

        /// <summary>
        /// Billing code or reference associated with the device
        /// </summary>
        public partial class DeviceDefinition_ChargeItem : BackboneElement<DeviceDefinition_ChargeItem>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "DeviceDefinition_ChargeItem" : "deviceDefinition_ChargeItem";
            private CodeableReference? _chargeItemCode;
        [JsonPropertyName("chargeItemCode")]
        public CodeableReference ChargeItemCode { get => _chargeItemCode ?? throw new InvalidOperationException("ChargeItemCode is required"); set { _chargeItemCode = value; } }

            private Quantity? _count;
        [JsonPropertyName("count")]
        public Quantity Count { get => _count ?? throw new InvalidOperationException("Count is required"); set { _count = value; } }

            private Period? _effectivePeriod;
        [JsonPropertyName("effectivePeriod")]
        public Period? EffectivePeriod { get => _effectivePeriod; set { _effectivePeriod = value; } }

            private List<UsageContext>? _useContext;
        [JsonPropertyName("useContext")]
        public List<UsageContext>? UseContext { get => _useContext; set { _useContext = value; } }

        }

        private List<DeviceDefinition_Classification>? _classification;
        [JsonPropertyName("classification")]
        public List<DeviceDefinition_Classification>? Classification { get => _classification; set { _classification = value; OnPropertyChangedByClr(nameof(Classification), value); } }

        /// <summary>
        /// What kind of device or device system this is
        /// </summary>
        public partial class DeviceDefinition_Classification : BackboneElement<DeviceDefinition_Classification>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "DeviceDefinition_Classification" : "deviceDefinition_Classification";
            private List<RelatedArtifact>? _justification;
        [JsonPropertyName("justification")]
        public List<RelatedArtifact>? Justification { get => _justification; set { _justification = value; } }

            private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept Type { get => _type ?? throw new InvalidOperationException("Type is required"); set { _type = value; } }

        }

        private List<DeviceDefinition_ConformsTo>? _conformsTo;
        [JsonPropertyName("conformsTo")]
        public List<DeviceDefinition_ConformsTo>? ConformsTo { get => _conformsTo; set { _conformsTo = value; OnPropertyChangedByClr(nameof(ConformsTo), value); } }

        /// <summary>
        /// Identifies the standards, specifications, or formal guidances for the capabilities supported by the device
        /// </summary>
        public partial class DeviceDefinition_ConformsTo : BackboneElement<DeviceDefinition_ConformsTo>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "DeviceDefinition_ConformsTo" : "deviceDefinition_ConformsTo";
            private CodeableConcept? _category;
        [JsonPropertyName("category")]
        public CodeableConcept? Category { get => _category; set { _category = value; } }

            private List<RelatedArtifact>? _source;
        [JsonPropertyName("source")]
        public List<RelatedArtifact>? Source { get => _source; set { _source = value; } }

            private CodeableConcept? _specification;
        [JsonPropertyName("specification")]
        public CodeableConcept Specification { get => _specification ?? throw new InvalidOperationException("Specification is required"); set { _specification = value; } }

            private List<FhirString>? _version;
        [JsonPropertyName("version")]
        public List<FhirString>? Version { get => _version; set { _version = value; } }

        }

        private List<ContactPoint>? _contact;
        [JsonPropertyName("contact")]
        public List<ContactPoint>? Contact { get => _contact; set { _contact = value; OnPropertyChangedByClr(nameof(Contact), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private DeviceDefinition_CorrectiveAction? _correctiveAction;
        [JsonPropertyName("correctiveAction")]
        public DeviceDefinition_CorrectiveAction? CorrectiveAction { get => _correctiveAction; set { _correctiveAction = value; OnPropertyChangedByClr(nameof(CorrectiveAction), value); } }

        /// <summary>
        /// Tracking of latest field safety corrective action
        /// </summary>
        public partial class DeviceDefinition_CorrectiveAction : BackboneElement<DeviceDefinition_CorrectiveAction>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "DeviceDefinition_CorrectiveAction" : "deviceDefinition_CorrectiveAction";
            private Period? _period;
        [JsonPropertyName("period")]
        public Period Period { get => _period ?? throw new InvalidOperationException("Period is required"); set { _period = value; } }

            private FhirBoolean? _recall;
        [JsonPropertyName("recall")]
        public FhirBoolean Recall { get => _recall ?? throw new InvalidOperationException("Recall is required"); set { _recall = value; } }

            private FhirCode? _scope;
        [JsonPropertyName("scope")]
        public FhirCode? Scope { get => _scope; set { _scope = value; } }

        }

        private FhirMarkdown? _description;
        [JsonPropertyName("description")]
        public FhirMarkdown? Description { get => _description; set { _description = value; OnPropertyChangedByClr(nameof(Description), value); } }

        private List<DeviceDefinition_DeviceName>? _deviceName;
        [JsonPropertyName("deviceName")]
        public List<DeviceDefinition_DeviceName>? DeviceName { get => _deviceName; set { _deviceName = value; OnPropertyChangedByClr(nameof(DeviceName), value); } }

        /// <summary>
        /// The name or names of the device as given by the manufacturer
        /// </summary>
        public partial class DeviceDefinition_DeviceName : BackboneElement<DeviceDefinition_DeviceName>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "DeviceDefinition_DeviceName" : "deviceDefinition_DeviceName";
            private FhirString? _name;
        [JsonPropertyName("name")]
        public FhirString Name { get => _name ?? throw new InvalidOperationException("Name is required"); set { _name = value; } }

            private FhirCode? _type;
        [JsonPropertyName("type")]
        public FhirCode Type { get => _type ?? throw new InvalidOperationException("Type is required"); set { _type = value; } }

        }

        private DeviceDefinition_Guideline? _guideline;
        [JsonPropertyName("guideline")]
        public DeviceDefinition_Guideline? Guideline { get => _guideline; set { _guideline = value; OnPropertyChangedByClr(nameof(Guideline), value); } }

        /// <summary>
        /// Information aimed at providing directions for the usage of this model of device
        /// </summary>
        public partial class DeviceDefinition_Guideline : BackboneElement<DeviceDefinition_Guideline>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "DeviceDefinition_Guideline" : "deviceDefinition_Guideline";
            private List<CodeableConcept>? _contraindication;
        [JsonPropertyName("contraindication")]
        public List<CodeableConcept>? Contraindication { get => _contraindication; set { _contraindication = value; } }

            private List<CodeableConcept>? _indication;
        [JsonPropertyName("indication")]
        public List<CodeableConcept>? Indication { get => _indication; set { _indication = value; } }

            private FhirString? _intendedUse;
        [JsonPropertyName("intendedUse")]
        public FhirString? IntendedUse { get => _intendedUse; set { _intendedUse = value; } }

            private List<RelatedArtifact>? _relatedArtifact;
        [JsonPropertyName("relatedArtifact")]
        public List<RelatedArtifact>? RelatedArtifact { get => _relatedArtifact; set { _relatedArtifact = value; } }

            private FhirMarkdown? _usageInstruction;
        [JsonPropertyName("usageInstruction")]
        public FhirMarkdown? UsageInstruction { get => _usageInstruction; set { _usageInstruction = value; } }

            private List<UsageContext>? _useContext;
        [JsonPropertyName("useContext")]
        public List<UsageContext>? UseContext { get => _useContext; set { _useContext = value; } }

            private List<CodeableConcept>? _warning;
        [JsonPropertyName("warning")]
        public List<CodeableConcept>? Warning { get => _warning; set { _warning = value; } }

        }

        private List<DeviceDefinition_HasPart>? _hasPart;
        [JsonPropertyName("hasPart")]
        public List<DeviceDefinition_HasPart>? HasPart { get => _hasPart; set { _hasPart = value; OnPropertyChangedByClr(nameof(HasPart), value); } }

        /// <summary>
        /// A device, part of the current one
        /// </summary>
        public partial class DeviceDefinition_HasPart : BackboneElement<DeviceDefinition_HasPart>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "DeviceDefinition_HasPart" : "deviceDefinition_HasPart";
            private FhirInteger? _count;
        [JsonPropertyName("count")]
        public FhirInteger? Count { get => _count; set { _count = value; } }

            private ReferenceType? _reference;
        [JsonPropertyName("reference")]
        public ReferenceType Reference { get => _reference ?? throw new InvalidOperationException("Reference is required"); set { _reference = value; } }

        }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private List<CodeableConcept>? _languageCode;
        [JsonPropertyName("languageCode")]
        public List<CodeableConcept>? LanguageCode { get => _languageCode; set { _languageCode = value; OnPropertyChangedByClr(nameof(LanguageCode), value); } }

        private List<DeviceDefinition_Link>? _link;
        [JsonPropertyName("link")]
        public List<DeviceDefinition_Link>? Link { get => _link; set { _link = value; OnPropertyChangedByClr(nameof(Link), value); } }

        /// <summary>
        /// An associated device, attached to, used with, communicating with or linking a previous or new device model to the focal device
        /// </summary>
        public partial class DeviceDefinition_Link : BackboneElement<DeviceDefinition_Link>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "DeviceDefinition_Link" : "deviceDefinition_Link";
            private CodeableReference? _relatedDevice;
        [JsonPropertyName("relatedDevice")]
        public CodeableReference RelatedDevice { get => _relatedDevice ?? throw new InvalidOperationException("RelatedDevice is required"); set { _relatedDevice = value; } }

            private Coding? _relation;
        [JsonPropertyName("relation")]
        public Coding Relation { get => _relation ?? throw new InvalidOperationException("Relation is required"); set { _relation = value; } }

        }

        private ReferenceType? _manufacturer;
        [JsonPropertyName("manufacturer")]
        public ReferenceType? Manufacturer { get => _manufacturer; set { _manufacturer = value; OnPropertyChangedByClr(nameof(Manufacturer), value); } }

        private List<DeviceDefinition_Material>? _material;
        [JsonPropertyName("material")]
        public List<DeviceDefinition_Material>? Material { get => _material; set { _material = value; OnPropertyChangedByClr(nameof(Material), value); } }

        /// <summary>
        /// A substance used to create the material(s) of which the device is made
        /// </summary>
        public partial class DeviceDefinition_Material : BackboneElement<DeviceDefinition_Material>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "DeviceDefinition_Material" : "deviceDefinition_Material";
            private FhirBoolean? _allergenicIndicator;
        [JsonPropertyName("allergenicIndicator")]
        public FhirBoolean? AllergenicIndicator { get => _allergenicIndicator; set { _allergenicIndicator = value; } }

            private FhirBoolean? _alternate;
        [JsonPropertyName("alternate")]
        public FhirBoolean? Alternate { get => _alternate; set { _alternate = value; } }

            private CodeableConcept? _substance;
        [JsonPropertyName("substance")]
        public CodeableConcept Substance { get => _substance ?? throw new InvalidOperationException("Substance is required"); set { _substance = value; } }

        }

        private FhirString? _modelNumber;
        [JsonPropertyName("modelNumber")]
        public FhirString? ModelNumber { get => _modelNumber; set { _modelNumber = value; OnPropertyChangedByClr(nameof(ModelNumber), value); } }

        private List<Annotation>? _note;
        [JsonPropertyName("note")]
        public List<Annotation>? Note { get => _note; set { _note = value; OnPropertyChangedByClr(nameof(Note), value); } }

        private ReferenceType? _owner;
        [JsonPropertyName("owner")]
        public ReferenceType? Owner { get => _owner; set { _owner = value; OnPropertyChangedByClr(nameof(Owner), value); } }

        private List<DeviceDefinition_Packaging>? _packaging;
        [JsonPropertyName("packaging")]
        public List<DeviceDefinition_Packaging>? Packaging { get => _packaging; set { _packaging = value; OnPropertyChangedByClr(nameof(Packaging), value); } }

        /// <summary>
        /// Information about the packaging of the device, i.e. how the device is packaged
        /// </summary>
        public partial class DeviceDefinition_Packaging : BackboneElement<DeviceDefinition_Packaging>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "DeviceDefinition_Packaging" : "deviceDefinition_Packaging";
            private FhirInteger? _count;
        [JsonPropertyName("count")]
        public FhirInteger? Count { get => _count; set { _count = value; } }

            private List<DeviceDefinition_Packaging_Distributor>? _distributor;
        [JsonPropertyName("distributor")]
        public List<DeviceDefinition_Packaging_Distributor>? Distributor { get => _distributor; set { _distributor = value; } }

            /// <summary>
            /// An organization that distributes the packaged device
            /// </summary>
            public partial class DeviceDefinition_Packaging_Distributor : BackboneElement<DeviceDefinition_Packaging_Distributor>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "DeviceDefinition_Packaging_Distributor" : "deviceDefinition_Packaging_Distributor";
                private FhirString? _name;
        [JsonPropertyName("name")]
        public FhirString? Name { get => _name; set { _name = value; } }

                private List<ReferenceType>? _organizationReference;
        [JsonPropertyName("organizationReference")]
        public List<ReferenceType>? OrganizationReference { get => _organizationReference; set { _organizationReference = value; } }

            }

            private Identifier? _identifier;
        [JsonPropertyName("identifier")]
        public Identifier? Identifier { get => _identifier; set { _identifier = value; } }

            private List<FhirString>? _packaging;
        [JsonPropertyName("packaging")]
        public List<FhirString>? Packaging { get => _packaging; set { _packaging = value; } }

            private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept? Type { get => _type; set { _type = value; } }

            private List<FhirString>? _udiDeviceIdentifier;
        [JsonPropertyName("udiDeviceIdentifier")]
        public List<FhirString>? UdiDeviceIdentifier { get => _udiDeviceIdentifier; set { _udiDeviceIdentifier = value; } }

        }

        private FhirString? _partNumber;
        [JsonPropertyName("partNumber")]
        public FhirString? PartNumber { get => _partNumber; set { _partNumber = value; OnPropertyChangedByClr(nameof(PartNumber), value); } }

        private List<FhirCode>? _productionIdentifierInUDI;
        [JsonPropertyName("productionIdentifierInUDI")]
        public List<FhirCode>? ProductionIdentifierInUDI { get => _productionIdentifierInUDI; set { _productionIdentifierInUDI = value; OnPropertyChangedByClr(nameof(ProductionIdentifierInUDI), value); } }

        private List<DeviceDefinition_Property>? _property;
        [JsonPropertyName("property")]
        public List<DeviceDefinition_Property>? Property { get => _property; set { _property = value; OnPropertyChangedByClr(nameof(Property), value); } }

        /// <summary>
        /// Inherent, essentially fixed, characteristics of this kind of device, e.g., time properties, size, etc
        /// </summary>
        public partial class DeviceDefinition_Property : BackboneElement<DeviceDefinition_Property>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "DeviceDefinition_Property" : "deviceDefinition_Property";
            private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept Type { get => _type ?? throw new InvalidOperationException("Type is required"); set { _type = value; } }

            private Quantity? _valueQuantity;
        [JsonPropertyName("valueQuantity")]
        public Quantity? ValueQuantity { get => _valueQuantity; set { _valueQuantity = value; if (value != null) {{ _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueString = null; OnPropertyChanged("valueString", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valueRange = null; OnPropertyChanged("valueRange", null); _valueAttachment = null; OnPropertyChanged("valueAttachment", null); }}; OnPropertyChanged("valueQuantity", value); } }

            private CodeableConcept? _valueCodeableConcept;
        [JsonPropertyName("valueCodeableConcept")]
        public CodeableConcept? ValueCodeableConcept { get => _valueCodeableConcept; set { _valueCodeableConcept = value; if (value != null) {{ _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueString = null; OnPropertyChanged("valueString", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valueRange = null; OnPropertyChanged("valueRange", null); _valueAttachment = null; OnPropertyChanged("valueAttachment", null); }}; OnPropertyChanged("valueCodeableConcept", value); } }

            private FhirString? _valueString;
        [JsonPropertyName("valueString")]
        public FhirString? ValueString { get => _valueString; set { _valueString = value; if (value != null) {{ _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valueRange = null; OnPropertyChanged("valueRange", null); _valueAttachment = null; OnPropertyChanged("valueAttachment", null); }}; OnPropertyChanged("valueString", value); } }

            private FhirBoolean? _valueBoolean;
        [JsonPropertyName("valueBoolean")]
        public FhirBoolean? ValueBoolean { get => _valueBoolean; set { _valueBoolean = value; if (value != null) {{ _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueString = null; OnPropertyChanged("valueString", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valueRange = null; OnPropertyChanged("valueRange", null); _valueAttachment = null; OnPropertyChanged("valueAttachment", null); }}; OnPropertyChanged("valueBoolean", value); } }

            private FhirInteger? _valueInteger;
        [JsonPropertyName("valueInteger")]
        public FhirInteger? ValueInteger { get => _valueInteger; set { _valueInteger = value; if (value != null) {{ _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueString = null; OnPropertyChanged("valueString", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueRange = null; OnPropertyChanged("valueRange", null); _valueAttachment = null; OnPropertyChanged("valueAttachment", null); }}; OnPropertyChanged("valueInteger", value); } }

            private DataTypeServices.DataTypes.ComplexTypes.Range? _valueRange;
        [JsonPropertyName("valueRange")]
        public DataTypeServices.DataTypes.ComplexTypes.Range? ValueRange { get => _valueRange; set { _valueRange = value; if (value != null) {{ _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueString = null; OnPropertyChanged("valueString", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valueAttachment = null; OnPropertyChanged("valueAttachment", null); }}; OnPropertyChanged("valueRange", value); } }

            private Attachment? _valueAttachment;
        [JsonPropertyName("valueAttachment")]
        public Attachment? ValueAttachment { get => _valueAttachment; set { _valueAttachment = value; if (value != null) {{ _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueString = null; OnPropertyChanged("valueString", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valueRange = null; OnPropertyChanged("valueRange", null); }}; OnPropertyChanged("valueAttachment", value); } }

        }

        private List<DeviceDefinition_RegulatoryIdentifier>? _regulatoryIdentifier;
        [JsonPropertyName("regulatoryIdentifier")]
        public List<DeviceDefinition_RegulatoryIdentifier>? RegulatoryIdentifier { get => _regulatoryIdentifier; set { _regulatoryIdentifier = value; OnPropertyChangedByClr(nameof(RegulatoryIdentifier), value); } }

        /// <summary>
        /// Regulatory identifier(s) associated with this device
        /// </summary>
        public partial class DeviceDefinition_RegulatoryIdentifier : BackboneElement<DeviceDefinition_RegulatoryIdentifier>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "DeviceDefinition_RegulatoryIdentifier" : "deviceDefinition_RegulatoryIdentifier";
            private FhirString? _deviceIdentifier;
        [JsonPropertyName("deviceIdentifier")]
        public FhirString DeviceIdentifier { get => _deviceIdentifier ?? throw new InvalidOperationException("DeviceIdentifier is required"); set { _deviceIdentifier = value; } }

            private FhirUri? _issuer;
        [JsonPropertyName("issuer")]
        public FhirUri Issuer { get => _issuer ?? throw new InvalidOperationException("Issuer is required"); set { _issuer = value; } }

            private FhirUri? _jurisdiction;
        [JsonPropertyName("jurisdiction")]
        public FhirUri Jurisdiction { get => _jurisdiction ?? throw new InvalidOperationException("Jurisdiction is required"); set { _jurisdiction = value; } }

            private FhirCode? _type;
        [JsonPropertyName("type")]
        public FhirCode Type { get => _type ?? throw new InvalidOperationException("Type is required"); set { _type = value; } }

        }

        private List<CodeableConcept>? _safety;
        [JsonPropertyName("safety")]
        public List<CodeableConcept>? Safety { get => _safety; set { _safety = value; OnPropertyChangedByClr(nameof(Safety), value); } }

        private List<ProductShelfLife>? _shelfLifeStorage;
        [JsonPropertyName("shelfLifeStorage")]
        public List<ProductShelfLife>? ShelfLifeStorage { get => _shelfLifeStorage; set { _shelfLifeStorage = value; OnPropertyChangedByClr(nameof(ShelfLifeStorage), value); } }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

        private List<DeviceDefinition_UdiDeviceIdentifier>? _udiDeviceIdentifier;
        [JsonPropertyName("udiDeviceIdentifier")]
        public List<DeviceDefinition_UdiDeviceIdentifier>? UdiDeviceIdentifier { get => _udiDeviceIdentifier; set { _udiDeviceIdentifier = value; OnPropertyChangedByClr(nameof(UdiDeviceIdentifier), value); } }

        /// <summary>
        /// Unique Device Identifier (UDI) Barcode string
        /// </summary>
        public partial class DeviceDefinition_UdiDeviceIdentifier : BackboneElement<DeviceDefinition_UdiDeviceIdentifier>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "DeviceDefinition_UdiDeviceIdentifier" : "deviceDefinition_UdiDeviceIdentifier";
            private FhirString? _deviceIdentifier;
        [JsonPropertyName("deviceIdentifier")]
        public FhirString DeviceIdentifier { get => _deviceIdentifier ?? throw new InvalidOperationException("DeviceIdentifier is required"); set { _deviceIdentifier = value; } }

            private FhirUri? _issuer;
        [JsonPropertyName("issuer")]
        public FhirUri Issuer { get => _issuer ?? throw new InvalidOperationException("Issuer is required"); set { _issuer = value; } }

            private FhirUri? _jurisdiction;
        [JsonPropertyName("jurisdiction")]
        public FhirUri Jurisdiction { get => _jurisdiction ?? throw new InvalidOperationException("Jurisdiction is required"); set { _jurisdiction = value; } }

            private List<DeviceDefinition_UdiDeviceIdentifier_MarketDistribution>? _marketDistribution;
        [JsonPropertyName("marketDistribution")]
        public List<DeviceDefinition_UdiDeviceIdentifier_MarketDistribution>? MarketDistribution { get => _marketDistribution; set { _marketDistribution = value; } }

            /// <summary>
            /// Indicates whether and when the device is available on the market
            /// </summary>
            public partial class DeviceDefinition_UdiDeviceIdentifier_MarketDistribution : BackboneElement<DeviceDefinition_UdiDeviceIdentifier_MarketDistribution>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "DeviceDefinition_UdiDeviceIdentifier_MarketDistribution" : "deviceDefinition_UdiDeviceIdentifier_MarketDistribution";
                private Period? _marketPeriod;
        [JsonPropertyName("marketPeriod")]
        public Period MarketPeriod { get => _marketPeriod ?? throw new InvalidOperationException("MarketPeriod is required"); set { _marketPeriod = value; } }

                private FhirUri? _subJurisdiction;
        [JsonPropertyName("subJurisdiction")]
        public FhirUri SubJurisdiction { get => _subJurisdiction ?? throw new InvalidOperationException("SubJurisdiction is required"); set { _subJurisdiction = value; } }

            }

        }

        private List<DeviceDefinition_Version>? _version;
        [JsonPropertyName("version")]
        public List<DeviceDefinition_Version>? Version { get => _version; set { _version = value; OnPropertyChangedByClr(nameof(Version), value); } }

        /// <summary>
        /// The version of the device or software
        /// </summary>
        public partial class DeviceDefinition_Version : BackboneElement<DeviceDefinition_Version>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "DeviceDefinition_Version" : "deviceDefinition_Version";
            private Identifier? _component;
        [JsonPropertyName("component")]
        public Identifier? Component { get => _component; set { _component = value; } }

            private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept? Type { get => _type; set { _type = value; } }

            private FhirString? _value;
        [JsonPropertyName("value")]
        public FhirString Value { get => _value ?? throw new InvalidOperationException("Value is required"); set { _value = value; } }

        }

    }
}
