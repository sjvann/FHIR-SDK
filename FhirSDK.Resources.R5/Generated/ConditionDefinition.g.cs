// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// A definition of a condition
    /// </summary>
    public partial class ConditionDefinition : ResourceBase
    {
        public override string ResourceType => "ConditionDefinition";

        public ConditionDefinition() { }
        public ConditionDefinition(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public ConditionDefinition(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private CodeableConcept? _bodySite;
        [JsonPropertyName("bodySite")]
        public CodeableConcept? BodySite { get => _bodySite; set { _bodySite = value; OnPropertyChangedByClr(nameof(BodySite), value); } }

        private CodeableConcept? _code;
        [JsonPropertyName("code")]
        public CodeableConcept Code { get => _code ?? throw new InvalidOperationException("Code is required"); set { _code = value; OnPropertyChangedByClr(nameof(Code), value); } }

        private List<ContactDetail>? _contact;
        [JsonPropertyName("contact")]
        public List<ContactDetail>? Contact { get => _contact; set { _contact = value; OnPropertyChangedByClr(nameof(Contact), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private FhirDateTime? _date;
        [JsonPropertyName("date")]
        public FhirDateTime? Date { get => _date; set { _date = value; OnPropertyChangedByClr(nameof(Date), value); } }

        private List<FhirUri>? _definition;
        [JsonPropertyName("definition")]
        public List<FhirUri>? Definition { get => _definition; set { _definition = value; OnPropertyChangedByClr(nameof(Definition), value); } }

        private FhirMarkdown? _description;
        [JsonPropertyName("description")]
        public FhirMarkdown? Description { get => _description; set { _description = value; OnPropertyChangedByClr(nameof(Description), value); } }

        private FhirBoolean? _experimental;
        [JsonPropertyName("experimental")]
        public FhirBoolean? Experimental { get => _experimental; set { _experimental = value; OnPropertyChangedByClr(nameof(Experimental), value); } }

        private FhirBoolean? _hasBodySite;
        [JsonPropertyName("hasBodySite")]
        public FhirBoolean? HasBodySite { get => _hasBodySite; set { _hasBodySite = value; OnPropertyChangedByClr(nameof(HasBodySite), value); } }

        private FhirBoolean? _hasSeverity;
        [JsonPropertyName("hasSeverity")]
        public FhirBoolean? HasSeverity { get => _hasSeverity; set { _hasSeverity = value; OnPropertyChangedByClr(nameof(HasSeverity), value); } }

        private FhirBoolean? _hasStage;
        [JsonPropertyName("hasStage")]
        public FhirBoolean? HasStage { get => _hasStage; set { _hasStage = value; OnPropertyChangedByClr(nameof(HasStage), value); } }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private List<CodeableConcept>? _jurisdiction;
        [JsonPropertyName("jurisdiction")]
        public List<CodeableConcept>? Jurisdiction { get => _jurisdiction; set { _jurisdiction = value; OnPropertyChangedByClr(nameof(Jurisdiction), value); } }

        private List<ConditionDefinition_Medication>? _medication;
        [JsonPropertyName("medication")]
        public List<ConditionDefinition_Medication>? Medication { get => _medication; set { _medication = value; OnPropertyChangedByClr(nameof(Medication), value); } }

        /// <summary>
        /// Medications particularly relevant for this condition
        /// </summary>
        public partial class ConditionDefinition_Medication : BackboneElement<ConditionDefinition_Medication>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ConditionDefinition_Medication" : "conditionDefinition_Medication";
            private CodeableConcept? _category;
        [JsonPropertyName("category")]
        public CodeableConcept? Category { get => _category; set { _category = value; } }

            private CodeableConcept? _code;
        [JsonPropertyName("code")]
        public CodeableConcept? Code { get => _code; set { _code = value; } }

        }

        private FhirString? _name;
        [JsonPropertyName("name")]
        public FhirString? Name { get => _name; set { _name = value; OnPropertyChangedByClr(nameof(Name), value); } }

        private List<ConditionDefinition_Observation>? _observation;
        [JsonPropertyName("observation")]
        public List<ConditionDefinition_Observation>? Observation { get => _observation; set { _observation = value; OnPropertyChangedByClr(nameof(Observation), value); } }

        /// <summary>
        /// Observations particularly relevant to this condition
        /// </summary>
        public partial class ConditionDefinition_Observation : BackboneElement<ConditionDefinition_Observation>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ConditionDefinition_Observation" : "conditionDefinition_Observation";
            private CodeableConcept? _category;
        [JsonPropertyName("category")]
        public CodeableConcept? Category { get => _category; set { _category = value; } }

            private CodeableConcept? _code;
        [JsonPropertyName("code")]
        public CodeableConcept? Code { get => _code; set { _code = value; } }

        }

        private List<ConditionDefinition_Plan>? _plan;
        [JsonPropertyName("plan")]
        public List<ConditionDefinition_Plan>? Plan { get => _plan; set { _plan = value; OnPropertyChangedByClr(nameof(Plan), value); } }

        /// <summary>
        /// Plan that is appropriate
        /// </summary>
        public partial class ConditionDefinition_Plan : BackboneElement<ConditionDefinition_Plan>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ConditionDefinition_Plan" : "conditionDefinition_Plan";
            private ReferenceType? _reference;
        [JsonPropertyName("reference")]
        public ReferenceType Reference { get => _reference ?? throw new InvalidOperationException("Reference is required"); set { _reference = value; } }

            private CodeableConcept? _role;
        [JsonPropertyName("role")]
        public CodeableConcept? Role { get => _role; set { _role = value; } }

        }

        private List<ConditionDefinition_Precondition>? _precondition;
        [JsonPropertyName("precondition")]
        public List<ConditionDefinition_Precondition>? Precondition { get => _precondition; set { _precondition = value; OnPropertyChangedByClr(nameof(Precondition), value); } }

        /// <summary>
        /// Observation that suggets this condition
        /// </summary>
        public partial class ConditionDefinition_Precondition : BackboneElement<ConditionDefinition_Precondition>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ConditionDefinition_Precondition" : "conditionDefinition_Precondition";
            private CodeableConcept? _code;
        [JsonPropertyName("code")]
        public CodeableConcept Code { get => _code ?? throw new InvalidOperationException("Code is required"); set { _code = value; } }

            private FhirCode? _type;
        [JsonPropertyName("type")]
        public FhirCode Type { get => _type ?? throw new InvalidOperationException("Type is required"); set { _type = value; } }

            private CodeableConcept? _valueCodeableConcept;
        [JsonPropertyName("valueCodeableConcept")]
        public CodeableConcept? ValueCodeableConcept { get => _valueCodeableConcept; set { _valueCodeableConcept = value; if (value != null) {{ _valueQuantity = null; OnPropertyChanged("valueQuantity", null); }}; OnPropertyChanged("valueCodeableConcept", value); } }

            private Quantity? _valueQuantity;
        [JsonPropertyName("valueQuantity")]
        public Quantity? ValueQuantity { get => _valueQuantity; set { _valueQuantity = value; if (value != null) {{ _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); }}; OnPropertyChanged("valueQuantity", value); } }

        }

        private FhirString? _publisher;
        [JsonPropertyName("publisher")]
        public FhirString? Publisher { get => _publisher; set { _publisher = value; OnPropertyChangedByClr(nameof(Publisher), value); } }

        private List<ConditionDefinition_Questionnaire>? _questionnaire;
        [JsonPropertyName("questionnaire")]
        public List<ConditionDefinition_Questionnaire>? Questionnaire { get => _questionnaire; set { _questionnaire = value; OnPropertyChangedByClr(nameof(Questionnaire), value); } }

        /// <summary>
        /// Questionnaire for this condition
        /// </summary>
        public partial class ConditionDefinition_Questionnaire : BackboneElement<ConditionDefinition_Questionnaire>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ConditionDefinition_Questionnaire" : "conditionDefinition_Questionnaire";
            private FhirCode? _purpose;
        [JsonPropertyName("purpose")]
        public FhirCode Purpose { get => _purpose ?? throw new InvalidOperationException("Purpose is required"); set { _purpose = value; } }

            private ReferenceType? _reference;
        [JsonPropertyName("reference")]
        public ReferenceType Reference { get => _reference ?? throw new InvalidOperationException("Reference is required"); set { _reference = value; } }

        }

        private CodeableConcept? _severity;
        [JsonPropertyName("severity")]
        public CodeableConcept? Severity { get => _severity; set { _severity = value; OnPropertyChangedByClr(nameof(Severity), value); } }

        private CodeableConcept? _stage;
        [JsonPropertyName("stage")]
        public CodeableConcept? Stage { get => _stage; set { _stage = value; OnPropertyChangedByClr(nameof(Stage), value); } }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode Status { get => _status ?? throw new InvalidOperationException("Status is required"); set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private FhirString? _subtitle;
        [JsonPropertyName("subtitle")]
        public FhirString? Subtitle { get => _subtitle; set { _subtitle = value; OnPropertyChangedByClr(nameof(Subtitle), value); } }

        private List<ReferenceType>? _team;
        [JsonPropertyName("team")]
        public List<ReferenceType>? Team { get => _team; set { _team = value; OnPropertyChangedByClr(nameof(Team), value); } }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

        private FhirString? _title;
        [JsonPropertyName("title")]
        public FhirString? Title { get => _title; set { _title = value; OnPropertyChangedByClr(nameof(Title), value); } }

        private FhirUri? _url;
        [JsonPropertyName("url")]
        public FhirUri? Url { get => _url; set { _url = value; OnPropertyChangedByClr(nameof(Url), value); } }

        private List<UsageContext>? _useContext;
        [JsonPropertyName("useContext")]
        public List<UsageContext>? UseContext { get => _useContext; set { _useContext = value; OnPropertyChangedByClr(nameof(UseContext), value); } }

        private FhirString? _version;
        [JsonPropertyName("version")]
        public FhirString? Version { get => _version; set { _version = value; OnPropertyChangedByClr(nameof(Version), value); } }

        private FhirString? _versionAlgorithmString;
        [JsonPropertyName("versionAlgorithmString")]
        public FhirString? VersionAlgorithmString { get => _versionAlgorithmString; set { _versionAlgorithmString = value; if (value != null) {{ _versionAlgorithmCoding = null; OnPropertyChangedByClr(nameof(VersionAlgorithmCoding), null); }}; OnPropertyChangedByClr(nameof(VersionAlgorithmString), value); } }

        private Coding? _versionAlgorithmCoding;
        [JsonPropertyName("versionAlgorithmCoding")]
        public Coding? VersionAlgorithmCoding { get => _versionAlgorithmCoding; set { _versionAlgorithmCoding = value; if (value != null) {{ _versionAlgorithmString = null; OnPropertyChangedByClr(nameof(VersionAlgorithmString), null); }}; OnPropertyChangedByClr(nameof(VersionAlgorithmCoding), value); } }

    }
}
