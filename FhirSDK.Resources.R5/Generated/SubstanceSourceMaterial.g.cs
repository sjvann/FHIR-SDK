// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// Source material shall capture information on the taxonomic and anatomical origins as well as the fraction of a material that can result in or can be modified to form a substance. This set of data elements shall be used to define polymer substances isolated from biological matrices. Taxonomic and anatomical origins shall be described using a controlled vocabulary as required. This information is captured for naturally derived polymers ( . starch) and structurally diverse substances. For Organisms belonging to the Kingdom Plantae the Substance level defines the fresh material of a single species or infraspecies, the Herbal Drug and the Herbal preparation. For Herbal preparations, the fraction information will be captured at the Substance information level and additional information for herbal extracts will be captured at the Specified Substance Group 1 information level. See for further explanation the Substance Class: Structurally Diverse and the herbal annex
    /// </summary>
    public partial class SubstanceSourceMaterial : ResourceBase
    {
        public override string ResourceType => "SubstanceSourceMaterial";

        public SubstanceSourceMaterial() { }
        public SubstanceSourceMaterial(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public SubstanceSourceMaterial(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private List<CodeableConcept>? _countryOfOrigin;
        [JsonPropertyName("countryOfOrigin")]
        public List<CodeableConcept>? CountryOfOrigin { get => _countryOfOrigin; set { _countryOfOrigin = value; OnPropertyChangedByClr(nameof(CountryOfOrigin), value); } }

        private CodeableConcept? _developmentStage;
        [JsonPropertyName("developmentStage")]
        public CodeableConcept? DevelopmentStage { get => _developmentStage; set { _developmentStage = value; OnPropertyChangedByClr(nameof(DevelopmentStage), value); } }

        private List<SubstanceSourceMaterial_FractionDescription>? _fractionDescription;
        [JsonPropertyName("fractionDescription")]
        public List<SubstanceSourceMaterial_FractionDescription>? FractionDescription { get => _fractionDescription; set { _fractionDescription = value; OnPropertyChangedByClr(nameof(FractionDescription), value); } }

        /// <summary>
        /// Many complex materials are fractions of parts of plants, animals, or minerals. Fraction elements are often necessary to define both Substances and Specified Group 1 Substances. For substances derived from Plants, fraction information will be captured at the Substance information level ( . Oils, Juices and Exudates). Additional information for Extracts, such as extraction solvent composition, will be captured at the Specified Substance Group 1 information level. For plasma-derived products fraction information will be captured at the Substance and the Specified Substance Group 1 levels
        /// </summary>
        public partial class SubstanceSourceMaterial_FractionDescription : BackboneElement<SubstanceSourceMaterial_FractionDescription>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "SubstanceSourceMaterial_FractionDescription" : "substanceSourceMaterial_FractionDescription";
            private FhirString? _fraction;
        [JsonPropertyName("fraction")]
        public FhirString? Fraction { get => _fraction; set { _fraction = value; } }

            private CodeableConcept? _materialType;
        [JsonPropertyName("materialType")]
        public CodeableConcept? MaterialType { get => _materialType; set { _materialType = value; } }

        }

        private List<FhirString>? _geographicalLocation;
        [JsonPropertyName("geographicalLocation")]
        public List<FhirString>? GeographicalLocation { get => _geographicalLocation; set { _geographicalLocation = value; OnPropertyChangedByClr(nameof(GeographicalLocation), value); } }

        private SubstanceSourceMaterial_Organism? _organism;
        [JsonPropertyName("organism")]
        public SubstanceSourceMaterial_Organism? Organism { get => _organism; set { _organism = value; OnPropertyChangedByClr(nameof(Organism), value); } }

        /// <summary>
        /// This subclause describes the organism which the substance is derived from. For vaccines, the parent organism shall be specified based on these subclause elements. As an example, full taxonomy will be described for the Substance Name: ., Leaf
        /// </summary>
        public partial class SubstanceSourceMaterial_Organism : BackboneElement<SubstanceSourceMaterial_Organism>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "SubstanceSourceMaterial_Organism" : "substanceSourceMaterial_Organism";
            private List<SubstanceSourceMaterial_Organism_Author>? _author;
        [JsonPropertyName("author")]
        public List<SubstanceSourceMaterial_Organism_Author>? Author { get => _author; set { _author = value; } }

            /// <summary>
            /// 4.9.13.6.1 Author type (Conditional)
            /// </summary>
            public partial class SubstanceSourceMaterial_Organism_Author : BackboneElement<SubstanceSourceMaterial_Organism_Author>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "SubstanceSourceMaterial_Organism_Author" : "substanceSourceMaterial_Organism_Author";
                private FhirString? _authorDescription;
        [JsonPropertyName("authorDescription")]
        public FhirString? AuthorDescription { get => _authorDescription; set { _authorDescription = value; } }

                private CodeableConcept? _authorType;
        [JsonPropertyName("authorType")]
        public CodeableConcept? AuthorType { get => _authorType; set { _authorType = value; } }

            }

            private CodeableConcept? _family;
        [JsonPropertyName("family")]
        public CodeableConcept? Family { get => _family; set { _family = value; } }

            private CodeableConcept? _genus;
        [JsonPropertyName("genus")]
        public CodeableConcept? Genus { get => _genus; set { _genus = value; } }

            private SubstanceSourceMaterial_Organism_Hybrid? _hybrid;
        [JsonPropertyName("hybrid")]
        public SubstanceSourceMaterial_Organism_Hybrid? Hybrid { get => _hybrid; set { _hybrid = value; } }

            /// <summary>
            /// 4.9.13.8.1 Hybrid species maternal organism ID (Optional)
            /// </summary>
            public partial class SubstanceSourceMaterial_Organism_Hybrid : BackboneElement<SubstanceSourceMaterial_Organism_Hybrid>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "SubstanceSourceMaterial_Organism_Hybrid" : "substanceSourceMaterial_Organism_Hybrid";
                private CodeableConcept? _hybridType;
        [JsonPropertyName("hybridType")]
        public CodeableConcept? HybridType { get => _hybridType; set { _hybridType = value; } }

                private FhirString? _maternalOrganismId;
        [JsonPropertyName("maternalOrganismId")]
        public FhirString? MaternalOrganismId { get => _maternalOrganismId; set { _maternalOrganismId = value; } }

                private FhirString? _maternalOrganismName;
        [JsonPropertyName("maternalOrganismName")]
        public FhirString? MaternalOrganismName { get => _maternalOrganismName; set { _maternalOrganismName = value; } }

                private FhirString? _paternalOrganismId;
        [JsonPropertyName("paternalOrganismId")]
        public FhirString? PaternalOrganismId { get => _paternalOrganismId; set { _paternalOrganismId = value; } }

                private FhirString? _paternalOrganismName;
        [JsonPropertyName("paternalOrganismName")]
        public FhirString? PaternalOrganismName { get => _paternalOrganismName; set { _paternalOrganismName = value; } }

            }

            private FhirString? _intraspecificDescription;
        [JsonPropertyName("intraspecificDescription")]
        public FhirString? IntraspecificDescription { get => _intraspecificDescription; set { _intraspecificDescription = value; } }

            private CodeableConcept? _intraspecificType;
        [JsonPropertyName("intraspecificType")]
        public CodeableConcept? IntraspecificType { get => _intraspecificType; set { _intraspecificType = value; } }

            private SubstanceSourceMaterial_Organism_OrganismGeneral? _organismGeneral;
        [JsonPropertyName("organismGeneral")]
        public SubstanceSourceMaterial_Organism_OrganismGeneral? OrganismGeneral { get => _organismGeneral; set { _organismGeneral = value; } }

            /// <summary>
            /// 4.9.13.7.1 Kingdom (Conditional)
            /// </summary>
            public partial class SubstanceSourceMaterial_Organism_OrganismGeneral : BackboneElement<SubstanceSourceMaterial_Organism_OrganismGeneral>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "SubstanceSourceMaterial_Organism_OrganismGeneral" : "substanceSourceMaterial_Organism_OrganismGeneral";
                private CodeableConcept? _class;
        [JsonPropertyName("class")]
        public CodeableConcept? Class { get => _class; set { _class = value; } }

                private CodeableConcept? _kingdom;
        [JsonPropertyName("kingdom")]
        public CodeableConcept? Kingdom { get => _kingdom; set { _kingdom = value; } }

                private CodeableConcept? _order;
        [JsonPropertyName("order")]
        public CodeableConcept? Order { get => _order; set { _order = value; } }

                private CodeableConcept? _phylum;
        [JsonPropertyName("phylum")]
        public CodeableConcept? Phylum { get => _phylum; set { _phylum = value; } }

            }

            private CodeableConcept? _species;
        [JsonPropertyName("species")]
        public CodeableConcept? Species { get => _species; set { _species = value; } }

        }

        private Identifier? _organismId;
        [JsonPropertyName("organismId")]
        public Identifier? OrganismId { get => _organismId; set { _organismId = value; OnPropertyChangedByClr(nameof(OrganismId), value); } }

        private FhirString? _organismName;
        [JsonPropertyName("organismName")]
        public FhirString? OrganismName { get => _organismName; set { _organismName = value; OnPropertyChangedByClr(nameof(OrganismName), value); } }

        private List<Identifier>? _parentSubstanceId;
        [JsonPropertyName("parentSubstanceId")]
        public List<Identifier>? ParentSubstanceId { get => _parentSubstanceId; set { _parentSubstanceId = value; OnPropertyChangedByClr(nameof(ParentSubstanceId), value); } }

        private List<FhirString>? _parentSubstanceName;
        [JsonPropertyName("parentSubstanceName")]
        public List<FhirString>? ParentSubstanceName { get => _parentSubstanceName; set { _parentSubstanceName = value; OnPropertyChangedByClr(nameof(ParentSubstanceName), value); } }

        private List<SubstanceSourceMaterial_PartDescription>? _partDescription;
        [JsonPropertyName("partDescription")]
        public List<SubstanceSourceMaterial_PartDescription>? PartDescription { get => _partDescription; set { _partDescription = value; OnPropertyChangedByClr(nameof(PartDescription), value); } }

        /// <summary>
        /// To do
        /// </summary>
        public partial class SubstanceSourceMaterial_PartDescription : BackboneElement<SubstanceSourceMaterial_PartDescription>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "SubstanceSourceMaterial_PartDescription" : "substanceSourceMaterial_PartDescription";
            private CodeableConcept? _part;
        [JsonPropertyName("part")]
        public CodeableConcept? Part { get => _part; set { _part = value; } }

            private CodeableConcept? _partLocation;
        [JsonPropertyName("partLocation")]
        public CodeableConcept? PartLocation { get => _partLocation; set { _partLocation = value; } }

        }

        private CodeableConcept? _sourceMaterialClass;
        [JsonPropertyName("sourceMaterialClass")]
        public CodeableConcept? SourceMaterialClass { get => _sourceMaterialClass; set { _sourceMaterialClass = value; OnPropertyChangedByClr(nameof(SourceMaterialClass), value); } }

        private CodeableConcept? _sourceMaterialState;
        [JsonPropertyName("sourceMaterialState")]
        public CodeableConcept? SourceMaterialState { get => _sourceMaterialState; set { _sourceMaterialState = value; OnPropertyChangedByClr(nameof(SourceMaterialState), value); } }

        private CodeableConcept? _sourceMaterialType;
        [JsonPropertyName("sourceMaterialType")]
        public CodeableConcept? SourceMaterialType { get => _sourceMaterialType; set { _sourceMaterialType = value; OnPropertyChangedByClr(nameof(SourceMaterialType), value); } }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

    }
}
