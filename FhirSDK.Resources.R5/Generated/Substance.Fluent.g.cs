// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class SubstanceFluentExtensions
    {
        public static Substance AddCategory(this Substance r, CodeableConcept item) { r.Category ??= new List<CodeableConcept>(); r.Category!.Add(item); return r; }
        public static Substance WithCode(this Substance r, CodeableReference value) { r.Code = value; return r; }
        public static Substance AddContained(this Substance r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static Substance WithDescription(this Substance r, FhirMarkdown value) { r.Description = value; return r; }
        public static Substance WithExpiry(this Substance r, FhirDateTime value) { r.Expiry = value; return r; }
        public static Substance AddIdentifier(this Substance r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static Substance AddIngredient(this Substance r, BackboneElement item) { r.Ingredient ??= new List<BackboneElement>(); r.Ingredient!.Add(item); return r; }
        public static Substance WithInstance(this Substance r, FhirBoolean value) { r.Instance = value; return r; }
        public static Substance WithQuantity(this Substance r, Quantity value) { r.Quantity = value; return r; }
        public static Substance WithStatus(this Substance r, FhirCode value) { r.Status = value; return r; }
        public static Substance WithText(this Substance r, Narrative value) { r.Text = value; return r; }
    }
}
