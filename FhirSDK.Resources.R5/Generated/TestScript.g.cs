// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// Describes a set of tests
    /// </summary>
    public partial class TestScript : ResourceBase
    {
        public override string ResourceType => "TestScript";

        public TestScript() { }
        public TestScript(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public TestScript(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private List<ContactDetail>? _contact;
        [JsonPropertyName("contact")]
        public List<ContactDetail>? Contact { get => _contact; set { _contact = value; OnPropertyChangedByClr(nameof(Contact), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private FhirMarkdown? _copyright;
        [JsonPropertyName("copyright")]
        public FhirMarkdown? Copyright { get => _copyright; set { _copyright = value; OnPropertyChangedByClr(nameof(Copyright), value); } }

        private FhirString? _copyrightLabel;
        [JsonPropertyName("copyrightLabel")]
        public FhirString? CopyrightLabel { get => _copyrightLabel; set { _copyrightLabel = value; OnPropertyChangedByClr(nameof(CopyrightLabel), value); } }

        private FhirDateTime? _date;
        [JsonPropertyName("date")]
        public FhirDateTime? Date { get => _date; set { _date = value; OnPropertyChangedByClr(nameof(Date), value); } }

        private FhirMarkdown? _description;
        [JsonPropertyName("description")]
        public FhirMarkdown? Description { get => _description; set { _description = value; OnPropertyChangedByClr(nameof(Description), value); } }

        private List<TestScript_Destination>? _destination;
        [JsonPropertyName("destination")]
        public List<TestScript_Destination>? Destination { get => _destination; set { _destination = value; OnPropertyChangedByClr(nameof(Destination), value); } }

        /// <summary>
        /// An abstract server representing a destination or receiver in a message exchange
        /// </summary>
        public partial class TestScript_Destination : BackboneElement<TestScript_Destination>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "TestScript_Destination" : "testScript_Destination";
            private FhirInteger? _index;
        [JsonPropertyName("index")]
        public FhirInteger Index { get => _index ?? throw new InvalidOperationException("Index is required"); set { _index = value; } }

            private Coding? _profile;
        [JsonPropertyName("profile")]
        public Coding Profile { get => _profile ?? throw new InvalidOperationException("Profile is required"); set { _profile = value; } }

            private FhirUrl? _url;
        [JsonPropertyName("url")]
        public FhirUrl? Url { get => _url; set { _url = value; } }

        }

        private FhirBoolean? _experimental;
        [JsonPropertyName("experimental")]
        public FhirBoolean? Experimental { get => _experimental; set { _experimental = value; OnPropertyChangedByClr(nameof(Experimental), value); } }

        private List<TestScript_Fixture>? _fixture;
        [JsonPropertyName("fixture")]
        public List<TestScript_Fixture>? Fixture { get => _fixture; set { _fixture = value; OnPropertyChangedByClr(nameof(Fixture), value); } }

        /// <summary>
        /// Fixture in the test script - by reference (uri)
        /// </summary>
        public partial class TestScript_Fixture : BackboneElement<TestScript_Fixture>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "TestScript_Fixture" : "testScript_Fixture";
            private FhirBoolean? _autocreate;
        [JsonPropertyName("autocreate")]
        public FhirBoolean Autocreate { get => _autocreate ?? throw new InvalidOperationException("Autocreate is required"); set { _autocreate = value; } }

            private FhirBoolean? _autodelete;
        [JsonPropertyName("autodelete")]
        public FhirBoolean Autodelete { get => _autodelete ?? throw new InvalidOperationException("Autodelete is required"); set { _autodelete = value; } }

            private ReferenceType? _resource;
        [JsonPropertyName("resource")]
        public ReferenceType? Resource { get => _resource; set { _resource = value; } }

        }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private List<CodeableConcept>? _jurisdiction;
        [JsonPropertyName("jurisdiction")]
        public List<CodeableConcept>? Jurisdiction { get => _jurisdiction; set { _jurisdiction = value; OnPropertyChangedByClr(nameof(Jurisdiction), value); } }

        private TestScript_Metadata? _metadata;
        [JsonPropertyName("metadata")]
        public TestScript_Metadata? Metadata { get => _metadata; set { _metadata = value; OnPropertyChangedByClr(nameof(Metadata), value); } }

        /// <summary>
        /// Required capability that is assumed to function correctly on the FHIR server being tested
        /// </summary>
        public partial class TestScript_Metadata : BackboneElement<TestScript_Metadata>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "TestScript_Metadata" : "testScript_Metadata";
            private List<TestScript_Metadata_Capability> _capability = new();
        [JsonPropertyName("capability")]
        public List<TestScript_Metadata_Capability> Capability { get => _capability; set { _capability = value; } }

            /// <summary>
            /// Capabilities  that are assumed to function correctly on the FHIR server being tested
            /// </summary>
            public partial class TestScript_Metadata_Capability : BackboneElement<TestScript_Metadata_Capability>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "TestScript_Metadata_Capability" : "testScript_Metadata_Capability";
                private FhirCanonical? _capabilities;
        [JsonPropertyName("capabilities")]
        public FhirCanonical Capabilities { get => _capabilities ?? throw new InvalidOperationException("Capabilities is required"); set { _capabilities = value; } }

                private FhirString? _description;
        [JsonPropertyName("description")]
        public FhirString? Description { get => _description; set { _description = value; } }

                private FhirInteger? _destination;
        [JsonPropertyName("destination")]
        public FhirInteger? Destination { get => _destination; set { _destination = value; } }

                private List<FhirUri>? _link;
        [JsonPropertyName("link")]
        public List<FhirUri>? Link { get => _link; set { _link = value; } }

                private List<FhirInteger>? _origin;
        [JsonPropertyName("origin")]
        public List<FhirInteger>? Origin { get => _origin; set { _origin = value; } }

                private FhirBoolean? _required;
        [JsonPropertyName("required")]
        public FhirBoolean Required { get => _required ?? throw new InvalidOperationException("Required is required"); set { _required = value; } }

                private FhirBoolean? _validated;
        [JsonPropertyName("validated")]
        public FhirBoolean Validated { get => _validated ?? throw new InvalidOperationException("Validated is required"); set { _validated = value; } }

            }

            private List<TestScript_Metadata_Link>? _link;
        [JsonPropertyName("link")]
        public List<TestScript_Metadata_Link>? Link { get => _link; set { _link = value; } }

            /// <summary>
            /// Links to the FHIR specification
            /// </summary>
            public partial class TestScript_Metadata_Link : BackboneElement<TestScript_Metadata_Link>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "TestScript_Metadata_Link" : "testScript_Metadata_Link";
                private FhirString? _description;
        [JsonPropertyName("description")]
        public FhirString? Description { get => _description; set { _description = value; } }

                private FhirUri? _url;
        [JsonPropertyName("url")]
        public FhirUri Url { get => _url ?? throw new InvalidOperationException("Url is required"); set { _url = value; } }

            }

        }

        private FhirString? _name;
        [JsonPropertyName("name")]
        public FhirString Name { get => _name ?? throw new InvalidOperationException("Name is required"); set { _name = value; OnPropertyChangedByClr(nameof(Name), value); } }

        private List<TestScript_Origin>? _origin;
        [JsonPropertyName("origin")]
        public List<TestScript_Origin>? Origin { get => _origin; set { _origin = value; OnPropertyChangedByClr(nameof(Origin), value); } }

        /// <summary>
        /// An abstract server representing a client or sender in a message exchange
        /// </summary>
        public partial class TestScript_Origin : BackboneElement<TestScript_Origin>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "TestScript_Origin" : "testScript_Origin";
            private FhirInteger? _index;
        [JsonPropertyName("index")]
        public FhirInteger Index { get => _index ?? throw new InvalidOperationException("Index is required"); set { _index = value; } }

            private Coding? _profile;
        [JsonPropertyName("profile")]
        public Coding Profile { get => _profile ?? throw new InvalidOperationException("Profile is required"); set { _profile = value; } }

            private FhirUrl? _url;
        [JsonPropertyName("url")]
        public FhirUrl? Url { get => _url; set { _url = value; } }

        }

        private List<FhirCanonical>? _profile;
        [JsonPropertyName("profile")]
        public List<FhirCanonical>? Profile { get => _profile; set { _profile = value; OnPropertyChangedByClr(nameof(Profile), value); } }

        private FhirString? _publisher;
        [JsonPropertyName("publisher")]
        public FhirString? Publisher { get => _publisher; set { _publisher = value; OnPropertyChangedByClr(nameof(Publisher), value); } }

        private FhirMarkdown? _purpose;
        [JsonPropertyName("purpose")]
        public FhirMarkdown? Purpose { get => _purpose; set { _purpose = value; OnPropertyChangedByClr(nameof(Purpose), value); } }

        private List<TestScript_Scope>? _scope;
        [JsonPropertyName("scope")]
        public List<TestScript_Scope>? Scope { get => _scope; set { _scope = value; OnPropertyChangedByClr(nameof(Scope), value); } }

        /// <summary>
        /// Indication of the artifact(s) that are tested by this test case
        /// </summary>
        public partial class TestScript_Scope : BackboneElement<TestScript_Scope>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "TestScript_Scope" : "testScript_Scope";
            private FhirCanonical? _artifact;
        [JsonPropertyName("artifact")]
        public FhirCanonical Artifact { get => _artifact ?? throw new InvalidOperationException("Artifact is required"); set { _artifact = value; } }

            private CodeableConcept? _conformance;
        [JsonPropertyName("conformance")]
        public CodeableConcept? Conformance { get => _conformance; set { _conformance = value; } }

            private CodeableConcept? _phase;
        [JsonPropertyName("phase")]
        public CodeableConcept? Phase { get => _phase; set { _phase = value; } }

        }

        private TestScript_Setup? _setup;
        [JsonPropertyName("setup")]
        public TestScript_Setup? Setup { get => _setup; set { _setup = value; OnPropertyChangedByClr(nameof(Setup), value); } }

        /// <summary>
        /// A series of required setup operations before tests are executed
        /// </summary>
        public partial class TestScript_Setup : BackboneElement<TestScript_Setup>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "TestScript_Setup" : "testScript_Setup";
            private List<TestScript_Setup_Action> _action = new();
        [JsonPropertyName("action")]
        public List<TestScript_Setup_Action> Action { get => _action; set { _action = value; } }

            /// <summary>
            /// A setup operation or assert to perform
            /// </summary>
            public partial class TestScript_Setup_Action : BackboneElement<TestScript_Setup_Action>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "TestScript_Setup_Action" : "testScript_Setup_Action";
                private TestScript_Setup_Action_Assert? _assert;
        [JsonPropertyName("assert")]
        public TestScript_Setup_Action_Assert? Assert { get => _assert; set { _assert = value; } }

                /// <summary>
                /// The assertion to perform
                /// </summary>
                public partial class TestScript_Setup_Action_Assert : BackboneElement<TestScript_Setup_Action_Assert>
                {
                    public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "TestScript_Setup_Action_Assert" : "testScript_Setup_Action_Assert";
                    private FhirString? _compareToSourceExpression;
        [JsonPropertyName("compareToSourceExpression")]
        public FhirString? CompareToSourceExpression { get => _compareToSourceExpression; set { _compareToSourceExpression = value; } }

                    private FhirString? _compareToSourceId;
        [JsonPropertyName("compareToSourceId")]
        public FhirString? CompareToSourceId { get => _compareToSourceId; set { _compareToSourceId = value; } }

                    private FhirString? _compareToSourcePath;
        [JsonPropertyName("compareToSourcePath")]
        public FhirString? CompareToSourcePath { get => _compareToSourcePath; set { _compareToSourcePath = value; } }

                    private FhirCode? _contentType;
        [JsonPropertyName("contentType")]
        public FhirCode? ContentType { get => _contentType; set { _contentType = value; } }

                    private FhirCode? _defaultManualCompletion;
        [JsonPropertyName("defaultManualCompletion")]
        public FhirCode? DefaultManualCompletion { get => _defaultManualCompletion; set { _defaultManualCompletion = value; } }

                    private FhirString? _description;
        [JsonPropertyName("description")]
        public FhirString? Description { get => _description; set { _description = value; } }

                    private FhirCode? _direction;
        [JsonPropertyName("direction")]
        public FhirCode? Direction { get => _direction; set { _direction = value; } }

                    private FhirString? _expression;
        [JsonPropertyName("expression")]
        public FhirString? Expression { get => _expression; set { _expression = value; } }

                    private FhirString? _headerField;
        [JsonPropertyName("headerField")]
        public FhirString? HeaderField { get => _headerField; set { _headerField = value; } }

                    private FhirString? _label;
        [JsonPropertyName("label")]
        public FhirString? Label { get => _label; set { _label = value; } }

                    private FhirString? _minimumId;
        [JsonPropertyName("minimumId")]
        public FhirString? MinimumId { get => _minimumId; set { _minimumId = value; } }

                    private FhirBoolean? _navigationLinks;
        [JsonPropertyName("navigationLinks")]
        public FhirBoolean? NavigationLinks { get => _navigationLinks; set { _navigationLinks = value; } }

                    private FhirCode? _operator;
        [JsonPropertyName("operator")]
        public FhirCode? Operator { get => _operator; set { _operator = value; } }

                    private FhirString? _path;
        [JsonPropertyName("path")]
        public FhirString? Path { get => _path; set { _path = value; } }

                    private FhirCode? _requestMethod;
        [JsonPropertyName("requestMethod")]
        public FhirCode? RequestMethod { get => _requestMethod; set { _requestMethod = value; } }

                    private FhirString? _requestURL;
        [JsonPropertyName("requestURL")]
        public FhirString? RequestURL { get => _requestURL; set { _requestURL = value; } }

                    private List<TestScript_Setup_Action_Assert_Requirement>? _requirement;
        [JsonPropertyName("requirement")]
        public List<TestScript_Setup_Action_Assert_Requirement>? Requirement { get => _requirement; set { _requirement = value; } }

                    /// <summary>
                    /// Links or references to the testing requirements
                    /// </summary>
                    public partial class TestScript_Setup_Action_Assert_Requirement : BackboneElement<TestScript_Setup_Action_Assert_Requirement>
                    {
                        public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "TestScript_Setup_Action_Assert_Requirement" : "testScript_Setup_Action_Assert_Requirement";
                        private FhirUri? _linkuri;
        [JsonPropertyName("linkuri")]
        public FhirUri? Linkuri { get => _linkuri; set { _linkuri = value; if (value != null) {{ _linkcanonical = null; OnPropertyChanged("linkcanonical", null); }}; OnPropertyChanged("linkuri", value); } }

                        private FhirCanonical? _linkcanonical;
        [JsonPropertyName("linkcanonical")]
        public FhirCanonical? Linkcanonical { get => _linkcanonical; set { _linkcanonical = value; if (value != null) {{ _linkuri = null; OnPropertyChanged("linkuri", null); }}; OnPropertyChanged("linkcanonical", value); } }

                    }

                    private FhirUri? _resource;
        [JsonPropertyName("resource")]
        public FhirUri? Resource { get => _resource; set { _resource = value; } }

                    private FhirCode? _response;
        [JsonPropertyName("response")]
        public FhirCode? Response { get => _response; set { _response = value; } }

                    private FhirString? _responseCode;
        [JsonPropertyName("responseCode")]
        public FhirString? ResponseCode { get => _responseCode; set { _responseCode = value; } }

                    private FhirId? _sourceId;
        [JsonPropertyName("sourceId")]
        public FhirId? SourceId { get => _sourceId; set { _sourceId = value; } }

                    private FhirBoolean? _stopTestOnFail;
        [JsonPropertyName("stopTestOnFail")]
        public FhirBoolean StopTestOnFail { get => _stopTestOnFail ?? throw new InvalidOperationException("StopTestOnFail is required"); set { _stopTestOnFail = value; } }

                    private FhirId? _validateProfileId;
        [JsonPropertyName("validateProfileId")]
        public FhirId? ValidateProfileId { get => _validateProfileId; set { _validateProfileId = value; } }

                    private FhirString? _value;
        [JsonPropertyName("value")]
        public FhirString? Value { get => _value; set { _value = value; } }

                    private FhirBoolean? _warningOnly;
        [JsonPropertyName("warningOnly")]
        public FhirBoolean WarningOnly { get => _warningOnly ?? throw new InvalidOperationException("WarningOnly is required"); set { _warningOnly = value; } }

                }

                private TestScript_Setup_Action_Operation? _operation;
        [JsonPropertyName("operation")]
        public TestScript_Setup_Action_Operation? Operation { get => _operation; set { _operation = value; } }

                /// <summary>
                /// The setup operation to perform
                /// </summary>
                public partial class TestScript_Setup_Action_Operation : BackboneElement<TestScript_Setup_Action_Operation>
                {
                    public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "TestScript_Setup_Action_Operation" : "testScript_Setup_Action_Operation";
                    private FhirCode? _accept;
        [JsonPropertyName("accept")]
        public FhirCode? Accept { get => _accept; set { _accept = value; } }

                    private FhirCode? _contentType;
        [JsonPropertyName("contentType")]
        public FhirCode? ContentType { get => _contentType; set { _contentType = value; } }

                    private FhirString? _description;
        [JsonPropertyName("description")]
        public FhirString? Description { get => _description; set { _description = value; } }

                    private FhirInteger? _destination;
        [JsonPropertyName("destination")]
        public FhirInteger? Destination { get => _destination; set { _destination = value; } }

                    private FhirBoolean? _encodeRequestUrl;
        [JsonPropertyName("encodeRequestUrl")]
        public FhirBoolean EncodeRequestUrl { get => _encodeRequestUrl ?? throw new InvalidOperationException("EncodeRequestUrl is required"); set { _encodeRequestUrl = value; } }

                    private FhirString? _label;
        [JsonPropertyName("label")]
        public FhirString? Label { get => _label; set { _label = value; } }

                    private FhirCode? _method;
        [JsonPropertyName("method")]
        public FhirCode? Method { get => _method; set { _method = value; } }

                    private FhirInteger? _origin;
        [JsonPropertyName("origin")]
        public FhirInteger? Origin { get => _origin; set { _origin = value; } }

                    private FhirString? _params;
        [JsonPropertyName("params")]
        public FhirString? Params { get => _params; set { _params = value; } }

                    private List<TestScript_Setup_Action_Operation_RequestHeader>? _requestHeader;
        [JsonPropertyName("requestHeader")]
        public List<TestScript_Setup_Action_Operation_RequestHeader>? RequestHeader { get => _requestHeader; set { _requestHeader = value; } }

                    /// <summary>
                    /// Each operation can have one or more header elements
                    /// </summary>
                    public partial class TestScript_Setup_Action_Operation_RequestHeader : BackboneElement<TestScript_Setup_Action_Operation_RequestHeader>
                    {
                        public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "TestScript_Setup_Action_Operation_RequestHeader" : "testScript_Setup_Action_Operation_RequestHeader";
                        private FhirString? _field;
        [JsonPropertyName("field")]
        public FhirString Field { get => _field ?? throw new InvalidOperationException("Field is required"); set { _field = value; } }

                        private FhirString? _value;
        [JsonPropertyName("value")]
        public FhirString Value { get => _value ?? throw new InvalidOperationException("Value is required"); set { _value = value; } }

                    }

                    private FhirId? _requestId;
        [JsonPropertyName("requestId")]
        public FhirId? RequestId { get => _requestId; set { _requestId = value; } }

                    private FhirUri? _resource;
        [JsonPropertyName("resource")]
        public FhirUri? Resource { get => _resource; set { _resource = value; } }

                    private FhirId? _responseId;
        [JsonPropertyName("responseId")]
        public FhirId? ResponseId { get => _responseId; set { _responseId = value; } }

                    private FhirId? _sourceId;
        [JsonPropertyName("sourceId")]
        public FhirId? SourceId { get => _sourceId; set { _sourceId = value; } }

                    private FhirId? _targetId;
        [JsonPropertyName("targetId")]
        public FhirId? TargetId { get => _targetId; set { _targetId = value; } }

                    private Coding? _type;
        [JsonPropertyName("type")]
        public Coding? Type { get => _type; set { _type = value; } }

                    private FhirString? _url;
        [JsonPropertyName("url")]
        public FhirString? Url { get => _url; set { _url = value; } }

                }

            }

        }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode Status { get => _status ?? throw new InvalidOperationException("Status is required"); set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private TestScript_Teardown? _teardown;
        [JsonPropertyName("teardown")]
        public TestScript_Teardown? Teardown { get => _teardown; set { _teardown = value; OnPropertyChangedByClr(nameof(Teardown), value); } }

        /// <summary>
        /// A series of required clean up steps
        /// </summary>
        public partial class TestScript_Teardown : BackboneElement<TestScript_Teardown>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "TestScript_Teardown" : "testScript_Teardown";
            private List<TestScript_Teardown_Action> _action = new();
        [JsonPropertyName("action")]
        public List<TestScript_Teardown_Action> Action { get => _action; set { _action = value; } }

            /// <summary>
            /// One or more teardown operations to perform
            /// </summary>
            public partial class TestScript_Teardown_Action : BackboneElement<TestScript_Teardown_Action>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "TestScript_Teardown_Action" : "testScript_Teardown_Action";
                private FhirString? _operation;
        [JsonPropertyName("operation")]
        public FhirString Operation { get => _operation ?? throw new InvalidOperationException("Operation is required"); set { _operation = value; } }

            }

        }

        private List<TestScript_Test>? _test;
        [JsonPropertyName("test")]
        public List<TestScript_Test>? Test { get => _test; set { _test = value; OnPropertyChangedByClr(nameof(Test), value); } }

        /// <summary>
        /// A test in this script
        /// </summary>
        public partial class TestScript_Test : BackboneElement<TestScript_Test>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "TestScript_Test" : "testScript_Test";
            private List<TestScript_Test_Action> _action = new();
        [JsonPropertyName("action")]
        public List<TestScript_Test_Action> Action { get => _action; set { _action = value; } }

            /// <summary>
            /// A test operation or assert to perform
            /// </summary>
            public partial class TestScript_Test_Action : BackboneElement<TestScript_Test_Action>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "TestScript_Test_Action" : "testScript_Test_Action";
                private FhirString? _assert;
        [JsonPropertyName("assert")]
        public FhirString? Assert { get => _assert; set { _assert = value; } }

                private FhirString? _operation;
        [JsonPropertyName("operation")]
        public FhirString? Operation { get => _operation; set { _operation = value; } }

            }

            private FhirString? _description;
        [JsonPropertyName("description")]
        public FhirString? Description { get => _description; set { _description = value; } }

            private FhirString? _name;
        [JsonPropertyName("name")]
        public FhirString? Name { get => _name; set { _name = value; } }

        }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

        private FhirString? _title;
        [JsonPropertyName("title")]
        public FhirString? Title { get => _title; set { _title = value; OnPropertyChangedByClr(nameof(Title), value); } }

        private FhirUri? _url;
        [JsonPropertyName("url")]
        public FhirUri? Url { get => _url; set { _url = value; OnPropertyChangedByClr(nameof(Url), value); } }

        private List<UsageContext>? _useContext;
        [JsonPropertyName("useContext")]
        public List<UsageContext>? UseContext { get => _useContext; set { _useContext = value; OnPropertyChangedByClr(nameof(UseContext), value); } }

        private List<TestScript_Variable>? _variable;
        [JsonPropertyName("variable")]
        public List<TestScript_Variable>? Variable { get => _variable; set { _variable = value; OnPropertyChangedByClr(nameof(Variable), value); } }

        /// <summary>
        /// Placeholder for evaluated elements
        /// </summary>
        public partial class TestScript_Variable : BackboneElement<TestScript_Variable>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "TestScript_Variable" : "testScript_Variable";
            private FhirString? _defaultValue;
        [JsonPropertyName("defaultValue")]
        public FhirString? DefaultValue { get => _defaultValue; set { _defaultValue = value; } }

            private FhirString? _description;
        [JsonPropertyName("description")]
        public FhirString? Description { get => _description; set { _description = value; } }

            private FhirString? _expression;
        [JsonPropertyName("expression")]
        public FhirString? Expression { get => _expression; set { _expression = value; } }

            private FhirString? _headerField;
        [JsonPropertyName("headerField")]
        public FhirString? HeaderField { get => _headerField; set { _headerField = value; } }

            private FhirString? _hint;
        [JsonPropertyName("hint")]
        public FhirString? Hint { get => _hint; set { _hint = value; } }

            private FhirString? _name;
        [JsonPropertyName("name")]
        public FhirString Name { get => _name ?? throw new InvalidOperationException("Name is required"); set { _name = value; } }

            private FhirString? _path;
        [JsonPropertyName("path")]
        public FhirString? Path { get => _path; set { _path = value; } }

            private FhirId? _sourceId;
        [JsonPropertyName("sourceId")]
        public FhirId? SourceId { get => _sourceId; set { _sourceId = value; } }

        }

        private FhirString? _version;
        [JsonPropertyName("version")]
        public FhirString? Version { get => _version; set { _version = value; OnPropertyChangedByClr(nameof(Version), value); } }

        private FhirString? _versionAlgorithmString;
        [JsonPropertyName("versionAlgorithmString")]
        public FhirString? VersionAlgorithmString { get => _versionAlgorithmString; set { _versionAlgorithmString = value; if (value != null) {{ _versionAlgorithmCoding = null; OnPropertyChangedByClr(nameof(VersionAlgorithmCoding), null); }}; OnPropertyChangedByClr(nameof(VersionAlgorithmString), value); } }

        private Coding? _versionAlgorithmCoding;
        [JsonPropertyName("versionAlgorithmCoding")]
        public Coding? VersionAlgorithmCoding { get => _versionAlgorithmCoding; set { _versionAlgorithmCoding = value; if (value != null) {{ _versionAlgorithmString = null; OnPropertyChangedByClr(nameof(VersionAlgorithmString), null); }}; OnPropertyChangedByClr(nameof(VersionAlgorithmCoding), value); } }

    }
}
