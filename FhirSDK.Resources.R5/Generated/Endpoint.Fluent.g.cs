// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class EndpointFluentExtensions
    {
        public static Endpoint WithAddress(this Endpoint r, FhirUrl value) { r.Address = value; return r; }
        public static Endpoint AddConnectionType(this Endpoint r, CodeableConcept item) { r.ConnectionType ??= new List<CodeableConcept>(); r.ConnectionType!.Add(item); return r; }
        public static Endpoint AddContact(this Endpoint r, ContactPoint item) { r.Contact ??= new List<ContactPoint>(); r.Contact!.Add(item); return r; }
        public static Endpoint AddContained(this Endpoint r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static Endpoint WithDescription(this Endpoint r, FhirString value) { r.Description = value; return r; }
        public static Endpoint AddEnvironmentType(this Endpoint r, CodeableConcept item) { r.EnvironmentType ??= new List<CodeableConcept>(); r.EnvironmentType!.Add(item); return r; }
        public static Endpoint AddHeader(this Endpoint r, FhirString item) { r.Header ??= new List<FhirString>(); r.Header!.Add(item); return r; }
        public static Endpoint AddIdentifier(this Endpoint r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static Endpoint WithManagingOrganization(this Endpoint r, ReferenceType value) { r.ManagingOrganization = value; return r; }
        public static Endpoint WithName(this Endpoint r, FhirString value) { r.Name = value; return r; }
        public static Endpoint AddPayload(this Endpoint r, BackboneElement item) { r.Payload ??= new List<BackboneElement>(); r.Payload!.Add(item); return r; }
        public static Endpoint WithPeriod(this Endpoint r, Period value) { r.Period = value; return r; }
        public static Endpoint WithStatus(this Endpoint r, FhirCode value) { r.Status = value; return r; }
        public static Endpoint WithText(this Endpoint r, Narrative value) { r.Text = value; return r; }
    }
}
