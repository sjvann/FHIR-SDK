// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// Nucleic acids are defined by three distinct elements: the base, sugar and linkage. Individual substance/moiety IDs will be created for each of these elements. The nucleotide sequence will be always entered in the 5’-3’ direction
    /// </summary>
    public partial class SubstanceNucleicAcid : ResourceBase
    {
        public override string ResourceType => "SubstanceNucleicAcid";

        public SubstanceNucleicAcid() { }
        public SubstanceNucleicAcid(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public SubstanceNucleicAcid(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private FhirString? _areaOfHybridisation;
        [JsonPropertyName("areaOfHybridisation")]
        public FhirString? AreaOfHybridisation { get => _areaOfHybridisation; set { _areaOfHybridisation = value; OnPropertyChangedByClr(nameof(AreaOfHybridisation), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private FhirInteger? _numberOfSubunits;
        [JsonPropertyName("numberOfSubunits")]
        public FhirInteger? NumberOfSubunits { get => _numberOfSubunits; set { _numberOfSubunits = value; OnPropertyChangedByClr(nameof(NumberOfSubunits), value); } }

        private CodeableConcept? _oligoNucleotideType;
        [JsonPropertyName("oligoNucleotideType")]
        public CodeableConcept? OligoNucleotideType { get => _oligoNucleotideType; set { _oligoNucleotideType = value; OnPropertyChangedByClr(nameof(OligoNucleotideType), value); } }

        private CodeableConcept? _sequenceType;
        [JsonPropertyName("sequenceType")]
        public CodeableConcept? SequenceType { get => _sequenceType; set { _sequenceType = value; OnPropertyChangedByClr(nameof(SequenceType), value); } }

        private List<SubstanceNucleicAcid_Subunit>? _subunit;
        [JsonPropertyName("subunit")]
        public List<SubstanceNucleicAcid_Subunit>? Subunit { get => _subunit; set { _subunit = value; OnPropertyChangedByClr(nameof(Subunit), value); } }

        /// <summary>
        /// Subunits are listed in order of decreasing length; sequences of the same length will be ordered by molecular weight; subunits that have identical sequences will be repeated multiple times
        /// </summary>
        public partial class SubstanceNucleicAcid_Subunit : BackboneElement<SubstanceNucleicAcid_Subunit>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "SubstanceNucleicAcid_Subunit" : "substanceNucleicAcid_Subunit";
            private CodeableConcept? _fivePrime;
        [JsonPropertyName("fivePrime")]
        public CodeableConcept? FivePrime { get => _fivePrime; set { _fivePrime = value; } }

            private FhirInteger? _length;
        [JsonPropertyName("length")]
        public FhirInteger? Length { get => _length; set { _length = value; } }

            private List<SubstanceNucleicAcid_Subunit_Linkage>? _linkage;
        [JsonPropertyName("linkage")]
        public List<SubstanceNucleicAcid_Subunit_Linkage>? Linkage { get => _linkage; set { _linkage = value; } }

            /// <summary>
            /// The linkages between sugar residues will also be captured
            /// </summary>
            public partial class SubstanceNucleicAcid_Subunit_Linkage : BackboneElement<SubstanceNucleicAcid_Subunit_Linkage>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "SubstanceNucleicAcid_Subunit_Linkage" : "substanceNucleicAcid_Subunit_Linkage";
                private FhirString? _connectivity;
        [JsonPropertyName("connectivity")]
        public FhirString? Connectivity { get => _connectivity; set { _connectivity = value; } }

                private Identifier? _identifier;
        [JsonPropertyName("identifier")]
        public Identifier? Identifier { get => _identifier; set { _identifier = value; } }

                private FhirString? _name;
        [JsonPropertyName("name")]
        public FhirString? Name { get => _name; set { _name = value; } }

                private FhirString? _residueSite;
        [JsonPropertyName("residueSite")]
        public FhirString? ResidueSite { get => _residueSite; set { _residueSite = value; } }

            }

            private FhirString? _sequence;
        [JsonPropertyName("sequence")]
        public FhirString? Sequence { get => _sequence; set { _sequence = value; } }

            private Attachment? _sequenceAttachment;
        [JsonPropertyName("sequenceAttachment")]
        public Attachment? SequenceAttachment { get => _sequenceAttachment; set { _sequenceAttachment = value; } }

            private FhirInteger? _subunit;
        [JsonPropertyName("subunit")]
        public FhirInteger? Subunit { get => _subunit; set { _subunit = value; } }

            private List<SubstanceNucleicAcid_Subunit_Sugar>? _sugar;
        [JsonPropertyName("sugar")]
        public List<SubstanceNucleicAcid_Subunit_Sugar>? Sugar { get => _sugar; set { _sugar = value; } }

            /// <summary>
            /// 5.3.6.8.1 Sugar ID (Mandatory)
            /// </summary>
            public partial class SubstanceNucleicAcid_Subunit_Sugar : BackboneElement<SubstanceNucleicAcid_Subunit_Sugar>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "SubstanceNucleicAcid_Subunit_Sugar" : "substanceNucleicAcid_Subunit_Sugar";
                private Identifier? _identifier;
        [JsonPropertyName("identifier")]
        public Identifier? Identifier { get => _identifier; set { _identifier = value; } }

                private FhirString? _name;
        [JsonPropertyName("name")]
        public FhirString? Name { get => _name; set { _name = value; } }

                private FhirString? _residueSite;
        [JsonPropertyName("residueSite")]
        public FhirString? ResidueSite { get => _residueSite; set { _residueSite = value; } }

            }

            private CodeableConcept? _threePrime;
        [JsonPropertyName("threePrime")]
        public CodeableConcept? ThreePrime { get => _threePrime; set { _threePrime = value; } }

        }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

    }
}
