// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// A statement of system capabilities
    /// </summary>
    public partial class CapabilityStatement : ResourceBase
    {
        public override string ResourceType => "CapabilityStatement";

        public CapabilityStatement() { }
        public CapabilityStatement(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public CapabilityStatement(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private List<FhirCode>? _acceptLanguage;
        [JsonPropertyName("acceptLanguage")]
        public List<FhirCode>? AcceptLanguage { get => _acceptLanguage; set { _acceptLanguage = value; OnPropertyChangedByClr(nameof(AcceptLanguage), value); } }

        private List<ContactDetail>? _contact;
        [JsonPropertyName("contact")]
        public List<ContactDetail>? Contact { get => _contact; set { _contact = value; OnPropertyChangedByClr(nameof(Contact), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private FhirMarkdown? _copyright;
        [JsonPropertyName("copyright")]
        public FhirMarkdown? Copyright { get => _copyright; set { _copyright = value; OnPropertyChangedByClr(nameof(Copyright), value); } }

        private FhirString? _copyrightLabel;
        [JsonPropertyName("copyrightLabel")]
        public FhirString? CopyrightLabel { get => _copyrightLabel; set { _copyrightLabel = value; OnPropertyChangedByClr(nameof(CopyrightLabel), value); } }

        private FhirDateTime? _date;
        [JsonPropertyName("date")]
        public FhirDateTime Date { get => _date ?? throw new InvalidOperationException("Date is required"); set { _date = value; OnPropertyChangedByClr(nameof(Date), value); } }

        private FhirMarkdown? _description;
        [JsonPropertyName("description")]
        public FhirMarkdown? Description { get => _description; set { _description = value; OnPropertyChangedByClr(nameof(Description), value); } }

        private List<CapabilityStatement_Document>? _document;
        [JsonPropertyName("document")]
        public List<CapabilityStatement_Document>? Document { get => _document; set { _document = value; OnPropertyChangedByClr(nameof(Document), value); } }

        /// <summary>
        /// Document definition
        /// </summary>
        public partial class CapabilityStatement_Document : BackboneElement<CapabilityStatement_Document>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "CapabilityStatement_Document" : "capabilityStatement_Document";
            private FhirMarkdown? _documentation;
        [JsonPropertyName("documentation")]
        public FhirMarkdown? Documentation { get => _documentation; set { _documentation = value; } }

            private FhirCode? _mode;
        [JsonPropertyName("mode")]
        public FhirCode Mode { get => _mode ?? throw new InvalidOperationException("Mode is required"); set { _mode = value; } }

            private FhirCanonical? _profile;
        [JsonPropertyName("profile")]
        public FhirCanonical Profile { get => _profile ?? throw new InvalidOperationException("Profile is required"); set { _profile = value; } }

        }

        private FhirBoolean? _experimental;
        [JsonPropertyName("experimental")]
        public FhirBoolean? Experimental { get => _experimental; set { _experimental = value; OnPropertyChangedByClr(nameof(Experimental), value); } }

        private FhirCode? _fhirVersion;
        [JsonPropertyName("fhirVersion")]
        public FhirCode FhirVersion { get => _fhirVersion ?? throw new InvalidOperationException("FhirVersion is required"); set { _fhirVersion = value; OnPropertyChangedByClr(nameof(FhirVersion), value); } }

        private List<FhirCode> _format = new();
        [JsonPropertyName("format")]
        public List<FhirCode> Format { get => _format; set { _format = value; OnPropertyChangedByClr(nameof(Format), value); } }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private CapabilityStatement_Implementation? _implementation;
        [JsonPropertyName("implementation")]
        public CapabilityStatement_Implementation? Implementation { get => _implementation; set { _implementation = value; OnPropertyChangedByClr(nameof(Implementation), value); } }

        /// <summary>
        /// If this describes a specific instance
        /// </summary>
        public partial class CapabilityStatement_Implementation : BackboneElement<CapabilityStatement_Implementation>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "CapabilityStatement_Implementation" : "capabilityStatement_Implementation";
            private ReferenceType? _custodian;
        [JsonPropertyName("custodian")]
        public ReferenceType? Custodian { get => _custodian; set { _custodian = value; } }

            private FhirMarkdown? _description;
        [JsonPropertyName("description")]
        public FhirMarkdown Description { get => _description ?? throw new InvalidOperationException("Description is required"); set { _description = value; } }

            private FhirUrl? _url;
        [JsonPropertyName("url")]
        public FhirUrl? Url { get => _url; set { _url = value; } }

        }

        private List<FhirCanonical>? _implementationGuide;
        [JsonPropertyName("implementationGuide")]
        public List<FhirCanonical>? ImplementationGuide { get => _implementationGuide; set { _implementationGuide = value; OnPropertyChangedByClr(nameof(ImplementationGuide), value); } }

        private List<FhirCanonical>? _imports;
        [JsonPropertyName("imports")]
        public List<FhirCanonical>? Imports { get => _imports; set { _imports = value; OnPropertyChangedByClr(nameof(Imports), value); } }

        private List<FhirCanonical>? _instantiates;
        [JsonPropertyName("instantiates")]
        public List<FhirCanonical>? Instantiates { get => _instantiates; set { _instantiates = value; OnPropertyChangedByClr(nameof(Instantiates), value); } }

        private List<CodeableConcept>? _jurisdiction;
        [JsonPropertyName("jurisdiction")]
        public List<CodeableConcept>? Jurisdiction { get => _jurisdiction; set { _jurisdiction = value; OnPropertyChangedByClr(nameof(Jurisdiction), value); } }

        private FhirCode? _kind;
        [JsonPropertyName("kind")]
        public FhirCode Kind { get => _kind ?? throw new InvalidOperationException("Kind is required"); set { _kind = value; OnPropertyChangedByClr(nameof(Kind), value); } }

        private List<CapabilityStatement_Messaging>? _messaging;
        [JsonPropertyName("messaging")]
        public List<CapabilityStatement_Messaging>? Messaging { get => _messaging; set { _messaging = value; OnPropertyChangedByClr(nameof(Messaging), value); } }

        /// <summary>
        /// If messaging is supported
        /// </summary>
        public partial class CapabilityStatement_Messaging : BackboneElement<CapabilityStatement_Messaging>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "CapabilityStatement_Messaging" : "capabilityStatement_Messaging";
            private FhirMarkdown? _documentation;
        [JsonPropertyName("documentation")]
        public FhirMarkdown? Documentation { get => _documentation; set { _documentation = value; } }

            private List<CapabilityStatement_Messaging_Endpoint>? _endpoint;
        [JsonPropertyName("endpoint")]
        public List<CapabilityStatement_Messaging_Endpoint>? Endpoint { get => _endpoint; set { _endpoint = value; } }

            /// <summary>
            /// Where messages should be sent
            /// </summary>
            public partial class CapabilityStatement_Messaging_Endpoint : BackboneElement<CapabilityStatement_Messaging_Endpoint>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "CapabilityStatement_Messaging_Endpoint" : "capabilityStatement_Messaging_Endpoint";
                private FhirUrl? _address;
        [JsonPropertyName("address")]
        public FhirUrl Address { get => _address ?? throw new InvalidOperationException("Address is required"); set { _address = value; } }

                private Coding? _protocol;
        [JsonPropertyName("protocol")]
        public Coding Protocol { get => _protocol ?? throw new InvalidOperationException("Protocol is required"); set { _protocol = value; } }

            }

            private FhirUnsignedInt? _reliableCache;
        [JsonPropertyName("reliableCache")]
        public FhirUnsignedInt? ReliableCache { get => _reliableCache; set { _reliableCache = value; } }

            private List<CapabilityStatement_Messaging_SupportedMessage>? _supportedMessage;
        [JsonPropertyName("supportedMessage")]
        public List<CapabilityStatement_Messaging_SupportedMessage>? SupportedMessage { get => _supportedMessage; set { _supportedMessage = value; } }

            /// <summary>
            /// Messages supported by this system
            /// </summary>
            public partial class CapabilityStatement_Messaging_SupportedMessage : BackboneElement<CapabilityStatement_Messaging_SupportedMessage>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "CapabilityStatement_Messaging_SupportedMessage" : "capabilityStatement_Messaging_SupportedMessage";
                private FhirCanonical? _definition;
        [JsonPropertyName("definition")]
        public FhirCanonical Definition { get => _definition ?? throw new InvalidOperationException("Definition is required"); set { _definition = value; } }

                private FhirCode? _mode;
        [JsonPropertyName("mode")]
        public FhirCode Mode { get => _mode ?? throw new InvalidOperationException("Mode is required"); set { _mode = value; } }

            }

        }

        private FhirString? _name;
        [JsonPropertyName("name")]
        public FhirString? Name { get => _name; set { _name = value; OnPropertyChangedByClr(nameof(Name), value); } }

        private List<FhirCode>? _patchFormat;
        [JsonPropertyName("patchFormat")]
        public List<FhirCode>? PatchFormat { get => _patchFormat; set { _patchFormat = value; OnPropertyChangedByClr(nameof(PatchFormat), value); } }

        private FhirString? _publisher;
        [JsonPropertyName("publisher")]
        public FhirString? Publisher { get => _publisher; set { _publisher = value; OnPropertyChangedByClr(nameof(Publisher), value); } }

        private FhirMarkdown? _purpose;
        [JsonPropertyName("purpose")]
        public FhirMarkdown? Purpose { get => _purpose; set { _purpose = value; OnPropertyChangedByClr(nameof(Purpose), value); } }

        private List<CapabilityStatement_Rest>? _rest;
        [JsonPropertyName("rest")]
        public List<CapabilityStatement_Rest>? Rest { get => _rest; set { _rest = value; OnPropertyChangedByClr(nameof(Rest), value); } }

        /// <summary>
        /// If the endpoint is a RESTful one
        /// </summary>
        public partial class CapabilityStatement_Rest : BackboneElement<CapabilityStatement_Rest>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "CapabilityStatement_Rest" : "capabilityStatement_Rest";
            private List<FhirCanonical>? _compartment;
        [JsonPropertyName("compartment")]
        public List<FhirCanonical>? Compartment { get => _compartment; set { _compartment = value; } }

            private FhirMarkdown? _documentation;
        [JsonPropertyName("documentation")]
        public FhirMarkdown? Documentation { get => _documentation; set { _documentation = value; } }

            private List<CapabilityStatement_Rest_Interaction>? _interaction;
        [JsonPropertyName("interaction")]
        public List<CapabilityStatement_Rest_Interaction>? Interaction { get => _interaction; set { _interaction = value; } }

            /// <summary>
            /// What operations are supported?
            /// </summary>
            public partial class CapabilityStatement_Rest_Interaction : BackboneElement<CapabilityStatement_Rest_Interaction>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "CapabilityStatement_Rest_Interaction" : "capabilityStatement_Rest_Interaction";
                private FhirCode? _code;
        [JsonPropertyName("code")]
        public FhirCode Code { get => _code ?? throw new InvalidOperationException("Code is required"); set { _code = value; } }

                private FhirMarkdown? _documentation;
        [JsonPropertyName("documentation")]
        public FhirMarkdown? Documentation { get => _documentation; set { _documentation = value; } }

            }

            private FhirCode? _mode;
        [JsonPropertyName("mode")]
        public FhirCode Mode { get => _mode ?? throw new InvalidOperationException("Mode is required"); set { _mode = value; } }

            private List<FhirString>? _operation;
        [JsonPropertyName("operation")]
        public List<FhirString>? Operation { get => _operation; set { _operation = value; } }

            private List<CapabilityStatement_Rest_Resource>? _resource;
        [JsonPropertyName("resource")]
        public List<CapabilityStatement_Rest_Resource>? Resource { get => _resource; set { _resource = value; } }

            /// <summary>
            /// Resource served on the REST interface
            /// </summary>
            public partial class CapabilityStatement_Rest_Resource : BackboneElement<CapabilityStatement_Rest_Resource>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "CapabilityStatement_Rest_Resource" : "capabilityStatement_Rest_Resource";
                private FhirBoolean? _conditionalCreate;
        [JsonPropertyName("conditionalCreate")]
        public FhirBoolean? ConditionalCreate { get => _conditionalCreate; set { _conditionalCreate = value; } }

                private FhirCode? _conditionalDelete;
        [JsonPropertyName("conditionalDelete")]
        public FhirCode? ConditionalDelete { get => _conditionalDelete; set { _conditionalDelete = value; } }

                private FhirBoolean? _conditionalPatch;
        [JsonPropertyName("conditionalPatch")]
        public FhirBoolean? ConditionalPatch { get => _conditionalPatch; set { _conditionalPatch = value; } }

                private FhirCode? _conditionalRead;
        [JsonPropertyName("conditionalRead")]
        public FhirCode? ConditionalRead { get => _conditionalRead; set { _conditionalRead = value; } }

                private FhirBoolean? _conditionalUpdate;
        [JsonPropertyName("conditionalUpdate")]
        public FhirBoolean? ConditionalUpdate { get => _conditionalUpdate; set { _conditionalUpdate = value; } }

                private FhirMarkdown? _documentation;
        [JsonPropertyName("documentation")]
        public FhirMarkdown? Documentation { get => _documentation; set { _documentation = value; } }

                private List<CapabilityStatement_Rest_Resource_Interaction>? _interaction;
        [JsonPropertyName("interaction")]
        public List<CapabilityStatement_Rest_Resource_Interaction>? Interaction { get => _interaction; set { _interaction = value; } }

                /// <summary>
                /// What operations are supported?
                /// </summary>
                public partial class CapabilityStatement_Rest_Resource_Interaction : BackboneElement<CapabilityStatement_Rest_Resource_Interaction>
                {
                    public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "CapabilityStatement_Rest_Resource_Interaction" : "capabilityStatement_Rest_Resource_Interaction";
                    private FhirCode? _code;
        [JsonPropertyName("code")]
        public FhirCode Code { get => _code ?? throw new InvalidOperationException("Code is required"); set { _code = value; } }

                    private FhirMarkdown? _documentation;
        [JsonPropertyName("documentation")]
        public FhirMarkdown? Documentation { get => _documentation; set { _documentation = value; } }

                }

                private List<CapabilityStatement_Rest_Resource_Operation>? _operation;
        [JsonPropertyName("operation")]
        public List<CapabilityStatement_Rest_Resource_Operation>? Operation { get => _operation; set { _operation = value; } }

                /// <summary>
                /// Definition of a resource operation
                /// </summary>
                public partial class CapabilityStatement_Rest_Resource_Operation : BackboneElement<CapabilityStatement_Rest_Resource_Operation>
                {
                    public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "CapabilityStatement_Rest_Resource_Operation" : "capabilityStatement_Rest_Resource_Operation";
                    private FhirCanonical? _definition;
        [JsonPropertyName("definition")]
        public FhirCanonical Definition { get => _definition ?? throw new InvalidOperationException("Definition is required"); set { _definition = value; } }

                    private FhirMarkdown? _documentation;
        [JsonPropertyName("documentation")]
        public FhirMarkdown? Documentation { get => _documentation; set { _documentation = value; } }

                    private FhirString? _name;
        [JsonPropertyName("name")]
        public FhirString Name { get => _name ?? throw new InvalidOperationException("Name is required"); set { _name = value; } }

                }

                private FhirCanonical? _profile;
        [JsonPropertyName("profile")]
        public FhirCanonical? Profile { get => _profile; set { _profile = value; } }

                private FhirBoolean? _readHistory;
        [JsonPropertyName("readHistory")]
        public FhirBoolean? ReadHistory { get => _readHistory; set { _readHistory = value; } }

                private List<FhirCode>? _referencePolicy;
        [JsonPropertyName("referencePolicy")]
        public List<FhirCode>? ReferencePolicy { get => _referencePolicy; set { _referencePolicy = value; } }

                private List<FhirString>? _searchInclude;
        [JsonPropertyName("searchInclude")]
        public List<FhirString>? SearchInclude { get => _searchInclude; set { _searchInclude = value; } }

                private List<CapabilityStatement_Rest_Resource_SearchParam>? _searchParam;
        [JsonPropertyName("searchParam")]
        public List<CapabilityStatement_Rest_Resource_SearchParam>? SearchParam { get => _searchParam; set { _searchParam = value; } }

                /// <summary>
                /// Search parameters supported by implementation
                /// </summary>
                public partial class CapabilityStatement_Rest_Resource_SearchParam : BackboneElement<CapabilityStatement_Rest_Resource_SearchParam>
                {
                    public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "CapabilityStatement_Rest_Resource_SearchParam" : "capabilityStatement_Rest_Resource_SearchParam";
                    private FhirCanonical? _definition;
        [JsonPropertyName("definition")]
        public FhirCanonical? Definition { get => _definition; set { _definition = value; } }

                    private FhirMarkdown? _documentation;
        [JsonPropertyName("documentation")]
        public FhirMarkdown? Documentation { get => _documentation; set { _documentation = value; } }

                    private FhirString? _name;
        [JsonPropertyName("name")]
        public FhirString Name { get => _name ?? throw new InvalidOperationException("Name is required"); set { _name = value; } }

                    private FhirCode? _type;
        [JsonPropertyName("type")]
        public FhirCode Type { get => _type ?? throw new InvalidOperationException("Type is required"); set { _type = value; } }

                }

                private List<FhirString>? _searchRevInclude;
        [JsonPropertyName("searchRevInclude")]
        public List<FhirString>? SearchRevInclude { get => _searchRevInclude; set { _searchRevInclude = value; } }

                private List<FhirCanonical>? _supportedProfile;
        [JsonPropertyName("supportedProfile")]
        public List<FhirCanonical>? SupportedProfile { get => _supportedProfile; set { _supportedProfile = value; } }

                private FhirCode? _type;
        [JsonPropertyName("type")]
        public FhirCode Type { get => _type ?? throw new InvalidOperationException("Type is required"); set { _type = value; } }

                private FhirBoolean? _updateCreate;
        [JsonPropertyName("updateCreate")]
        public FhirBoolean? UpdateCreate { get => _updateCreate; set { _updateCreate = value; } }

                private FhirCode? _versioning;
        [JsonPropertyName("versioning")]
        public FhirCode? Versioning { get => _versioning; set { _versioning = value; } }

            }

            private List<FhirString>? _searchParam;
        [JsonPropertyName("searchParam")]
        public List<FhirString>? SearchParam { get => _searchParam; set { _searchParam = value; } }

            private CapabilityStatement_Rest_Security? _security;
        [JsonPropertyName("security")]
        public CapabilityStatement_Rest_Security? Security { get => _security; set { _security = value; } }

            /// <summary>
            /// Information about security of implementation
            /// </summary>
            public partial class CapabilityStatement_Rest_Security : BackboneElement<CapabilityStatement_Rest_Security>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "CapabilityStatement_Rest_Security" : "capabilityStatement_Rest_Security";
                private FhirBoolean? _cors;
        [JsonPropertyName("cors")]
        public FhirBoolean? Cors { get => _cors; set { _cors = value; } }

                private FhirMarkdown? _description;
        [JsonPropertyName("description")]
        public FhirMarkdown? Description { get => _description; set { _description = value; } }

                private List<CodeableConcept>? _service;
        [JsonPropertyName("service")]
        public List<CodeableConcept>? Service { get => _service; set { _service = value; } }

            }

        }

        private CapabilityStatement_Software? _software;
        [JsonPropertyName("software")]
        public CapabilityStatement_Software? Software { get => _software; set { _software = value; OnPropertyChangedByClr(nameof(Software), value); } }

        /// <summary>
        /// Software that is covered by this capability statement
        /// </summary>
        public partial class CapabilityStatement_Software : BackboneElement<CapabilityStatement_Software>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "CapabilityStatement_Software" : "capabilityStatement_Software";
            private FhirString? _name;
        [JsonPropertyName("name")]
        public FhirString Name { get => _name ?? throw new InvalidOperationException("Name is required"); set { _name = value; } }

            private FhirDateTime? _releaseDate;
        [JsonPropertyName("releaseDate")]
        public FhirDateTime? ReleaseDate { get => _releaseDate; set { _releaseDate = value; } }

            private FhirString? _version;
        [JsonPropertyName("version")]
        public FhirString? Version { get => _version; set { _version = value; } }

        }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode Status { get => _status ?? throw new InvalidOperationException("Status is required"); set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

        private FhirString? _title;
        [JsonPropertyName("title")]
        public FhirString? Title { get => _title; set { _title = value; OnPropertyChangedByClr(nameof(Title), value); } }

        private FhirUri? _url;
        [JsonPropertyName("url")]
        public FhirUri? Url { get => _url; set { _url = value; OnPropertyChangedByClr(nameof(Url), value); } }

        private List<UsageContext>? _useContext;
        [JsonPropertyName("useContext")]
        public List<UsageContext>? UseContext { get => _useContext; set { _useContext = value; OnPropertyChangedByClr(nameof(UseContext), value); } }

        private FhirString? _version;
        [JsonPropertyName("version")]
        public FhirString? Version { get => _version; set { _version = value; OnPropertyChangedByClr(nameof(Version), value); } }

        private FhirString? _versionAlgorithmString;
        [JsonPropertyName("versionAlgorithmString")]
        public FhirString? VersionAlgorithmString { get => _versionAlgorithmString; set { _versionAlgorithmString = value; if (value != null) {{ _versionAlgorithmCoding = null; OnPropertyChangedByClr(nameof(VersionAlgorithmCoding), null); }}; OnPropertyChangedByClr(nameof(VersionAlgorithmString), value); } }

        private Coding? _versionAlgorithmCoding;
        [JsonPropertyName("versionAlgorithmCoding")]
        public Coding? VersionAlgorithmCoding { get => _versionAlgorithmCoding; set { _versionAlgorithmCoding = value; if (value != null) {{ _versionAlgorithmString = null; OnPropertyChangedByClr(nameof(VersionAlgorithmString), null); }}; OnPropertyChangedByClr(nameof(VersionAlgorithmCoding), value); } }

    }
}
