// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class MessageHeaderFluentExtensions
    {
        public static MessageHeader WithAuthor(this MessageHeader r, ReferenceType value) { r.Author = value; return r; }
        public static MessageHeader AddContained(this MessageHeader r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static MessageHeader WithDefinition(this MessageHeader r, FhirCanonical value) { r.Definition = value; return r; }
        public static MessageHeader AddDestination(this MessageHeader r, BackboneElement item) { r.Destination ??= new List<BackboneElement>(); r.Destination!.Add(item); return r; }
        public static MessageHeader WithEventCoding(this MessageHeader r, Coding value) { r.EventCoding = value; return r; }
        public static MessageHeader WithEventcanonical(this MessageHeader r, FhirCanonical value) { r.Eventcanonical = value; return r; }
        public static MessageHeader AddFocus(this MessageHeader r, ReferenceType item) { r.Focus ??= new List<ReferenceType>(); r.Focus!.Add(item); return r; }
        public static MessageHeader WithReason(this MessageHeader r, CodeableConcept value) { r.Reason = value; return r; }
        public static MessageHeader WithResponse(this MessageHeader r, BackboneElement value) { r.Response = value; return r; }
        public static MessageHeader WithResponsible(this MessageHeader r, ReferenceType value) { r.Responsible = value; return r; }
        public static MessageHeader WithSender(this MessageHeader r, ReferenceType value) { r.Sender = value; return r; }
        public static MessageHeader WithSource(this MessageHeader r, BackboneElement value) { r.Source = value; return r; }
        public static MessageHeader WithText(this MessageHeader r, Narrative value) { r.Text = value; return r; }
    }
}
