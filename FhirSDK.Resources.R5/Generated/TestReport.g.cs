// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// Describes the results of a TestScript execution
    /// </summary>
    public partial class TestReport : ResourceBase
    {
        public override string ResourceType => "TestReport";

        public TestReport() { }
        public TestReport(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public TestReport(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private Identifier? _identifier;
        [JsonPropertyName("identifier")]
        public Identifier? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private FhirDateTime? _issued;
        [JsonPropertyName("issued")]
        public FhirDateTime? Issued { get => _issued; set { _issued = value; OnPropertyChangedByClr(nameof(Issued), value); } }

        private FhirString? _name;
        [JsonPropertyName("name")]
        public FhirString? Name { get => _name; set { _name = value; OnPropertyChangedByClr(nameof(Name), value); } }

        private List<TestReport_Participant>? _participant;
        [JsonPropertyName("participant")]
        public List<TestReport_Participant>? Participant { get => _participant; set { _participant = value; OnPropertyChangedByClr(nameof(Participant), value); } }

        /// <summary>
        /// A participant in the test execution, either the execution engine, a client, or a server
        /// </summary>
        public partial class TestReport_Participant : BackboneElement<TestReport_Participant>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "TestReport_Participant" : "testReport_Participant";
            private FhirString? _display;
        [JsonPropertyName("display")]
        public FhirString? Display { get => _display; set { _display = value; } }

            private FhirCode? _type;
        [JsonPropertyName("type")]
        public FhirCode Type { get => _type ?? throw new InvalidOperationException("Type is required"); set { _type = value; } }

            private FhirUri? _uri;
        [JsonPropertyName("uri")]
        public FhirUri Uri { get => _uri ?? throw new InvalidOperationException("Uri is required"); set { _uri = value; } }

        }

        private FhirCode? _result;
        [JsonPropertyName("result")]
        public FhirCode Result { get => _result ?? throw new InvalidOperationException("Result is required"); set { _result = value; OnPropertyChangedByClr(nameof(Result), value); } }

        private FhirDecimal? _score;
        [JsonPropertyName("score")]
        public FhirDecimal? Score { get => _score; set { _score = value; OnPropertyChangedByClr(nameof(Score), value); } }

        private TestReport_Setup? _setup;
        [JsonPropertyName("setup")]
        public TestReport_Setup? Setup { get => _setup; set { _setup = value; OnPropertyChangedByClr(nameof(Setup), value); } }

        /// <summary>
        /// The results of the series of required setup operations before the tests were executed
        /// </summary>
        public partial class TestReport_Setup : BackboneElement<TestReport_Setup>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "TestReport_Setup" : "testReport_Setup";
            private List<TestReport_Setup_Action> _action = new();
        [JsonPropertyName("action")]
        public List<TestReport_Setup_Action> Action { get => _action; set { _action = value; } }

            /// <summary>
            /// A setup operation or assert that was executed
            /// </summary>
            public partial class TestReport_Setup_Action : BackboneElement<TestReport_Setup_Action>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "TestReport_Setup_Action" : "testReport_Setup_Action";
                private TestReport_Setup_Action_Assert? _assert;
        [JsonPropertyName("assert")]
        public TestReport_Setup_Action_Assert? Assert { get => _assert; set { _assert = value; } }

                /// <summary>
                /// The assertion to perform
                /// </summary>
                public partial class TestReport_Setup_Action_Assert : BackboneElement<TestReport_Setup_Action_Assert>
                {
                    public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "TestReport_Setup_Action_Assert" : "testReport_Setup_Action_Assert";
                    private FhirString? _detail;
        [JsonPropertyName("detail")]
        public FhirString? Detail { get => _detail; set { _detail = value; } }

                    private FhirMarkdown? _message;
        [JsonPropertyName("message")]
        public FhirMarkdown? Message { get => _message; set { _message = value; } }

                    private List<TestReport_Setup_Action_Assert_Requirement>? _requirement;
        [JsonPropertyName("requirement")]
        public List<TestReport_Setup_Action_Assert_Requirement>? Requirement { get => _requirement; set { _requirement = value; } }

                    /// <summary>
                    /// Links or references to the testing requirements
                    /// </summary>
                    public partial class TestReport_Setup_Action_Assert_Requirement : BackboneElement<TestReport_Setup_Action_Assert_Requirement>
                    {
                        public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "TestReport_Setup_Action_Assert_Requirement" : "testReport_Setup_Action_Assert_Requirement";
                        private FhirUri? _linkuri;
        [JsonPropertyName("linkuri")]
        public FhirUri? Linkuri { get => _linkuri; set { _linkuri = value; if (value != null) {{ _linkcanonical = null; OnPropertyChanged("linkcanonical", null); }}; OnPropertyChanged("linkuri", value); } }

                        private FhirCanonical? _linkcanonical;
        [JsonPropertyName("linkcanonical")]
        public FhirCanonical? Linkcanonical { get => _linkcanonical; set { _linkcanonical = value; if (value != null) {{ _linkuri = null; OnPropertyChanged("linkuri", null); }}; OnPropertyChanged("linkcanonical", value); } }

                    }

                    private FhirCode? _result;
        [JsonPropertyName("result")]
        public FhirCode Result { get => _result ?? throw new InvalidOperationException("Result is required"); set { _result = value; } }

                }

                private TestReport_Setup_Action_Operation? _operation;
        [JsonPropertyName("operation")]
        public TestReport_Setup_Action_Operation? Operation { get => _operation; set { _operation = value; } }

                /// <summary>
                /// The operation to perform
                /// </summary>
                public partial class TestReport_Setup_Action_Operation : BackboneElement<TestReport_Setup_Action_Operation>
                {
                    public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "TestReport_Setup_Action_Operation" : "testReport_Setup_Action_Operation";
                    private FhirUri? _detail;
        [JsonPropertyName("detail")]
        public FhirUri? Detail { get => _detail; set { _detail = value; } }

                    private FhirMarkdown? _message;
        [JsonPropertyName("message")]
        public FhirMarkdown? Message { get => _message; set { _message = value; } }

                    private FhirCode? _result;
        [JsonPropertyName("result")]
        public FhirCode Result { get => _result ?? throw new InvalidOperationException("Result is required"); set { _result = value; } }

                }

            }

        }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode Status { get => _status ?? throw new InvalidOperationException("Status is required"); set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private TestReport_Teardown? _teardown;
        [JsonPropertyName("teardown")]
        public TestReport_Teardown? Teardown { get => _teardown; set { _teardown = value; OnPropertyChangedByClr(nameof(Teardown), value); } }

        /// <summary>
        /// The results of running the series of required clean up steps
        /// </summary>
        public partial class TestReport_Teardown : BackboneElement<TestReport_Teardown>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "TestReport_Teardown" : "testReport_Teardown";
            private List<TestReport_Teardown_Action> _action = new();
        [JsonPropertyName("action")]
        public List<TestReport_Teardown_Action> Action { get => _action; set { _action = value; } }

            /// <summary>
            /// One or more teardown operations performed
            /// </summary>
            public partial class TestReport_Teardown_Action : BackboneElement<TestReport_Teardown_Action>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "TestReport_Teardown_Action" : "testReport_Teardown_Action";
                private FhirString? _operation;
        [JsonPropertyName("operation")]
        public FhirString Operation { get => _operation ?? throw new InvalidOperationException("Operation is required"); set { _operation = value; } }

            }

        }

        private List<TestReport_Test>? _test;
        [JsonPropertyName("test")]
        public List<TestReport_Test>? Test { get => _test; set { _test = value; OnPropertyChangedByClr(nameof(Test), value); } }

        /// <summary>
        /// A test executed from the test script
        /// </summary>
        public partial class TestReport_Test : BackboneElement<TestReport_Test>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "TestReport_Test" : "testReport_Test";
            private List<TestReport_Test_Action> _action = new();
        [JsonPropertyName("action")]
        public List<TestReport_Test_Action> Action { get => _action; set { _action = value; } }

            /// <summary>
            /// A test operation or assert that was performed
            /// </summary>
            public partial class TestReport_Test_Action : BackboneElement<TestReport_Test_Action>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "TestReport_Test_Action" : "testReport_Test_Action";
                private FhirString? _assert;
        [JsonPropertyName("assert")]
        public FhirString? Assert { get => _assert; set { _assert = value; } }

                private FhirString? _operation;
        [JsonPropertyName("operation")]
        public FhirString? Operation { get => _operation; set { _operation = value; } }

            }

            private FhirString? _description;
        [JsonPropertyName("description")]
        public FhirString? Description { get => _description; set { _description = value; } }

            private FhirString? _name;
        [JsonPropertyName("name")]
        public FhirString? Name { get => _name; set { _name = value; } }

        }

        private FhirString? _tester;
        [JsonPropertyName("tester")]
        public FhirString? Tester { get => _tester; set { _tester = value; OnPropertyChangedByClr(nameof(Tester), value); } }

        private FhirCanonical? _testScript;
        [JsonPropertyName("testScript")]
        public FhirCanonical TestScript { get => _testScript ?? throw new InvalidOperationException("TestScript is required"); set { _testScript = value; OnPropertyChangedByClr(nameof(TestScript), value); } }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

    }
}
