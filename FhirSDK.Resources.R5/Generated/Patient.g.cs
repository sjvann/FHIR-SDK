// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// Information about an individual or animal receiving health care services
    /// </summary>
    public partial class Patient : ResourceBase
    {
        public override string ResourceType => "Patient";

        public Patient() { }
        public Patient(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public Patient(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private FhirBoolean? _active;
        [JsonPropertyName("active")]
        public FhirBoolean? Active { get => _active; set { _active = value; OnPropertyChangedByClr(nameof(Active), value); } }

        private List<Address>? _address;
        [JsonPropertyName("address")]
        public List<Address>? Address { get => _address; set { _address = value; OnPropertyChangedByClr(nameof(Address), value); } }

        private FhirDate? _birthDate;
        [JsonPropertyName("birthDate")]
        public FhirDate? BirthDate { get => _birthDate; set { _birthDate = value; OnPropertyChangedByClr(nameof(BirthDate), value); } }

        private List<Patient_Communication>? _communication;
        [JsonPropertyName("communication")]
        public List<Patient_Communication>? Communication { get => _communication; set { _communication = value; OnPropertyChangedByClr(nameof(Communication), value); } }

        /// <summary>
        /// A language which may be used to communicate with the patient about his or her health
        /// </summary>
        public partial class Patient_Communication : BackboneElement<Patient_Communication>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Patient_Communication" : "patient_Communication";
            private CodeableConcept? _language;
        [JsonPropertyName("language")]
        public CodeableConcept Language { get => _language ?? throw new InvalidOperationException("Language is required"); set { _language = value; } }

            private FhirBoolean? _preferred;
        [JsonPropertyName("preferred")]
        public FhirBoolean? Preferred { get => _preferred; set { _preferred = value; } }

        }

        private List<Patient_Contact>? _contact;
        [JsonPropertyName("contact")]
        public List<Patient_Contact>? Contact { get => _contact; set { _contact = value; OnPropertyChangedByClr(nameof(Contact), value); } }

        /// <summary>
        /// A contact party (e.g. guardian, partner, friend) for the patient
        /// </summary>
        public partial class Patient_Contact : BackboneElement<Patient_Contact>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Patient_Contact" : "patient_Contact";
            private Address? _address;
        [JsonPropertyName("address")]
        public Address? Address { get => _address; set { _address = value; } }

            private FhirCode? _gender;
        [JsonPropertyName("gender")]
        public FhirCode? Gender { get => _gender; set { _gender = value; } }

            private HumanName? _name;
        [JsonPropertyName("name")]
        public HumanName? Name { get => _name; set { _name = value; } }

            private ReferenceType? _organization;
        [JsonPropertyName("organization")]
        public ReferenceType? Organization { get => _organization; set { _organization = value; } }

            private Period? _period;
        [JsonPropertyName("period")]
        public Period? Period { get => _period; set { _period = value; } }

            private List<CodeableConcept>? _relationship;
        [JsonPropertyName("relationship")]
        public List<CodeableConcept>? Relationship { get => _relationship; set { _relationship = value; } }

            private List<ContactPoint>? _telecom;
        [JsonPropertyName("telecom")]
        public List<ContactPoint>? Telecom { get => _telecom; set { _telecom = value; } }

        }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private FhirBoolean? _deceasedBoolean;
        [JsonPropertyName("deceasedBoolean")]
        public FhirBoolean? DeceasedBoolean { get => _deceasedBoolean; set { _deceasedBoolean = value; if (value != null) {{ _deceasedDateTime = null; OnPropertyChangedByClr(nameof(DeceasedDateTime), null); }}; OnPropertyChangedByClr(nameof(DeceasedBoolean), value); } }

        private FhirDateTime? _deceasedDateTime;
        [JsonPropertyName("deceasedDateTime")]
        public FhirDateTime? DeceasedDateTime { get => _deceasedDateTime; set { _deceasedDateTime = value; if (value != null) {{ _deceasedBoolean = null; OnPropertyChangedByClr(nameof(DeceasedBoolean), null); }}; OnPropertyChangedByClr(nameof(DeceasedDateTime), value); } }

        private FhirCode? _gender;
        [JsonPropertyName("gender")]
        public FhirCode? Gender { get => _gender; set { _gender = value; OnPropertyChangedByClr(nameof(Gender), value); } }

        private List<ReferenceType>? _generalPractitioner;
        [JsonPropertyName("generalPractitioner")]
        public List<ReferenceType>? GeneralPractitioner { get => _generalPractitioner; set { _generalPractitioner = value; OnPropertyChangedByClr(nameof(GeneralPractitioner), value); } }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private List<Patient_Link>? _link;
        [JsonPropertyName("link")]
        public List<Patient_Link>? Link { get => _link; set { _link = value; OnPropertyChangedByClr(nameof(Link), value); } }

        /// <summary>
        /// Link to a Patient or RelatedPerson resource that concerns the same actual individual
        /// </summary>
        public partial class Patient_Link : BackboneElement<Patient_Link>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Patient_Link" : "patient_Link";
            private ReferenceType? _other;
        [JsonPropertyName("other")]
        public ReferenceType Other { get => _other ?? throw new InvalidOperationException("Other is required"); set { _other = value; } }

            private FhirCode? _type;
        [JsonPropertyName("type")]
        public FhirCode Type { get => _type ?? throw new InvalidOperationException("Type is required"); set { _type = value; } }

        }

        private ReferenceType? _managingOrganization;
        [JsonPropertyName("managingOrganization")]
        public ReferenceType? ManagingOrganization { get => _managingOrganization; set { _managingOrganization = value; OnPropertyChangedByClr(nameof(ManagingOrganization), value); } }

        private CodeableConcept? _maritalStatus;
        [JsonPropertyName("maritalStatus")]
        public CodeableConcept? MaritalStatus { get => _maritalStatus; set { _maritalStatus = value; OnPropertyChangedByClr(nameof(MaritalStatus), value); } }

        private FhirBoolean? _multipleBirthBoolean;
        [JsonPropertyName("multipleBirthBoolean")]
        public FhirBoolean? MultipleBirthBoolean { get => _multipleBirthBoolean; set { _multipleBirthBoolean = value; if (value != null) {{ _multipleBirthInteger = null; OnPropertyChangedByClr(nameof(MultipleBirthInteger), null); }}; OnPropertyChangedByClr(nameof(MultipleBirthBoolean), value); } }

        private FhirInteger? _multipleBirthInteger;
        [JsonPropertyName("multipleBirthInteger")]
        public FhirInteger? MultipleBirthInteger { get => _multipleBirthInteger; set { _multipleBirthInteger = value; if (value != null) {{ _multipleBirthBoolean = null; OnPropertyChangedByClr(nameof(MultipleBirthBoolean), null); }}; OnPropertyChangedByClr(nameof(MultipleBirthInteger), value); } }

        private List<HumanName>? _name;
        [JsonPropertyName("name")]
        public List<HumanName>? Name { get => _name; set { _name = value; OnPropertyChangedByClr(nameof(Name), value); } }

        private List<Attachment>? _photo;
        [JsonPropertyName("photo")]
        public List<Attachment>? Photo { get => _photo; set { _photo = value; OnPropertyChangedByClr(nameof(Photo), value); } }

        private List<ContactPoint>? _telecom;
        [JsonPropertyName("telecom")]
        public List<ContactPoint>? Telecom { get => _telecom; set { _telecom = value; OnPropertyChangedByClr(nameof(Telecom), value); } }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

    }
}
