// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// Information about patient's relatives, relevant for patient
    /// </summary>
    public partial class FamilyMemberHistory : ResourceBase
    {
        public override string ResourceType => "FamilyMemberHistory";

        public FamilyMemberHistory() { }
        public FamilyMemberHistory(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public FamilyMemberHistory(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private Age? _ageAge;
        [JsonPropertyName("ageAge")]
        public Age? AgeAge { get => _ageAge; set { _ageAge = value; if (value != null) {{ _ageRange = null; OnPropertyChangedByClr(nameof(AgeRange), null); _ageString = null; OnPropertyChangedByClr(nameof(AgeString), null); }}; OnPropertyChangedByClr(nameof(AgeAge), value); } }

        private DataTypeServices.DataTypes.ComplexTypes.Range? _ageRange;
        [JsonPropertyName("ageRange")]
        public DataTypeServices.DataTypes.ComplexTypes.Range? AgeRange { get => _ageRange; set { _ageRange = value; if (value != null) {{ _ageAge = null; OnPropertyChangedByClr(nameof(AgeAge), null); _ageString = null; OnPropertyChangedByClr(nameof(AgeString), null); }}; OnPropertyChangedByClr(nameof(AgeRange), value); } }

        private FhirString? _ageString;
        [JsonPropertyName("ageString")]
        public FhirString? AgeString { get => _ageString; set { _ageString = value; if (value != null) {{ _ageAge = null; OnPropertyChangedByClr(nameof(AgeAge), null); _ageRange = null; OnPropertyChangedByClr(nameof(AgeRange), null); }}; OnPropertyChangedByClr(nameof(AgeString), value); } }

        private Period? _bornPeriod;
        [JsonPropertyName("bornPeriod")]
        public Period? BornPeriod { get => _bornPeriod; set { _bornPeriod = value; if (value != null) {{ _borndate = null; OnPropertyChangedByClr(nameof(Borndate), null); _bornString = null; OnPropertyChangedByClr(nameof(BornString), null); }}; OnPropertyChangedByClr(nameof(BornPeriod), value); } }

        private FhirDate? _borndate;
        [JsonPropertyName("borndate")]
        public FhirDate? Borndate { get => _borndate; set { _borndate = value; if (value != null) {{ _bornPeriod = null; OnPropertyChangedByClr(nameof(BornPeriod), null); _bornString = null; OnPropertyChangedByClr(nameof(BornString), null); }}; OnPropertyChangedByClr(nameof(Borndate), value); } }

        private FhirString? _bornString;
        [JsonPropertyName("bornString")]
        public FhirString? BornString { get => _bornString; set { _bornString = value; if (value != null) {{ _bornPeriod = null; OnPropertyChangedByClr(nameof(BornPeriod), null); _borndate = null; OnPropertyChangedByClr(nameof(Borndate), null); }}; OnPropertyChangedByClr(nameof(BornString), value); } }

        private List<FamilyMemberHistory_Condition>? _condition;
        [JsonPropertyName("condition")]
        public List<FamilyMemberHistory_Condition>? Condition { get => _condition; set { _condition = value; OnPropertyChangedByClr(nameof(Condition), value); } }

        /// <summary>
        /// Condition that the related person had
        /// </summary>
        public partial class FamilyMemberHistory_Condition : BackboneElement<FamilyMemberHistory_Condition>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "FamilyMemberHistory_Condition" : "familyMemberHistory_Condition";
            private CodeableConcept? _code;
        [JsonPropertyName("code")]
        public CodeableConcept Code { get => _code ?? throw new InvalidOperationException("Code is required"); set { _code = value; } }

            private FhirBoolean? _contributedToDeath;
        [JsonPropertyName("contributedToDeath")]
        public FhirBoolean? ContributedToDeath { get => _contributedToDeath; set { _contributedToDeath = value; } }

            private List<Annotation>? _note;
        [JsonPropertyName("note")]
        public List<Annotation>? Note { get => _note; set { _note = value; } }

            private Age? _onsetAge;
        [JsonPropertyName("onsetAge")]
        public Age? OnsetAge { get => _onsetAge; set { _onsetAge = value; if (value != null) {{ _onsetRange = null; OnPropertyChanged("onsetRange", null); _onsetPeriod = null; OnPropertyChanged("onsetPeriod", null); _onsetString = null; OnPropertyChanged("onsetString", null); }}; OnPropertyChanged("onsetAge", value); } }

            private DataTypeServices.DataTypes.ComplexTypes.Range? _onsetRange;
        [JsonPropertyName("onsetRange")]
        public DataTypeServices.DataTypes.ComplexTypes.Range? OnsetRange { get => _onsetRange; set { _onsetRange = value; if (value != null) {{ _onsetAge = null; OnPropertyChanged("onsetAge", null); _onsetPeriod = null; OnPropertyChanged("onsetPeriod", null); _onsetString = null; OnPropertyChanged("onsetString", null); }}; OnPropertyChanged("onsetRange", value); } }

            private Period? _onsetPeriod;
        [JsonPropertyName("onsetPeriod")]
        public Period? OnsetPeriod { get => _onsetPeriod; set { _onsetPeriod = value; if (value != null) {{ _onsetAge = null; OnPropertyChanged("onsetAge", null); _onsetRange = null; OnPropertyChanged("onsetRange", null); _onsetString = null; OnPropertyChanged("onsetString", null); }}; OnPropertyChanged("onsetPeriod", value); } }

            private FhirString? _onsetString;
        [JsonPropertyName("onsetString")]
        public FhirString? OnsetString { get => _onsetString; set { _onsetString = value; if (value != null) {{ _onsetAge = null; OnPropertyChanged("onsetAge", null); _onsetRange = null; OnPropertyChanged("onsetRange", null); _onsetPeriod = null; OnPropertyChanged("onsetPeriod", null); }}; OnPropertyChanged("onsetString", value); } }

            private CodeableConcept? _outcome;
        [JsonPropertyName("outcome")]
        public CodeableConcept? Outcome { get => _outcome; set { _outcome = value; } }

        }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private CodeableConcept? _dataAbsentReason;
        [JsonPropertyName("dataAbsentReason")]
        public CodeableConcept? DataAbsentReason { get => _dataAbsentReason; set { _dataAbsentReason = value; OnPropertyChangedByClr(nameof(DataAbsentReason), value); } }

        private FhirDateTime? _date;
        [JsonPropertyName("date")]
        public FhirDateTime? Date { get => _date; set { _date = value; OnPropertyChangedByClr(nameof(Date), value); } }

        private FhirBoolean? _deceasedBoolean;
        [JsonPropertyName("deceasedBoolean")]
        public FhirBoolean? DeceasedBoolean { get => _deceasedBoolean; set { _deceasedBoolean = value; if (value != null) {{ _deceasedAge = null; OnPropertyChangedByClr(nameof(DeceasedAge), null); _deceasedRange = null; OnPropertyChangedByClr(nameof(DeceasedRange), null); _deceaseddate = null; OnPropertyChangedByClr(nameof(Deceaseddate), null); _deceasedString = null; OnPropertyChangedByClr(nameof(DeceasedString), null); }}; OnPropertyChangedByClr(nameof(DeceasedBoolean), value); } }

        private Age? _deceasedAge;
        [JsonPropertyName("deceasedAge")]
        public Age? DeceasedAge { get => _deceasedAge; set { _deceasedAge = value; if (value != null) {{ _deceasedBoolean = null; OnPropertyChangedByClr(nameof(DeceasedBoolean), null); _deceasedRange = null; OnPropertyChangedByClr(nameof(DeceasedRange), null); _deceaseddate = null; OnPropertyChangedByClr(nameof(Deceaseddate), null); _deceasedString = null; OnPropertyChangedByClr(nameof(DeceasedString), null); }}; OnPropertyChangedByClr(nameof(DeceasedAge), value); } }

        private DataTypeServices.DataTypes.ComplexTypes.Range? _deceasedRange;
        [JsonPropertyName("deceasedRange")]
        public DataTypeServices.DataTypes.ComplexTypes.Range? DeceasedRange { get => _deceasedRange; set { _deceasedRange = value; if (value != null) {{ _deceasedBoolean = null; OnPropertyChangedByClr(nameof(DeceasedBoolean), null); _deceasedAge = null; OnPropertyChangedByClr(nameof(DeceasedAge), null); _deceaseddate = null; OnPropertyChangedByClr(nameof(Deceaseddate), null); _deceasedString = null; OnPropertyChangedByClr(nameof(DeceasedString), null); }}; OnPropertyChangedByClr(nameof(DeceasedRange), value); } }

        private FhirDate? _deceaseddate;
        [JsonPropertyName("deceaseddate")]
        public FhirDate? Deceaseddate { get => _deceaseddate; set { _deceaseddate = value; if (value != null) {{ _deceasedBoolean = null; OnPropertyChangedByClr(nameof(DeceasedBoolean), null); _deceasedAge = null; OnPropertyChangedByClr(nameof(DeceasedAge), null); _deceasedRange = null; OnPropertyChangedByClr(nameof(DeceasedRange), null); _deceasedString = null; OnPropertyChangedByClr(nameof(DeceasedString), null); }}; OnPropertyChangedByClr(nameof(Deceaseddate), value); } }

        private FhirString? _deceasedString;
        [JsonPropertyName("deceasedString")]
        public FhirString? DeceasedString { get => _deceasedString; set { _deceasedString = value; if (value != null) {{ _deceasedBoolean = null; OnPropertyChangedByClr(nameof(DeceasedBoolean), null); _deceasedAge = null; OnPropertyChangedByClr(nameof(DeceasedAge), null); _deceasedRange = null; OnPropertyChangedByClr(nameof(DeceasedRange), null); _deceaseddate = null; OnPropertyChangedByClr(nameof(Deceaseddate), null); }}; OnPropertyChangedByClr(nameof(DeceasedString), value); } }

        private FhirBoolean? _estimatedAge;
        [JsonPropertyName("estimatedAge")]
        public FhirBoolean? EstimatedAge { get => _estimatedAge; set { _estimatedAge = value; OnPropertyChangedByClr(nameof(EstimatedAge), value); } }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private List<FhirCanonical>? _instantiatesCanonical;
        [JsonPropertyName("instantiatesCanonical")]
        public List<FhirCanonical>? InstantiatesCanonical { get => _instantiatesCanonical; set { _instantiatesCanonical = value; OnPropertyChangedByClr(nameof(InstantiatesCanonical), value); } }

        private List<FhirUri>? _instantiatesUri;
        [JsonPropertyName("instantiatesUri")]
        public List<FhirUri>? InstantiatesUri { get => _instantiatesUri; set { _instantiatesUri = value; OnPropertyChangedByClr(nameof(InstantiatesUri), value); } }

        private FhirString? _name;
        [JsonPropertyName("name")]
        public FhirString? Name { get => _name; set { _name = value; OnPropertyChangedByClr(nameof(Name), value); } }

        private List<Annotation>? _note;
        [JsonPropertyName("note")]
        public List<Annotation>? Note { get => _note; set { _note = value; OnPropertyChangedByClr(nameof(Note), value); } }

        private List<FamilyMemberHistory_Participant>? _participant;
        [JsonPropertyName("participant")]
        public List<FamilyMemberHistory_Participant>? Participant { get => _participant; set { _participant = value; OnPropertyChangedByClr(nameof(Participant), value); } }

        /// <summary>
        /// Who or what participated in the activities related to the family member history and how they were involved
        /// </summary>
        public partial class FamilyMemberHistory_Participant : BackboneElement<FamilyMemberHistory_Participant>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "FamilyMemberHistory_Participant" : "familyMemberHistory_Participant";
            private ReferenceType? _actor;
        [JsonPropertyName("actor")]
        public ReferenceType Actor { get => _actor ?? throw new InvalidOperationException("Actor is required"); set { _actor = value; } }

            private CodeableConcept? _function;
        [JsonPropertyName("function")]
        public CodeableConcept? Function { get => _function; set { _function = value; } }

        }

        private ReferenceType? _patient;
        [JsonPropertyName("patient")]
        public ReferenceType Patient { get => _patient ?? throw new InvalidOperationException("Patient is required"); set { _patient = value; OnPropertyChangedByClr(nameof(Patient), value); } }

        private List<FamilyMemberHistory_Procedure>? _procedure;
        [JsonPropertyName("procedure")]
        public List<FamilyMemberHistory_Procedure>? Procedure { get => _procedure; set { _procedure = value; OnPropertyChangedByClr(nameof(Procedure), value); } }

        /// <summary>
        /// Procedures that the related person had
        /// </summary>
        public partial class FamilyMemberHistory_Procedure : BackboneElement<FamilyMemberHistory_Procedure>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "FamilyMemberHistory_Procedure" : "familyMemberHistory_Procedure";
            private CodeableConcept? _code;
        [JsonPropertyName("code")]
        public CodeableConcept Code { get => _code ?? throw new InvalidOperationException("Code is required"); set { _code = value; } }

            private FhirBoolean? _contributedToDeath;
        [JsonPropertyName("contributedToDeath")]
        public FhirBoolean? ContributedToDeath { get => _contributedToDeath; set { _contributedToDeath = value; } }

            private List<Annotation>? _note;
        [JsonPropertyName("note")]
        public List<Annotation>? Note { get => _note; set { _note = value; } }

            private CodeableConcept? _outcome;
        [JsonPropertyName("outcome")]
        public CodeableConcept? Outcome { get => _outcome; set { _outcome = value; } }

            private Age? _performedAge;
        [JsonPropertyName("performedAge")]
        public Age? PerformedAge { get => _performedAge; set { _performedAge = value; if (value != null) {{ _performedRange = null; OnPropertyChanged("performedRange", null); _performedPeriod = null; OnPropertyChanged("performedPeriod", null); _performedString = null; OnPropertyChanged("performedString", null); _performedDateTime = null; OnPropertyChanged("performedDateTime", null); }}; OnPropertyChanged("performedAge", value); } }

            private DataTypeServices.DataTypes.ComplexTypes.Range? _performedRange;
        [JsonPropertyName("performedRange")]
        public DataTypeServices.DataTypes.ComplexTypes.Range? PerformedRange { get => _performedRange; set { _performedRange = value; if (value != null) {{ _performedAge = null; OnPropertyChanged("performedAge", null); _performedPeriod = null; OnPropertyChanged("performedPeriod", null); _performedString = null; OnPropertyChanged("performedString", null); _performedDateTime = null; OnPropertyChanged("performedDateTime", null); }}; OnPropertyChanged("performedRange", value); } }

            private Period? _performedPeriod;
        [JsonPropertyName("performedPeriod")]
        public Period? PerformedPeriod { get => _performedPeriod; set { _performedPeriod = value; if (value != null) {{ _performedAge = null; OnPropertyChanged("performedAge", null); _performedRange = null; OnPropertyChanged("performedRange", null); _performedString = null; OnPropertyChanged("performedString", null); _performedDateTime = null; OnPropertyChanged("performedDateTime", null); }}; OnPropertyChanged("performedPeriod", value); } }

            private FhirString? _performedString;
        [JsonPropertyName("performedString")]
        public FhirString? PerformedString { get => _performedString; set { _performedString = value; if (value != null) {{ _performedAge = null; OnPropertyChanged("performedAge", null); _performedRange = null; OnPropertyChanged("performedRange", null); _performedPeriod = null; OnPropertyChanged("performedPeriod", null); _performedDateTime = null; OnPropertyChanged("performedDateTime", null); }}; OnPropertyChanged("performedString", value); } }

            private FhirDateTime? _performedDateTime;
        [JsonPropertyName("performedDateTime")]
        public FhirDateTime? PerformedDateTime { get => _performedDateTime; set { _performedDateTime = value; if (value != null) {{ _performedAge = null; OnPropertyChanged("performedAge", null); _performedRange = null; OnPropertyChanged("performedRange", null); _performedPeriod = null; OnPropertyChanged("performedPeriod", null); _performedString = null; OnPropertyChanged("performedString", null); }}; OnPropertyChanged("performedDateTime", value); } }

        }

        private List<CodeableReference>? _reason;
        [JsonPropertyName("reason")]
        public List<CodeableReference>? Reason { get => _reason; set { _reason = value; OnPropertyChangedByClr(nameof(Reason), value); } }

        private CodeableConcept? _relationship;
        [JsonPropertyName("relationship")]
        public CodeableConcept Relationship { get => _relationship ?? throw new InvalidOperationException("Relationship is required"); set { _relationship = value; OnPropertyChangedByClr(nameof(Relationship), value); } }

        private CodeableConcept? _sex;
        [JsonPropertyName("sex")]
        public CodeableConcept? Sex { get => _sex; set { _sex = value; OnPropertyChangedByClr(nameof(Sex), value); } }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode Status { get => _status ?? throw new InvalidOperationException("Status is required"); set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

    }
}
