// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class CoverageFluentExtensions
    {
        public static Coverage WithBeneficiary(this Coverage r, ReferenceType value) { r.Beneficiary = value; return r; }
        public static Coverage AddClass(this Coverage r, BackboneElement item) { r.Class ??= new List<BackboneElement>(); r.Class!.Add(item); return r; }
        public static Coverage AddContained(this Coverage r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static Coverage AddContract(this Coverage r, ReferenceType item) { r.Contract ??= new List<ReferenceType>(); r.Contract!.Add(item); return r; }
        public static Coverage AddCostToBeneficiary(this Coverage r, BackboneElement item) { r.CostToBeneficiary ??= new List<BackboneElement>(); r.CostToBeneficiary!.Add(item); return r; }
        public static Coverage WithDependent(this Coverage r, FhirString value) { r.Dependent = value; return r; }
        public static Coverage AddIdentifier(this Coverage r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static Coverage WithInsurancePlan(this Coverage r, ReferenceType value) { r.InsurancePlan = value; return r; }
        public static Coverage WithInsurer(this Coverage r, ReferenceType value) { r.Insurer = value; return r; }
        public static Coverage WithKind(this Coverage r, FhirCode value) { r.Kind = value; return r; }
        public static Coverage WithNetwork(this Coverage r, FhirString value) { r.Network = value; return r; }
        public static Coverage WithOrder(this Coverage r, FhirPositiveInt value) { r.Order = value; return r; }
        public static Coverage AddPaymentBy(this Coverage r, BackboneElement item) { r.PaymentBy ??= new List<BackboneElement>(); r.PaymentBy!.Add(item); return r; }
        public static Coverage WithPeriod(this Coverage r, Period value) { r.Period = value; return r; }
        public static Coverage WithPolicyHolder(this Coverage r, ReferenceType value) { r.PolicyHolder = value; return r; }
        public static Coverage WithRelationship(this Coverage r, CodeableConcept value) { r.Relationship = value; return r; }
        public static Coverage WithStatus(this Coverage r, FhirCode value) { r.Status = value; return r; }
        public static Coverage WithSubrogation(this Coverage r, FhirBoolean value) { r.Subrogation = value; return r; }
        public static Coverage WithSubscriber(this Coverage r, ReferenceType value) { r.Subscriber = value; return r; }
        public static Coverage AddSubscriberId(this Coverage r, Identifier item) { r.SubscriberId ??= new List<Identifier>(); r.SubscriberId!.Add(item); return r; }
        public static Coverage WithText(this Coverage r, Narrative value) { r.Text = value; return r; }
        public static Coverage WithType(this Coverage r, CodeableConcept value) { r.Type = value; return r; }
    }
}
