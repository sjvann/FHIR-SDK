// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class GroupFluentExtensions
    {
        public static Group WithActive(this Group r, FhirBoolean value) { r.Active = value; return r; }
        public static Group AddCharacteristic(this Group r, BackboneElement item) { r.Characteristic ??= new List<BackboneElement>(); r.Characteristic!.Add(item); return r; }
        public static Group WithCode(this Group r, CodeableConcept value) { r.Code = value; return r; }
        public static Group AddContained(this Group r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static Group WithDescription(this Group r, FhirMarkdown value) { r.Description = value; return r; }
        public static Group AddIdentifier(this Group r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static Group WithManagingEntity(this Group r, ReferenceType value) { r.ManagingEntity = value; return r; }
        public static Group AddMember(this Group r, BackboneElement item) { r.Member ??= new List<BackboneElement>(); r.Member!.Add(item); return r; }
        public static Group WithMembership(this Group r, FhirCode value) { r.Membership = value; return r; }
        public static Group WithName(this Group r, FhirString value) { r.Name = value; return r; }
        public static Group WithQuantity(this Group r, FhirUnsignedInt value) { r.Quantity = value; return r; }
        public static Group WithText(this Group r, Narrative value) { r.Text = value; return r; }
        public static Group WithType(this Group r, FhirCode value) { r.Type = value; return r; }
    }
}
