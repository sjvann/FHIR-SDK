// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class ImagingSelectionFluentExtensions
    {
        public static ImagingSelection AddBasedOn(this ImagingSelection r, ReferenceType item) { r.BasedOn ??= new List<ReferenceType>(); r.BasedOn!.Add(item); return r; }
        public static ImagingSelection WithBodySite(this ImagingSelection r, CodeableReference value) { r.BodySite = value; return r; }
        public static ImagingSelection AddCategory(this ImagingSelection r, CodeableConcept item) { r.Category ??= new List<CodeableConcept>(); r.Category!.Add(item); return r; }
        public static ImagingSelection WithCode(this ImagingSelection r, CodeableConcept value) { r.Code = value; return r; }
        public static ImagingSelection AddContained(this ImagingSelection r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static ImagingSelection AddDerivedFrom(this ImagingSelection r, ReferenceType item) { r.DerivedFrom ??= new List<ReferenceType>(); r.DerivedFrom!.Add(item); return r; }
        public static ImagingSelection AddEndpoint(this ImagingSelection r, ReferenceType item) { r.Endpoint ??= new List<ReferenceType>(); r.Endpoint!.Add(item); return r; }
        public static ImagingSelection AddFocus(this ImagingSelection r, ReferenceType item) { r.Focus ??= new List<ReferenceType>(); r.Focus!.Add(item); return r; }
        public static ImagingSelection WithFrameOfReferenceUid(this ImagingSelection r, FhirId value) { r.FrameOfReferenceUid = value; return r; }
        public static ImagingSelection AddIdentifier(this ImagingSelection r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static ImagingSelection AddInstance(this ImagingSelection r, BackboneElement item) { r.Instance ??= new List<BackboneElement>(); r.Instance!.Add(item); return r; }
        public static ImagingSelection WithIssued(this ImagingSelection r, FhirInstant value) { r.Issued = value; return r; }
        public static ImagingSelection AddPerformer(this ImagingSelection r, BackboneElement item) { r.Performer ??= new List<BackboneElement>(); r.Performer!.Add(item); return r; }
        public static ImagingSelection WithSeriesNumber(this ImagingSelection r, FhirUnsignedInt value) { r.SeriesNumber = value; return r; }
        public static ImagingSelection WithSeriesUid(this ImagingSelection r, FhirId value) { r.SeriesUid = value; return r; }
        public static ImagingSelection WithStatus(this ImagingSelection r, FhirCode value) { r.Status = value; return r; }
        public static ImagingSelection WithStudyUid(this ImagingSelection r, FhirId value) { r.StudyUid = value; return r; }
        public static ImagingSelection WithSubject(this ImagingSelection r, ReferenceType value) { r.Subject = value; return r; }
        public static ImagingSelection WithText(this ImagingSelection r, Narrative value) { r.Text = value; return r; }
    }
}
