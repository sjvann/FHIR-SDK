// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// A Map of relationships between 2 structures that can be used to transform data
    /// </summary>
    public partial class StructureMap : ResourceBase
    {
        public override string ResourceType => "StructureMap";

        public StructureMap() { }
        public StructureMap(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public StructureMap(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private List<StructureMap_Const>? _const;
        [JsonPropertyName("const")]
        public List<StructureMap_Const>? Const { get => _const; set { _const = value; OnPropertyChangedByClr(nameof(Const), value); } }

        /// <summary>
        /// Definition of the constant value used in the map rules
        /// </summary>
        public partial class StructureMap_Const : BackboneElement<StructureMap_Const>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "StructureMap_Const" : "structureMap_Const";
            private FhirId? _name;
        [JsonPropertyName("name")]
        public FhirId? Name { get => _name; set { _name = value; } }

            private FhirString? _value;
        [JsonPropertyName("value")]
        public FhirString? Value { get => _value; set { _value = value; } }

        }

        private List<ContactDetail>? _contact;
        [JsonPropertyName("contact")]
        public List<ContactDetail>? Contact { get => _contact; set { _contact = value; OnPropertyChangedByClr(nameof(Contact), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private FhirMarkdown? _copyright;
        [JsonPropertyName("copyright")]
        public FhirMarkdown? Copyright { get => _copyright; set { _copyright = value; OnPropertyChangedByClr(nameof(Copyright), value); } }

        private FhirString? _copyrightLabel;
        [JsonPropertyName("copyrightLabel")]
        public FhirString? CopyrightLabel { get => _copyrightLabel; set { _copyrightLabel = value; OnPropertyChangedByClr(nameof(CopyrightLabel), value); } }

        private FhirDateTime? _date;
        [JsonPropertyName("date")]
        public FhirDateTime? Date { get => _date; set { _date = value; OnPropertyChangedByClr(nameof(Date), value); } }

        private FhirMarkdown? _description;
        [JsonPropertyName("description")]
        public FhirMarkdown? Description { get => _description; set { _description = value; OnPropertyChangedByClr(nameof(Description), value); } }

        private FhirBoolean? _experimental;
        [JsonPropertyName("experimental")]
        public FhirBoolean? Experimental { get => _experimental; set { _experimental = value; OnPropertyChangedByClr(nameof(Experimental), value); } }

        private List<StructureMap_Group> _group = new();
        [JsonPropertyName("group")]
        public List<StructureMap_Group> Group { get => _group; set { _group = value; OnPropertyChangedByClr(nameof(Group), value); } }

        /// <summary>
        /// Named sections for reader convenience
        /// </summary>
        public partial class StructureMap_Group : BackboneElement<StructureMap_Group>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "StructureMap_Group" : "structureMap_Group";
            private FhirString? _documentation;
        [JsonPropertyName("documentation")]
        public FhirString? Documentation { get => _documentation; set { _documentation = value; } }

            private FhirId? _extends;
        [JsonPropertyName("extends")]
        public FhirId? Extends { get => _extends; set { _extends = value; } }

            private List<StructureMap_Group_Input> _input = new();
        [JsonPropertyName("input")]
        public List<StructureMap_Group_Input> Input { get => _input; set { _input = value; } }

            /// <summary>
            /// Named instance provided when invoking the map
            /// </summary>
            public partial class StructureMap_Group_Input : BackboneElement<StructureMap_Group_Input>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "StructureMap_Group_Input" : "structureMap_Group_Input";
                private FhirString? _documentation;
        [JsonPropertyName("documentation")]
        public FhirString? Documentation { get => _documentation; set { _documentation = value; } }

                private FhirCode? _mode;
        [JsonPropertyName("mode")]
        public FhirCode Mode { get => _mode ?? throw new InvalidOperationException("Mode is required"); set { _mode = value; } }

                private FhirId? _name;
        [JsonPropertyName("name")]
        public FhirId Name { get => _name ?? throw new InvalidOperationException("Name is required"); set { _name = value; } }

                private FhirString? _type;
        [JsonPropertyName("type")]
        public FhirString? Type { get => _type; set { _type = value; } }

            }

            private FhirId? _name;
        [JsonPropertyName("name")]
        public FhirId Name { get => _name ?? throw new InvalidOperationException("Name is required"); set { _name = value; } }

            private List<StructureMap_Group_Rule>? _rule;
        [JsonPropertyName("rule")]
        public List<StructureMap_Group_Rule>? Rule { get => _rule; set { _rule = value; } }

            /// <summary>
            /// Transform Rule from source to target
            /// </summary>
            public partial class StructureMap_Group_Rule : BackboneElement<StructureMap_Group_Rule>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "StructureMap_Group_Rule" : "structureMap_Group_Rule";
                private List<StructureMap_Group_Rule_Dependent>? _dependent;
        [JsonPropertyName("dependent")]
        public List<StructureMap_Group_Rule_Dependent>? Dependent { get => _dependent; set { _dependent = value; } }

                /// <summary>
                /// Which other rules to apply in the context of this rule
                /// </summary>
                public partial class StructureMap_Group_Rule_Dependent : BackboneElement<StructureMap_Group_Rule_Dependent>
                {
                    public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "StructureMap_Group_Rule_Dependent" : "structureMap_Group_Rule_Dependent";
                    private FhirId? _name;
        [JsonPropertyName("name")]
        public FhirId Name { get => _name ?? throw new InvalidOperationException("Name is required"); set { _name = value; } }

                    private List<FhirString> _parameter = new();
        [JsonPropertyName("parameter")]
        public List<FhirString> Parameter { get => _parameter; set { _parameter = value; } }

                }

                private FhirString? _documentation;
        [JsonPropertyName("documentation")]
        public FhirString? Documentation { get => _documentation; set { _documentation = value; } }

                private FhirId? _name;
        [JsonPropertyName("name")]
        public FhirId? Name { get => _name; set { _name = value; } }

                private List<FhirString>? _rule;
        [JsonPropertyName("rule")]
        public List<FhirString>? Rule { get => _rule; set { _rule = value; } }

                private List<StructureMap_Group_Rule_Source> _source = new();
        [JsonPropertyName("source")]
        public List<StructureMap_Group_Rule_Source> Source { get => _source; set { _source = value; } }

                /// <summary>
                /// Source inputs to the mapping
                /// </summary>
                public partial class StructureMap_Group_Rule_Source : BackboneElement<StructureMap_Group_Rule_Source>
                {
                    public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "StructureMap_Group_Rule_Source" : "structureMap_Group_Rule_Source";
                    private FhirString? _check;
        [JsonPropertyName("check")]
        public FhirString? Check { get => _check; set { _check = value; } }

                    private FhirString? _condition;
        [JsonPropertyName("condition")]
        public FhirString? Condition { get => _condition; set { _condition = value; } }

                    private FhirId? _context;
        [JsonPropertyName("context")]
        public FhirId Context { get => _context ?? throw new InvalidOperationException("Context is required"); set { _context = value; } }

                    private FhirString? _defaultValue;
        [JsonPropertyName("defaultValue")]
        public FhirString? DefaultValue { get => _defaultValue; set { _defaultValue = value; } }

                    private FhirString? _element;
        [JsonPropertyName("element")]
        public FhirString? Element { get => _element; set { _element = value; } }

                    private FhirCode? _listMode;
        [JsonPropertyName("listMode")]
        public FhirCode? ListMode { get => _listMode; set { _listMode = value; } }

                    private FhirString? _logMessage;
        [JsonPropertyName("logMessage")]
        public FhirString? LogMessage { get => _logMessage; set { _logMessage = value; } }

                    private FhirString? _max;
        [JsonPropertyName("max")]
        public FhirString? Max { get => _max; set { _max = value; } }

                    private FhirInteger? _min;
        [JsonPropertyName("min")]
        public FhirInteger? Min { get => _min; set { _min = value; } }

                    private FhirString? _type;
        [JsonPropertyName("type")]
        public FhirString? Type { get => _type; set { _type = value; } }

                    private FhirId? _variable;
        [JsonPropertyName("variable")]
        public FhirId? Variable { get => _variable; set { _variable = value; } }

                }

                private List<StructureMap_Group_Rule_Target>? _target;
        [JsonPropertyName("target")]
        public List<StructureMap_Group_Rule_Target>? Target { get => _target; set { _target = value; } }

                /// <summary>
                /// Content to create because of this mapping rule
                /// </summary>
                public partial class StructureMap_Group_Rule_Target : BackboneElement<StructureMap_Group_Rule_Target>
                {
                    public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "StructureMap_Group_Rule_Target" : "structureMap_Group_Rule_Target";
                    private FhirString? _context;
        [JsonPropertyName("context")]
        public FhirString? Context { get => _context; set { _context = value; } }

                    private FhirString? _element;
        [JsonPropertyName("element")]
        public FhirString? Element { get => _element; set { _element = value; } }

                    private List<FhirCode>? _listMode;
        [JsonPropertyName("listMode")]
        public List<FhirCode>? ListMode { get => _listMode; set { _listMode = value; } }

                    private FhirId? _listRuleId;
        [JsonPropertyName("listRuleId")]
        public FhirId? ListRuleId { get => _listRuleId; set { _listRuleId = value; } }

                    private List<StructureMap_Group_Rule_Target_Parameter>? _parameter;
        [JsonPropertyName("parameter")]
        public List<StructureMap_Group_Rule_Target_Parameter>? Parameter { get => _parameter; set { _parameter = value; } }

                    /// <summary>
                    /// Parameters to the transform
                    /// </summary>
                    public partial class StructureMap_Group_Rule_Target_Parameter : BackboneElement<StructureMap_Group_Rule_Target_Parameter>
                    {
                        public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "StructureMap_Group_Rule_Target_Parameter" : "structureMap_Group_Rule_Target_Parameter";
                        private FhirId? _valueid;
        [JsonPropertyName("valueid")]
        public FhirId? Valueid { get => _valueid; set { _valueid = value; if (value != null) {{ _valueString = null; OnPropertyChanged("valueString", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valueDecimal = null; OnPropertyChanged("valueDecimal", null); _valuedate = null; OnPropertyChanged("valuedate", null); _valueTime = null; OnPropertyChanged("valueTime", null); _valueDateTime = null; OnPropertyChanged("valueDateTime", null); }}; OnPropertyChanged("valueid", value); } }

                        private FhirString? _valueString;
        [JsonPropertyName("valueString")]
        public FhirString? ValueString { get => _valueString; set { _valueString = value; if (value != null) {{ _valueid = null; OnPropertyChanged("valueid", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valueDecimal = null; OnPropertyChanged("valueDecimal", null); _valuedate = null; OnPropertyChanged("valuedate", null); _valueTime = null; OnPropertyChanged("valueTime", null); _valueDateTime = null; OnPropertyChanged("valueDateTime", null); }}; OnPropertyChanged("valueString", value); } }

                        private FhirBoolean? _valueBoolean;
        [JsonPropertyName("valueBoolean")]
        public FhirBoolean? ValueBoolean { get => _valueBoolean; set { _valueBoolean = value; if (value != null) {{ _valueid = null; OnPropertyChanged("valueid", null); _valueString = null; OnPropertyChanged("valueString", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valueDecimal = null; OnPropertyChanged("valueDecimal", null); _valuedate = null; OnPropertyChanged("valuedate", null); _valueTime = null; OnPropertyChanged("valueTime", null); _valueDateTime = null; OnPropertyChanged("valueDateTime", null); }}; OnPropertyChanged("valueBoolean", value); } }

                        private FhirInteger? _valueInteger;
        [JsonPropertyName("valueInteger")]
        public FhirInteger? ValueInteger { get => _valueInteger; set { _valueInteger = value; if (value != null) {{ _valueid = null; OnPropertyChanged("valueid", null); _valueString = null; OnPropertyChanged("valueString", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueDecimal = null; OnPropertyChanged("valueDecimal", null); _valuedate = null; OnPropertyChanged("valuedate", null); _valueTime = null; OnPropertyChanged("valueTime", null); _valueDateTime = null; OnPropertyChanged("valueDateTime", null); }}; OnPropertyChanged("valueInteger", value); } }

                        private FhirDecimal? _valueDecimal;
        [JsonPropertyName("valueDecimal")]
        public FhirDecimal? ValueDecimal { get => _valueDecimal; set { _valueDecimal = value; if (value != null) {{ _valueid = null; OnPropertyChanged("valueid", null); _valueString = null; OnPropertyChanged("valueString", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valuedate = null; OnPropertyChanged("valuedate", null); _valueTime = null; OnPropertyChanged("valueTime", null); _valueDateTime = null; OnPropertyChanged("valueDateTime", null); }}; OnPropertyChanged("valueDecimal", value); } }

                        private FhirDate? _valuedate;
        [JsonPropertyName("valuedate")]
        public FhirDate? Valuedate { get => _valuedate; set { _valuedate = value; if (value != null) {{ _valueid = null; OnPropertyChanged("valueid", null); _valueString = null; OnPropertyChanged("valueString", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valueDecimal = null; OnPropertyChanged("valueDecimal", null); _valueTime = null; OnPropertyChanged("valueTime", null); _valueDateTime = null; OnPropertyChanged("valueDateTime", null); }}; OnPropertyChanged("valuedate", value); } }

                        private FhirTime? _valueTime;
        [JsonPropertyName("valueTime")]
        public FhirTime? ValueTime { get => _valueTime; set { _valueTime = value; if (value != null) {{ _valueid = null; OnPropertyChanged("valueid", null); _valueString = null; OnPropertyChanged("valueString", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valueDecimal = null; OnPropertyChanged("valueDecimal", null); _valuedate = null; OnPropertyChanged("valuedate", null); _valueDateTime = null; OnPropertyChanged("valueDateTime", null); }}; OnPropertyChanged("valueTime", value); } }

                        private FhirDateTime? _valueDateTime;
        [JsonPropertyName("valueDateTime")]
        public FhirDateTime? ValueDateTime { get => _valueDateTime; set { _valueDateTime = value; if (value != null) {{ _valueid = null; OnPropertyChanged("valueid", null); _valueString = null; OnPropertyChanged("valueString", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valueDecimal = null; OnPropertyChanged("valueDecimal", null); _valuedate = null; OnPropertyChanged("valuedate", null); _valueTime = null; OnPropertyChanged("valueTime", null); }}; OnPropertyChanged("valueDateTime", value); } }

                    }

                    private FhirCode? _transform;
        [JsonPropertyName("transform")]
        public FhirCode? Transform { get => _transform; set { _transform = value; } }

                    private FhirId? _variable;
        [JsonPropertyName("variable")]
        public FhirId? Variable { get => _variable; set { _variable = value; } }

                }

            }

            private FhirCode? _typeMode;
        [JsonPropertyName("typeMode")]
        public FhirCode? TypeMode { get => _typeMode; set { _typeMode = value; } }

        }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private List<FhirCanonical>? _import;
        [JsonPropertyName("import")]
        public List<FhirCanonical>? Import { get => _import; set { _import = value; OnPropertyChangedByClr(nameof(Import), value); } }

        private List<CodeableConcept>? _jurisdiction;
        [JsonPropertyName("jurisdiction")]
        public List<CodeableConcept>? Jurisdiction { get => _jurisdiction; set { _jurisdiction = value; OnPropertyChangedByClr(nameof(Jurisdiction), value); } }

        private FhirString? _name;
        [JsonPropertyName("name")]
        public FhirString Name { get => _name ?? throw new InvalidOperationException("Name is required"); set { _name = value; OnPropertyChangedByClr(nameof(Name), value); } }

        private FhirString? _publisher;
        [JsonPropertyName("publisher")]
        public FhirString? Publisher { get => _publisher; set { _publisher = value; OnPropertyChangedByClr(nameof(Publisher), value); } }

        private FhirMarkdown? _purpose;
        [JsonPropertyName("purpose")]
        public FhirMarkdown? Purpose { get => _purpose; set { _purpose = value; OnPropertyChangedByClr(nameof(Purpose), value); } }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode Status { get => _status ?? throw new InvalidOperationException("Status is required"); set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private List<StructureMap_Structure>? _structure;
        [JsonPropertyName("structure")]
        public List<StructureMap_Structure>? Structure { get => _structure; set { _structure = value; OnPropertyChangedByClr(nameof(Structure), value); } }

        /// <summary>
        /// Structure Definition used by this map
        /// </summary>
        public partial class StructureMap_Structure : BackboneElement<StructureMap_Structure>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "StructureMap_Structure" : "structureMap_Structure";
            private FhirString? _alias;
        [JsonPropertyName("alias")]
        public FhirString? Alias { get => _alias; set { _alias = value; } }

            private FhirString? _documentation;
        [JsonPropertyName("documentation")]
        public FhirString? Documentation { get => _documentation; set { _documentation = value; } }

            private FhirCode? _mode;
        [JsonPropertyName("mode")]
        public FhirCode Mode { get => _mode ?? throw new InvalidOperationException("Mode is required"); set { _mode = value; } }

            private FhirCanonical? _url;
        [JsonPropertyName("url")]
        public FhirCanonical Url { get => _url ?? throw new InvalidOperationException("Url is required"); set { _url = value; } }

        }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

        private FhirString? _title;
        [JsonPropertyName("title")]
        public FhirString? Title { get => _title; set { _title = value; OnPropertyChangedByClr(nameof(Title), value); } }

        private FhirUri? _url;
        [JsonPropertyName("url")]
        public FhirUri Url { get => _url ?? throw new InvalidOperationException("Url is required"); set { _url = value; OnPropertyChangedByClr(nameof(Url), value); } }

        private List<UsageContext>? _useContext;
        [JsonPropertyName("useContext")]
        public List<UsageContext>? UseContext { get => _useContext; set { _useContext = value; OnPropertyChangedByClr(nameof(UseContext), value); } }

        private FhirString? _version;
        [JsonPropertyName("version")]
        public FhirString? Version { get => _version; set { _version = value; OnPropertyChangedByClr(nameof(Version), value); } }

        private FhirString? _versionAlgorithmString;
        [JsonPropertyName("versionAlgorithmString")]
        public FhirString? VersionAlgorithmString { get => _versionAlgorithmString; set { _versionAlgorithmString = value; if (value != null) {{ _versionAlgorithmCoding = null; OnPropertyChangedByClr(nameof(VersionAlgorithmCoding), null); }}; OnPropertyChangedByClr(nameof(VersionAlgorithmString), value); } }

        private Coding? _versionAlgorithmCoding;
        [JsonPropertyName("versionAlgorithmCoding")]
        public Coding? VersionAlgorithmCoding { get => _versionAlgorithmCoding; set { _versionAlgorithmCoding = value; if (value != null) {{ _versionAlgorithmString = null; OnPropertyChangedByClr(nameof(VersionAlgorithmString), null); }}; OnPropertyChangedByClr(nameof(VersionAlgorithmCoding), value); } }

    }
}
