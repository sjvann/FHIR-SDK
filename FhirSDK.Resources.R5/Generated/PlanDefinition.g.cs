// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// The definition of a plan for a series of actions, independent of any specific patient or context
    /// </summary>
    public partial class PlanDefinition : ResourceBase
    {
        public override string ResourceType => "PlanDefinition";

        public PlanDefinition() { }
        public PlanDefinition(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public PlanDefinition(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private List<PlanDefinition_Action>? _action;
        [JsonPropertyName("action")]
        public List<PlanDefinition_Action>? Action { get => _action; set { _action = value; OnPropertyChangedByClr(nameof(Action), value); } }

        /// <summary>
        /// Action defined by the plan
        /// </summary>
        public partial class PlanDefinition_Action : BackboneElement<PlanDefinition_Action>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "PlanDefinition_Action" : "planDefinition_Action";
            private List<FhirString>? _action;
        [JsonPropertyName("action")]
        public List<FhirString>? Action { get => _action; set { _action = value; } }

            private FhirCode? _cardinalityBehavior;
        [JsonPropertyName("cardinalityBehavior")]
        public FhirCode? CardinalityBehavior { get => _cardinalityBehavior; set { _cardinalityBehavior = value; } }

            private CodeableConcept? _code;
        [JsonPropertyName("code")]
        public CodeableConcept? Code { get => _code; set { _code = value; } }

            private List<PlanDefinition_Action_Condition>? _condition;
        [JsonPropertyName("condition")]
        public List<PlanDefinition_Action_Condition>? Condition { get => _condition; set { _condition = value; } }

            /// <summary>
            /// Whether or not the action is applicable
            /// </summary>
            public partial class PlanDefinition_Action_Condition : BackboneElement<PlanDefinition_Action_Condition>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "PlanDefinition_Action_Condition" : "planDefinition_Action_Condition";
                private DataTypeServices.DataTypes.MetaTypes.ExpressionType? _expression;
        [JsonPropertyName("expression")]
        public DataTypeServices.DataTypes.MetaTypes.ExpressionType? Expression { get => _expression; set { _expression = value; } }

                private FhirCode? _kind;
        [JsonPropertyName("kind")]
        public FhirCode Kind { get => _kind ?? throw new InvalidOperationException("Kind is required"); set { _kind = value; } }

            }

            private FhirCanonical? _definitioncanonical;
        [JsonPropertyName("definitioncanonical")]
        public FhirCanonical? Definitioncanonical { get => _definitioncanonical; set { _definitioncanonical = value; if (value != null) {{ _definitionuri = null; OnPropertyChanged("definitionuri", null); }}; OnPropertyChanged("definitioncanonical", value); } }

            private FhirUri? _definitionuri;
        [JsonPropertyName("definitionuri")]
        public FhirUri? Definitionuri { get => _definitionuri; set { _definitionuri = value; if (value != null) {{ _definitioncanonical = null; OnPropertyChanged("definitioncanonical", null); }}; OnPropertyChanged("definitionuri", value); } }

            private FhirMarkdown? _description;
        [JsonPropertyName("description")]
        public FhirMarkdown? Description { get => _description; set { _description = value; } }

            private List<RelatedArtifact>? _documentation;
        [JsonPropertyName("documentation")]
        public List<RelatedArtifact>? Documentation { get => _documentation; set { _documentation = value; } }

            private List<PlanDefinition_Action_DynamicValue>? _dynamicValue;
        [JsonPropertyName("dynamicValue")]
        public List<PlanDefinition_Action_DynamicValue>? DynamicValue { get => _dynamicValue; set { _dynamicValue = value; } }

            /// <summary>
            /// Dynamic aspects of the definition
            /// </summary>
            public partial class PlanDefinition_Action_DynamicValue : BackboneElement<PlanDefinition_Action_DynamicValue>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "PlanDefinition_Action_DynamicValue" : "planDefinition_Action_DynamicValue";
                private DataTypeServices.DataTypes.MetaTypes.ExpressionType? _expression;
        [JsonPropertyName("expression")]
        public DataTypeServices.DataTypes.MetaTypes.ExpressionType? Expression { get => _expression; set { _expression = value; } }

                private FhirString? _path;
        [JsonPropertyName("path")]
        public FhirString? Path { get => _path; set { _path = value; } }

            }

            private List<FhirId>? _goalId;
        [JsonPropertyName("goalId")]
        public List<FhirId>? GoalId { get => _goalId; set { _goalId = value; } }

            private FhirCode? _groupingBehavior;
        [JsonPropertyName("groupingBehavior")]
        public FhirCode? GroupingBehavior { get => _groupingBehavior; set { _groupingBehavior = value; } }

            private List<PlanDefinition_Action_Input>? _input;
        [JsonPropertyName("input")]
        public List<PlanDefinition_Action_Input>? Input { get => _input; set { _input = value; } }

            /// <summary>
            /// Input data requirements
            /// </summary>
            public partial class PlanDefinition_Action_Input : BackboneElement<PlanDefinition_Action_Input>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "PlanDefinition_Action_Input" : "planDefinition_Action_Input";
                private FhirId? _relatedData;
        [JsonPropertyName("relatedData")]
        public FhirId? RelatedData { get => _relatedData; set { _relatedData = value; } }

                private DataRequirement? _requirement;
        [JsonPropertyName("requirement")]
        public DataRequirement? Requirement { get => _requirement; set { _requirement = value; } }

                private FhirString? _title;
        [JsonPropertyName("title")]
        public FhirString? Title { get => _title; set { _title = value; } }

            }

            private FhirString? _linkId;
        [JsonPropertyName("linkId")]
        public FhirString? LinkId { get => _linkId; set { _linkId = value; } }

            private CodeableReference? _location;
        [JsonPropertyName("location")]
        public CodeableReference? Location { get => _location; set { _location = value; } }

            private List<PlanDefinition_Action_Output>? _output;
        [JsonPropertyName("output")]
        public List<PlanDefinition_Action_Output>? Output { get => _output; set { _output = value; } }

            /// <summary>
            /// Output data definition
            /// </summary>
            public partial class PlanDefinition_Action_Output : BackboneElement<PlanDefinition_Action_Output>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "PlanDefinition_Action_Output" : "planDefinition_Action_Output";
                private FhirString? _relatedData;
        [JsonPropertyName("relatedData")]
        public FhirString? RelatedData { get => _relatedData; set { _relatedData = value; } }

                private DataRequirement? _requirement;
        [JsonPropertyName("requirement")]
        public DataRequirement? Requirement { get => _requirement; set { _requirement = value; } }

                private FhirString? _title;
        [JsonPropertyName("title")]
        public FhirString? Title { get => _title; set { _title = value; } }

            }

            private List<PlanDefinition_Action_Participant>? _participant;
        [JsonPropertyName("participant")]
        public List<PlanDefinition_Action_Participant>? Participant { get => _participant; set { _participant = value; } }

            /// <summary>
            /// Who should participate in the action
            /// </summary>
            public partial class PlanDefinition_Action_Participant : BackboneElement<PlanDefinition_Action_Participant>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "PlanDefinition_Action_Participant" : "planDefinition_Action_Participant";
                private FhirString? _actorId;
        [JsonPropertyName("actorId")]
        public FhirString? ActorId { get => _actorId; set { _actorId = value; } }

                private CodeableConcept? _function;
        [JsonPropertyName("function")]
        public CodeableConcept? Function { get => _function; set { _function = value; } }

                private CodeableConcept? _role;
        [JsonPropertyName("role")]
        public CodeableConcept? Role { get => _role; set { _role = value; } }

                private FhirCode? _type;
        [JsonPropertyName("type")]
        public FhirCode? Type { get => _type; set { _type = value; } }

                private FhirCanonical? _typeCanonical;
        [JsonPropertyName("typeCanonical")]
        public FhirCanonical? TypeCanonical { get => _typeCanonical; set { _typeCanonical = value; } }

                private ReferenceType? _typeReference;
        [JsonPropertyName("typeReference")]
        public ReferenceType? TypeReference { get => _typeReference; set { _typeReference = value; } }

            }

            private FhirCode? _precheckBehavior;
        [JsonPropertyName("precheckBehavior")]
        public FhirCode? PrecheckBehavior { get => _precheckBehavior; set { _precheckBehavior = value; } }

            private FhirString? _prefix;
        [JsonPropertyName("prefix")]
        public FhirString? Prefix { get => _prefix; set { _prefix = value; } }

            private FhirCode? _priority;
        [JsonPropertyName("priority")]
        public FhirCode? Priority { get => _priority; set { _priority = value; } }

            private List<CodeableConcept>? _reason;
        [JsonPropertyName("reason")]
        public List<CodeableConcept>? Reason { get => _reason; set { _reason = value; } }

            private List<PlanDefinition_Action_RelatedAction>? _relatedAction;
        [JsonPropertyName("relatedAction")]
        public List<PlanDefinition_Action_RelatedAction>? RelatedAction { get => _relatedAction; set { _relatedAction = value; } }

            /// <summary>
            /// Relationship to another action
            /// </summary>
            public partial class PlanDefinition_Action_RelatedAction : BackboneElement<PlanDefinition_Action_RelatedAction>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "PlanDefinition_Action_RelatedAction" : "planDefinition_Action_RelatedAction";
                private FhirCode? _endRelationship;
        [JsonPropertyName("endRelationship")]
        public FhirCode? EndRelationship { get => _endRelationship; set { _endRelationship = value; } }

                private Duration? _offsetDuration;
        [JsonPropertyName("offsetDuration")]
        public Duration? OffsetDuration { get => _offsetDuration; set { _offsetDuration = value; if (value != null) {{ _offsetRange = null; OnPropertyChanged("offsetRange", null); }}; OnPropertyChanged("offsetDuration", value); } }

                private DataTypeServices.DataTypes.ComplexTypes.Range? _offsetRange;
        [JsonPropertyName("offsetRange")]
        public DataTypeServices.DataTypes.ComplexTypes.Range? OffsetRange { get => _offsetRange; set { _offsetRange = value; if (value != null) {{ _offsetDuration = null; OnPropertyChanged("offsetDuration", null); }}; OnPropertyChanged("offsetRange", value); } }

                private FhirCode? _relationship;
        [JsonPropertyName("relationship")]
        public FhirCode Relationship { get => _relationship ?? throw new InvalidOperationException("Relationship is required"); set { _relationship = value; } }

                private FhirId? _targetId;
        [JsonPropertyName("targetId")]
        public FhirId TargetId { get => _targetId ?? throw new InvalidOperationException("TargetId is required"); set { _targetId = value; } }

            }

            private FhirCode? _requiredBehavior;
        [JsonPropertyName("requiredBehavior")]
        public FhirCode? RequiredBehavior { get => _requiredBehavior; set { _requiredBehavior = value; } }

            private FhirCode? _selectionBehavior;
        [JsonPropertyName("selectionBehavior")]
        public FhirCode? SelectionBehavior { get => _selectionBehavior; set { _selectionBehavior = value; } }

            private CodeableConcept? _subjectCodeableConcept;
        [JsonPropertyName("subjectCodeableConcept")]
        public CodeableConcept? SubjectCodeableConcept { get => _subjectCodeableConcept; set { _subjectCodeableConcept = value; if (value != null) {{ _subjectReference = null; OnPropertyChanged("subjectReference", null); _subjectcanonical = null; OnPropertyChanged("subjectcanonical", null); }}; OnPropertyChanged("subjectCodeableConcept", value); } }

            private ReferenceType? _subjectReference;
        [JsonPropertyName("subjectReference")]
        public ReferenceType? SubjectReference { get => _subjectReference; set { _subjectReference = value; if (value != null) {{ _subjectCodeableConcept = null; OnPropertyChanged("subjectCodeableConcept", null); _subjectcanonical = null; OnPropertyChanged("subjectcanonical", null); }}; OnPropertyChanged("subjectReference", value); } }

            private FhirCanonical? _subjectcanonical;
        [JsonPropertyName("subjectcanonical")]
        public FhirCanonical? Subjectcanonical { get => _subjectcanonical; set { _subjectcanonical = value; if (value != null) {{ _subjectCodeableConcept = null; OnPropertyChanged("subjectCodeableConcept", null); _subjectReference = null; OnPropertyChanged("subjectReference", null); }}; OnPropertyChanged("subjectcanonical", value); } }

            private FhirMarkdown? _textEquivalent;
        [JsonPropertyName("textEquivalent")]
        public FhirMarkdown? TextEquivalent { get => _textEquivalent; set { _textEquivalent = value; } }

            private Age? _timingAge;
        [JsonPropertyName("timingAge")]
        public Age? TimingAge { get => _timingAge; set { _timingAge = value; if (value != null) {{ _timingDuration = null; OnPropertyChanged("timingDuration", null); _timingRange = null; OnPropertyChanged("timingRange", null); _timingTiming = null; OnPropertyChanged("timingTiming", null); }}; OnPropertyChanged("timingAge", value); } }

            private Duration? _timingDuration;
        [JsonPropertyName("timingDuration")]
        public Duration? TimingDuration { get => _timingDuration; set { _timingDuration = value; if (value != null) {{ _timingAge = null; OnPropertyChanged("timingAge", null); _timingRange = null; OnPropertyChanged("timingRange", null); _timingTiming = null; OnPropertyChanged("timingTiming", null); }}; OnPropertyChanged("timingDuration", value); } }

            private DataTypeServices.DataTypes.ComplexTypes.Range? _timingRange;
        [JsonPropertyName("timingRange")]
        public DataTypeServices.DataTypes.ComplexTypes.Range? TimingRange { get => _timingRange; set { _timingRange = value; if (value != null) {{ _timingAge = null; OnPropertyChanged("timingAge", null); _timingDuration = null; OnPropertyChanged("timingDuration", null); _timingTiming = null; OnPropertyChanged("timingTiming", null); }}; OnPropertyChanged("timingRange", value); } }

            private Timing? _timingTiming;
        [JsonPropertyName("timingTiming")]
        public Timing? TimingTiming { get => _timingTiming; set { _timingTiming = value; if (value != null) {{ _timingAge = null; OnPropertyChanged("timingAge", null); _timingDuration = null; OnPropertyChanged("timingDuration", null); _timingRange = null; OnPropertyChanged("timingRange", null); }}; OnPropertyChanged("timingTiming", value); } }

            private FhirString? _title;
        [JsonPropertyName("title")]
        public FhirString? Title { get => _title; set { _title = value; } }

            private FhirCanonical? _transform;
        [JsonPropertyName("transform")]
        public FhirCanonical? Transform { get => _transform; set { _transform = value; } }

            private List<TriggerDefinition>? _trigger;
        [JsonPropertyName("trigger")]
        public List<TriggerDefinition>? Trigger { get => _trigger; set { _trigger = value; } }

            private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept? Type { get => _type; set { _type = value; } }

        }

        private List<PlanDefinition_Actor>? _actor;
        [JsonPropertyName("actor")]
        public List<PlanDefinition_Actor>? Actor { get => _actor; set { _actor = value; OnPropertyChangedByClr(nameof(Actor), value); } }

        /// <summary>
        /// Actors within the plan
        /// </summary>
        public partial class PlanDefinition_Actor : BackboneElement<PlanDefinition_Actor>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "PlanDefinition_Actor" : "planDefinition_Actor";
            private FhirMarkdown? _description;
        [JsonPropertyName("description")]
        public FhirMarkdown? Description { get => _description; set { _description = value; } }

            private List<PlanDefinition_Actor_Option> _option = new();
        [JsonPropertyName("option")]
        public List<PlanDefinition_Actor_Option> Option { get => _option; set { _option = value; } }

            /// <summary>
            /// Who or what can be this actor
            /// </summary>
            public partial class PlanDefinition_Actor_Option : BackboneElement<PlanDefinition_Actor_Option>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "PlanDefinition_Actor_Option" : "planDefinition_Actor_Option";
                private CodeableConcept? _role;
        [JsonPropertyName("role")]
        public CodeableConcept? Role { get => _role; set { _role = value; } }

                private FhirCode? _type;
        [JsonPropertyName("type")]
        public FhirCode? Type { get => _type; set { _type = value; } }

                private FhirCanonical? _typeCanonical;
        [JsonPropertyName("typeCanonical")]
        public FhirCanonical? TypeCanonical { get => _typeCanonical; set { _typeCanonical = value; } }

                private ReferenceType? _typeReference;
        [JsonPropertyName("typeReference")]
        public ReferenceType? TypeReference { get => _typeReference; set { _typeReference = value; } }

            }

            private FhirString? _title;
        [JsonPropertyName("title")]
        public FhirString? Title { get => _title; set { _title = value; } }

        }

        private FhirDate? _approvalDate;
        [JsonPropertyName("approvalDate")]
        public FhirDate? ApprovalDate { get => _approvalDate; set { _approvalDate = value; OnPropertyChangedByClr(nameof(ApprovalDate), value); } }

        private FhirBoolean? _asNeededBoolean;
        [JsonPropertyName("asNeededBoolean")]
        public FhirBoolean? AsNeededBoolean { get => _asNeededBoolean; set { _asNeededBoolean = value; if (value != null) {{ _asNeededCodeableConcept = null; OnPropertyChangedByClr(nameof(AsNeededCodeableConcept), null); }}; OnPropertyChangedByClr(nameof(AsNeededBoolean), value); } }

        private CodeableConcept? _asNeededCodeableConcept;
        [JsonPropertyName("asNeededCodeableConcept")]
        public CodeableConcept? AsNeededCodeableConcept { get => _asNeededCodeableConcept; set { _asNeededCodeableConcept = value; if (value != null) {{ _asNeededBoolean = null; OnPropertyChangedByClr(nameof(AsNeededBoolean), null); }}; OnPropertyChangedByClr(nameof(AsNeededCodeableConcept), value); } }

        private List<ContactDetail>? _author;
        [JsonPropertyName("author")]
        public List<ContactDetail>? Author { get => _author; set { _author = value; OnPropertyChangedByClr(nameof(Author), value); } }

        private List<ContactDetail>? _contact;
        [JsonPropertyName("contact")]
        public List<ContactDetail>? Contact { get => _contact; set { _contact = value; OnPropertyChangedByClr(nameof(Contact), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private FhirMarkdown? _copyright;
        [JsonPropertyName("copyright")]
        public FhirMarkdown? Copyright { get => _copyright; set { _copyright = value; OnPropertyChangedByClr(nameof(Copyright), value); } }

        private FhirString? _copyrightLabel;
        [JsonPropertyName("copyrightLabel")]
        public FhirString? CopyrightLabel { get => _copyrightLabel; set { _copyrightLabel = value; OnPropertyChangedByClr(nameof(CopyrightLabel), value); } }

        private FhirDateTime? _date;
        [JsonPropertyName("date")]
        public FhirDateTime? Date { get => _date; set { _date = value; OnPropertyChangedByClr(nameof(Date), value); } }

        private FhirMarkdown? _description;
        [JsonPropertyName("description")]
        public FhirMarkdown? Description { get => _description; set { _description = value; OnPropertyChangedByClr(nameof(Description), value); } }

        private List<ContactDetail>? _editor;
        [JsonPropertyName("editor")]
        public List<ContactDetail>? Editor { get => _editor; set { _editor = value; OnPropertyChangedByClr(nameof(Editor), value); } }

        private Period? _effectivePeriod;
        [JsonPropertyName("effectivePeriod")]
        public Period? EffectivePeriod { get => _effectivePeriod; set { _effectivePeriod = value; OnPropertyChangedByClr(nameof(EffectivePeriod), value); } }

        private List<ContactDetail>? _endorser;
        [JsonPropertyName("endorser")]
        public List<ContactDetail>? Endorser { get => _endorser; set { _endorser = value; OnPropertyChangedByClr(nameof(Endorser), value); } }

        private FhirBoolean? _experimental;
        [JsonPropertyName("experimental")]
        public FhirBoolean? Experimental { get => _experimental; set { _experimental = value; OnPropertyChangedByClr(nameof(Experimental), value); } }

        private List<PlanDefinition_Goal>? _goal;
        [JsonPropertyName("goal")]
        public List<PlanDefinition_Goal>? Goal { get => _goal; set { _goal = value; OnPropertyChangedByClr(nameof(Goal), value); } }

        /// <summary>
        /// What the plan is trying to accomplish
        /// </summary>
        public partial class PlanDefinition_Goal : BackboneElement<PlanDefinition_Goal>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "PlanDefinition_Goal" : "planDefinition_Goal";
            private List<CodeableConcept>? _addresses;
        [JsonPropertyName("addresses")]
        public List<CodeableConcept>? Addresses { get => _addresses; set { _addresses = value; } }

            private CodeableConcept? _category;
        [JsonPropertyName("category")]
        public CodeableConcept? Category { get => _category; set { _category = value; } }

            private CodeableConcept? _description;
        [JsonPropertyName("description")]
        public CodeableConcept Description { get => _description ?? throw new InvalidOperationException("Description is required"); set { _description = value; } }

            private List<RelatedArtifact>? _documentation;
        [JsonPropertyName("documentation")]
        public List<RelatedArtifact>? Documentation { get => _documentation; set { _documentation = value; } }

            private CodeableConcept? _priority;
        [JsonPropertyName("priority")]
        public CodeableConcept? Priority { get => _priority; set { _priority = value; } }

            private CodeableConcept? _start;
        [JsonPropertyName("start")]
        public CodeableConcept? Start { get => _start; set { _start = value; } }

            private List<PlanDefinition_Goal_Target>? _target;
        [JsonPropertyName("target")]
        public List<PlanDefinition_Goal_Target>? Target { get => _target; set { _target = value; } }

            /// <summary>
            /// Target outcome for the goal
            /// </summary>
            public partial class PlanDefinition_Goal_Target : BackboneElement<PlanDefinition_Goal_Target>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "PlanDefinition_Goal_Target" : "planDefinition_Goal_Target";
                private Quantity? _detailQuantity;
        [JsonPropertyName("detailQuantity")]
        public Quantity? DetailQuantity { get => _detailQuantity; set { _detailQuantity = value; if (value != null) {{ _detailRange = null; OnPropertyChanged("detailRange", null); _detailCodeableConcept = null; OnPropertyChanged("detailCodeableConcept", null); _detailString = null; OnPropertyChanged("detailString", null); _detailBoolean = null; OnPropertyChanged("detailBoolean", null); _detailInteger = null; OnPropertyChanged("detailInteger", null); _detailRatio = null; OnPropertyChanged("detailRatio", null); }}; OnPropertyChanged("detailQuantity", value); } }

                private DataTypeServices.DataTypes.ComplexTypes.Range? _detailRange;
        [JsonPropertyName("detailRange")]
        public DataTypeServices.DataTypes.ComplexTypes.Range? DetailRange { get => _detailRange; set { _detailRange = value; if (value != null) {{ _detailQuantity = null; OnPropertyChanged("detailQuantity", null); _detailCodeableConcept = null; OnPropertyChanged("detailCodeableConcept", null); _detailString = null; OnPropertyChanged("detailString", null); _detailBoolean = null; OnPropertyChanged("detailBoolean", null); _detailInteger = null; OnPropertyChanged("detailInteger", null); _detailRatio = null; OnPropertyChanged("detailRatio", null); }}; OnPropertyChanged("detailRange", value); } }

                private CodeableConcept? _detailCodeableConcept;
        [JsonPropertyName("detailCodeableConcept")]
        public CodeableConcept? DetailCodeableConcept { get => _detailCodeableConcept; set { _detailCodeableConcept = value; if (value != null) {{ _detailQuantity = null; OnPropertyChanged("detailQuantity", null); _detailRange = null; OnPropertyChanged("detailRange", null); _detailString = null; OnPropertyChanged("detailString", null); _detailBoolean = null; OnPropertyChanged("detailBoolean", null); _detailInteger = null; OnPropertyChanged("detailInteger", null); _detailRatio = null; OnPropertyChanged("detailRatio", null); }}; OnPropertyChanged("detailCodeableConcept", value); } }

                private FhirString? _detailString;
        [JsonPropertyName("detailString")]
        public FhirString? DetailString { get => _detailString; set { _detailString = value; if (value != null) {{ _detailQuantity = null; OnPropertyChanged("detailQuantity", null); _detailRange = null; OnPropertyChanged("detailRange", null); _detailCodeableConcept = null; OnPropertyChanged("detailCodeableConcept", null); _detailBoolean = null; OnPropertyChanged("detailBoolean", null); _detailInteger = null; OnPropertyChanged("detailInteger", null); _detailRatio = null; OnPropertyChanged("detailRatio", null); }}; OnPropertyChanged("detailString", value); } }

                private FhirBoolean? _detailBoolean;
        [JsonPropertyName("detailBoolean")]
        public FhirBoolean? DetailBoolean { get => _detailBoolean; set { _detailBoolean = value; if (value != null) {{ _detailQuantity = null; OnPropertyChanged("detailQuantity", null); _detailRange = null; OnPropertyChanged("detailRange", null); _detailCodeableConcept = null; OnPropertyChanged("detailCodeableConcept", null); _detailString = null; OnPropertyChanged("detailString", null); _detailInteger = null; OnPropertyChanged("detailInteger", null); _detailRatio = null; OnPropertyChanged("detailRatio", null); }}; OnPropertyChanged("detailBoolean", value); } }

                private FhirInteger? _detailInteger;
        [JsonPropertyName("detailInteger")]
        public FhirInteger? DetailInteger { get => _detailInteger; set { _detailInteger = value; if (value != null) {{ _detailQuantity = null; OnPropertyChanged("detailQuantity", null); _detailRange = null; OnPropertyChanged("detailRange", null); _detailCodeableConcept = null; OnPropertyChanged("detailCodeableConcept", null); _detailString = null; OnPropertyChanged("detailString", null); _detailBoolean = null; OnPropertyChanged("detailBoolean", null); _detailRatio = null; OnPropertyChanged("detailRatio", null); }}; OnPropertyChanged("detailInteger", value); } }

                private Ratio? _detailRatio;
        [JsonPropertyName("detailRatio")]
        public Ratio? DetailRatio { get => _detailRatio; set { _detailRatio = value; if (value != null) {{ _detailQuantity = null; OnPropertyChanged("detailQuantity", null); _detailRange = null; OnPropertyChanged("detailRange", null); _detailCodeableConcept = null; OnPropertyChanged("detailCodeableConcept", null); _detailString = null; OnPropertyChanged("detailString", null); _detailBoolean = null; OnPropertyChanged("detailBoolean", null); _detailInteger = null; OnPropertyChanged("detailInteger", null); }}; OnPropertyChanged("detailRatio", value); } }

                private Duration? _due;
        [JsonPropertyName("due")]
        public Duration? Due { get => _due; set { _due = value; } }

                private CodeableConcept? _measure;
        [JsonPropertyName("measure")]
        public CodeableConcept? Measure { get => _measure; set { _measure = value; } }

            }

        }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private List<CodeableConcept>? _jurisdiction;
        [JsonPropertyName("jurisdiction")]
        public List<CodeableConcept>? Jurisdiction { get => _jurisdiction; set { _jurisdiction = value; OnPropertyChangedByClr(nameof(Jurisdiction), value); } }

        private FhirDate? _lastReviewDate;
        [JsonPropertyName("lastReviewDate")]
        public FhirDate? LastReviewDate { get => _lastReviewDate; set { _lastReviewDate = value; OnPropertyChangedByClr(nameof(LastReviewDate), value); } }

        private List<FhirCanonical>? _library;
        [JsonPropertyName("library")]
        public List<FhirCanonical>? Library { get => _library; set { _library = value; OnPropertyChangedByClr(nameof(Library), value); } }

        private FhirString? _name;
        [JsonPropertyName("name")]
        public FhirString? Name { get => _name; set { _name = value; OnPropertyChangedByClr(nameof(Name), value); } }

        private FhirString? _publisher;
        [JsonPropertyName("publisher")]
        public FhirString? Publisher { get => _publisher; set { _publisher = value; OnPropertyChangedByClr(nameof(Publisher), value); } }

        private FhirMarkdown? _purpose;
        [JsonPropertyName("purpose")]
        public FhirMarkdown? Purpose { get => _purpose; set { _purpose = value; OnPropertyChangedByClr(nameof(Purpose), value); } }

        private List<RelatedArtifact>? _relatedArtifact;
        [JsonPropertyName("relatedArtifact")]
        public List<RelatedArtifact>? RelatedArtifact { get => _relatedArtifact; set { _relatedArtifact = value; OnPropertyChangedByClr(nameof(RelatedArtifact), value); } }

        private List<ContactDetail>? _reviewer;
        [JsonPropertyName("reviewer")]
        public List<ContactDetail>? Reviewer { get => _reviewer; set { _reviewer = value; OnPropertyChangedByClr(nameof(Reviewer), value); } }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode Status { get => _status ?? throw new InvalidOperationException("Status is required"); set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private CodeableConcept? _subjectCodeableConcept;
        [JsonPropertyName("subjectCodeableConcept")]
        public CodeableConcept? SubjectCodeableConcept { get => _subjectCodeableConcept; set { _subjectCodeableConcept = value; if (value != null) {{ _subjectReference = null; OnPropertyChangedByClr(nameof(SubjectReference), null); _subjectcanonical = null; OnPropertyChangedByClr(nameof(Subjectcanonical), null); }}; OnPropertyChangedByClr(nameof(SubjectCodeableConcept), value); } }

        private ReferenceType? _subjectReference;
        [JsonPropertyName("subjectReference")]
        public ReferenceType? SubjectReference { get => _subjectReference; set { _subjectReference = value; if (value != null) {{ _subjectCodeableConcept = null; OnPropertyChangedByClr(nameof(SubjectCodeableConcept), null); _subjectcanonical = null; OnPropertyChangedByClr(nameof(Subjectcanonical), null); }}; OnPropertyChangedByClr(nameof(SubjectReference), value); } }

        private FhirCanonical? _subjectcanonical;
        [JsonPropertyName("subjectcanonical")]
        public FhirCanonical? Subjectcanonical { get => _subjectcanonical; set { _subjectcanonical = value; if (value != null) {{ _subjectCodeableConcept = null; OnPropertyChangedByClr(nameof(SubjectCodeableConcept), null); _subjectReference = null; OnPropertyChangedByClr(nameof(SubjectReference), null); }}; OnPropertyChangedByClr(nameof(Subjectcanonical), value); } }

        private FhirString? _subtitle;
        [JsonPropertyName("subtitle")]
        public FhirString? Subtitle { get => _subtitle; set { _subtitle = value; OnPropertyChangedByClr(nameof(Subtitle), value); } }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

        private FhirString? _title;
        [JsonPropertyName("title")]
        public FhirString? Title { get => _title; set { _title = value; OnPropertyChangedByClr(nameof(Title), value); } }

        private List<CodeableConcept>? _topic;
        [JsonPropertyName("topic")]
        public List<CodeableConcept>? Topic { get => _topic; set { _topic = value; OnPropertyChangedByClr(nameof(Topic), value); } }

        private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept? Type { get => _type; set { _type = value; OnPropertyChangedByClr(nameof(Type), value); } }

        private FhirUri? _url;
        [JsonPropertyName("url")]
        public FhirUri? Url { get => _url; set { _url = value; OnPropertyChangedByClr(nameof(Url), value); } }

        private FhirMarkdown? _usage;
        [JsonPropertyName("usage")]
        public FhirMarkdown? Usage { get => _usage; set { _usage = value; OnPropertyChangedByClr(nameof(Usage), value); } }

        private List<UsageContext>? _useContext;
        [JsonPropertyName("useContext")]
        public List<UsageContext>? UseContext { get => _useContext; set { _useContext = value; OnPropertyChangedByClr(nameof(UseContext), value); } }

        private FhirString? _version;
        [JsonPropertyName("version")]
        public FhirString? Version { get => _version; set { _version = value; OnPropertyChangedByClr(nameof(Version), value); } }

        private FhirString? _versionAlgorithmString;
        [JsonPropertyName("versionAlgorithmString")]
        public FhirString? VersionAlgorithmString { get => _versionAlgorithmString; set { _versionAlgorithmString = value; if (value != null) {{ _versionAlgorithmCoding = null; OnPropertyChangedByClr(nameof(VersionAlgorithmCoding), null); }}; OnPropertyChangedByClr(nameof(VersionAlgorithmString), value); } }

        private Coding? _versionAlgorithmCoding;
        [JsonPropertyName("versionAlgorithmCoding")]
        public Coding? VersionAlgorithmCoding { get => _versionAlgorithmCoding; set { _versionAlgorithmCoding = value; if (value != null) {{ _versionAlgorithmString = null; OnPropertyChangedByClr(nameof(VersionAlgorithmString), null); }}; OnPropertyChangedByClr(nameof(VersionAlgorithmCoding), value); } }

    }
}
