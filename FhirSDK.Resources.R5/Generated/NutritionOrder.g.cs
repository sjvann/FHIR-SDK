// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// Diet, formula or nutritional supplement request
    /// </summary>
    public partial class NutritionOrder : ResourceBase
    {
        public override string ResourceType => "NutritionOrder";

        public NutritionOrder() { }
        public NutritionOrder(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public NutritionOrder(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private List<ReferenceType>? _allergyIntolerance;
        [JsonPropertyName("allergyIntolerance")]
        public List<ReferenceType>? AllergyIntolerance { get => _allergyIntolerance; set { _allergyIntolerance = value; OnPropertyChangedByClr(nameof(AllergyIntolerance), value); } }

        private List<ReferenceType>? _basedOn;
        [JsonPropertyName("basedOn")]
        public List<ReferenceType>? BasedOn { get => _basedOn; set { _basedOn = value; OnPropertyChangedByClr(nameof(BasedOn), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private FhirDateTime? _dateTime;
        [JsonPropertyName("dateTime")]
        public FhirDateTime DateTime { get => _dateTime ?? throw new InvalidOperationException("DateTime is required"); set { _dateTime = value; OnPropertyChangedByClr(nameof(DateTime), value); } }

        private ReferenceType? _encounter;
        [JsonPropertyName("encounter")]
        public ReferenceType? Encounter { get => _encounter; set { _encounter = value; OnPropertyChangedByClr(nameof(Encounter), value); } }

        private NutritionOrder_EnteralFormula? _enteralFormula;
        [JsonPropertyName("enteralFormula")]
        public NutritionOrder_EnteralFormula? EnteralFormula { get => _enteralFormula; set { _enteralFormula = value; OnPropertyChangedByClr(nameof(EnteralFormula), value); } }

        /// <summary>
        /// Enteral formula components
        /// </summary>
        public partial class NutritionOrder_EnteralFormula : BackboneElement<NutritionOrder_EnteralFormula>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "NutritionOrder_EnteralFormula" : "nutritionOrder_EnteralFormula";
            private List<NutritionOrder_EnteralFormula_Additive>? _additive;
        [JsonPropertyName("additive")]
        public List<NutritionOrder_EnteralFormula_Additive>? Additive { get => _additive; set { _additive = value; } }

            /// <summary>
            /// Components to add to the feeding
            /// </summary>
            public partial class NutritionOrder_EnteralFormula_Additive : BackboneElement<NutritionOrder_EnteralFormula_Additive>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "NutritionOrder_EnteralFormula_Additive" : "nutritionOrder_EnteralFormula_Additive";
                private FhirString? _productName;
        [JsonPropertyName("productName")]
        public FhirString? ProductName { get => _productName; set { _productName = value; } }

                private Quantity? _quantity;
        [JsonPropertyName("quantity")]
        public Quantity? Quantity { get => _quantity; set { _quantity = value; } }

                private CodeableReference? _type;
        [JsonPropertyName("type")]
        public CodeableReference? Type { get => _type; set { _type = value; } }

            }

            private List<NutritionOrder_EnteralFormula_Administration>? _administration;
        [JsonPropertyName("administration")]
        public List<NutritionOrder_EnteralFormula_Administration>? Administration { get => _administration; set { _administration = value; } }

            /// <summary>
            /// Formula feeding instruction as structured data
            /// </summary>
            public partial class NutritionOrder_EnteralFormula_Administration : BackboneElement<NutritionOrder_EnteralFormula_Administration>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "NutritionOrder_EnteralFormula_Administration" : "nutritionOrder_EnteralFormula_Administration";
                private Quantity? _quantity;
        [JsonPropertyName("quantity")]
        public Quantity? Quantity { get => _quantity; set { _quantity = value; } }

                private Quantity? _rateQuantity;
        [JsonPropertyName("rateQuantity")]
        public Quantity? RateQuantity { get => _rateQuantity; set { _rateQuantity = value; if (value != null) {{ _rateRatio = null; OnPropertyChanged("rateRatio", null); }}; OnPropertyChanged("rateQuantity", value); } }

                private Ratio? _rateRatio;
        [JsonPropertyName("rateRatio")]
        public Ratio? RateRatio { get => _rateRatio; set { _rateRatio = value; if (value != null) {{ _rateQuantity = null; OnPropertyChanged("rateQuantity", null); }}; OnPropertyChanged("rateRatio", value); } }

                private NutritionOrder_EnteralFormula_Administration_Schedule? _schedule;
        [JsonPropertyName("schedule")]
        public NutritionOrder_EnteralFormula_Administration_Schedule? Schedule { get => _schedule; set { _schedule = value; } }

                /// <summary>
                /// Scheduling information for enteral formula products
                /// </summary>
                public partial class NutritionOrder_EnteralFormula_Administration_Schedule : BackboneElement<NutritionOrder_EnteralFormula_Administration_Schedule>
                {
                    public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "NutritionOrder_EnteralFormula_Administration_Schedule" : "nutritionOrder_EnteralFormula_Administration_Schedule";
                    private FhirBoolean? _asNeeded;
        [JsonPropertyName("asNeeded")]
        public FhirBoolean? AsNeeded { get => _asNeeded; set { _asNeeded = value; } }

                    private CodeableConcept? _asNeededFor;
        [JsonPropertyName("asNeededFor")]
        public CodeableConcept? AsNeededFor { get => _asNeededFor; set { _asNeededFor = value; } }

                    private List<Timing>? _timing;
        [JsonPropertyName("timing")]
        public List<Timing>? Timing { get => _timing; set { _timing = value; } }

                }

            }

            private FhirMarkdown? _administrationInstruction;
        [JsonPropertyName("administrationInstruction")]
        public FhirMarkdown? AdministrationInstruction { get => _administrationInstruction; set { _administrationInstruction = value; } }

            private FhirString? _baseFormulaProductName;
        [JsonPropertyName("baseFormulaProductName")]
        public FhirString? BaseFormulaProductName { get => _baseFormulaProductName; set { _baseFormulaProductName = value; } }

            private CodeableReference? _baseFormulaType;
        [JsonPropertyName("baseFormulaType")]
        public CodeableReference? BaseFormulaType { get => _baseFormulaType; set { _baseFormulaType = value; } }

            private Quantity? _caloricDensity;
        [JsonPropertyName("caloricDensity")]
        public Quantity? CaloricDensity { get => _caloricDensity; set { _caloricDensity = value; } }

            private List<CodeableReference>? _deliveryDevice;
        [JsonPropertyName("deliveryDevice")]
        public List<CodeableReference>? DeliveryDevice { get => _deliveryDevice; set { _deliveryDevice = value; } }

            private Quantity? _maxVolumeToDeliver;
        [JsonPropertyName("maxVolumeToDeliver")]
        public Quantity? MaxVolumeToDeliver { get => _maxVolumeToDeliver; set { _maxVolumeToDeliver = value; } }

            private CodeableConcept? _routeOfAdministration;
        [JsonPropertyName("routeOfAdministration")]
        public CodeableConcept? RouteOfAdministration { get => _routeOfAdministration; set { _routeOfAdministration = value; } }

        }

        private List<CodeableConcept>? _excludeFoodModifier;
        [JsonPropertyName("excludeFoodModifier")]
        public List<CodeableConcept>? ExcludeFoodModifier { get => _excludeFoodModifier; set { _excludeFoodModifier = value; OnPropertyChangedByClr(nameof(ExcludeFoodModifier), value); } }

        private List<CodeableConcept>? _foodPreferenceModifier;
        [JsonPropertyName("foodPreferenceModifier")]
        public List<CodeableConcept>? FoodPreferenceModifier { get => _foodPreferenceModifier; set { _foodPreferenceModifier = value; OnPropertyChangedByClr(nameof(FoodPreferenceModifier), value); } }

        private Identifier? _groupIdentifier;
        [JsonPropertyName("groupIdentifier")]
        public Identifier? GroupIdentifier { get => _groupIdentifier; set { _groupIdentifier = value; OnPropertyChangedByClr(nameof(GroupIdentifier), value); } }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private List<FhirUri>? _instantiates;
        [JsonPropertyName("instantiates")]
        public List<FhirUri>? Instantiates { get => _instantiates; set { _instantiates = value; OnPropertyChangedByClr(nameof(Instantiates), value); } }

        private List<FhirCanonical>? _instantiatesCanonical;
        [JsonPropertyName("instantiatesCanonical")]
        public List<FhirCanonical>? InstantiatesCanonical { get => _instantiatesCanonical; set { _instantiatesCanonical = value; OnPropertyChangedByClr(nameof(InstantiatesCanonical), value); } }

        private List<FhirUri>? _instantiatesUri;
        [JsonPropertyName("instantiatesUri")]
        public List<FhirUri>? InstantiatesUri { get => _instantiatesUri; set { _instantiatesUri = value; OnPropertyChangedByClr(nameof(InstantiatesUri), value); } }

        private FhirCode? _intent;
        [JsonPropertyName("intent")]
        public FhirCode Intent { get => _intent ?? throw new InvalidOperationException("Intent is required"); set { _intent = value; OnPropertyChangedByClr(nameof(Intent), value); } }

        private List<Annotation>? _note;
        [JsonPropertyName("note")]
        public List<Annotation>? Note { get => _note; set { _note = value; OnPropertyChangedByClr(nameof(Note), value); } }

        private NutritionOrder_OralDiet? _oralDiet;
        [JsonPropertyName("oralDiet")]
        public NutritionOrder_OralDiet? OralDiet { get => _oralDiet; set { _oralDiet = value; OnPropertyChangedByClr(nameof(OralDiet), value); } }

        /// <summary>
        /// Oral diet components
        /// </summary>
        public partial class NutritionOrder_OralDiet : BackboneElement<NutritionOrder_OralDiet>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "NutritionOrder_OralDiet" : "nutritionOrder_OralDiet";
            private List<CodeableConcept>? _fluidConsistencyType;
        [JsonPropertyName("fluidConsistencyType")]
        public List<CodeableConcept>? FluidConsistencyType { get => _fluidConsistencyType; set { _fluidConsistencyType = value; } }

            private FhirString? _instruction;
        [JsonPropertyName("instruction")]
        public FhirString? Instruction { get => _instruction; set { _instruction = value; } }

            private List<NutritionOrder_OralDiet_Nutrient>? _nutrient;
        [JsonPropertyName("nutrient")]
        public List<NutritionOrder_OralDiet_Nutrient>? Nutrient { get => _nutrient; set { _nutrient = value; } }

            /// <summary>
            /// Required  nutrient modifications
            /// </summary>
            public partial class NutritionOrder_OralDiet_Nutrient : BackboneElement<NutritionOrder_OralDiet_Nutrient>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "NutritionOrder_OralDiet_Nutrient" : "nutritionOrder_OralDiet_Nutrient";
                private Quantity? _amount;
        [JsonPropertyName("amount")]
        public Quantity? Amount { get => _amount; set { _amount = value; } }

                private CodeableConcept? _modifier;
        [JsonPropertyName("modifier")]
        public CodeableConcept? Modifier { get => _modifier; set { _modifier = value; } }

            }

            private NutritionOrder_OralDiet_Schedule? _schedule;
        [JsonPropertyName("schedule")]
        public NutritionOrder_OralDiet_Schedule? Schedule { get => _schedule; set { _schedule = value; } }

            /// <summary>
            /// Scheduling information for oral diets
            /// </summary>
            public partial class NutritionOrder_OralDiet_Schedule : BackboneElement<NutritionOrder_OralDiet_Schedule>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "NutritionOrder_OralDiet_Schedule" : "nutritionOrder_OralDiet_Schedule";
                private FhirBoolean? _asNeeded;
        [JsonPropertyName("asNeeded")]
        public FhirBoolean? AsNeeded { get => _asNeeded; set { _asNeeded = value; } }

                private CodeableConcept? _asNeededFor;
        [JsonPropertyName("asNeededFor")]
        public CodeableConcept? AsNeededFor { get => _asNeededFor; set { _asNeededFor = value; } }

                private List<Timing>? _timing;
        [JsonPropertyName("timing")]
        public List<Timing>? Timing { get => _timing; set { _timing = value; } }

            }

            private List<NutritionOrder_OralDiet_Texture>? _texture;
        [JsonPropertyName("texture")]
        public List<NutritionOrder_OralDiet_Texture>? Texture { get => _texture; set { _texture = value; } }

            /// <summary>
            /// Required  texture modifications
            /// </summary>
            public partial class NutritionOrder_OralDiet_Texture : BackboneElement<NutritionOrder_OralDiet_Texture>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "NutritionOrder_OralDiet_Texture" : "nutritionOrder_OralDiet_Texture";
                private CodeableConcept? _foodType;
        [JsonPropertyName("foodType")]
        public CodeableConcept? FoodType { get => _foodType; set { _foodType = value; } }

                private CodeableConcept? _modifier;
        [JsonPropertyName("modifier")]
        public CodeableConcept? Modifier { get => _modifier; set { _modifier = value; } }

            }

            private List<CodeableConcept>? _type;
        [JsonPropertyName("type")]
        public List<CodeableConcept>? Type { get => _type; set { _type = value; } }

        }

        private ReferenceType? _orderer;
        [JsonPropertyName("orderer")]
        public ReferenceType? Orderer { get => _orderer; set { _orderer = value; OnPropertyChangedByClr(nameof(Orderer), value); } }

        private FhirBoolean? _outsideFoodAllowed;
        [JsonPropertyName("outsideFoodAllowed")]
        public FhirBoolean? OutsideFoodAllowed { get => _outsideFoodAllowed; set { _outsideFoodAllowed = value; OnPropertyChangedByClr(nameof(OutsideFoodAllowed), value); } }

        private List<CodeableReference>? _performer;
        [JsonPropertyName("performer")]
        public List<CodeableReference>? Performer { get => _performer; set { _performer = value; OnPropertyChangedByClr(nameof(Performer), value); } }

        private FhirCode? _priority;
        [JsonPropertyName("priority")]
        public FhirCode? Priority { get => _priority; set { _priority = value; OnPropertyChangedByClr(nameof(Priority), value); } }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode Status { get => _status ?? throw new InvalidOperationException("Status is required"); set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private ReferenceType? _subject;
        [JsonPropertyName("subject")]
        public ReferenceType Subject { get => _subject ?? throw new InvalidOperationException("Subject is required"); set { _subject = value; OnPropertyChangedByClr(nameof(Subject), value); } }

        private List<NutritionOrder_Supplement>? _supplement;
        [JsonPropertyName("supplement")]
        public List<NutritionOrder_Supplement>? Supplement { get => _supplement; set { _supplement = value; OnPropertyChangedByClr(nameof(Supplement), value); } }

        /// <summary>
        /// Supplement components
        /// </summary>
        public partial class NutritionOrder_Supplement : BackboneElement<NutritionOrder_Supplement>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "NutritionOrder_Supplement" : "nutritionOrder_Supplement";
            private FhirString? _instruction;
        [JsonPropertyName("instruction")]
        public FhirString? Instruction { get => _instruction; set { _instruction = value; } }

            private FhirString? _productName;
        [JsonPropertyName("productName")]
        public FhirString? ProductName { get => _productName; set { _productName = value; } }

            private Quantity? _quantity;
        [JsonPropertyName("quantity")]
        public Quantity? Quantity { get => _quantity; set { _quantity = value; } }

            private NutritionOrder_Supplement_Schedule? _schedule;
        [JsonPropertyName("schedule")]
        public NutritionOrder_Supplement_Schedule? Schedule { get => _schedule; set { _schedule = value; } }

            /// <summary>
            /// Scheduling information for supplements
            /// </summary>
            public partial class NutritionOrder_Supplement_Schedule : BackboneElement<NutritionOrder_Supplement_Schedule>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "NutritionOrder_Supplement_Schedule" : "nutritionOrder_Supplement_Schedule";
                private FhirBoolean? _asNeeded;
        [JsonPropertyName("asNeeded")]
        public FhirBoolean? AsNeeded { get => _asNeeded; set { _asNeeded = value; } }

                private CodeableConcept? _asNeededFor;
        [JsonPropertyName("asNeededFor")]
        public CodeableConcept? AsNeededFor { get => _asNeededFor; set { _asNeededFor = value; } }

                private List<Timing>? _timing;
        [JsonPropertyName("timing")]
        public List<Timing>? Timing { get => _timing; set { _timing = value; } }

            }

            private CodeableReference? _type;
        [JsonPropertyName("type")]
        public CodeableReference? Type { get => _type; set { _type = value; } }

        }

        private List<ReferenceType>? _supportingInformation;
        [JsonPropertyName("supportingInformation")]
        public List<ReferenceType>? SupportingInformation { get => _supportingInformation; set { _supportingInformation = value; OnPropertyChangedByClr(nameof(SupportingInformation), value); } }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

    }
}
