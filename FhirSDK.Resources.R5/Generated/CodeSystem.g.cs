// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// Declares the existence of and describes a code system or code system supplement
    /// </summary>
    public partial class CodeSystem : ResourceBase
    {
        public override string ResourceType => "CodeSystem";

        public CodeSystem() { }
        public CodeSystem(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public CodeSystem(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private FhirDate? _approvalDate;
        [JsonPropertyName("approvalDate")]
        public FhirDate? ApprovalDate { get => _approvalDate; set { _approvalDate = value; OnPropertyChangedByClr(nameof(ApprovalDate), value); } }

        private List<ContactDetail>? _author;
        [JsonPropertyName("author")]
        public List<ContactDetail>? Author { get => _author; set { _author = value; OnPropertyChangedByClr(nameof(Author), value); } }

        private FhirBoolean? _caseSensitive;
        [JsonPropertyName("caseSensitive")]
        public FhirBoolean? CaseSensitive { get => _caseSensitive; set { _caseSensitive = value; OnPropertyChangedByClr(nameof(CaseSensitive), value); } }

        private FhirBoolean? _compositional;
        [JsonPropertyName("compositional")]
        public FhirBoolean? Compositional { get => _compositional; set { _compositional = value; OnPropertyChangedByClr(nameof(Compositional), value); } }

        private List<CodeSystem_Concept>? _concept;
        [JsonPropertyName("concept")]
        public List<CodeSystem_Concept>? Concept { get => _concept; set { _concept = value; OnPropertyChangedByClr(nameof(Concept), value); } }

        /// <summary>
        /// Concepts in the code system
        /// </summary>
        public partial class CodeSystem_Concept : BackboneElement<CodeSystem_Concept>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "CodeSystem_Concept" : "codeSystem_Concept";
            private FhirCode? _code;
        [JsonPropertyName("code")]
        public FhirCode Code { get => _code ?? throw new InvalidOperationException("Code is required"); set { _code = value; } }

            private List<FhirString>? _concept;
        [JsonPropertyName("concept")]
        public List<FhirString>? Concept { get => _concept; set { _concept = value; } }

            private FhirString? _definition;
        [JsonPropertyName("definition")]
        public FhirString? Definition { get => _definition; set { _definition = value; } }

            private List<CodeSystem_Concept_Designation>? _designation;
        [JsonPropertyName("designation")]
        public List<CodeSystem_Concept_Designation>? Designation { get => _designation; set { _designation = value; } }

            /// <summary>
            /// Additional representations for the concept
            /// </summary>
            public partial class CodeSystem_Concept_Designation : BackboneElement<CodeSystem_Concept_Designation>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "CodeSystem_Concept_Designation" : "codeSystem_Concept_Designation";
                private List<Coding>? _additionalUse;
        [JsonPropertyName("additionalUse")]
        public List<Coding>? AdditionalUse { get => _additionalUse; set { _additionalUse = value; } }

                private FhirCode? _language;
        [JsonPropertyName("language")]
        public FhirCode? Language { get => _language; set { _language = value; } }

                private Coding? _use;
        [JsonPropertyName("use")]
        public Coding? Use { get => _use; set { _use = value; } }

                private FhirString? _value;
        [JsonPropertyName("value")]
        public FhirString Value { get => _value ?? throw new InvalidOperationException("Value is required"); set { _value = value; } }

            }

            private FhirString? _display;
        [JsonPropertyName("display")]
        public FhirString? Display { get => _display; set { _display = value; } }

            private List<CodeSystem_Concept_Property>? _property;
        [JsonPropertyName("property")]
        public List<CodeSystem_Concept_Property>? Property { get => _property; set { _property = value; } }

            /// <summary>
            /// Property value for the concept
            /// </summary>
            public partial class CodeSystem_Concept_Property : BackboneElement<CodeSystem_Concept_Property>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "CodeSystem_Concept_Property" : "codeSystem_Concept_Property";
                private FhirCode? _code;
        [JsonPropertyName("code")]
        public FhirCode Code { get => _code ?? throw new InvalidOperationException("Code is required"); set { _code = value; } }

                private FhirCode? _valuecode;
        [JsonPropertyName("valuecode")]
        public FhirCode? Valuecode { get => _valuecode; set { _valuecode = value; if (value != null) {{ _valueCoding = null; OnPropertyChanged("valueCoding", null); _valueString = null; OnPropertyChanged("valueString", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueDateTime = null; OnPropertyChanged("valueDateTime", null); _valueDecimal = null; OnPropertyChanged("valueDecimal", null); }}; OnPropertyChanged("valuecode", value); } }

                private Coding? _valueCoding;
        [JsonPropertyName("valueCoding")]
        public Coding? ValueCoding { get => _valueCoding; set { _valueCoding = value; if (value != null) {{ _valuecode = null; OnPropertyChanged("valuecode", null); _valueString = null; OnPropertyChanged("valueString", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueDateTime = null; OnPropertyChanged("valueDateTime", null); _valueDecimal = null; OnPropertyChanged("valueDecimal", null); }}; OnPropertyChanged("valueCoding", value); } }

                private FhirString? _valueString;
        [JsonPropertyName("valueString")]
        public FhirString? ValueString { get => _valueString; set { _valueString = value; if (value != null) {{ _valuecode = null; OnPropertyChanged("valuecode", null); _valueCoding = null; OnPropertyChanged("valueCoding", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueDateTime = null; OnPropertyChanged("valueDateTime", null); _valueDecimal = null; OnPropertyChanged("valueDecimal", null); }}; OnPropertyChanged("valueString", value); } }

                private FhirInteger? _valueInteger;
        [JsonPropertyName("valueInteger")]
        public FhirInteger? ValueInteger { get => _valueInteger; set { _valueInteger = value; if (value != null) {{ _valuecode = null; OnPropertyChanged("valuecode", null); _valueCoding = null; OnPropertyChanged("valueCoding", null); _valueString = null; OnPropertyChanged("valueString", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueDateTime = null; OnPropertyChanged("valueDateTime", null); _valueDecimal = null; OnPropertyChanged("valueDecimal", null); }}; OnPropertyChanged("valueInteger", value); } }

                private FhirBoolean? _valueBoolean;
        [JsonPropertyName("valueBoolean")]
        public FhirBoolean? ValueBoolean { get => _valueBoolean; set { _valueBoolean = value; if (value != null) {{ _valuecode = null; OnPropertyChanged("valuecode", null); _valueCoding = null; OnPropertyChanged("valueCoding", null); _valueString = null; OnPropertyChanged("valueString", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valueDateTime = null; OnPropertyChanged("valueDateTime", null); _valueDecimal = null; OnPropertyChanged("valueDecimal", null); }}; OnPropertyChanged("valueBoolean", value); } }

                private FhirDateTime? _valueDateTime;
        [JsonPropertyName("valueDateTime")]
        public FhirDateTime? ValueDateTime { get => _valueDateTime; set { _valueDateTime = value; if (value != null) {{ _valuecode = null; OnPropertyChanged("valuecode", null); _valueCoding = null; OnPropertyChanged("valueCoding", null); _valueString = null; OnPropertyChanged("valueString", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueDecimal = null; OnPropertyChanged("valueDecimal", null); }}; OnPropertyChanged("valueDateTime", value); } }

                private FhirDecimal? _valueDecimal;
        [JsonPropertyName("valueDecimal")]
        public FhirDecimal? ValueDecimal { get => _valueDecimal; set { _valueDecimal = value; if (value != null) {{ _valuecode = null; OnPropertyChanged("valuecode", null); _valueCoding = null; OnPropertyChanged("valueCoding", null); _valueString = null; OnPropertyChanged("valueString", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueDateTime = null; OnPropertyChanged("valueDateTime", null); }}; OnPropertyChanged("valueDecimal", value); } }

            }

        }

        private List<ContactDetail>? _contact;
        [JsonPropertyName("contact")]
        public List<ContactDetail>? Contact { get => _contact; set { _contact = value; OnPropertyChangedByClr(nameof(Contact), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private FhirCode? _content;
        [JsonPropertyName("content")]
        public FhirCode Content { get => _content ?? throw new InvalidOperationException("Content is required"); set { _content = value; OnPropertyChangedByClr(nameof(Content), value); } }

        private FhirMarkdown? _copyright;
        [JsonPropertyName("copyright")]
        public FhirMarkdown? Copyright { get => _copyright; set { _copyright = value; OnPropertyChangedByClr(nameof(Copyright), value); } }

        private FhirString? _copyrightLabel;
        [JsonPropertyName("copyrightLabel")]
        public FhirString? CopyrightLabel { get => _copyrightLabel; set { _copyrightLabel = value; OnPropertyChangedByClr(nameof(CopyrightLabel), value); } }

        private FhirUnsignedInt? _count;
        [JsonPropertyName("count")]
        public FhirUnsignedInt? Count { get => _count; set { _count = value; OnPropertyChangedByClr(nameof(Count), value); } }

        private FhirDateTime? _date;
        [JsonPropertyName("date")]
        public FhirDateTime? Date { get => _date; set { _date = value; OnPropertyChangedByClr(nameof(Date), value); } }

        private FhirMarkdown? _description;
        [JsonPropertyName("description")]
        public FhirMarkdown? Description { get => _description; set { _description = value; OnPropertyChangedByClr(nameof(Description), value); } }

        private List<ContactDetail>? _editor;
        [JsonPropertyName("editor")]
        public List<ContactDetail>? Editor { get => _editor; set { _editor = value; OnPropertyChangedByClr(nameof(Editor), value); } }

        private Period? _effectivePeriod;
        [JsonPropertyName("effectivePeriod")]
        public Period? EffectivePeriod { get => _effectivePeriod; set { _effectivePeriod = value; OnPropertyChangedByClr(nameof(EffectivePeriod), value); } }

        private List<ContactDetail>? _endorser;
        [JsonPropertyName("endorser")]
        public List<ContactDetail>? Endorser { get => _endorser; set { _endorser = value; OnPropertyChangedByClr(nameof(Endorser), value); } }

        private FhirBoolean? _experimental;
        [JsonPropertyName("experimental")]
        public FhirBoolean? Experimental { get => _experimental; set { _experimental = value; OnPropertyChangedByClr(nameof(Experimental), value); } }

        private List<CodeSystem_Filter>? _filter;
        [JsonPropertyName("filter")]
        public List<CodeSystem_Filter>? Filter { get => _filter; set { _filter = value; OnPropertyChangedByClr(nameof(Filter), value); } }

        /// <summary>
        /// Filter that can be used in a value set
        /// </summary>
        public partial class CodeSystem_Filter : BackboneElement<CodeSystem_Filter>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "CodeSystem_Filter" : "codeSystem_Filter";
            private FhirCode? _code;
        [JsonPropertyName("code")]
        public FhirCode Code { get => _code ?? throw new InvalidOperationException("Code is required"); set { _code = value; } }

            private FhirString? _description;
        [JsonPropertyName("description")]
        public FhirString? Description { get => _description; set { _description = value; } }

            private List<FhirCode> _operator = new();
        [JsonPropertyName("operator")]
        public List<FhirCode> Operator { get => _operator; set { _operator = value; } }

            private FhirString? _value;
        [JsonPropertyName("value")]
        public FhirString Value { get => _value ?? throw new InvalidOperationException("Value is required"); set { _value = value; } }

        }

        private FhirCode? _hierarchyMeaning;
        [JsonPropertyName("hierarchyMeaning")]
        public FhirCode? HierarchyMeaning { get => _hierarchyMeaning; set { _hierarchyMeaning = value; OnPropertyChangedByClr(nameof(HierarchyMeaning), value); } }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private List<CodeableConcept>? _jurisdiction;
        [JsonPropertyName("jurisdiction")]
        public List<CodeableConcept>? Jurisdiction { get => _jurisdiction; set { _jurisdiction = value; OnPropertyChangedByClr(nameof(Jurisdiction), value); } }

        private FhirDate? _lastReviewDate;
        [JsonPropertyName("lastReviewDate")]
        public FhirDate? LastReviewDate { get => _lastReviewDate; set { _lastReviewDate = value; OnPropertyChangedByClr(nameof(LastReviewDate), value); } }

        private FhirString? _name;
        [JsonPropertyName("name")]
        public FhirString? Name { get => _name; set { _name = value; OnPropertyChangedByClr(nameof(Name), value); } }

        private List<CodeSystem_Property>? _property;
        [JsonPropertyName("property")]
        public List<CodeSystem_Property>? Property { get => _property; set { _property = value; OnPropertyChangedByClr(nameof(Property), value); } }

        /// <summary>
        /// Additional information supplied about each concept
        /// </summary>
        public partial class CodeSystem_Property : BackboneElement<CodeSystem_Property>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "CodeSystem_Property" : "codeSystem_Property";
            private FhirCode? _code;
        [JsonPropertyName("code")]
        public FhirCode Code { get => _code ?? throw new InvalidOperationException("Code is required"); set { _code = value; } }

            private FhirString? _description;
        [JsonPropertyName("description")]
        public FhirString? Description { get => _description; set { _description = value; } }

            private FhirCode? _type;
        [JsonPropertyName("type")]
        public FhirCode Type { get => _type ?? throw new InvalidOperationException("Type is required"); set { _type = value; } }

            private FhirUri? _uri;
        [JsonPropertyName("uri")]
        public FhirUri? Uri { get => _uri; set { _uri = value; } }

        }

        private FhirString? _publisher;
        [JsonPropertyName("publisher")]
        public FhirString? Publisher { get => _publisher; set { _publisher = value; OnPropertyChangedByClr(nameof(Publisher), value); } }

        private FhirMarkdown? _purpose;
        [JsonPropertyName("purpose")]
        public FhirMarkdown? Purpose { get => _purpose; set { _purpose = value; OnPropertyChangedByClr(nameof(Purpose), value); } }

        private List<RelatedArtifact>? _relatedArtifact;
        [JsonPropertyName("relatedArtifact")]
        public List<RelatedArtifact>? RelatedArtifact { get => _relatedArtifact; set { _relatedArtifact = value; OnPropertyChangedByClr(nameof(RelatedArtifact), value); } }

        private List<ContactDetail>? _reviewer;
        [JsonPropertyName("reviewer")]
        public List<ContactDetail>? Reviewer { get => _reviewer; set { _reviewer = value; OnPropertyChangedByClr(nameof(Reviewer), value); } }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode Status { get => _status ?? throw new InvalidOperationException("Status is required"); set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private FhirCanonical? _supplements;
        [JsonPropertyName("supplements")]
        public FhirCanonical? Supplements { get => _supplements; set { _supplements = value; OnPropertyChangedByClr(nameof(Supplements), value); } }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

        private FhirString? _title;
        [JsonPropertyName("title")]
        public FhirString? Title { get => _title; set { _title = value; OnPropertyChangedByClr(nameof(Title), value); } }

        private List<CodeableConcept>? _topic;
        [JsonPropertyName("topic")]
        public List<CodeableConcept>? Topic { get => _topic; set { _topic = value; OnPropertyChangedByClr(nameof(Topic), value); } }

        private FhirUri? _url;
        [JsonPropertyName("url")]
        public FhirUri? Url { get => _url; set { _url = value; OnPropertyChangedByClr(nameof(Url), value); } }

        private List<UsageContext>? _useContext;
        [JsonPropertyName("useContext")]
        public List<UsageContext>? UseContext { get => _useContext; set { _useContext = value; OnPropertyChangedByClr(nameof(UseContext), value); } }

        private FhirCanonical? _valueSet;
        [JsonPropertyName("valueSet")]
        public FhirCanonical? ValueSet { get => _valueSet; set { _valueSet = value; OnPropertyChangedByClr(nameof(ValueSet), value); } }

        private FhirString? _version;
        [JsonPropertyName("version")]
        public FhirString? Version { get => _version; set { _version = value; OnPropertyChangedByClr(nameof(Version), value); } }

        private FhirString? _versionAlgorithmString;
        [JsonPropertyName("versionAlgorithmString")]
        public FhirString? VersionAlgorithmString { get => _versionAlgorithmString; set { _versionAlgorithmString = value; if (value != null) {{ _versionAlgorithmCoding = null; OnPropertyChangedByClr(nameof(VersionAlgorithmCoding), null); }}; OnPropertyChangedByClr(nameof(VersionAlgorithmString), value); } }

        private Coding? _versionAlgorithmCoding;
        [JsonPropertyName("versionAlgorithmCoding")]
        public Coding? VersionAlgorithmCoding { get => _versionAlgorithmCoding; set { _versionAlgorithmCoding = value; if (value != null) {{ _versionAlgorithmString = null; OnPropertyChangedByClr(nameof(VersionAlgorithmString), null); }}; OnPropertyChangedByClr(nameof(VersionAlgorithmCoding), value); } }

        private FhirBoolean? _versionNeeded;
        [JsonPropertyName("versionNeeded")]
        public FhirBoolean? VersionNeeded { get => _versionNeeded; set { _versionNeeded = value; OnPropertyChangedByClr(nameof(VersionNeeded), value); } }

    }
}
