// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using FhirCore.Interfaces;
using DataTypeServices.TypeFramework;
namespace FhirSDK.Resources.R5
{
    public partial class Organization : ResourceBase
    {
        public override string ResourceType => "Organization";

        public Organization() { }
        public Organization(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public Organization(JsonNode? source) { SetRawFrom(source); }
        // JSON handled by ResourceBase.UpdateRaw via OnPropertyChanged

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }
        private FhirBoolean? _active;
        [JsonPropertyName("active")]
        public FhirBoolean? Active { get => _active; set { _active = value; OnPropertyChangedByClr(nameof(Active), value); } }
        private List<CodeableConcept>? _type;
        [JsonPropertyName("type")]
        public List<CodeableConcept>? Type { get => _type; set { _type = value; OnPropertyChangedByClr(nameof(Type), value); } }
        private FhirString? _name;
        [JsonPropertyName("name")]
        public FhirString? Name { get => _name; set { _name = value; OnPropertyChangedByClr(nameof(Name), value); } }
        private List<FhirString>? _alias;
        [JsonPropertyName("alias")]
        public List<FhirString>? Alias { get => _alias; set { _alias = value; OnPropertyChangedByClr(nameof(Alias), value); } }
        private ContactPoint? _telecom;
        [JsonPropertyName("telecom")]
        public ContactPoint? Telecom { get => _telecom; set { _telecom = value; OnPropertyChangedByClr(nameof(Telecom), value); } }
        private Address? _address;
        [JsonPropertyName("address")]
        public Address? Address { get => _address; set { _address = value; OnPropertyChangedByClr(nameof(Address), value); } }
        private ReferenceType? _partOf;
        [JsonPropertyName("partOf")]
        public ReferenceType? PartOf { get => _partOf; set { _partOf = value; OnPropertyChangedByClr(nameof(PartOf), value); } }

        private List<Organization_Contact>? _contact;
        [JsonPropertyName("contact")]
        public List<Organization_Contact>? Contact { get => _contact; set { _contact = value; OnPropertyChangedByClr(nameof(Contact), value); } }

        public partial class Organization_Contact : BackboneElement<Organization_Contact>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Contact" : "contact";
            private CodeableConcept? _purpose;
        [JsonPropertyName("purpose")]
        public CodeableConcept? Purpose { get => _purpose; set { _purpose = value; OnPropertyChanged("purpose", value); } }
            private HumanName? _name;
        [JsonPropertyName("name")]
        public HumanName? Name { get => _name; set { _name = value; OnPropertyChanged("name", value); } }
            private ContactPoint? _telecom;
        [JsonPropertyName("telecom")]
        public ContactPoint? Telecom { get => _telecom; set { _telecom = value; OnPropertyChanged("telecom", value); } }
            private Address? _address;
        [JsonPropertyName("address")]
        public Address? Address { get => _address; set { _address = value; OnPropertyChanged("address", value); } }
        }
    }
}
