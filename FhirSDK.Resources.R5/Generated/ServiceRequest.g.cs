// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// A request for a service to be performed
    /// </summary>
    public partial class ServiceRequest : ResourceBase
    {
        public override string ResourceType => "ServiceRequest";

        public ServiceRequest() { }
        public ServiceRequest(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public ServiceRequest(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private FhirBoolean? _asNeededBoolean;
        [JsonPropertyName("asNeededBoolean")]
        public FhirBoolean? AsNeededBoolean { get => _asNeededBoolean; set { _asNeededBoolean = value; if (value != null) {{ _asNeededCodeableConcept = null; OnPropertyChangedByClr(nameof(AsNeededCodeableConcept), null); }}; OnPropertyChangedByClr(nameof(AsNeededBoolean), value); } }

        private CodeableConcept? _asNeededCodeableConcept;
        [JsonPropertyName("asNeededCodeableConcept")]
        public CodeableConcept? AsNeededCodeableConcept { get => _asNeededCodeableConcept; set { _asNeededCodeableConcept = value; if (value != null) {{ _asNeededBoolean = null; OnPropertyChangedByClr(nameof(AsNeededBoolean), null); }}; OnPropertyChangedByClr(nameof(AsNeededCodeableConcept), value); } }

        private FhirDateTime? _authoredOn;
        [JsonPropertyName("authoredOn")]
        public FhirDateTime? AuthoredOn { get => _authoredOn; set { _authoredOn = value; OnPropertyChangedByClr(nameof(AuthoredOn), value); } }

        private List<ReferenceType>? _basedOn;
        [JsonPropertyName("basedOn")]
        public List<ReferenceType>? BasedOn { get => _basedOn; set { _basedOn = value; OnPropertyChangedByClr(nameof(BasedOn), value); } }

        private List<CodeableConcept>? _bodySite;
        [JsonPropertyName("bodySite")]
        public List<CodeableConcept>? BodySite { get => _bodySite; set { _bodySite = value; OnPropertyChangedByClr(nameof(BodySite), value); } }

        private ReferenceType? _bodyStructure;
        [JsonPropertyName("bodyStructure")]
        public ReferenceType? BodyStructure { get => _bodyStructure; set { _bodyStructure = value; OnPropertyChangedByClr(nameof(BodyStructure), value); } }

        private List<CodeableConcept>? _category;
        [JsonPropertyName("category")]
        public List<CodeableConcept>? Category { get => _category; set { _category = value; OnPropertyChangedByClr(nameof(Category), value); } }

        private CodeableReference? _code;
        [JsonPropertyName("code")]
        public CodeableReference? Code { get => _code; set { _code = value; OnPropertyChangedByClr(nameof(Code), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private FhirBoolean? _doNotPerform;
        [JsonPropertyName("doNotPerform")]
        public FhirBoolean? DoNotPerform { get => _doNotPerform; set { _doNotPerform = value; OnPropertyChangedByClr(nameof(DoNotPerform), value); } }

        private ReferenceType? _encounter;
        [JsonPropertyName("encounter")]
        public ReferenceType? Encounter { get => _encounter; set { _encounter = value; OnPropertyChangedByClr(nameof(Encounter), value); } }

        private List<ReferenceType>? _focus;
        [JsonPropertyName("focus")]
        public List<ReferenceType>? Focus { get => _focus; set { _focus = value; OnPropertyChangedByClr(nameof(Focus), value); } }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private List<FhirCanonical>? _instantiatesCanonical;
        [JsonPropertyName("instantiatesCanonical")]
        public List<FhirCanonical>? InstantiatesCanonical { get => _instantiatesCanonical; set { _instantiatesCanonical = value; OnPropertyChangedByClr(nameof(InstantiatesCanonical), value); } }

        private List<FhirUri>? _instantiatesUri;
        [JsonPropertyName("instantiatesUri")]
        public List<FhirUri>? InstantiatesUri { get => _instantiatesUri; set { _instantiatesUri = value; OnPropertyChangedByClr(nameof(InstantiatesUri), value); } }

        private List<ReferenceType>? _insurance;
        [JsonPropertyName("insurance")]
        public List<ReferenceType>? Insurance { get => _insurance; set { _insurance = value; OnPropertyChangedByClr(nameof(Insurance), value); } }

        private FhirCode? _intent;
        [JsonPropertyName("intent")]
        public FhirCode Intent { get => _intent ?? throw new InvalidOperationException("Intent is required"); set { _intent = value; OnPropertyChangedByClr(nameof(Intent), value); } }

        private List<CodeableReference>? _location;
        [JsonPropertyName("location")]
        public List<CodeableReference>? Location { get => _location; set { _location = value; OnPropertyChangedByClr(nameof(Location), value); } }

        private List<Annotation>? _note;
        [JsonPropertyName("note")]
        public List<Annotation>? Note { get => _note; set { _note = value; OnPropertyChangedByClr(nameof(Note), value); } }

        private FhirDateTime? _occurrenceDateTime;
        [JsonPropertyName("occurrenceDateTime")]
        public FhirDateTime? OccurrenceDateTime { get => _occurrenceDateTime; set { _occurrenceDateTime = value; if (value != null) {{ _occurrencePeriod = null; OnPropertyChangedByClr(nameof(OccurrencePeriod), null); _occurrenceTiming = null; OnPropertyChangedByClr(nameof(OccurrenceTiming), null); }}; OnPropertyChangedByClr(nameof(OccurrenceDateTime), value); } }

        private Period? _occurrencePeriod;
        [JsonPropertyName("occurrencePeriod")]
        public Period? OccurrencePeriod { get => _occurrencePeriod; set { _occurrencePeriod = value; if (value != null) {{ _occurrenceDateTime = null; OnPropertyChangedByClr(nameof(OccurrenceDateTime), null); _occurrenceTiming = null; OnPropertyChangedByClr(nameof(OccurrenceTiming), null); }}; OnPropertyChangedByClr(nameof(OccurrencePeriod), value); } }

        private Timing? _occurrenceTiming;
        [JsonPropertyName("occurrenceTiming")]
        public Timing? OccurrenceTiming { get => _occurrenceTiming; set { _occurrenceTiming = value; if (value != null) {{ _occurrenceDateTime = null; OnPropertyChangedByClr(nameof(OccurrenceDateTime), null); _occurrencePeriod = null; OnPropertyChangedByClr(nameof(OccurrencePeriod), null); }}; OnPropertyChangedByClr(nameof(OccurrenceTiming), value); } }

        private List<ServiceRequest_OrderDetail>? _orderDetail;
        [JsonPropertyName("orderDetail")]
        public List<ServiceRequest_OrderDetail>? OrderDetail { get => _orderDetail; set { _orderDetail = value; OnPropertyChangedByClr(nameof(OrderDetail), value); } }

        /// <summary>
        /// Additional order information
        /// </summary>
        public partial class ServiceRequest_OrderDetail : BackboneElement<ServiceRequest_OrderDetail>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ServiceRequest_OrderDetail" : "serviceRequest_OrderDetail";
            private List<ServiceRequest_OrderDetail_Parameter> _parameter = new();
        [JsonPropertyName("parameter")]
        public List<ServiceRequest_OrderDetail_Parameter> Parameter { get => _parameter; set { _parameter = value; } }

            /// <summary>
            /// The parameter details for the service being requested
            /// </summary>
            public partial class ServiceRequest_OrderDetail_Parameter : BackboneElement<ServiceRequest_OrderDetail_Parameter>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ServiceRequest_OrderDetail_Parameter" : "serviceRequest_OrderDetail_Parameter";
                private CodeableConcept? _code;
        [JsonPropertyName("code")]
        public CodeableConcept Code { get => _code ?? throw new InvalidOperationException("Code is required"); set { _code = value; } }

                private Quantity? _valueQuantity;
        [JsonPropertyName("valueQuantity")]
        public Quantity? ValueQuantity { get => _valueQuantity; set { _valueQuantity = value; if (value != null) {{ _valueRatio = null; OnPropertyChanged("valueRatio", null); _valueRange = null; OnPropertyChanged("valueRange", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueString = null; OnPropertyChanged("valueString", null); _valuePeriod = null; OnPropertyChanged("valuePeriod", null); }}; OnPropertyChanged("valueQuantity", value); } }

                private Ratio? _valueRatio;
        [JsonPropertyName("valueRatio")]
        public Ratio? ValueRatio { get => _valueRatio; set { _valueRatio = value; if (value != null) {{ _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueRange = null; OnPropertyChanged("valueRange", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueString = null; OnPropertyChanged("valueString", null); _valuePeriod = null; OnPropertyChanged("valuePeriod", null); }}; OnPropertyChanged("valueRatio", value); } }

                private DataTypeServices.DataTypes.ComplexTypes.Range? _valueRange;
        [JsonPropertyName("valueRange")]
        public DataTypeServices.DataTypes.ComplexTypes.Range? ValueRange { get => _valueRange; set { _valueRange = value; if (value != null) {{ _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueRatio = null; OnPropertyChanged("valueRatio", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueString = null; OnPropertyChanged("valueString", null); _valuePeriod = null; OnPropertyChanged("valuePeriod", null); }}; OnPropertyChanged("valueRange", value); } }

                private FhirBoolean? _valueBoolean;
        [JsonPropertyName("valueBoolean")]
        public FhirBoolean? ValueBoolean { get => _valueBoolean; set { _valueBoolean = value; if (value != null) {{ _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueRatio = null; OnPropertyChanged("valueRatio", null); _valueRange = null; OnPropertyChanged("valueRange", null); _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueString = null; OnPropertyChanged("valueString", null); _valuePeriod = null; OnPropertyChanged("valuePeriod", null); }}; OnPropertyChanged("valueBoolean", value); } }

                private CodeableConcept? _valueCodeableConcept;
        [JsonPropertyName("valueCodeableConcept")]
        public CodeableConcept? ValueCodeableConcept { get => _valueCodeableConcept; set { _valueCodeableConcept = value; if (value != null) {{ _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueRatio = null; OnPropertyChanged("valueRatio", null); _valueRange = null; OnPropertyChanged("valueRange", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueString = null; OnPropertyChanged("valueString", null); _valuePeriod = null; OnPropertyChanged("valuePeriod", null); }}; OnPropertyChanged("valueCodeableConcept", value); } }

                private FhirString? _valueString;
        [JsonPropertyName("valueString")]
        public FhirString? ValueString { get => _valueString; set { _valueString = value; if (value != null) {{ _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueRatio = null; OnPropertyChanged("valueRatio", null); _valueRange = null; OnPropertyChanged("valueRange", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valuePeriod = null; OnPropertyChanged("valuePeriod", null); }}; OnPropertyChanged("valueString", value); } }

                private Period? _valuePeriod;
        [JsonPropertyName("valuePeriod")]
        public Period? ValuePeriod { get => _valuePeriod; set { _valuePeriod = value; if (value != null) {{ _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueRatio = null; OnPropertyChanged("valueRatio", null); _valueRange = null; OnPropertyChanged("valueRange", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueString = null; OnPropertyChanged("valueString", null); }}; OnPropertyChanged("valuePeriod", value); } }

            }

            private CodeableReference? _parameterFocus;
        [JsonPropertyName("parameterFocus")]
        public CodeableReference? ParameterFocus { get => _parameterFocus; set { _parameterFocus = value; } }

        }

        private List<ServiceRequest_PatientInstruction>? _patientInstruction;
        [JsonPropertyName("patientInstruction")]
        public List<ServiceRequest_PatientInstruction>? PatientInstruction { get => _patientInstruction; set { _patientInstruction = value; OnPropertyChangedByClr(nameof(PatientInstruction), value); } }

        /// <summary>
        /// Patient or consumer-oriented instructions
        /// </summary>
        public partial class ServiceRequest_PatientInstruction : BackboneElement<ServiceRequest_PatientInstruction>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ServiceRequest_PatientInstruction" : "serviceRequest_PatientInstruction";
            private FhirMarkdown? _instructionmarkdown;
        [JsonPropertyName("instructionmarkdown")]
        public FhirMarkdown? Instructionmarkdown { get => _instructionmarkdown; set { _instructionmarkdown = value; if (value != null) {{ _instructionReference = null; OnPropertyChanged("instructionReference", null); }}; OnPropertyChanged("instructionmarkdown", value); } }

            private ReferenceType? _instructionReference;
        [JsonPropertyName("instructionReference")]
        public ReferenceType? InstructionReference { get => _instructionReference; set { _instructionReference = value; if (value != null) {{ _instructionmarkdown = null; OnPropertyChanged("instructionmarkdown", null); }}; OnPropertyChanged("instructionReference", value); } }

        }

        private List<ReferenceType>? _performer;
        [JsonPropertyName("performer")]
        public List<ReferenceType>? Performer { get => _performer; set { _performer = value; OnPropertyChangedByClr(nameof(Performer), value); } }

        private CodeableConcept? _performerType;
        [JsonPropertyName("performerType")]
        public CodeableConcept? PerformerType { get => _performerType; set { _performerType = value; OnPropertyChangedByClr(nameof(PerformerType), value); } }

        private FhirCode? _priority;
        [JsonPropertyName("priority")]
        public FhirCode? Priority { get => _priority; set { _priority = value; OnPropertyChangedByClr(nameof(Priority), value); } }

        private Quantity? _quantityQuantity;
        [JsonPropertyName("quantityQuantity")]
        public Quantity? QuantityQuantity { get => _quantityQuantity; set { _quantityQuantity = value; if (value != null) {{ _quantityRatio = null; OnPropertyChangedByClr(nameof(QuantityRatio), null); _quantityRange = null; OnPropertyChangedByClr(nameof(QuantityRange), null); }}; OnPropertyChangedByClr(nameof(QuantityQuantity), value); } }

        private Ratio? _quantityRatio;
        [JsonPropertyName("quantityRatio")]
        public Ratio? QuantityRatio { get => _quantityRatio; set { _quantityRatio = value; if (value != null) {{ _quantityQuantity = null; OnPropertyChangedByClr(nameof(QuantityQuantity), null); _quantityRange = null; OnPropertyChangedByClr(nameof(QuantityRange), null); }}; OnPropertyChangedByClr(nameof(QuantityRatio), value); } }

        private DataTypeServices.DataTypes.ComplexTypes.Range? _quantityRange;
        [JsonPropertyName("quantityRange")]
        public DataTypeServices.DataTypes.ComplexTypes.Range? QuantityRange { get => _quantityRange; set { _quantityRange = value; if (value != null) {{ _quantityQuantity = null; OnPropertyChangedByClr(nameof(QuantityQuantity), null); _quantityRatio = null; OnPropertyChangedByClr(nameof(QuantityRatio), null); }}; OnPropertyChangedByClr(nameof(QuantityRange), value); } }

        private List<CodeableReference>? _reason;
        [JsonPropertyName("reason")]
        public List<CodeableReference>? Reason { get => _reason; set { _reason = value; OnPropertyChangedByClr(nameof(Reason), value); } }

        private List<ReferenceType>? _relevantHistory;
        [JsonPropertyName("relevantHistory")]
        public List<ReferenceType>? RelevantHistory { get => _relevantHistory; set { _relevantHistory = value; OnPropertyChangedByClr(nameof(RelevantHistory), value); } }

        private List<ReferenceType>? _replaces;
        [JsonPropertyName("replaces")]
        public List<ReferenceType>? Replaces { get => _replaces; set { _replaces = value; OnPropertyChangedByClr(nameof(Replaces), value); } }

        private ReferenceType? _requester;
        [JsonPropertyName("requester")]
        public ReferenceType? Requester { get => _requester; set { _requester = value; OnPropertyChangedByClr(nameof(Requester), value); } }

        private Identifier? _requisition;
        [JsonPropertyName("requisition")]
        public Identifier? Requisition { get => _requisition; set { _requisition = value; OnPropertyChangedByClr(nameof(Requisition), value); } }

        private List<ReferenceType>? _specimen;
        [JsonPropertyName("specimen")]
        public List<ReferenceType>? Specimen { get => _specimen; set { _specimen = value; OnPropertyChangedByClr(nameof(Specimen), value); } }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode Status { get => _status ?? throw new InvalidOperationException("Status is required"); set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private ReferenceType? _subject;
        [JsonPropertyName("subject")]
        public ReferenceType Subject { get => _subject ?? throw new InvalidOperationException("Subject is required"); set { _subject = value; OnPropertyChangedByClr(nameof(Subject), value); } }

        private List<CodeableReference>? _supportingInfo;
        [JsonPropertyName("supportingInfo")]
        public List<CodeableReference>? SupportingInfo { get => _supportingInfo; set { _supportingInfo = value; OnPropertyChangedByClr(nameof(SupportingInfo), value); } }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

    }
}
