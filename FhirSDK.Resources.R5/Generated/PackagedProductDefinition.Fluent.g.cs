// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class PackagedProductDefinitionFluentExtensions
    {
        public static PackagedProductDefinition AddAttachedDocument(this PackagedProductDefinition r, ReferenceType item) { r.AttachedDocument ??= new List<ReferenceType>(); r.AttachedDocument!.Add(item); return r; }
        public static PackagedProductDefinition AddCharacteristic(this PackagedProductDefinition r, FhirString item) { r.Characteristic ??= new List<FhirString>(); r.Characteristic!.Add(item); return r; }
        public static PackagedProductDefinition AddContained(this PackagedProductDefinition r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static PackagedProductDefinition AddContainedItemQuantity(this PackagedProductDefinition r, Quantity item) { r.ContainedItemQuantity ??= new List<Quantity>(); r.ContainedItemQuantity!.Add(item); return r; }
        public static PackagedProductDefinition WithCopackagedIndicator(this PackagedProductDefinition r, FhirBoolean value) { r.CopackagedIndicator = value; return r; }
        public static PackagedProductDefinition WithDescription(this PackagedProductDefinition r, FhirMarkdown value) { r.Description = value; return r; }
        public static PackagedProductDefinition AddIdentifier(this PackagedProductDefinition r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static PackagedProductDefinition AddLegalStatusOfSupply(this PackagedProductDefinition r, BackboneElement item) { r.LegalStatusOfSupply ??= new List<BackboneElement>(); r.LegalStatusOfSupply!.Add(item); return r; }
        public static PackagedProductDefinition AddManufacturer(this PackagedProductDefinition r, ReferenceType item) { r.Manufacturer ??= new List<ReferenceType>(); r.Manufacturer!.Add(item); return r; }
        public static PackagedProductDefinition AddMarketingStatus(this PackagedProductDefinition r, MarketingStatus item) { r.MarketingStatus ??= new List<MarketingStatus>(); r.MarketingStatus!.Add(item); return r; }
        public static PackagedProductDefinition WithName(this PackagedProductDefinition r, FhirString value) { r.Name = value; return r; }
        public static PackagedProductDefinition AddPackageFor(this PackagedProductDefinition r, ReferenceType item) { r.PackageFor ??= new List<ReferenceType>(); r.PackageFor!.Add(item); return r; }
        public static PackagedProductDefinition WithPackaging(this PackagedProductDefinition r, BackboneElement value) { r.Packaging = value; return r; }
        public static PackagedProductDefinition WithStatus(this PackagedProductDefinition r, CodeableConcept value) { r.Status = value; return r; }
        public static PackagedProductDefinition WithStatusDate(this PackagedProductDefinition r, FhirDateTime value) { r.StatusDate = value; return r; }
        public static PackagedProductDefinition WithText(this PackagedProductDefinition r, Narrative value) { r.Text = value; return r; }
        public static PackagedProductDefinition WithType(this PackagedProductDefinition r, CodeableConcept value) { r.Type = value; return r; }
    }
}
