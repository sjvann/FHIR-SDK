// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class ActivityDefinitionFluentExtensions
    {
        public static ActivityDefinition WithApprovalDate(this ActivityDefinition r, FhirDate value) { r.ApprovalDate = value; return r; }
        public static ActivityDefinition WithAsNeededBoolean(this ActivityDefinition r, FhirBoolean value) { r.AsNeededBoolean = value; return r; }
        public static ActivityDefinition WithAsNeededCodeableConcept(this ActivityDefinition r, CodeableConcept value) { r.AsNeededCodeableConcept = value; return r; }
        public static ActivityDefinition AddAuthor(this ActivityDefinition r, ContactDetail item) { r.Author ??= new List<ContactDetail>(); r.Author!.Add(item); return r; }
        public static ActivityDefinition AddBodySite(this ActivityDefinition r, CodeableConcept item) { r.BodySite ??= new List<CodeableConcept>(); r.BodySite!.Add(item); return r; }
        public static ActivityDefinition WithCode(this ActivityDefinition r, CodeableConcept value) { r.Code = value; return r; }
        public static ActivityDefinition AddContact(this ActivityDefinition r, ContactDetail item) { r.Contact ??= new List<ContactDetail>(); r.Contact!.Add(item); return r; }
        public static ActivityDefinition AddContained(this ActivityDefinition r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static ActivityDefinition WithCopyright(this ActivityDefinition r, FhirMarkdown value) { r.Copyright = value; return r; }
        public static ActivityDefinition WithCopyrightLabel(this ActivityDefinition r, FhirString value) { r.CopyrightLabel = value; return r; }
        public static ActivityDefinition WithDate(this ActivityDefinition r, FhirDateTime value) { r.Date = value; return r; }
        public static ActivityDefinition WithDescription(this ActivityDefinition r, FhirMarkdown value) { r.Description = value; return r; }
        public static ActivityDefinition WithDoNotPerform(this ActivityDefinition r, FhirBoolean value) { r.DoNotPerform = value; return r; }
        public static ActivityDefinition AddDosage(this ActivityDefinition r, Dosage item) { r.Dosage ??= new List<Dosage>(); r.Dosage!.Add(item); return r; }
        public static ActivityDefinition AddDynamicValue(this ActivityDefinition r, BackboneElement item) { r.DynamicValue ??= new List<BackboneElement>(); r.DynamicValue!.Add(item); return r; }
        public static ActivityDefinition AddEditor(this ActivityDefinition r, ContactDetail item) { r.Editor ??= new List<ContactDetail>(); r.Editor!.Add(item); return r; }
        public static ActivityDefinition WithEffectivePeriod(this ActivityDefinition r, Period value) { r.EffectivePeriod = value; return r; }
        public static ActivityDefinition AddEndorser(this ActivityDefinition r, ContactDetail item) { r.Endorser ??= new List<ContactDetail>(); r.Endorser!.Add(item); return r; }
        public static ActivityDefinition WithExperimental(this ActivityDefinition r, FhirBoolean value) { r.Experimental = value; return r; }
        public static ActivityDefinition AddIdentifier(this ActivityDefinition r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static ActivityDefinition WithIntent(this ActivityDefinition r, FhirCode value) { r.Intent = value; return r; }
        public static ActivityDefinition AddJurisdiction(this ActivityDefinition r, CodeableConcept item) { r.Jurisdiction ??= new List<CodeableConcept>(); r.Jurisdiction!.Add(item); return r; }
        public static ActivityDefinition WithKind(this ActivityDefinition r, FhirCode value) { r.Kind = value; return r; }
        public static ActivityDefinition WithLastReviewDate(this ActivityDefinition r, FhirDate value) { r.LastReviewDate = value; return r; }
        public static ActivityDefinition AddLibrary(this ActivityDefinition r, FhirCanonical item) { r.Library ??= new List<FhirCanonical>(); r.Library!.Add(item); return r; }
        public static ActivityDefinition WithLocation(this ActivityDefinition r, CodeableReference value) { r.Location = value; return r; }
        public static ActivityDefinition WithName(this ActivityDefinition r, FhirString value) { r.Name = value; return r; }
        public static ActivityDefinition AddObservationRequirement(this ActivityDefinition r, FhirCanonical item) { r.ObservationRequirement ??= new List<FhirCanonical>(); r.ObservationRequirement!.Add(item); return r; }
        public static ActivityDefinition AddObservationResultRequirement(this ActivityDefinition r, FhirCanonical item) { r.ObservationResultRequirement ??= new List<FhirCanonical>(); r.ObservationResultRequirement!.Add(item); return r; }
        public static ActivityDefinition AddParticipant(this ActivityDefinition r, BackboneElement item) { r.Participant ??= new List<BackboneElement>(); r.Participant!.Add(item); return r; }
        public static ActivityDefinition WithPriority(this ActivityDefinition r, FhirCode value) { r.Priority = value; return r; }
        public static ActivityDefinition WithProductReference(this ActivityDefinition r, ReferenceType value) { r.ProductReference = value; return r; }
        public static ActivityDefinition WithProductCodeableConcept(this ActivityDefinition r, CodeableConcept value) { r.ProductCodeableConcept = value; return r; }
        public static ActivityDefinition WithProfile(this ActivityDefinition r, FhirCanonical value) { r.Profile = value; return r; }
        public static ActivityDefinition WithPublisher(this ActivityDefinition r, FhirString value) { r.Publisher = value; return r; }
        public static ActivityDefinition WithPurpose(this ActivityDefinition r, FhirMarkdown value) { r.Purpose = value; return r; }
        public static ActivityDefinition WithQuantity(this ActivityDefinition r, Quantity value) { r.Quantity = value; return r; }
        public static ActivityDefinition AddRelatedArtifact(this ActivityDefinition r, RelatedArtifact item) { r.RelatedArtifact ??= new List<RelatedArtifact>(); r.RelatedArtifact!.Add(item); return r; }
        public static ActivityDefinition AddReviewer(this ActivityDefinition r, ContactDetail item) { r.Reviewer ??= new List<ContactDetail>(); r.Reviewer!.Add(item); return r; }
        public static ActivityDefinition AddSpecimenRequirement(this ActivityDefinition r, FhirCanonical item) { r.SpecimenRequirement ??= new List<FhirCanonical>(); r.SpecimenRequirement!.Add(item); return r; }
        public static ActivityDefinition WithStatus(this ActivityDefinition r, FhirCode value) { r.Status = value; return r; }
        public static ActivityDefinition WithSubjectCodeableConcept(this ActivityDefinition r, CodeableConcept value) { r.SubjectCodeableConcept = value; return r; }
        public static ActivityDefinition WithSubjectReference(this ActivityDefinition r, ReferenceType value) { r.SubjectReference = value; return r; }
        public static ActivityDefinition WithSubjectcanonical(this ActivityDefinition r, FhirCanonical value) { r.Subjectcanonical = value; return r; }
        public static ActivityDefinition WithSubtitle(this ActivityDefinition r, FhirString value) { r.Subtitle = value; return r; }
        public static ActivityDefinition WithText(this ActivityDefinition r, Narrative value) { r.Text = value; return r; }
        public static ActivityDefinition WithTimingTiming(this ActivityDefinition r, Timing value) { r.TimingTiming = value; return r; }
        public static ActivityDefinition WithTimingAge(this ActivityDefinition r, Age value) { r.TimingAge = value; return r; }
        public static ActivityDefinition WithTimingRange(this ActivityDefinition r, DataTypeServices.DataTypes.ComplexTypes.Range value) { r.TimingRange = value; return r; }
        public static ActivityDefinition WithTimingDuration(this ActivityDefinition r, Duration value) { r.TimingDuration = value; return r; }
        public static ActivityDefinition WithTitle(this ActivityDefinition r, FhirString value) { r.Title = value; return r; }
        public static ActivityDefinition AddTopic(this ActivityDefinition r, CodeableConcept item) { r.Topic ??= new List<CodeableConcept>(); r.Topic!.Add(item); return r; }
        public static ActivityDefinition WithTransform(this ActivityDefinition r, FhirCanonical value) { r.Transform = value; return r; }
        public static ActivityDefinition WithUrl(this ActivityDefinition r, FhirUri value) { r.Url = value; return r; }
        public static ActivityDefinition WithUsage(this ActivityDefinition r, FhirMarkdown value) { r.Usage = value; return r; }
        public static ActivityDefinition AddUseContext(this ActivityDefinition r, UsageContext item) { r.UseContext ??= new List<UsageContext>(); r.UseContext!.Add(item); return r; }
        public static ActivityDefinition WithVersion(this ActivityDefinition r, FhirString value) { r.Version = value; return r; }
        public static ActivityDefinition WithVersionAlgorithmString(this ActivityDefinition r, FhirString value) { r.VersionAlgorithmString = value; return r; }
        public static ActivityDefinition WithVersionAlgorithmCoding(this ActivityDefinition r, Coding value) { r.VersionAlgorithmCoding = value; return r; }
    }
}
