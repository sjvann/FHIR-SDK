// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class PaymentReconciliationFluentExtensions
    {
        public static PaymentReconciliation WithAccountNumber(this PaymentReconciliation r, FhirString value) { r.AccountNumber = value; return r; }
        public static PaymentReconciliation AddAllocation(this PaymentReconciliation r, BackboneElement item) { r.Allocation ??= new List<BackboneElement>(); r.Allocation!.Add(item); return r; }
        public static PaymentReconciliation WithAmount(this PaymentReconciliation r, Money value) { r.Amount = value; return r; }
        public static PaymentReconciliation WithAuthorization(this PaymentReconciliation r, FhirString value) { r.Authorization = value; return r; }
        public static PaymentReconciliation WithCardBrand(this PaymentReconciliation r, FhirString value) { r.CardBrand = value; return r; }
        public static PaymentReconciliation AddContained(this PaymentReconciliation r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static PaymentReconciliation WithCreated(this PaymentReconciliation r, FhirDateTime value) { r.Created = value; return r; }
        public static PaymentReconciliation WithDate(this PaymentReconciliation r, FhirDate value) { r.Date = value; return r; }
        public static PaymentReconciliation WithDisposition(this PaymentReconciliation r, FhirString value) { r.Disposition = value; return r; }
        public static PaymentReconciliation WithEnterer(this PaymentReconciliation r, ReferenceType value) { r.Enterer = value; return r; }
        public static PaymentReconciliation WithExpirationDate(this PaymentReconciliation r, FhirDate value) { r.ExpirationDate = value; return r; }
        public static PaymentReconciliation WithFormCode(this PaymentReconciliation r, CodeableConcept value) { r.FormCode = value; return r; }
        public static PaymentReconciliation AddIdentifier(this PaymentReconciliation r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static PaymentReconciliation WithIssuerType(this PaymentReconciliation r, CodeableConcept value) { r.IssuerType = value; return r; }
        public static PaymentReconciliation WithKind(this PaymentReconciliation r, CodeableConcept value) { r.Kind = value; return r; }
        public static PaymentReconciliation WithLocation(this PaymentReconciliation r, ReferenceType value) { r.Location = value; return r; }
        public static PaymentReconciliation WithMethod(this PaymentReconciliation r, CodeableConcept value) { r.Method = value; return r; }
        public static PaymentReconciliation WithOutcome(this PaymentReconciliation r, FhirCode value) { r.Outcome = value; return r; }
        public static PaymentReconciliation WithPaymentIdentifier(this PaymentReconciliation r, Identifier value) { r.PaymentIdentifier = value; return r; }
        public static PaymentReconciliation WithPaymentIssuer(this PaymentReconciliation r, ReferenceType value) { r.PaymentIssuer = value; return r; }
        public static PaymentReconciliation WithPeriod(this PaymentReconciliation r, Period value) { r.Period = value; return r; }
        public static PaymentReconciliation AddProcessNote(this PaymentReconciliation r, BackboneElement item) { r.ProcessNote ??= new List<BackboneElement>(); r.ProcessNote!.Add(item); return r; }
        public static PaymentReconciliation WithProcessor(this PaymentReconciliation r, FhirString value) { r.Processor = value; return r; }
        public static PaymentReconciliation WithReferenceNumber(this PaymentReconciliation r, FhirString value) { r.ReferenceNumber = value; return r; }
        public static PaymentReconciliation WithRequest(this PaymentReconciliation r, ReferenceType value) { r.Request = value; return r; }
        public static PaymentReconciliation WithRequestor(this PaymentReconciliation r, ReferenceType value) { r.Requestor = value; return r; }
        public static PaymentReconciliation WithReturnedAmount(this PaymentReconciliation r, Money value) { r.ReturnedAmount = value; return r; }
        public static PaymentReconciliation WithStatus(this PaymentReconciliation r, FhirCode value) { r.Status = value; return r; }
        public static PaymentReconciliation WithTenderedAmount(this PaymentReconciliation r, Money value) { r.TenderedAmount = value; return r; }
        public static PaymentReconciliation WithText(this PaymentReconciliation r, Narrative value) { r.Text = value; return r; }
        public static PaymentReconciliation WithType(this PaymentReconciliation r, CodeableConcept value) { r.Type = value; return r; }
    }
}
