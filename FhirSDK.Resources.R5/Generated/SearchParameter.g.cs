// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// Search parameter for a resource
    /// </summary>
    public partial class SearchParameter : ResourceBase
    {
        public override string ResourceType => "SearchParameter";

        public SearchParameter() { }
        public SearchParameter(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public SearchParameter(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private List<FhirCode> _base = new();
        [JsonPropertyName("base")]
        public List<FhirCode> Base { get => _base; set { _base = value; OnPropertyChangedByClr(nameof(Base), value); } }

        private List<FhirString>? _chain;
        [JsonPropertyName("chain")]
        public List<FhirString>? Chain { get => _chain; set { _chain = value; OnPropertyChangedByClr(nameof(Chain), value); } }

        private FhirCode? _code;
        [JsonPropertyName("code")]
        public FhirCode Code { get => _code ?? throw new InvalidOperationException("Code is required"); set { _code = value; OnPropertyChangedByClr(nameof(Code), value); } }

        private List<FhirCode>? _comparator;
        [JsonPropertyName("comparator")]
        public List<FhirCode>? Comparator { get => _comparator; set { _comparator = value; OnPropertyChangedByClr(nameof(Comparator), value); } }

        private List<SearchParameter_Component>? _component;
        [JsonPropertyName("component")]
        public List<SearchParameter_Component>? Component { get => _component; set { _component = value; OnPropertyChangedByClr(nameof(Component), value); } }

        /// <summary>
        /// For Composite resources to define the parts
        /// </summary>
        public partial class SearchParameter_Component : BackboneElement<SearchParameter_Component>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "SearchParameter_Component" : "searchParameter_Component";
            private FhirCanonical? _definition;
        [JsonPropertyName("definition")]
        public FhirCanonical Definition { get => _definition ?? throw new InvalidOperationException("Definition is required"); set { _definition = value; } }

            private FhirString? _expression;
        [JsonPropertyName("expression")]
        public FhirString Expression { get => _expression ?? throw new InvalidOperationException("Expression is required"); set { _expression = value; } }

        }

        private FhirString? _constraint;
        [JsonPropertyName("constraint")]
        public FhirString? Constraint { get => _constraint; set { _constraint = value; OnPropertyChangedByClr(nameof(Constraint), value); } }

        private List<ContactDetail>? _contact;
        [JsonPropertyName("contact")]
        public List<ContactDetail>? Contact { get => _contact; set { _contact = value; OnPropertyChangedByClr(nameof(Contact), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private FhirMarkdown? _copyright;
        [JsonPropertyName("copyright")]
        public FhirMarkdown? Copyright { get => _copyright; set { _copyright = value; OnPropertyChangedByClr(nameof(Copyright), value); } }

        private FhirString? _copyrightLabel;
        [JsonPropertyName("copyrightLabel")]
        public FhirString? CopyrightLabel { get => _copyrightLabel; set { _copyrightLabel = value; OnPropertyChangedByClr(nameof(CopyrightLabel), value); } }

        private FhirDateTime? _date;
        [JsonPropertyName("date")]
        public FhirDateTime? Date { get => _date; set { _date = value; OnPropertyChangedByClr(nameof(Date), value); } }

        private FhirCanonical? _derivedFrom;
        [JsonPropertyName("derivedFrom")]
        public FhirCanonical? DerivedFrom { get => _derivedFrom; set { _derivedFrom = value; OnPropertyChangedByClr(nameof(DerivedFrom), value); } }

        private FhirMarkdown? _description;
        [JsonPropertyName("description")]
        public FhirMarkdown Description { get => _description ?? throw new InvalidOperationException("Description is required"); set { _description = value; OnPropertyChangedByClr(nameof(Description), value); } }

        private FhirBoolean? _experimental;
        [JsonPropertyName("experimental")]
        public FhirBoolean? Experimental { get => _experimental; set { _experimental = value; OnPropertyChangedByClr(nameof(Experimental), value); } }

        private FhirString? _expression;
        [JsonPropertyName("expression")]
        public FhirString? Expression { get => _expression; set { _expression = value; OnPropertyChangedByClr(nameof(Expression), value); } }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private List<CodeableConcept>? _jurisdiction;
        [JsonPropertyName("jurisdiction")]
        public List<CodeableConcept>? Jurisdiction { get => _jurisdiction; set { _jurisdiction = value; OnPropertyChangedByClr(nameof(Jurisdiction), value); } }

        private List<FhirCode>? _modifier;
        [JsonPropertyName("modifier")]
        public List<FhirCode>? Modifier { get => _modifier; set { _modifier = value; OnPropertyChangedByClr(nameof(Modifier), value); } }

        private FhirBoolean? _multipleAnd;
        [JsonPropertyName("multipleAnd")]
        public FhirBoolean? MultipleAnd { get => _multipleAnd; set { _multipleAnd = value; OnPropertyChangedByClr(nameof(MultipleAnd), value); } }

        private FhirBoolean? _multipleOr;
        [JsonPropertyName("multipleOr")]
        public FhirBoolean? MultipleOr { get => _multipleOr; set { _multipleOr = value; OnPropertyChangedByClr(nameof(MultipleOr), value); } }

        private FhirString? _name;
        [JsonPropertyName("name")]
        public FhirString Name { get => _name ?? throw new InvalidOperationException("Name is required"); set { _name = value; OnPropertyChangedByClr(nameof(Name), value); } }

        private FhirCode? _processingMode;
        [JsonPropertyName("processingMode")]
        public FhirCode? ProcessingMode { get => _processingMode; set { _processingMode = value; OnPropertyChangedByClr(nameof(ProcessingMode), value); } }

        private FhirString? _publisher;
        [JsonPropertyName("publisher")]
        public FhirString? Publisher { get => _publisher; set { _publisher = value; OnPropertyChangedByClr(nameof(Publisher), value); } }

        private FhirMarkdown? _purpose;
        [JsonPropertyName("purpose")]
        public FhirMarkdown? Purpose { get => _purpose; set { _purpose = value; OnPropertyChangedByClr(nameof(Purpose), value); } }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode Status { get => _status ?? throw new InvalidOperationException("Status is required"); set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private List<FhirCode>? _target;
        [JsonPropertyName("target")]
        public List<FhirCode>? Target { get => _target; set { _target = value; OnPropertyChangedByClr(nameof(Target), value); } }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

        private FhirString? _title;
        [JsonPropertyName("title")]
        public FhirString? Title { get => _title; set { _title = value; OnPropertyChangedByClr(nameof(Title), value); } }

        private FhirCode? _type;
        [JsonPropertyName("type")]
        public FhirCode Type { get => _type ?? throw new InvalidOperationException("Type is required"); set { _type = value; OnPropertyChangedByClr(nameof(Type), value); } }

        private FhirUri? _url;
        [JsonPropertyName("url")]
        public FhirUri Url { get => _url ?? throw new InvalidOperationException("Url is required"); set { _url = value; OnPropertyChangedByClr(nameof(Url), value); } }

        private List<UsageContext>? _useContext;
        [JsonPropertyName("useContext")]
        public List<UsageContext>? UseContext { get => _useContext; set { _useContext = value; OnPropertyChangedByClr(nameof(UseContext), value); } }

        private FhirString? _version;
        [JsonPropertyName("version")]
        public FhirString? Version { get => _version; set { _version = value; OnPropertyChangedByClr(nameof(Version), value); } }

        private FhirString? _versionAlgorithmString;
        [JsonPropertyName("versionAlgorithmString")]
        public FhirString? VersionAlgorithmString { get => _versionAlgorithmString; set { _versionAlgorithmString = value; if (value != null) {{ _versionAlgorithmCoding = null; OnPropertyChangedByClr(nameof(VersionAlgorithmCoding), null); }}; OnPropertyChangedByClr(nameof(VersionAlgorithmString), value); } }

        private Coding? _versionAlgorithmCoding;
        [JsonPropertyName("versionAlgorithmCoding")]
        public Coding? VersionAlgorithmCoding { get => _versionAlgorithmCoding; set { _versionAlgorithmCoding = value; if (value != null) {{ _versionAlgorithmString = null; OnPropertyChangedByClr(nameof(VersionAlgorithmString), null); }}; OnPropertyChangedByClr(nameof(VersionAlgorithmCoding), value); } }

    }
}
