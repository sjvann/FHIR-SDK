// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class HealthcareServiceFluentExtensions
    {
        public static HealthcareService WithActive(this HealthcareService r, FhirBoolean value) { r.Active = value; return r; }
        public static HealthcareService WithAppointmentRequired(this HealthcareService r, FhirBoolean value) { r.AppointmentRequired = value; return r; }
        public static HealthcareService AddAvailability(this HealthcareService r, Availability item) { r.Availability ??= new List<Availability>(); r.Availability!.Add(item); return r; }
        public static HealthcareService AddCategory(this HealthcareService r, CodeableConcept item) { r.Category ??= new List<CodeableConcept>(); r.Category!.Add(item); return r; }
        public static HealthcareService AddCharacteristic(this HealthcareService r, CodeableConcept item) { r.Characteristic ??= new List<CodeableConcept>(); r.Characteristic!.Add(item); return r; }
        public static HealthcareService WithComment(this HealthcareService r, FhirMarkdown value) { r.Comment = value; return r; }
        public static HealthcareService AddCommunication(this HealthcareService r, CodeableConcept item) { r.Communication ??= new List<CodeableConcept>(); r.Communication!.Add(item); return r; }
        public static HealthcareService AddContact(this HealthcareService r, ExtendedContactDetail item) { r.Contact ??= new List<ExtendedContactDetail>(); r.Contact!.Add(item); return r; }
        public static HealthcareService AddContained(this HealthcareService r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static HealthcareService AddCoverageArea(this HealthcareService r, ReferenceType item) { r.CoverageArea ??= new List<ReferenceType>(); r.CoverageArea!.Add(item); return r; }
        public static HealthcareService AddEligibility(this HealthcareService r, BackboneElement item) { r.Eligibility ??= new List<BackboneElement>(); r.Eligibility!.Add(item); return r; }
        public static HealthcareService AddEndpoint(this HealthcareService r, ReferenceType item) { r.Endpoint ??= new List<ReferenceType>(); r.Endpoint!.Add(item); return r; }
        public static HealthcareService WithExtraDetails(this HealthcareService r, FhirMarkdown value) { r.ExtraDetails = value; return r; }
        public static HealthcareService AddIdentifier(this HealthcareService r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static HealthcareService AddLocation(this HealthcareService r, ReferenceType item) { r.Location ??= new List<ReferenceType>(); r.Location!.Add(item); return r; }
        public static HealthcareService WithName(this HealthcareService r, FhirString value) { r.Name = value; return r; }
        public static HealthcareService AddOfferedIn(this HealthcareService r, ReferenceType item) { r.OfferedIn ??= new List<ReferenceType>(); r.OfferedIn!.Add(item); return r; }
        public static HealthcareService WithPhoto(this HealthcareService r, Attachment value) { r.Photo = value; return r; }
        public static HealthcareService AddProgram(this HealthcareService r, CodeableConcept item) { r.Program ??= new List<CodeableConcept>(); r.Program!.Add(item); return r; }
        public static HealthcareService WithProvidedBy(this HealthcareService r, ReferenceType value) { r.ProvidedBy = value; return r; }
        public static HealthcareService AddReferralMethod(this HealthcareService r, CodeableConcept item) { r.ReferralMethod ??= new List<CodeableConcept>(); r.ReferralMethod!.Add(item); return r; }
        public static HealthcareService AddServiceProvisionCode(this HealthcareService r, CodeableConcept item) { r.ServiceProvisionCode ??= new List<CodeableConcept>(); r.ServiceProvisionCode!.Add(item); return r; }
        public static HealthcareService AddSpecialty(this HealthcareService r, CodeableConcept item) { r.Specialty ??= new List<CodeableConcept>(); r.Specialty!.Add(item); return r; }
        public static HealthcareService WithText(this HealthcareService r, Narrative value) { r.Text = value; return r; }
        public static HealthcareService AddType(this HealthcareService r, CodeableConcept item) { r.Type ??= new List<CodeableConcept>(); r.Type!.Add(item); return r; }
    }
}
