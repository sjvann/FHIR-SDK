// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// Item containing charge code(s) associated with the provision of healthcare provider products
    /// </summary>
    public partial class ChargeItem : ResourceBase
    {
        public override string ResourceType => "ChargeItem";

        public ChargeItem() { }
        public ChargeItem(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public ChargeItem(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private List<ReferenceType>? _account;
        [JsonPropertyName("account")]
        public List<ReferenceType>? Account { get => _account; set { _account = value; OnPropertyChangedByClr(nameof(Account), value); } }

        private List<CodeableConcept>? _bodysite;
        [JsonPropertyName("bodysite")]
        public List<CodeableConcept>? Bodysite { get => _bodysite; set { _bodysite = value; OnPropertyChangedByClr(nameof(Bodysite), value); } }

        private CodeableConcept? _code;
        [JsonPropertyName("code")]
        public CodeableConcept Code { get => _code ?? throw new InvalidOperationException("Code is required"); set { _code = value; OnPropertyChangedByClr(nameof(Code), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private ReferenceType? _costCenter;
        [JsonPropertyName("costCenter")]
        public ReferenceType? CostCenter { get => _costCenter; set { _costCenter = value; OnPropertyChangedByClr(nameof(CostCenter), value); } }

        private List<FhirCanonical>? _definitionCanonical;
        [JsonPropertyName("definitionCanonical")]
        public List<FhirCanonical>? DefinitionCanonical { get => _definitionCanonical; set { _definitionCanonical = value; OnPropertyChangedByClr(nameof(DefinitionCanonical), value); } }

        private List<FhirUri>? _definitionUri;
        [JsonPropertyName("definitionUri")]
        public List<FhirUri>? DefinitionUri { get => _definitionUri; set { _definitionUri = value; OnPropertyChangedByClr(nameof(DefinitionUri), value); } }

        private ReferenceType? _encounter;
        [JsonPropertyName("encounter")]
        public ReferenceType? Encounter { get => _encounter; set { _encounter = value; OnPropertyChangedByClr(nameof(Encounter), value); } }

        private FhirDateTime? _enteredDate;
        [JsonPropertyName("enteredDate")]
        public FhirDateTime? EnteredDate { get => _enteredDate; set { _enteredDate = value; OnPropertyChangedByClr(nameof(EnteredDate), value); } }

        private ReferenceType? _enterer;
        [JsonPropertyName("enterer")]
        public ReferenceType? Enterer { get => _enterer; set { _enterer = value; OnPropertyChangedByClr(nameof(Enterer), value); } }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private List<Annotation>? _note;
        [JsonPropertyName("note")]
        public List<Annotation>? Note { get => _note; set { _note = value; OnPropertyChangedByClr(nameof(Note), value); } }

        private FhirDateTime? _occurrenceDateTime;
        [JsonPropertyName("occurrenceDateTime")]
        public FhirDateTime? OccurrenceDateTime { get => _occurrenceDateTime; set { _occurrenceDateTime = value; if (value != null) {{ _occurrencePeriod = null; OnPropertyChangedByClr(nameof(OccurrencePeriod), null); _occurrenceTiming = null; OnPropertyChangedByClr(nameof(OccurrenceTiming), null); }}; OnPropertyChangedByClr(nameof(OccurrenceDateTime), value); } }

        private Period? _occurrencePeriod;
        [JsonPropertyName("occurrencePeriod")]
        public Period? OccurrencePeriod { get => _occurrencePeriod; set { _occurrencePeriod = value; if (value != null) {{ _occurrenceDateTime = null; OnPropertyChangedByClr(nameof(OccurrenceDateTime), null); _occurrenceTiming = null; OnPropertyChangedByClr(nameof(OccurrenceTiming), null); }}; OnPropertyChangedByClr(nameof(OccurrencePeriod), value); } }

        private Timing? _occurrenceTiming;
        [JsonPropertyName("occurrenceTiming")]
        public Timing? OccurrenceTiming { get => _occurrenceTiming; set { _occurrenceTiming = value; if (value != null) {{ _occurrenceDateTime = null; OnPropertyChangedByClr(nameof(OccurrenceDateTime), null); _occurrencePeriod = null; OnPropertyChangedByClr(nameof(OccurrencePeriod), null); }}; OnPropertyChangedByClr(nameof(OccurrenceTiming), value); } }

        private CodeableConcept? _overrideReason;
        [JsonPropertyName("overrideReason")]
        public CodeableConcept? OverrideReason { get => _overrideReason; set { _overrideReason = value; OnPropertyChangedByClr(nameof(OverrideReason), value); } }

        private List<ReferenceType>? _partOf;
        [JsonPropertyName("partOf")]
        public List<ReferenceType>? PartOf { get => _partOf; set { _partOf = value; OnPropertyChangedByClr(nameof(PartOf), value); } }

        private List<ChargeItem_Performer>? _performer;
        [JsonPropertyName("performer")]
        public List<ChargeItem_Performer>? Performer { get => _performer; set { _performer = value; OnPropertyChangedByClr(nameof(Performer), value); } }

        /// <summary>
        /// Who performed charged service
        /// </summary>
        public partial class ChargeItem_Performer : BackboneElement<ChargeItem_Performer>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ChargeItem_Performer" : "chargeItem_Performer";
            private ReferenceType? _actor;
        [JsonPropertyName("actor")]
        public ReferenceType Actor { get => _actor ?? throw new InvalidOperationException("Actor is required"); set { _actor = value; } }

            private CodeableConcept? _function;
        [JsonPropertyName("function")]
        public CodeableConcept? Function { get => _function; set { _function = value; } }

        }

        private ReferenceType? _performingOrganization;
        [JsonPropertyName("performingOrganization")]
        public ReferenceType? PerformingOrganization { get => _performingOrganization; set { _performingOrganization = value; OnPropertyChangedByClr(nameof(PerformingOrganization), value); } }

        private List<CodeableReference>? _product;
        [JsonPropertyName("product")]
        public List<CodeableReference>? Product { get => _product; set { _product = value; OnPropertyChangedByClr(nameof(Product), value); } }

        private Quantity? _quantity;
        [JsonPropertyName("quantity")]
        public Quantity? Quantity { get => _quantity; set { _quantity = value; OnPropertyChangedByClr(nameof(Quantity), value); } }

        private List<CodeableConcept>? _reason;
        [JsonPropertyName("reason")]
        public List<CodeableConcept>? Reason { get => _reason; set { _reason = value; OnPropertyChangedByClr(nameof(Reason), value); } }

        private ReferenceType? _requestingOrganization;
        [JsonPropertyName("requestingOrganization")]
        public ReferenceType? RequestingOrganization { get => _requestingOrganization; set { _requestingOrganization = value; OnPropertyChangedByClr(nameof(RequestingOrganization), value); } }

        private List<CodeableReference>? _service;
        [JsonPropertyName("service")]
        public List<CodeableReference>? Service { get => _service; set { _service = value; OnPropertyChangedByClr(nameof(Service), value); } }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode Status { get => _status ?? throw new InvalidOperationException("Status is required"); set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private ReferenceType? _subject;
        [JsonPropertyName("subject")]
        public ReferenceType Subject { get => _subject ?? throw new InvalidOperationException("Subject is required"); set { _subject = value; OnPropertyChangedByClr(nameof(Subject), value); } }

        private List<ReferenceType>? _supportingInformation;
        [JsonPropertyName("supportingInformation")]
        public List<ReferenceType>? SupportingInformation { get => _supportingInformation; set { _supportingInformation = value; OnPropertyChangedByClr(nameof(SupportingInformation), value); } }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

        private MonetaryComponent? _totalPriceComponent;
        [JsonPropertyName("totalPriceComponent")]
        public MonetaryComponent? TotalPriceComponent { get => _totalPriceComponent; set { _totalPriceComponent = value; OnPropertyChangedByClr(nameof(TotalPriceComponent), value); } }

        private MonetaryComponent? _unitPriceComponent;
        [JsonPropertyName("unitPriceComponent")]
        public MonetaryComponent? UnitPriceComponent { get => _unitPriceComponent; set { _unitPriceComponent = value; OnPropertyChangedByClr(nameof(UnitPriceComponent), value); } }

    }
}
