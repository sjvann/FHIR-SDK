// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class MedicationDispenseFluentExtensions
    {
        public static MedicationDispense AddAuthorizingPrescription(this MedicationDispense r, ReferenceType item) { r.AuthorizingPrescription ??= new List<ReferenceType>(); r.AuthorizingPrescription!.Add(item); return r; }
        public static MedicationDispense AddBasedOn(this MedicationDispense r, ReferenceType item) { r.BasedOn ??= new List<ReferenceType>(); r.BasedOn!.Add(item); return r; }
        public static MedicationDispense AddCategory(this MedicationDispense r, CodeableConcept item) { r.Category ??= new List<CodeableConcept>(); r.Category!.Add(item); return r; }
        public static MedicationDispense AddContained(this MedicationDispense r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static MedicationDispense WithDaysSupply(this MedicationDispense r, Quantity value) { r.DaysSupply = value; return r; }
        public static MedicationDispense WithDestination(this MedicationDispense r, ReferenceType value) { r.Destination = value; return r; }
        public static MedicationDispense AddDosageInstruction(this MedicationDispense r, Dosage item) { r.DosageInstruction ??= new List<Dosage>(); r.DosageInstruction!.Add(item); return r; }
        public static MedicationDispense WithEncounter(this MedicationDispense r, ReferenceType value) { r.Encounter = value; return r; }
        public static MedicationDispense AddEventHistory(this MedicationDispense r, ReferenceType item) { r.EventHistory ??= new List<ReferenceType>(); r.EventHistory!.Add(item); return r; }
        public static MedicationDispense AddIdentifier(this MedicationDispense r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static MedicationDispense WithLocation(this MedicationDispense r, ReferenceType value) { r.Location = value; return r; }
        public static MedicationDispense WithMedication(this MedicationDispense r, CodeableReference value) { r.Medication = value; return r; }
        public static MedicationDispense AddNote(this MedicationDispense r, Annotation item) { r.Note ??= new List<Annotation>(); r.Note!.Add(item); return r; }
        public static MedicationDispense WithNotPerformedReason(this MedicationDispense r, CodeableReference value) { r.NotPerformedReason = value; return r; }
        public static MedicationDispense AddPartOf(this MedicationDispense r, ReferenceType item) { r.PartOf ??= new List<ReferenceType>(); r.PartOf!.Add(item); return r; }
        public static MedicationDispense AddPerformer(this MedicationDispense r, BackboneElement item) { r.Performer ??= new List<BackboneElement>(); r.Performer!.Add(item); return r; }
        public static MedicationDispense WithQuantity(this MedicationDispense r, Quantity value) { r.Quantity = value; return r; }
        public static MedicationDispense AddReceiver(this MedicationDispense r, ReferenceType item) { r.Receiver ??= new List<ReferenceType>(); r.Receiver!.Add(item); return r; }
        public static MedicationDispense WithRecorded(this MedicationDispense r, FhirDateTime value) { r.Recorded = value; return r; }
        public static MedicationDispense WithRenderedDosageInstruction(this MedicationDispense r, FhirMarkdown value) { r.RenderedDosageInstruction = value; return r; }
        public static MedicationDispense WithStatus(this MedicationDispense r, FhirCode value) { r.Status = value; return r; }
        public static MedicationDispense WithStatusChanged(this MedicationDispense r, FhirDateTime value) { r.StatusChanged = value; return r; }
        public static MedicationDispense WithSubject(this MedicationDispense r, ReferenceType value) { r.Subject = value; return r; }
        public static MedicationDispense WithSubstitution(this MedicationDispense r, BackboneElement value) { r.Substitution = value; return r; }
        public static MedicationDispense AddSupportingInformation(this MedicationDispense r, ReferenceType item) { r.SupportingInformation ??= new List<ReferenceType>(); r.SupportingInformation!.Add(item); return r; }
        public static MedicationDispense WithText(this MedicationDispense r, Narrative value) { r.Text = value; return r; }
        public static MedicationDispense WithType(this MedicationDispense r, CodeableConcept value) { r.Type = value; return r; }
        public static MedicationDispense WithWhenHandedOver(this MedicationDispense r, FhirDateTime value) { r.WhenHandedOver = value; return r; }
        public static MedicationDispense WithWhenPrepared(this MedicationDispense r, FhirDateTime value) { r.WhenPrepared = value; return r; }
    }
}
