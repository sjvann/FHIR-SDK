// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class ConditionDefinitionFluentExtensions
    {
        public static ConditionDefinition WithBodySite(this ConditionDefinition r, CodeableConcept value) { r.BodySite = value; return r; }
        public static ConditionDefinition WithCode(this ConditionDefinition r, CodeableConcept value) { r.Code = value; return r; }
        public static ConditionDefinition AddContact(this ConditionDefinition r, ContactDetail item) { r.Contact ??= new List<ContactDetail>(); r.Contact!.Add(item); return r; }
        public static ConditionDefinition AddContained(this ConditionDefinition r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static ConditionDefinition WithDate(this ConditionDefinition r, FhirDateTime value) { r.Date = value; return r; }
        public static ConditionDefinition AddDefinition(this ConditionDefinition r, FhirUri item) { r.Definition ??= new List<FhirUri>(); r.Definition!.Add(item); return r; }
        public static ConditionDefinition WithDescription(this ConditionDefinition r, FhirMarkdown value) { r.Description = value; return r; }
        public static ConditionDefinition WithExperimental(this ConditionDefinition r, FhirBoolean value) { r.Experimental = value; return r; }
        public static ConditionDefinition WithHasBodySite(this ConditionDefinition r, FhirBoolean value) { r.HasBodySite = value; return r; }
        public static ConditionDefinition WithHasSeverity(this ConditionDefinition r, FhirBoolean value) { r.HasSeverity = value; return r; }
        public static ConditionDefinition WithHasStage(this ConditionDefinition r, FhirBoolean value) { r.HasStage = value; return r; }
        public static ConditionDefinition AddIdentifier(this ConditionDefinition r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static ConditionDefinition AddJurisdiction(this ConditionDefinition r, CodeableConcept item) { r.Jurisdiction ??= new List<CodeableConcept>(); r.Jurisdiction!.Add(item); return r; }
        public static ConditionDefinition AddMedication(this ConditionDefinition r, BackboneElement item) { r.Medication ??= new List<BackboneElement>(); r.Medication!.Add(item); return r; }
        public static ConditionDefinition WithName(this ConditionDefinition r, FhirString value) { r.Name = value; return r; }
        public static ConditionDefinition AddObservation(this ConditionDefinition r, BackboneElement item) { r.Observation ??= new List<BackboneElement>(); r.Observation!.Add(item); return r; }
        public static ConditionDefinition AddPlan(this ConditionDefinition r, BackboneElement item) { r.Plan ??= new List<BackboneElement>(); r.Plan!.Add(item); return r; }
        public static ConditionDefinition AddPrecondition(this ConditionDefinition r, BackboneElement item) { r.Precondition ??= new List<BackboneElement>(); r.Precondition!.Add(item); return r; }
        public static ConditionDefinition WithPublisher(this ConditionDefinition r, FhirString value) { r.Publisher = value; return r; }
        public static ConditionDefinition AddQuestionnaire(this ConditionDefinition r, BackboneElement item) { r.Questionnaire ??= new List<BackboneElement>(); r.Questionnaire!.Add(item); return r; }
        public static ConditionDefinition WithSeverity(this ConditionDefinition r, CodeableConcept value) { r.Severity = value; return r; }
        public static ConditionDefinition WithStage(this ConditionDefinition r, CodeableConcept value) { r.Stage = value; return r; }
        public static ConditionDefinition WithStatus(this ConditionDefinition r, FhirCode value) { r.Status = value; return r; }
        public static ConditionDefinition WithSubtitle(this ConditionDefinition r, FhirString value) { r.Subtitle = value; return r; }
        public static ConditionDefinition AddTeam(this ConditionDefinition r, ReferenceType item) { r.Team ??= new List<ReferenceType>(); r.Team!.Add(item); return r; }
        public static ConditionDefinition WithText(this ConditionDefinition r, Narrative value) { r.Text = value; return r; }
        public static ConditionDefinition WithTitle(this ConditionDefinition r, FhirString value) { r.Title = value; return r; }
        public static ConditionDefinition WithUrl(this ConditionDefinition r, FhirUri value) { r.Url = value; return r; }
        public static ConditionDefinition AddUseContext(this ConditionDefinition r, UsageContext item) { r.UseContext ??= new List<UsageContext>(); r.UseContext!.Add(item); return r; }
        public static ConditionDefinition WithVersion(this ConditionDefinition r, FhirString value) { r.Version = value; return r; }
        public static ConditionDefinition WithVersionAlgorithmString(this ConditionDefinition r, FhirString value) { r.VersionAlgorithmString = value; return r; }
        public static ConditionDefinition WithVersionAlgorithmCoding(this ConditionDefinition r, Coding value) { r.VersionAlgorithmCoding = value; return r; }
    }
}
