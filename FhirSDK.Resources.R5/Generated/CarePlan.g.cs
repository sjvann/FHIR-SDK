// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// Healthcare plan for patient or group
    /// </summary>
    public partial class CarePlan : ResourceBase
    {
        public override string ResourceType => "CarePlan";

        public CarePlan() { }
        public CarePlan(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public CarePlan(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private List<CarePlan_Activity>? _activity;
        [JsonPropertyName("activity")]
        public List<CarePlan_Activity>? Activity { get => _activity; set { _activity = value; OnPropertyChangedByClr(nameof(Activity), value); } }

        /// <summary>
        /// Action to occur or has occurred as part of plan
        /// </summary>
        public partial class CarePlan_Activity : BackboneElement<CarePlan_Activity>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "CarePlan_Activity" : "carePlan_Activity";
            private List<CodeableReference>? _performedActivity;
        [JsonPropertyName("performedActivity")]
        public List<CodeableReference>? PerformedActivity { get => _performedActivity; set { _performedActivity = value; } }

            private ReferenceType? _plannedActivityReference;
        [JsonPropertyName("plannedActivityReference")]
        public ReferenceType? PlannedActivityReference { get => _plannedActivityReference; set { _plannedActivityReference = value; } }

            private List<Annotation>? _progress;
        [JsonPropertyName("progress")]
        public List<Annotation>? Progress { get => _progress; set { _progress = value; } }

        }

        private List<CodeableReference>? _addresses;
        [JsonPropertyName("addresses")]
        public List<CodeableReference>? Addresses { get => _addresses; set { _addresses = value; OnPropertyChangedByClr(nameof(Addresses), value); } }

        private List<ReferenceType>? _basedOn;
        [JsonPropertyName("basedOn")]
        public List<ReferenceType>? BasedOn { get => _basedOn; set { _basedOn = value; OnPropertyChangedByClr(nameof(BasedOn), value); } }

        private List<ReferenceType>? _careTeam;
        [JsonPropertyName("careTeam")]
        public List<ReferenceType>? CareTeam { get => _careTeam; set { _careTeam = value; OnPropertyChangedByClr(nameof(CareTeam), value); } }

        private List<CodeableConcept>? _category;
        [JsonPropertyName("category")]
        public List<CodeableConcept>? Category { get => _category; set { _category = value; OnPropertyChangedByClr(nameof(Category), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private List<ReferenceType>? _contributor;
        [JsonPropertyName("contributor")]
        public List<ReferenceType>? Contributor { get => _contributor; set { _contributor = value; OnPropertyChangedByClr(nameof(Contributor), value); } }

        private FhirDateTime? _created;
        [JsonPropertyName("created")]
        public FhirDateTime? Created { get => _created; set { _created = value; OnPropertyChangedByClr(nameof(Created), value); } }

        private ReferenceType? _custodian;
        [JsonPropertyName("custodian")]
        public ReferenceType? Custodian { get => _custodian; set { _custodian = value; OnPropertyChangedByClr(nameof(Custodian), value); } }

        private FhirString? _description;
        [JsonPropertyName("description")]
        public FhirString? Description { get => _description; set { _description = value; OnPropertyChangedByClr(nameof(Description), value); } }

        private ReferenceType? _encounter;
        [JsonPropertyName("encounter")]
        public ReferenceType? Encounter { get => _encounter; set { _encounter = value; OnPropertyChangedByClr(nameof(Encounter), value); } }

        private List<ReferenceType>? _goal;
        [JsonPropertyName("goal")]
        public List<ReferenceType>? Goal { get => _goal; set { _goal = value; OnPropertyChangedByClr(nameof(Goal), value); } }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private List<FhirCanonical>? _instantiatesCanonical;
        [JsonPropertyName("instantiatesCanonical")]
        public List<FhirCanonical>? InstantiatesCanonical { get => _instantiatesCanonical; set { _instantiatesCanonical = value; OnPropertyChangedByClr(nameof(InstantiatesCanonical), value); } }

        private List<FhirUri>? _instantiatesUri;
        [JsonPropertyName("instantiatesUri")]
        public List<FhirUri>? InstantiatesUri { get => _instantiatesUri; set { _instantiatesUri = value; OnPropertyChangedByClr(nameof(InstantiatesUri), value); } }

        private FhirCode? _intent;
        [JsonPropertyName("intent")]
        public FhirCode Intent { get => _intent ?? throw new InvalidOperationException("Intent is required"); set { _intent = value; OnPropertyChangedByClr(nameof(Intent), value); } }

        private List<Annotation>? _note;
        [JsonPropertyName("note")]
        public List<Annotation>? Note { get => _note; set { _note = value; OnPropertyChangedByClr(nameof(Note), value); } }

        private List<ReferenceType>? _partOf;
        [JsonPropertyName("partOf")]
        public List<ReferenceType>? PartOf { get => _partOf; set { _partOf = value; OnPropertyChangedByClr(nameof(PartOf), value); } }

        private Period? _period;
        [JsonPropertyName("period")]
        public Period? Period { get => _period; set { _period = value; OnPropertyChangedByClr(nameof(Period), value); } }

        private List<ReferenceType>? _replaces;
        [JsonPropertyName("replaces")]
        public List<ReferenceType>? Replaces { get => _replaces; set { _replaces = value; OnPropertyChangedByClr(nameof(Replaces), value); } }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode Status { get => _status ?? throw new InvalidOperationException("Status is required"); set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private ReferenceType? _subject;
        [JsonPropertyName("subject")]
        public ReferenceType Subject { get => _subject ?? throw new InvalidOperationException("Subject is required"); set { _subject = value; OnPropertyChangedByClr(nameof(Subject), value); } }

        private List<ReferenceType>? _supportingInfo;
        [JsonPropertyName("supportingInfo")]
        public List<ReferenceType>? SupportingInfo { get => _supportingInfo; set { _supportingInfo = value; OnPropertyChangedByClr(nameof(SupportingInfo), value); } }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

        private FhirString? _title;
        [JsonPropertyName("title")]
        public FhirString? Title { get => _title; set { _title = value; OnPropertyChangedByClr(nameof(Title), value); } }

    }
}
