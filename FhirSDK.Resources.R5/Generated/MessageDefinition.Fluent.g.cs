// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class MessageDefinitionFluentExtensions
    {
        public static MessageDefinition AddAllowedResponse(this MessageDefinition r, BackboneElement item) { r.AllowedResponse ??= new List<BackboneElement>(); r.AllowedResponse!.Add(item); return r; }
        public static MessageDefinition WithBase(this MessageDefinition r, FhirCanonical value) { r.Base = value; return r; }
        public static MessageDefinition WithCategory(this MessageDefinition r, FhirCode value) { r.Category = value; return r; }
        public static MessageDefinition AddContact(this MessageDefinition r, ContactDetail item) { r.Contact ??= new List<ContactDetail>(); r.Contact!.Add(item); return r; }
        public static MessageDefinition AddContained(this MessageDefinition r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static MessageDefinition WithCopyright(this MessageDefinition r, FhirMarkdown value) { r.Copyright = value; return r; }
        public static MessageDefinition WithCopyrightLabel(this MessageDefinition r, FhirString value) { r.CopyrightLabel = value; return r; }
        public static MessageDefinition WithDate(this MessageDefinition r, FhirDateTime value) { r.Date = value; return r; }
        public static MessageDefinition WithDescription(this MessageDefinition r, FhirMarkdown value) { r.Description = value; return r; }
        public static MessageDefinition WithEventCoding(this MessageDefinition r, Coding value) { r.EventCoding = value; return r; }
        public static MessageDefinition WithEventuri(this MessageDefinition r, FhirUri value) { r.Eventuri = value; return r; }
        public static MessageDefinition WithExperimental(this MessageDefinition r, FhirBoolean value) { r.Experimental = value; return r; }
        public static MessageDefinition AddFocus(this MessageDefinition r, BackboneElement item) { r.Focus ??= new List<BackboneElement>(); r.Focus!.Add(item); return r; }
        public static MessageDefinition WithGraph(this MessageDefinition r, FhirCanonical value) { r.Graph = value; return r; }
        public static MessageDefinition AddIdentifier(this MessageDefinition r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static MessageDefinition AddJurisdiction(this MessageDefinition r, CodeableConcept item) { r.Jurisdiction ??= new List<CodeableConcept>(); r.Jurisdiction!.Add(item); return r; }
        public static MessageDefinition WithName(this MessageDefinition r, FhirString value) { r.Name = value; return r; }
        public static MessageDefinition AddParent(this MessageDefinition r, FhirCanonical item) { r.Parent ??= new List<FhirCanonical>(); r.Parent!.Add(item); return r; }
        public static MessageDefinition WithPublisher(this MessageDefinition r, FhirString value) { r.Publisher = value; return r; }
        public static MessageDefinition WithPurpose(this MessageDefinition r, FhirMarkdown value) { r.Purpose = value; return r; }
        public static MessageDefinition AddReplaces(this MessageDefinition r, FhirCanonical item) { r.Replaces ??= new List<FhirCanonical>(); r.Replaces!.Add(item); return r; }
        public static MessageDefinition WithResponseRequired(this MessageDefinition r, FhirCode value) { r.ResponseRequired = value; return r; }
        public static MessageDefinition WithStatus(this MessageDefinition r, FhirCode value) { r.Status = value; return r; }
        public static MessageDefinition WithText(this MessageDefinition r, Narrative value) { r.Text = value; return r; }
        public static MessageDefinition WithTitle(this MessageDefinition r, FhirString value) { r.Title = value; return r; }
        public static MessageDefinition WithUrl(this MessageDefinition r, FhirUri value) { r.Url = value; return r; }
        public static MessageDefinition AddUseContext(this MessageDefinition r, UsageContext item) { r.UseContext ??= new List<UsageContext>(); r.UseContext!.Add(item); return r; }
        public static MessageDefinition WithVersion(this MessageDefinition r, FhirString value) { r.Version = value; return r; }
        public static MessageDefinition WithVersionAlgorithmString(this MessageDefinition r, FhirString value) { r.VersionAlgorithmString = value; return r; }
        public static MessageDefinition WithVersionAlgorithmCoding(this MessageDefinition r, Coding value) { r.VersionAlgorithmCoding = value; return r; }
    }
}
