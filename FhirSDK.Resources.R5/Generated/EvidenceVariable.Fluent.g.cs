// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class EvidenceVariableFluentExtensions
    {
        public static EvidenceVariable WithActual(this EvidenceVariable r, FhirBoolean value) { r.Actual = value; return r; }
        public static EvidenceVariable WithApprovalDate(this EvidenceVariable r, FhirDate value) { r.ApprovalDate = value; return r; }
        public static EvidenceVariable AddAuthor(this EvidenceVariable r, ContactDetail item) { r.Author ??= new List<ContactDetail>(); r.Author!.Add(item); return r; }
        public static EvidenceVariable AddCategory(this EvidenceVariable r, BackboneElement item) { r.Category ??= new List<BackboneElement>(); r.Category!.Add(item); return r; }
        public static EvidenceVariable AddCharacteristic(this EvidenceVariable r, BackboneElement item) { r.Characteristic ??= new List<BackboneElement>(); r.Characteristic!.Add(item); return r; }
        public static EvidenceVariable AddContact(this EvidenceVariable r, ContactDetail item) { r.Contact ??= new List<ContactDetail>(); r.Contact!.Add(item); return r; }
        public static EvidenceVariable AddContained(this EvidenceVariable r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static EvidenceVariable WithCopyright(this EvidenceVariable r, FhirMarkdown value) { r.Copyright = value; return r; }
        public static EvidenceVariable WithCopyrightLabel(this EvidenceVariable r, FhirString value) { r.CopyrightLabel = value; return r; }
        public static EvidenceVariable WithDate(this EvidenceVariable r, FhirDateTime value) { r.Date = value; return r; }
        public static EvidenceVariable WithDescription(this EvidenceVariable r, FhirMarkdown value) { r.Description = value; return r; }
        public static EvidenceVariable AddEditor(this EvidenceVariable r, ContactDetail item) { r.Editor ??= new List<ContactDetail>(); r.Editor!.Add(item); return r; }
        public static EvidenceVariable WithEffectivePeriod(this EvidenceVariable r, Period value) { r.EffectivePeriod = value; return r; }
        public static EvidenceVariable AddEndorser(this EvidenceVariable r, ContactDetail item) { r.Endorser ??= new List<ContactDetail>(); r.Endorser!.Add(item); return r; }
        public static EvidenceVariable WithExperimental(this EvidenceVariable r, FhirBoolean value) { r.Experimental = value; return r; }
        public static EvidenceVariable WithHandling(this EvidenceVariable r, FhirCode value) { r.Handling = value; return r; }
        public static EvidenceVariable AddIdentifier(this EvidenceVariable r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static EvidenceVariable WithLastReviewDate(this EvidenceVariable r, FhirDate value) { r.LastReviewDate = value; return r; }
        public static EvidenceVariable WithName(this EvidenceVariable r, FhirString value) { r.Name = value; return r; }
        public static EvidenceVariable AddNote(this EvidenceVariable r, Annotation item) { r.Note ??= new List<Annotation>(); r.Note!.Add(item); return r; }
        public static EvidenceVariable WithPublisher(this EvidenceVariable r, FhirString value) { r.Publisher = value; return r; }
        public static EvidenceVariable WithPurpose(this EvidenceVariable r, FhirMarkdown value) { r.Purpose = value; return r; }
        public static EvidenceVariable AddRelatedArtifact(this EvidenceVariable r, RelatedArtifact item) { r.RelatedArtifact ??= new List<RelatedArtifact>(); r.RelatedArtifact!.Add(item); return r; }
        public static EvidenceVariable AddReviewer(this EvidenceVariable r, ContactDetail item) { r.Reviewer ??= new List<ContactDetail>(); r.Reviewer!.Add(item); return r; }
        public static EvidenceVariable WithShortTitle(this EvidenceVariable r, FhirString value) { r.ShortTitle = value; return r; }
        public static EvidenceVariable WithStatus(this EvidenceVariable r, FhirCode value) { r.Status = value; return r; }
        public static EvidenceVariable WithText(this EvidenceVariable r, Narrative value) { r.Text = value; return r; }
        public static EvidenceVariable WithTitle(this EvidenceVariable r, FhirString value) { r.Title = value; return r; }
        public static EvidenceVariable WithUrl(this EvidenceVariable r, FhirUri value) { r.Url = value; return r; }
        public static EvidenceVariable AddUseContext(this EvidenceVariable r, UsageContext item) { r.UseContext ??= new List<UsageContext>(); r.UseContext!.Add(item); return r; }
        public static EvidenceVariable WithVersion(this EvidenceVariable r, FhirString value) { r.Version = value; return r; }
        public static EvidenceVariable WithVersionAlgorithmString(this EvidenceVariable r, FhirString value) { r.VersionAlgorithmString = value; return r; }
        public static EvidenceVariable WithVersionAlgorithmCoding(this EvidenceVariable r, Coding value) { r.VersionAlgorithmCoding = value; return r; }
    }
}
