// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class RelatedPersonFluentExtensions
    {
        public static RelatedPerson WithActive(this RelatedPerson r, FhirBoolean value) { r.Active = value; return r; }
        public static RelatedPerson AddAddress(this RelatedPerson r, Address item) { r.Address ??= new List<Address>(); r.Address!.Add(item); return r; }
        public static RelatedPerson WithBirthDate(this RelatedPerson r, FhirDate value) { r.BirthDate = value; return r; }
        public static RelatedPerson AddCommunication(this RelatedPerson r, BackboneElement item) { r.Communication ??= new List<BackboneElement>(); r.Communication!.Add(item); return r; }
        public static RelatedPerson AddContained(this RelatedPerson r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static RelatedPerson WithGender(this RelatedPerson r, FhirCode value) { r.Gender = value; return r; }
        public static RelatedPerson AddIdentifier(this RelatedPerson r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static RelatedPerson AddName(this RelatedPerson r, HumanName item) { r.Name ??= new List<HumanName>(); r.Name!.Add(item); return r; }
        public static RelatedPerson WithPatient(this RelatedPerson r, ReferenceType value) { r.Patient = value; return r; }
        public static RelatedPerson WithPeriod(this RelatedPerson r, Period value) { r.Period = value; return r; }
        public static RelatedPerson AddPhoto(this RelatedPerson r, Attachment item) { r.Photo ??= new List<Attachment>(); r.Photo!.Add(item); return r; }
        public static RelatedPerson AddRelationship(this RelatedPerson r, CodeableConcept item) { r.Relationship ??= new List<CodeableConcept>(); r.Relationship!.Add(item); return r; }
        public static RelatedPerson AddTelecom(this RelatedPerson r, ContactPoint item) { r.Telecom ??= new List<ContactPoint>(); r.Telecom!.Add(item); return r; }
        public static RelatedPerson WithText(this RelatedPerson r, Narrative value) { r.Text = value; return r; }
    }
}
