// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class DeviceRequestFluentExtensions
    {
        public static DeviceRequest WithAsNeeded(this DeviceRequest r, FhirBoolean value) { r.AsNeeded = value; return r; }
        public static DeviceRequest WithAsNeededFor(this DeviceRequest r, CodeableConcept value) { r.AsNeededFor = value; return r; }
        public static DeviceRequest WithAuthoredOn(this DeviceRequest r, FhirDateTime value) { r.AuthoredOn = value; return r; }
        public static DeviceRequest AddBasedOn(this DeviceRequest r, ReferenceType item) { r.BasedOn ??= new List<ReferenceType>(); r.BasedOn!.Add(item); return r; }
        public static DeviceRequest WithCode(this DeviceRequest r, CodeableReference value) { r.Code = value; return r; }
        public static DeviceRequest AddContained(this DeviceRequest r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static DeviceRequest WithDoNotPerform(this DeviceRequest r, FhirBoolean value) { r.DoNotPerform = value; return r; }
        public static DeviceRequest WithEncounter(this DeviceRequest r, ReferenceType value) { r.Encounter = value; return r; }
        public static DeviceRequest WithGroupIdentifier(this DeviceRequest r, Identifier value) { r.GroupIdentifier = value; return r; }
        public static DeviceRequest AddIdentifier(this DeviceRequest r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static DeviceRequest AddInstantiatesCanonical(this DeviceRequest r, FhirCanonical item) { r.InstantiatesCanonical ??= new List<FhirCanonical>(); r.InstantiatesCanonical!.Add(item); return r; }
        public static DeviceRequest AddInstantiatesUri(this DeviceRequest r, FhirUri item) { r.InstantiatesUri ??= new List<FhirUri>(); r.InstantiatesUri!.Add(item); return r; }
        public static DeviceRequest AddInsurance(this DeviceRequest r, ReferenceType item) { r.Insurance ??= new List<ReferenceType>(); r.Insurance!.Add(item); return r; }
        public static DeviceRequest WithIntent(this DeviceRequest r, FhirCode value) { r.Intent = value; return r; }
        public static DeviceRequest AddNote(this DeviceRequest r, Annotation item) { r.Note ??= new List<Annotation>(); r.Note!.Add(item); return r; }
        public static DeviceRequest WithOccurrenceDateTime(this DeviceRequest r, FhirDateTime value) { r.OccurrenceDateTime = value; return r; }
        public static DeviceRequest WithOccurrencePeriod(this DeviceRequest r, Period value) { r.OccurrencePeriod = value; return r; }
        public static DeviceRequest WithOccurrenceTiming(this DeviceRequest r, Timing value) { r.OccurrenceTiming = value; return r; }
        public static DeviceRequest AddParameter(this DeviceRequest r, BackboneElement item) { r.Parameter ??= new List<BackboneElement>(); r.Parameter!.Add(item); return r; }
        public static DeviceRequest WithPerformer(this DeviceRequest r, CodeableReference value) { r.Performer = value; return r; }
        public static DeviceRequest WithPriority(this DeviceRequest r, FhirCode value) { r.Priority = value; return r; }
        public static DeviceRequest WithQuantity(this DeviceRequest r, FhirInteger value) { r.Quantity = value; return r; }
        public static DeviceRequest AddReason(this DeviceRequest r, CodeableReference item) { r.Reason ??= new List<CodeableReference>(); r.Reason!.Add(item); return r; }
        public static DeviceRequest AddRelevantHistory(this DeviceRequest r, ReferenceType item) { r.RelevantHistory ??= new List<ReferenceType>(); r.RelevantHistory!.Add(item); return r; }
        public static DeviceRequest AddReplaces(this DeviceRequest r, ReferenceType item) { r.Replaces ??= new List<ReferenceType>(); r.Replaces!.Add(item); return r; }
        public static DeviceRequest WithRequester(this DeviceRequest r, ReferenceType value) { r.Requester = value; return r; }
        public static DeviceRequest WithStatus(this DeviceRequest r, FhirCode value) { r.Status = value; return r; }
        public static DeviceRequest WithSubject(this DeviceRequest r, ReferenceType value) { r.Subject = value; return r; }
        public static DeviceRequest AddSupportingInfo(this DeviceRequest r, ReferenceType item) { r.SupportingInfo ??= new List<ReferenceType>(); r.SupportingInfo!.Add(item); return r; }
        public static DeviceRequest WithText(this DeviceRequest r, Narrative value) { r.Text = value; return r; }
    }
}
