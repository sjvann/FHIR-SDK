// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// Record of an event
    /// </summary>
    public partial class AuditEvent : ResourceBase
    {
        public override string ResourceType => "AuditEvent";

        public AuditEvent() { }
        public AuditEvent(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public AuditEvent(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private FhirCode? _action;
        [JsonPropertyName("action")]
        public FhirCode? Action { get => _action; set { _action = value; OnPropertyChangedByClr(nameof(Action), value); } }

        private List<AuditEvent_Agent> _agent = new();
        [JsonPropertyName("agent")]
        public List<AuditEvent_Agent> Agent { get => _agent; set { _agent = value; OnPropertyChangedByClr(nameof(Agent), value); } }

        /// <summary>
        /// Actor involved in the event
        /// </summary>
        public partial class AuditEvent_Agent : BackboneElement<AuditEvent_Agent>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "AuditEvent_Agent" : "auditEvent_Agent";
            private List<CodeableConcept>? _authorization;
        [JsonPropertyName("authorization")]
        public List<CodeableConcept>? Authorization { get => _authorization; set { _authorization = value; } }

            private ReferenceType? _location;
        [JsonPropertyName("location")]
        public ReferenceType? Location { get => _location; set { _location = value; } }

            private ReferenceType? _networkReference;
        [JsonPropertyName("networkReference")]
        public ReferenceType? NetworkReference { get => _networkReference; set { _networkReference = value; if (value != null) {{ _networkuri = null; OnPropertyChanged("networkuri", null); _networkString = null; OnPropertyChanged("networkString", null); }}; OnPropertyChanged("networkReference", value); } }

            private FhirUri? _networkuri;
        [JsonPropertyName("networkuri")]
        public FhirUri? Networkuri { get => _networkuri; set { _networkuri = value; if (value != null) {{ _networkReference = null; OnPropertyChanged("networkReference", null); _networkString = null; OnPropertyChanged("networkString", null); }}; OnPropertyChanged("networkuri", value); } }

            private FhirString? _networkString;
        [JsonPropertyName("networkString")]
        public FhirString? NetworkString { get => _networkString; set { _networkString = value; if (value != null) {{ _networkReference = null; OnPropertyChanged("networkReference", null); _networkuri = null; OnPropertyChanged("networkuri", null); }}; OnPropertyChanged("networkString", value); } }

            private List<FhirUri>? _policy;
        [JsonPropertyName("policy")]
        public List<FhirUri>? Policy { get => _policy; set { _policy = value; } }

            private FhirBoolean? _requestor;
        [JsonPropertyName("requestor")]
        public FhirBoolean? Requestor { get => _requestor; set { _requestor = value; } }

            private List<CodeableConcept>? _role;
        [JsonPropertyName("role")]
        public List<CodeableConcept>? Role { get => _role; set { _role = value; } }

            private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept? Type { get => _type; set { _type = value; } }

            private ReferenceType? _who;
        [JsonPropertyName("who")]
        public ReferenceType Who { get => _who ?? throw new InvalidOperationException("Who is required"); set { _who = value; } }

        }

        private List<CodeableConcept>? _authorization;
        [JsonPropertyName("authorization")]
        public List<CodeableConcept>? Authorization { get => _authorization; set { _authorization = value; OnPropertyChangedByClr(nameof(Authorization), value); } }

        private List<ReferenceType>? _basedOn;
        [JsonPropertyName("basedOn")]
        public List<ReferenceType>? BasedOn { get => _basedOn; set { _basedOn = value; OnPropertyChangedByClr(nameof(BasedOn), value); } }

        private List<CodeableConcept>? _category;
        [JsonPropertyName("category")]
        public List<CodeableConcept>? Category { get => _category; set { _category = value; OnPropertyChangedByClr(nameof(Category), value); } }

        private CodeableConcept? _code;
        [JsonPropertyName("code")]
        public CodeableConcept Code { get => _code ?? throw new InvalidOperationException("Code is required"); set { _code = value; OnPropertyChangedByClr(nameof(Code), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private ReferenceType? _encounter;
        [JsonPropertyName("encounter")]
        public ReferenceType? Encounter { get => _encounter; set { _encounter = value; OnPropertyChangedByClr(nameof(Encounter), value); } }

        private List<AuditEvent_Entity>? _entity;
        [JsonPropertyName("entity")]
        public List<AuditEvent_Entity>? Entity { get => _entity; set { _entity = value; OnPropertyChangedByClr(nameof(Entity), value); } }

        /// <summary>
        /// Data or objects used
        /// </summary>
        public partial class AuditEvent_Entity : BackboneElement<AuditEvent_Entity>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "AuditEvent_Entity" : "auditEvent_Entity";
            private List<FhirString>? _agent;
        [JsonPropertyName("agent")]
        public List<FhirString>? Agent { get => _agent; set { _agent = value; } }

            private List<AuditEvent_Entity_Detail>? _detail;
        [JsonPropertyName("detail")]
        public List<AuditEvent_Entity_Detail>? Detail { get => _detail; set { _detail = value; } }

            /// <summary>
            /// Additional Information about the entity
            /// </summary>
            public partial class AuditEvent_Entity_Detail : BackboneElement<AuditEvent_Entity_Detail>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "AuditEvent_Entity_Detail" : "auditEvent_Entity_Detail";
                private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept Type { get => _type ?? throw new InvalidOperationException("Type is required"); set { _type = value; } }

                private Quantity? _valueQuantity;
        [JsonPropertyName("valueQuantity")]
        public Quantity? ValueQuantity { get => _valueQuantity; set { _valueQuantity = value; if (value != null) {{ _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueString = null; OnPropertyChanged("valueString", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valueRange = null; OnPropertyChanged("valueRange", null); _valueRatio = null; OnPropertyChanged("valueRatio", null); _valueTime = null; OnPropertyChanged("valueTime", null); _valueDateTime = null; OnPropertyChanged("valueDateTime", null); _valuePeriod = null; OnPropertyChanged("valuePeriod", null); _valuebase64Binary = null; OnPropertyChanged("valuebase64Binary", null); }}; OnPropertyChanged("valueQuantity", value); } }

                private CodeableConcept? _valueCodeableConcept;
        [JsonPropertyName("valueCodeableConcept")]
        public CodeableConcept? ValueCodeableConcept { get => _valueCodeableConcept; set { _valueCodeableConcept = value; if (value != null) {{ _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueString = null; OnPropertyChanged("valueString", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valueRange = null; OnPropertyChanged("valueRange", null); _valueRatio = null; OnPropertyChanged("valueRatio", null); _valueTime = null; OnPropertyChanged("valueTime", null); _valueDateTime = null; OnPropertyChanged("valueDateTime", null); _valuePeriod = null; OnPropertyChanged("valuePeriod", null); _valuebase64Binary = null; OnPropertyChanged("valuebase64Binary", null); }}; OnPropertyChanged("valueCodeableConcept", value); } }

                private FhirString? _valueString;
        [JsonPropertyName("valueString")]
        public FhirString? ValueString { get => _valueString; set { _valueString = value; if (value != null) {{ _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valueRange = null; OnPropertyChanged("valueRange", null); _valueRatio = null; OnPropertyChanged("valueRatio", null); _valueTime = null; OnPropertyChanged("valueTime", null); _valueDateTime = null; OnPropertyChanged("valueDateTime", null); _valuePeriod = null; OnPropertyChanged("valuePeriod", null); _valuebase64Binary = null; OnPropertyChanged("valuebase64Binary", null); }}; OnPropertyChanged("valueString", value); } }

                private FhirBoolean? _valueBoolean;
        [JsonPropertyName("valueBoolean")]
        public FhirBoolean? ValueBoolean { get => _valueBoolean; set { _valueBoolean = value; if (value != null) {{ _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueString = null; OnPropertyChanged("valueString", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valueRange = null; OnPropertyChanged("valueRange", null); _valueRatio = null; OnPropertyChanged("valueRatio", null); _valueTime = null; OnPropertyChanged("valueTime", null); _valueDateTime = null; OnPropertyChanged("valueDateTime", null); _valuePeriod = null; OnPropertyChanged("valuePeriod", null); _valuebase64Binary = null; OnPropertyChanged("valuebase64Binary", null); }}; OnPropertyChanged("valueBoolean", value); } }

                private FhirInteger? _valueInteger;
        [JsonPropertyName("valueInteger")]
        public FhirInteger? ValueInteger { get => _valueInteger; set { _valueInteger = value; if (value != null) {{ _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueString = null; OnPropertyChanged("valueString", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueRange = null; OnPropertyChanged("valueRange", null); _valueRatio = null; OnPropertyChanged("valueRatio", null); _valueTime = null; OnPropertyChanged("valueTime", null); _valueDateTime = null; OnPropertyChanged("valueDateTime", null); _valuePeriod = null; OnPropertyChanged("valuePeriod", null); _valuebase64Binary = null; OnPropertyChanged("valuebase64Binary", null); }}; OnPropertyChanged("valueInteger", value); } }

                private DataTypeServices.DataTypes.ComplexTypes.Range? _valueRange;
        [JsonPropertyName("valueRange")]
        public DataTypeServices.DataTypes.ComplexTypes.Range? ValueRange { get => _valueRange; set { _valueRange = value; if (value != null) {{ _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueString = null; OnPropertyChanged("valueString", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valueRatio = null; OnPropertyChanged("valueRatio", null); _valueTime = null; OnPropertyChanged("valueTime", null); _valueDateTime = null; OnPropertyChanged("valueDateTime", null); _valuePeriod = null; OnPropertyChanged("valuePeriod", null); _valuebase64Binary = null; OnPropertyChanged("valuebase64Binary", null); }}; OnPropertyChanged("valueRange", value); } }

                private Ratio? _valueRatio;
        [JsonPropertyName("valueRatio")]
        public Ratio? ValueRatio { get => _valueRatio; set { _valueRatio = value; if (value != null) {{ _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueString = null; OnPropertyChanged("valueString", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valueRange = null; OnPropertyChanged("valueRange", null); _valueTime = null; OnPropertyChanged("valueTime", null); _valueDateTime = null; OnPropertyChanged("valueDateTime", null); _valuePeriod = null; OnPropertyChanged("valuePeriod", null); _valuebase64Binary = null; OnPropertyChanged("valuebase64Binary", null); }}; OnPropertyChanged("valueRatio", value); } }

                private FhirTime? _valueTime;
        [JsonPropertyName("valueTime")]
        public FhirTime? ValueTime { get => _valueTime; set { _valueTime = value; if (value != null) {{ _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueString = null; OnPropertyChanged("valueString", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valueRange = null; OnPropertyChanged("valueRange", null); _valueRatio = null; OnPropertyChanged("valueRatio", null); _valueDateTime = null; OnPropertyChanged("valueDateTime", null); _valuePeriod = null; OnPropertyChanged("valuePeriod", null); _valuebase64Binary = null; OnPropertyChanged("valuebase64Binary", null); }}; OnPropertyChanged("valueTime", value); } }

                private FhirDateTime? _valueDateTime;
        [JsonPropertyName("valueDateTime")]
        public FhirDateTime? ValueDateTime { get => _valueDateTime; set { _valueDateTime = value; if (value != null) {{ _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueString = null; OnPropertyChanged("valueString", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valueRange = null; OnPropertyChanged("valueRange", null); _valueRatio = null; OnPropertyChanged("valueRatio", null); _valueTime = null; OnPropertyChanged("valueTime", null); _valuePeriod = null; OnPropertyChanged("valuePeriod", null); _valuebase64Binary = null; OnPropertyChanged("valuebase64Binary", null); }}; OnPropertyChanged("valueDateTime", value); } }

                private Period? _valuePeriod;
        [JsonPropertyName("valuePeriod")]
        public Period? ValuePeriod { get => _valuePeriod; set { _valuePeriod = value; if (value != null) {{ _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueString = null; OnPropertyChanged("valueString", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valueRange = null; OnPropertyChanged("valueRange", null); _valueRatio = null; OnPropertyChanged("valueRatio", null); _valueTime = null; OnPropertyChanged("valueTime", null); _valueDateTime = null; OnPropertyChanged("valueDateTime", null); _valuebase64Binary = null; OnPropertyChanged("valuebase64Binary", null); }}; OnPropertyChanged("valuePeriod", value); } }

                private FhirBase64Binary? _valuebase64Binary;
        [JsonPropertyName("valuebase64Binary")]
        public FhirBase64Binary? Valuebase64Binary { get => _valuebase64Binary; set { _valuebase64Binary = value; if (value != null) {{ _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueString = null; OnPropertyChanged("valueString", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueInteger = null; OnPropertyChanged("valueInteger", null); _valueRange = null; OnPropertyChanged("valueRange", null); _valueRatio = null; OnPropertyChanged("valueRatio", null); _valueTime = null; OnPropertyChanged("valueTime", null); _valueDateTime = null; OnPropertyChanged("valueDateTime", null); _valuePeriod = null; OnPropertyChanged("valuePeriod", null); }}; OnPropertyChanged("valuebase64Binary", value); } }

            }

            private FhirBase64Binary? _query;
        [JsonPropertyName("query")]
        public FhirBase64Binary? Query { get => _query; set { _query = value; } }

            private CodeableConcept? _role;
        [JsonPropertyName("role")]
        public CodeableConcept? Role { get => _role; set { _role = value; } }

            private List<CodeableConcept>? _securityLabel;
        [JsonPropertyName("securityLabel")]
        public List<CodeableConcept>? SecurityLabel { get => _securityLabel; set { _securityLabel = value; } }

            private ReferenceType? _what;
        [JsonPropertyName("what")]
        public ReferenceType? What { get => _what; set { _what = value; } }

        }

        private Period? _occurredPeriod;
        [JsonPropertyName("occurredPeriod")]
        public Period? OccurredPeriod { get => _occurredPeriod; set { _occurredPeriod = value; if (value != null) {{ _occurredDateTime = null; OnPropertyChangedByClr(nameof(OccurredDateTime), null); }}; OnPropertyChangedByClr(nameof(OccurredPeriod), value); } }

        private FhirDateTime? _occurredDateTime;
        [JsonPropertyName("occurredDateTime")]
        public FhirDateTime? OccurredDateTime { get => _occurredDateTime; set { _occurredDateTime = value; if (value != null) {{ _occurredPeriod = null; OnPropertyChangedByClr(nameof(OccurredPeriod), null); }}; OnPropertyChangedByClr(nameof(OccurredDateTime), value); } }

        private AuditEvent_Outcome? _outcome;
        [JsonPropertyName("outcome")]
        public AuditEvent_Outcome? Outcome { get => _outcome; set { _outcome = value; OnPropertyChangedByClr(nameof(Outcome), value); } }

        /// <summary>
        /// Whether the event succeeded or failed
        /// </summary>
        public partial class AuditEvent_Outcome : BackboneElement<AuditEvent_Outcome>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "AuditEvent_Outcome" : "auditEvent_Outcome";
            private Coding? _code;
        [JsonPropertyName("code")]
        public Coding Code { get => _code ?? throw new InvalidOperationException("Code is required"); set { _code = value; } }

            private List<CodeableConcept>? _detail;
        [JsonPropertyName("detail")]
        public List<CodeableConcept>? Detail { get => _detail; set { _detail = value; } }

        }

        private ReferenceType? _patient;
        [JsonPropertyName("patient")]
        public ReferenceType? Patient { get => _patient; set { _patient = value; OnPropertyChangedByClr(nameof(Patient), value); } }

        private FhirInstant? _recorded;
        [JsonPropertyName("recorded")]
        public FhirInstant Recorded { get => _recorded ?? throw new InvalidOperationException("Recorded is required"); set { _recorded = value; OnPropertyChangedByClr(nameof(Recorded), value); } }

        private FhirCode? _severity;
        [JsonPropertyName("severity")]
        public FhirCode? Severity { get => _severity; set { _severity = value; OnPropertyChangedByClr(nameof(Severity), value); } }

        private AuditEvent_Source? _source;
        [JsonPropertyName("source")]
        public AuditEvent_Source Source { get => _source ?? throw new InvalidOperationException("Source is required"); set { _source = value; OnPropertyChangedByClr(nameof(Source), value); } }

        /// <summary>
        /// Audit Event Reporter
        /// </summary>
        public partial class AuditEvent_Source : BackboneElement<AuditEvent_Source>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "AuditEvent_Source" : "auditEvent_Source";
            private ReferenceType? _observer;
        [JsonPropertyName("observer")]
        public ReferenceType Observer { get => _observer ?? throw new InvalidOperationException("Observer is required"); set { _observer = value; } }

            private ReferenceType? _site;
        [JsonPropertyName("site")]
        public ReferenceType? Site { get => _site; set { _site = value; } }

            private List<CodeableConcept>? _type;
        [JsonPropertyName("type")]
        public List<CodeableConcept>? Type { get => _type; set { _type = value; } }

        }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

    }
}
