// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class ArtifactAssessmentFluentExtensions
    {
        public static ArtifactAssessment WithApprovalDate(this ArtifactAssessment r, FhirDate value) { r.ApprovalDate = value; return r; }
        public static ArtifactAssessment WithArtifactReference(this ArtifactAssessment r, ReferenceType value) { r.ArtifactReference = value; return r; }
        public static ArtifactAssessment WithArtifactcanonical(this ArtifactAssessment r, FhirCanonical value) { r.Artifactcanonical = value; return r; }
        public static ArtifactAssessment WithArtifacturi(this ArtifactAssessment r, FhirUri value) { r.Artifacturi = value; return r; }
        public static ArtifactAssessment WithCiteAsReference(this ArtifactAssessment r, ReferenceType value) { r.CiteAsReference = value; return r; }
        public static ArtifactAssessment WithCiteAsmarkdown(this ArtifactAssessment r, FhirMarkdown value) { r.CiteAsmarkdown = value; return r; }
        public static ArtifactAssessment AddContained(this ArtifactAssessment r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static ArtifactAssessment AddContent(this ArtifactAssessment r, BackboneElement item) { r.Content ??= new List<BackboneElement>(); r.Content!.Add(item); return r; }
        public static ArtifactAssessment WithCopyright(this ArtifactAssessment r, FhirMarkdown value) { r.Copyright = value; return r; }
        public static ArtifactAssessment WithDate(this ArtifactAssessment r, FhirDateTime value) { r.Date = value; return r; }
        public static ArtifactAssessment WithDisposition(this ArtifactAssessment r, FhirCode value) { r.Disposition = value; return r; }
        public static ArtifactAssessment AddIdentifier(this ArtifactAssessment r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static ArtifactAssessment WithLastReviewDate(this ArtifactAssessment r, FhirDate value) { r.LastReviewDate = value; return r; }
        public static ArtifactAssessment WithText(this ArtifactAssessment r, Narrative value) { r.Text = value; return r; }
        public static ArtifactAssessment WithTitle(this ArtifactAssessment r, FhirString value) { r.Title = value; return r; }
        public static ArtifactAssessment WithWorkflowStatus(this ArtifactAssessment r, FhirCode value) { r.WorkflowStatus = value; return r; }
    }
}
