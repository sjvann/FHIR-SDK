// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class PatientFluentExtensions
    {
        public static Patient WithActive(this Patient r, FhirBoolean value) { r.Active = value; return r; }
        public static Patient AddAddress(this Patient r, Address item) { r.Address ??= new List<Address>(); r.Address!.Add(item); return r; }
        public static Patient WithBirthDate(this Patient r, FhirDate value) { r.BirthDate = value; return r; }
        public static Patient AddCommunication(this Patient r, BackboneElement item) { r.Communication ??= new List<BackboneElement>(); r.Communication!.Add(item); return r; }
        public static Patient AddContact(this Patient r, BackboneElement item) { r.Contact ??= new List<BackboneElement>(); r.Contact!.Add(item); return r; }
        public static Patient AddContained(this Patient r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static Patient WithDeceasedBoolean(this Patient r, FhirBoolean value) { r.DeceasedBoolean = value; return r; }
        public static Patient WithDeceasedDateTime(this Patient r, FhirDateTime value) { r.DeceasedDateTime = value; return r; }
        public static Patient WithGender(this Patient r, FhirCode value) { r.Gender = value; return r; }
        public static Patient AddGeneralPractitioner(this Patient r, ReferenceType item) { r.GeneralPractitioner ??= new List<ReferenceType>(); r.GeneralPractitioner!.Add(item); return r; }
        public static Patient AddIdentifier(this Patient r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static Patient AddLink(this Patient r, BackboneElement item) { r.Link ??= new List<BackboneElement>(); r.Link!.Add(item); return r; }
        public static Patient WithManagingOrganization(this Patient r, ReferenceType value) { r.ManagingOrganization = value; return r; }
        public static Patient WithMaritalStatus(this Patient r, CodeableConcept value) { r.MaritalStatus = value; return r; }
        public static Patient WithMultipleBirthBoolean(this Patient r, FhirBoolean value) { r.MultipleBirthBoolean = value; return r; }
        public static Patient WithMultipleBirthInteger(this Patient r, FhirInteger value) { r.MultipleBirthInteger = value; return r; }
        public static Patient AddName(this Patient r, HumanName item) { r.Name ??= new List<HumanName>(); r.Name!.Add(item); return r; }
        public static Patient AddPhoto(this Patient r, Attachment item) { r.Photo ??= new List<Attachment>(); r.Photo!.Add(item); return r; }
        public static Patient AddTelecom(this Patient r, ContactPoint item) { r.Telecom ??= new List<ContactPoint>(); r.Telecom!.Add(item); return r; }
        public static Patient WithText(this Patient r, Narrative value) { r.Text = value; return r; }
    }
}
