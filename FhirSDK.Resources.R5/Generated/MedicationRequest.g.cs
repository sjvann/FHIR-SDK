// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// Ordering of medication for patient or group
    /// </summary>
    public partial class MedicationRequest : ResourceBase
    {
        public override string ResourceType => "MedicationRequest";

        public MedicationRequest() { }
        public MedicationRequest(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public MedicationRequest(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private FhirDateTime? _authoredOn;
        [JsonPropertyName("authoredOn")]
        public FhirDateTime? AuthoredOn { get => _authoredOn; set { _authoredOn = value; OnPropertyChangedByClr(nameof(AuthoredOn), value); } }

        private List<ReferenceType>? _basedOn;
        [JsonPropertyName("basedOn")]
        public List<ReferenceType>? BasedOn { get => _basedOn; set { _basedOn = value; OnPropertyChangedByClr(nameof(BasedOn), value); } }

        private List<CodeableConcept>? _category;
        [JsonPropertyName("category")]
        public List<CodeableConcept>? Category { get => _category; set { _category = value; OnPropertyChangedByClr(nameof(Category), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private CodeableConcept? _courseOfTherapyType;
        [JsonPropertyName("courseOfTherapyType")]
        public CodeableConcept? CourseOfTherapyType { get => _courseOfTherapyType; set { _courseOfTherapyType = value; OnPropertyChangedByClr(nameof(CourseOfTherapyType), value); } }

        private List<CodeableReference>? _device;
        [JsonPropertyName("device")]
        public List<CodeableReference>? Device { get => _device; set { _device = value; OnPropertyChangedByClr(nameof(Device), value); } }

        private MedicationRequest_DispenseRequest? _dispenseRequest;
        [JsonPropertyName("dispenseRequest")]
        public MedicationRequest_DispenseRequest? DispenseRequest { get => _dispenseRequest; set { _dispenseRequest = value; OnPropertyChangedByClr(nameof(DispenseRequest), value); } }

        /// <summary>
        /// Medication supply authorization
        /// </summary>
        public partial class MedicationRequest_DispenseRequest : BackboneElement<MedicationRequest_DispenseRequest>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "MedicationRequest_DispenseRequest" : "medicationRequest_DispenseRequest";
            private Duration? _dispenseInterval;
        [JsonPropertyName("dispenseInterval")]
        public Duration? DispenseInterval { get => _dispenseInterval; set { _dispenseInterval = value; } }

            private ReferenceType? _dispenser;
        [JsonPropertyName("dispenser")]
        public ReferenceType? Dispenser { get => _dispenser; set { _dispenser = value; } }

            private List<Annotation>? _dispenserInstruction;
        [JsonPropertyName("dispenserInstruction")]
        public List<Annotation>? DispenserInstruction { get => _dispenserInstruction; set { _dispenserInstruction = value; } }

            private CodeableConcept? _doseAdministrationAid;
        [JsonPropertyName("doseAdministrationAid")]
        public CodeableConcept? DoseAdministrationAid { get => _doseAdministrationAid; set { _doseAdministrationAid = value; } }

            private Duration? _expectedSupplyDuration;
        [JsonPropertyName("expectedSupplyDuration")]
        public Duration? ExpectedSupplyDuration { get => _expectedSupplyDuration; set { _expectedSupplyDuration = value; } }

            private MedicationRequest_DispenseRequest_InitialFill? _initialFill;
        [JsonPropertyName("initialFill")]
        public MedicationRequest_DispenseRequest_InitialFill? InitialFill { get => _initialFill; set { _initialFill = value; } }

            /// <summary>
            /// First fill details
            /// </summary>
            public partial class MedicationRequest_DispenseRequest_InitialFill : BackboneElement<MedicationRequest_DispenseRequest_InitialFill>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "MedicationRequest_DispenseRequest_InitialFill" : "medicationRequest_DispenseRequest_InitialFill";
                private Duration? _duration;
        [JsonPropertyName("duration")]
        public Duration? Duration { get => _duration; set { _duration = value; } }

                private Quantity? _quantity;
        [JsonPropertyName("quantity")]
        public Quantity? Quantity { get => _quantity; set { _quantity = value; } }

            }

            private FhirUnsignedInt? _numberOfRepeatsAllowed;
        [JsonPropertyName("numberOfRepeatsAllowed")]
        public FhirUnsignedInt? NumberOfRepeatsAllowed { get => _numberOfRepeatsAllowed; set { _numberOfRepeatsAllowed = value; } }

            private Quantity? _quantity;
        [JsonPropertyName("quantity")]
        public Quantity? Quantity { get => _quantity; set { _quantity = value; } }

            private Period? _validityPeriod;
        [JsonPropertyName("validityPeriod")]
        public Period? ValidityPeriod { get => _validityPeriod; set { _validityPeriod = value; } }

        }

        private FhirBoolean? _doNotPerform;
        [JsonPropertyName("doNotPerform")]
        public FhirBoolean? DoNotPerform { get => _doNotPerform; set { _doNotPerform = value; OnPropertyChangedByClr(nameof(DoNotPerform), value); } }

        private List<Dosage>? _dosageInstruction;
        [JsonPropertyName("dosageInstruction")]
        public List<Dosage>? DosageInstruction { get => _dosageInstruction; set { _dosageInstruction = value; OnPropertyChangedByClr(nameof(DosageInstruction), value); } }

        private Period? _effectiveDosePeriod;
        [JsonPropertyName("effectiveDosePeriod")]
        public Period? EffectiveDosePeriod { get => _effectiveDosePeriod; set { _effectiveDosePeriod = value; OnPropertyChangedByClr(nameof(EffectiveDosePeriod), value); } }

        private ReferenceType? _encounter;
        [JsonPropertyName("encounter")]
        public ReferenceType? Encounter { get => _encounter; set { _encounter = value; OnPropertyChangedByClr(nameof(Encounter), value); } }

        private List<ReferenceType>? _eventHistory;
        [JsonPropertyName("eventHistory")]
        public List<ReferenceType>? EventHistory { get => _eventHistory; set { _eventHistory = value; OnPropertyChangedByClr(nameof(EventHistory), value); } }

        private Identifier? _groupIdentifier;
        [JsonPropertyName("groupIdentifier")]
        public Identifier? GroupIdentifier { get => _groupIdentifier; set { _groupIdentifier = value; OnPropertyChangedByClr(nameof(GroupIdentifier), value); } }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private List<ReferenceType>? _informationSource;
        [JsonPropertyName("informationSource")]
        public List<ReferenceType>? InformationSource { get => _informationSource; set { _informationSource = value; OnPropertyChangedByClr(nameof(InformationSource), value); } }

        private List<ReferenceType>? _insurance;
        [JsonPropertyName("insurance")]
        public List<ReferenceType>? Insurance { get => _insurance; set { _insurance = value; OnPropertyChangedByClr(nameof(Insurance), value); } }

        private FhirCode? _intent;
        [JsonPropertyName("intent")]
        public FhirCode Intent { get => _intent ?? throw new InvalidOperationException("Intent is required"); set { _intent = value; OnPropertyChangedByClr(nameof(Intent), value); } }

        private CodeableReference? _medication;
        [JsonPropertyName("medication")]
        public CodeableReference Medication { get => _medication ?? throw new InvalidOperationException("Medication is required"); set { _medication = value; OnPropertyChangedByClr(nameof(Medication), value); } }

        private List<Annotation>? _note;
        [JsonPropertyName("note")]
        public List<Annotation>? Note { get => _note; set { _note = value; OnPropertyChangedByClr(nameof(Note), value); } }

        private List<ReferenceType>? _performer;
        [JsonPropertyName("performer")]
        public List<ReferenceType>? Performer { get => _performer; set { _performer = value; OnPropertyChangedByClr(nameof(Performer), value); } }

        private CodeableConcept? _performerType;
        [JsonPropertyName("performerType")]
        public CodeableConcept? PerformerType { get => _performerType; set { _performerType = value; OnPropertyChangedByClr(nameof(PerformerType), value); } }

        private FhirCode? _priority;
        [JsonPropertyName("priority")]
        public FhirCode? Priority { get => _priority; set { _priority = value; OnPropertyChangedByClr(nameof(Priority), value); } }

        private ReferenceType? _priorPrescription;
        [JsonPropertyName("priorPrescription")]
        public ReferenceType? PriorPrescription { get => _priorPrescription; set { _priorPrescription = value; OnPropertyChangedByClr(nameof(PriorPrescription), value); } }

        private List<CodeableReference>? _reason;
        [JsonPropertyName("reason")]
        public List<CodeableReference>? Reason { get => _reason; set { _reason = value; OnPropertyChangedByClr(nameof(Reason), value); } }

        private ReferenceType? _recorder;
        [JsonPropertyName("recorder")]
        public ReferenceType? Recorder { get => _recorder; set { _recorder = value; OnPropertyChangedByClr(nameof(Recorder), value); } }

        private FhirMarkdown? _renderedDosageInstruction;
        [JsonPropertyName("renderedDosageInstruction")]
        public FhirMarkdown? RenderedDosageInstruction { get => _renderedDosageInstruction; set { _renderedDosageInstruction = value; OnPropertyChangedByClr(nameof(RenderedDosageInstruction), value); } }

        private FhirBoolean? _reported;
        [JsonPropertyName("reported")]
        public FhirBoolean? Reported { get => _reported; set { _reported = value; OnPropertyChangedByClr(nameof(Reported), value); } }

        private ReferenceType? _requester;
        [JsonPropertyName("requester")]
        public ReferenceType? Requester { get => _requester; set { _requester = value; OnPropertyChangedByClr(nameof(Requester), value); } }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode Status { get => _status ?? throw new InvalidOperationException("Status is required"); set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private FhirDateTime? _statusChanged;
        [JsonPropertyName("statusChanged")]
        public FhirDateTime? StatusChanged { get => _statusChanged; set { _statusChanged = value; OnPropertyChangedByClr(nameof(StatusChanged), value); } }

        private CodeableConcept? _statusReason;
        [JsonPropertyName("statusReason")]
        public CodeableConcept? StatusReason { get => _statusReason; set { _statusReason = value; OnPropertyChangedByClr(nameof(StatusReason), value); } }

        private ReferenceType? _subject;
        [JsonPropertyName("subject")]
        public ReferenceType Subject { get => _subject ?? throw new InvalidOperationException("Subject is required"); set { _subject = value; OnPropertyChangedByClr(nameof(Subject), value); } }

        private MedicationRequest_Substitution? _substitution;
        [JsonPropertyName("substitution")]
        public MedicationRequest_Substitution? Substitution { get => _substitution; set { _substitution = value; OnPropertyChangedByClr(nameof(Substitution), value); } }

        /// <summary>
        /// Any restrictions on medication substitution
        /// </summary>
        public partial class MedicationRequest_Substitution : BackboneElement<MedicationRequest_Substitution>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "MedicationRequest_Substitution" : "medicationRequest_Substitution";
            private FhirBoolean? _allowedBoolean;
        [JsonPropertyName("allowedBoolean")]
        public FhirBoolean? AllowedBoolean { get => _allowedBoolean; set { _allowedBoolean = value; if (value != null) {{ _allowedCodeableConcept = null; OnPropertyChanged("allowedCodeableConcept", null); }}; OnPropertyChanged("allowedBoolean", value); } }

            private CodeableConcept? _allowedCodeableConcept;
        [JsonPropertyName("allowedCodeableConcept")]
        public CodeableConcept? AllowedCodeableConcept { get => _allowedCodeableConcept; set { _allowedCodeableConcept = value; if (value != null) {{ _allowedBoolean = null; OnPropertyChanged("allowedBoolean", null); }}; OnPropertyChanged("allowedCodeableConcept", value); } }

            private CodeableConcept? _reason;
        [JsonPropertyName("reason")]
        public CodeableConcept? Reason { get => _reason; set { _reason = value; } }

        }

        private List<ReferenceType>? _supportingInformation;
        [JsonPropertyName("supportingInformation")]
        public List<ReferenceType>? SupportingInformation { get => _supportingInformation; set { _supportingInformation = value; OnPropertyChangedByClr(nameof(SupportingInformation), value); } }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

    }
}
