// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// Details of a Health Insurance product/plan provided by an organization
    /// </summary>
    public partial class InsurancePlan : ResourceBase
    {
        public override string ResourceType => "InsurancePlan";

        public InsurancePlan() { }
        public InsurancePlan(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public InsurancePlan(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private ReferenceType? _administeredBy;
        [JsonPropertyName("administeredBy")]
        public ReferenceType? AdministeredBy { get => _administeredBy; set { _administeredBy = value; OnPropertyChangedByClr(nameof(AdministeredBy), value); } }

        private List<FhirString>? _alias;
        [JsonPropertyName("alias")]
        public List<FhirString>? Alias { get => _alias; set { _alias = value; OnPropertyChangedByClr(nameof(Alias), value); } }

        private List<ExtendedContactDetail>? _contact;
        [JsonPropertyName("contact")]
        public List<ExtendedContactDetail>? Contact { get => _contact; set { _contact = value; OnPropertyChangedByClr(nameof(Contact), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private List<InsurancePlan_Coverage>? _coverage;
        [JsonPropertyName("coverage")]
        public List<InsurancePlan_Coverage>? Coverage { get => _coverage; set { _coverage = value; OnPropertyChangedByClr(nameof(Coverage), value); } }

        /// <summary>
        /// Coverage details
        /// </summary>
        public partial class InsurancePlan_Coverage : BackboneElement<InsurancePlan_Coverage>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "InsurancePlan_Coverage" : "insurancePlan_Coverage";
            private List<InsurancePlan_Coverage_Benefit> _benefit = new();
        [JsonPropertyName("benefit")]
        public List<InsurancePlan_Coverage_Benefit> Benefit { get => _benefit; set { _benefit = value; } }

            /// <summary>
            /// List of benefits
            /// </summary>
            public partial class InsurancePlan_Coverage_Benefit : BackboneElement<InsurancePlan_Coverage_Benefit>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "InsurancePlan_Coverage_Benefit" : "insurancePlan_Coverage_Benefit";
                private List<InsurancePlan_Coverage_Benefit_Limit>? _limit;
        [JsonPropertyName("limit")]
        public List<InsurancePlan_Coverage_Benefit_Limit>? Limit { get => _limit; set { _limit = value; } }

                /// <summary>
                /// Benefit limits
                /// </summary>
                public partial class InsurancePlan_Coverage_Benefit_Limit : BackboneElement<InsurancePlan_Coverage_Benefit_Limit>
                {
                    public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "InsurancePlan_Coverage_Benefit_Limit" : "insurancePlan_Coverage_Benefit_Limit";
                    private CodeableConcept? _code;
        [JsonPropertyName("code")]
        public CodeableConcept? Code { get => _code; set { _code = value; } }

                    private Quantity? _value;
        [JsonPropertyName("value")]
        public Quantity? Value { get => _value; set { _value = value; } }

                }

                private FhirString? _requirement;
        [JsonPropertyName("requirement")]
        public FhirString? Requirement { get => _requirement; set { _requirement = value; } }

                private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept Type { get => _type ?? throw new InvalidOperationException("Type is required"); set { _type = value; } }

            }

            private List<ReferenceType>? _network;
        [JsonPropertyName("network")]
        public List<ReferenceType>? Network { get => _network; set { _network = value; } }

            private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept Type { get => _type ?? throw new InvalidOperationException("Type is required"); set { _type = value; } }

        }

        private List<ReferenceType>? _coverageArea;
        [JsonPropertyName("coverageArea")]
        public List<ReferenceType>? CoverageArea { get => _coverageArea; set { _coverageArea = value; OnPropertyChangedByClr(nameof(CoverageArea), value); } }

        private List<ReferenceType>? _endpoint;
        [JsonPropertyName("endpoint")]
        public List<ReferenceType>? Endpoint { get => _endpoint; set { _endpoint = value; OnPropertyChangedByClr(nameof(Endpoint), value); } }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private FhirString? _name;
        [JsonPropertyName("name")]
        public FhirString? Name { get => _name; set { _name = value; OnPropertyChangedByClr(nameof(Name), value); } }

        private List<ReferenceType>? _network;
        [JsonPropertyName("network")]
        public List<ReferenceType>? Network { get => _network; set { _network = value; OnPropertyChangedByClr(nameof(Network), value); } }

        private ReferenceType? _ownedBy;
        [JsonPropertyName("ownedBy")]
        public ReferenceType? OwnedBy { get => _ownedBy; set { _ownedBy = value; OnPropertyChangedByClr(nameof(OwnedBy), value); } }

        private Period? _period;
        [JsonPropertyName("period")]
        public Period? Period { get => _period; set { _period = value; OnPropertyChangedByClr(nameof(Period), value); } }

        private List<InsurancePlan_Plan>? _plan;
        [JsonPropertyName("plan")]
        public List<InsurancePlan_Plan>? Plan { get => _plan; set { _plan = value; OnPropertyChangedByClr(nameof(Plan), value); } }

        /// <summary>
        /// Plan details
        /// </summary>
        public partial class InsurancePlan_Plan : BackboneElement<InsurancePlan_Plan>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "InsurancePlan_Plan" : "insurancePlan_Plan";
            private List<ReferenceType>? _coverageArea;
        [JsonPropertyName("coverageArea")]
        public List<ReferenceType>? CoverageArea { get => _coverageArea; set { _coverageArea = value; } }

            private List<InsurancePlan_Plan_GeneralCost>? _generalCost;
        [JsonPropertyName("generalCost")]
        public List<InsurancePlan_Plan_GeneralCost>? GeneralCost { get => _generalCost; set { _generalCost = value; } }

            /// <summary>
            /// Overall costs
            /// </summary>
            public partial class InsurancePlan_Plan_GeneralCost : BackboneElement<InsurancePlan_Plan_GeneralCost>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "InsurancePlan_Plan_GeneralCost" : "insurancePlan_Plan_GeneralCost";
                private FhirString? _comment;
        [JsonPropertyName("comment")]
        public FhirString? Comment { get => _comment; set { _comment = value; } }

                private Money? _cost;
        [JsonPropertyName("cost")]
        public Money? Cost { get => _cost; set { _cost = value; } }

                private FhirPositiveInt? _groupSize;
        [JsonPropertyName("groupSize")]
        public FhirPositiveInt? GroupSize { get => _groupSize; set { _groupSize = value; } }

                private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept? Type { get => _type; set { _type = value; } }

            }

            private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; } }

            private List<ReferenceType>? _network;
        [JsonPropertyName("network")]
        public List<ReferenceType>? Network { get => _network; set { _network = value; } }

            private List<InsurancePlan_Plan_SpecificCost>? _specificCost;
        [JsonPropertyName("specificCost")]
        public List<InsurancePlan_Plan_SpecificCost>? SpecificCost { get => _specificCost; set { _specificCost = value; } }

            /// <summary>
            /// Specific costs
            /// </summary>
            public partial class InsurancePlan_Plan_SpecificCost : BackboneElement<InsurancePlan_Plan_SpecificCost>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "InsurancePlan_Plan_SpecificCost" : "insurancePlan_Plan_SpecificCost";
                private List<InsurancePlan_Plan_SpecificCost_Benefit>? _benefit;
        [JsonPropertyName("benefit")]
        public List<InsurancePlan_Plan_SpecificCost_Benefit>? Benefit { get => _benefit; set { _benefit = value; } }

                /// <summary>
                /// Benefits list
                /// </summary>
                public partial class InsurancePlan_Plan_SpecificCost_Benefit : BackboneElement<InsurancePlan_Plan_SpecificCost_Benefit>
                {
                    public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "InsurancePlan_Plan_SpecificCost_Benefit" : "insurancePlan_Plan_SpecificCost_Benefit";
                    private List<InsurancePlan_Plan_SpecificCost_Benefit_Cost>? _cost;
        [JsonPropertyName("cost")]
        public List<InsurancePlan_Plan_SpecificCost_Benefit_Cost>? Cost { get => _cost; set { _cost = value; } }

                    /// <summary>
                    /// List of the costs
                    /// </summary>
                    public partial class InsurancePlan_Plan_SpecificCost_Benefit_Cost : BackboneElement<InsurancePlan_Plan_SpecificCost_Benefit_Cost>
                    {
                        public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "InsurancePlan_Plan_SpecificCost_Benefit_Cost" : "insurancePlan_Plan_SpecificCost_Benefit_Cost";
                        private CodeableConcept? _applicability;
        [JsonPropertyName("applicability")]
        public CodeableConcept? Applicability { get => _applicability; set { _applicability = value; } }

                        private List<CodeableConcept>? _qualifiers;
        [JsonPropertyName("qualifiers")]
        public List<CodeableConcept>? Qualifiers { get => _qualifiers; set { _qualifiers = value; } }

                        private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept Type { get => _type ?? throw new InvalidOperationException("Type is required"); set { _type = value; } }

                        private Quantity? _value;
        [JsonPropertyName("value")]
        public Quantity? Value { get => _value; set { _value = value; } }

                    }

                    private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept Type { get => _type ?? throw new InvalidOperationException("Type is required"); set { _type = value; } }

                }

                private CodeableConcept? _category;
        [JsonPropertyName("category")]
        public CodeableConcept Category { get => _category ?? throw new InvalidOperationException("Category is required"); set { _category = value; } }

            }

            private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept? Type { get => _type; set { _type = value; } }

        }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode? Status { get => _status; set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

        private List<CodeableConcept>? _type;
        [JsonPropertyName("type")]
        public List<CodeableConcept>? Type { get => _type; set { _type = value; OnPropertyChangedByClr(nameof(Type), value); } }

    }
}
