// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// Invoice containing ChargeItems from an Account
    /// </summary>
    public partial class Invoice : ResourceBase
    {
        public override string ResourceType => "Invoice";

        public Invoice() { }
        public Invoice(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public Invoice(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private ReferenceType? _account;
        [JsonPropertyName("account")]
        public ReferenceType? Account { get => _account; set { _account = value; OnPropertyChangedByClr(nameof(Account), value); } }

        private FhirString? _cancelledReason;
        [JsonPropertyName("cancelledReason")]
        public FhirString? CancelledReason { get => _cancelledReason; set { _cancelledReason = value; OnPropertyChangedByClr(nameof(CancelledReason), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private FhirDateTime? _creation;
        [JsonPropertyName("creation")]
        public FhirDateTime? Creation { get => _creation; set { _creation = value; OnPropertyChangedByClr(nameof(Creation), value); } }

        private FhirDateTime? _date;
        [JsonPropertyName("date")]
        public FhirDateTime? Date { get => _date; set { _date = value; OnPropertyChangedByClr(nameof(Date), value); } }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private ReferenceType? _issuer;
        [JsonPropertyName("issuer")]
        public ReferenceType? Issuer { get => _issuer; set { _issuer = value; OnPropertyChangedByClr(nameof(Issuer), value); } }

        private List<Invoice_LineItem>? _lineItem;
        [JsonPropertyName("lineItem")]
        public List<Invoice_LineItem>? LineItem { get => _lineItem; set { _lineItem = value; OnPropertyChangedByClr(nameof(LineItem), value); } }

        /// <summary>
        /// Line items of this Invoice
        /// </summary>
        public partial class Invoice_LineItem : BackboneElement<Invoice_LineItem>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Invoice_LineItem" : "invoice_LineItem";
            private ReferenceType? _chargeItemReference;
        [JsonPropertyName("chargeItemReference")]
        public ReferenceType? ChargeItemReference { get => _chargeItemReference; set { _chargeItemReference = value; if (value != null) {{ _chargeItemCodeableConcept = null; OnPropertyChanged("chargeItemCodeableConcept", null); }}; OnPropertyChanged("chargeItemReference", value); } }

            private CodeableConcept? _chargeItemCodeableConcept;
        [JsonPropertyName("chargeItemCodeableConcept")]
        public CodeableConcept? ChargeItemCodeableConcept { get => _chargeItemCodeableConcept; set { _chargeItemCodeableConcept = value; if (value != null) {{ _chargeItemReference = null; OnPropertyChanged("chargeItemReference", null); }}; OnPropertyChanged("chargeItemCodeableConcept", value); } }

            private List<MonetaryComponent>? _priceComponent;
        [JsonPropertyName("priceComponent")]
        public List<MonetaryComponent>? PriceComponent { get => _priceComponent; set { _priceComponent = value; } }

            private FhirPositiveInt? _sequence;
        [JsonPropertyName("sequence")]
        public FhirPositiveInt? Sequence { get => _sequence; set { _sequence = value; } }

            private FhirDate? _serviceddate;
        [JsonPropertyName("serviceddate")]
        public FhirDate? Serviceddate { get => _serviceddate; set { _serviceddate = value; if (value != null) {{ _servicedPeriod = null; OnPropertyChanged("servicedPeriod", null); }}; OnPropertyChanged("serviceddate", value); } }

            private Period? _servicedPeriod;
        [JsonPropertyName("servicedPeriod")]
        public Period? ServicedPeriod { get => _servicedPeriod; set { _servicedPeriod = value; if (value != null) {{ _serviceddate = null; OnPropertyChanged("serviceddate", null); }}; OnPropertyChanged("servicedPeriod", value); } }

        }

        private List<Annotation>? _note;
        [JsonPropertyName("note")]
        public List<Annotation>? Note { get => _note; set { _note = value; OnPropertyChangedByClr(nameof(Note), value); } }

        private List<Invoice_Participant>? _participant;
        [JsonPropertyName("participant")]
        public List<Invoice_Participant>? Participant { get => _participant; set { _participant = value; OnPropertyChangedByClr(nameof(Participant), value); } }

        /// <summary>
        /// Participant in creation of this Invoice
        /// </summary>
        public partial class Invoice_Participant : BackboneElement<Invoice_Participant>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Invoice_Participant" : "invoice_Participant";
            private ReferenceType? _actor;
        [JsonPropertyName("actor")]
        public ReferenceType Actor { get => _actor ?? throw new InvalidOperationException("Actor is required"); set { _actor = value; } }

            private CodeableConcept? _role;
        [JsonPropertyName("role")]
        public CodeableConcept? Role { get => _role; set { _role = value; } }

        }

        private FhirMarkdown? _paymentTerms;
        [JsonPropertyName("paymentTerms")]
        public FhirMarkdown? PaymentTerms { get => _paymentTerms; set { _paymentTerms = value; OnPropertyChangedByClr(nameof(PaymentTerms), value); } }

        private FhirDate? _perioddate;
        [JsonPropertyName("perioddate")]
        public FhirDate? Perioddate { get => _perioddate; set { _perioddate = value; if (value != null) {{ _periodPeriod = null; OnPropertyChangedByClr(nameof(PeriodPeriod), null); }}; OnPropertyChangedByClr(nameof(Perioddate), value); } }

        private Period? _periodPeriod;
        [JsonPropertyName("periodPeriod")]
        public Period? PeriodPeriod { get => _periodPeriod; set { _periodPeriod = value; if (value != null) {{ _perioddate = null; OnPropertyChangedByClr(nameof(Perioddate), null); }}; OnPropertyChangedByClr(nameof(PeriodPeriod), value); } }

        private ReferenceType? _recipient;
        [JsonPropertyName("recipient")]
        public ReferenceType? Recipient { get => _recipient; set { _recipient = value; OnPropertyChangedByClr(nameof(Recipient), value); } }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode Status { get => _status ?? throw new InvalidOperationException("Status is required"); set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private ReferenceType? _subject;
        [JsonPropertyName("subject")]
        public ReferenceType? Subject { get => _subject; set { _subject = value; OnPropertyChangedByClr(nameof(Subject), value); } }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

        private Money? _totalGross;
        [JsonPropertyName("totalGross")]
        public Money? TotalGross { get => _totalGross; set { _totalGross = value; OnPropertyChangedByClr(nameof(TotalGross), value); } }

        private Money? _totalNet;
        [JsonPropertyName("totalNet")]
        public Money? TotalNet { get => _totalNet; set { _totalNet = value; OnPropertyChangedByClr(nameof(TotalNet), value); } }

        private List<MonetaryComponent>? _totalPriceComponent;
        [JsonPropertyName("totalPriceComponent")]
        public List<MonetaryComponent>? TotalPriceComponent { get => _totalPriceComponent; set { _totalPriceComponent = value; OnPropertyChangedByClr(nameof(TotalPriceComponent), value); } }

        private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept? Type { get => _type; set { _type = value; OnPropertyChangedByClr(nameof(Type), value); } }

    }
}
