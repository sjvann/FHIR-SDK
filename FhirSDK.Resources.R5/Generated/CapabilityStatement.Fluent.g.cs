// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class CapabilityStatementFluentExtensions
    {
        public static CapabilityStatement AddAcceptLanguage(this CapabilityStatement r, FhirCode item) { r.AcceptLanguage ??= new List<FhirCode>(); r.AcceptLanguage!.Add(item); return r; }
        public static CapabilityStatement AddContact(this CapabilityStatement r, ContactDetail item) { r.Contact ??= new List<ContactDetail>(); r.Contact!.Add(item); return r; }
        public static CapabilityStatement AddContained(this CapabilityStatement r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static CapabilityStatement WithCopyright(this CapabilityStatement r, FhirMarkdown value) { r.Copyright = value; return r; }
        public static CapabilityStatement WithCopyrightLabel(this CapabilityStatement r, FhirString value) { r.CopyrightLabel = value; return r; }
        public static CapabilityStatement WithDate(this CapabilityStatement r, FhirDateTime value) { r.Date = value; return r; }
        public static CapabilityStatement WithDescription(this CapabilityStatement r, FhirMarkdown value) { r.Description = value; return r; }
        public static CapabilityStatement AddDocument(this CapabilityStatement r, BackboneElement item) { r.Document ??= new List<BackboneElement>(); r.Document!.Add(item); return r; }
        public static CapabilityStatement WithExperimental(this CapabilityStatement r, FhirBoolean value) { r.Experimental = value; return r; }
        public static CapabilityStatement WithFhirVersion(this CapabilityStatement r, FhirCode value) { r.FhirVersion = value; return r; }
        public static CapabilityStatement AddFormat(this CapabilityStatement r, FhirCode item) { r.Format ??= new List<FhirCode>(); r.Format!.Add(item); return r; }
        public static CapabilityStatement AddIdentifier(this CapabilityStatement r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static CapabilityStatement WithImplementation(this CapabilityStatement r, BackboneElement value) { r.Implementation = value; return r; }
        public static CapabilityStatement AddImplementationGuide(this CapabilityStatement r, FhirCanonical item) { r.ImplementationGuide ??= new List<FhirCanonical>(); r.ImplementationGuide!.Add(item); return r; }
        public static CapabilityStatement AddImports(this CapabilityStatement r, FhirCanonical item) { r.Imports ??= new List<FhirCanonical>(); r.Imports!.Add(item); return r; }
        public static CapabilityStatement AddInstantiates(this CapabilityStatement r, FhirCanonical item) { r.Instantiates ??= new List<FhirCanonical>(); r.Instantiates!.Add(item); return r; }
        public static CapabilityStatement AddJurisdiction(this CapabilityStatement r, CodeableConcept item) { r.Jurisdiction ??= new List<CodeableConcept>(); r.Jurisdiction!.Add(item); return r; }
        public static CapabilityStatement WithKind(this CapabilityStatement r, FhirCode value) { r.Kind = value; return r; }
        public static CapabilityStatement AddMessaging(this CapabilityStatement r, BackboneElement item) { r.Messaging ??= new List<BackboneElement>(); r.Messaging!.Add(item); return r; }
        public static CapabilityStatement WithName(this CapabilityStatement r, FhirString value) { r.Name = value; return r; }
        public static CapabilityStatement AddPatchFormat(this CapabilityStatement r, FhirCode item) { r.PatchFormat ??= new List<FhirCode>(); r.PatchFormat!.Add(item); return r; }
        public static CapabilityStatement WithPublisher(this CapabilityStatement r, FhirString value) { r.Publisher = value; return r; }
        public static CapabilityStatement WithPurpose(this CapabilityStatement r, FhirMarkdown value) { r.Purpose = value; return r; }
        public static CapabilityStatement AddRest(this CapabilityStatement r, BackboneElement item) { r.Rest ??= new List<BackboneElement>(); r.Rest!.Add(item); return r; }
        public static CapabilityStatement WithSoftware(this CapabilityStatement r, BackboneElement value) { r.Software = value; return r; }
        public static CapabilityStatement WithStatus(this CapabilityStatement r, FhirCode value) { r.Status = value; return r; }
        public static CapabilityStatement WithText(this CapabilityStatement r, Narrative value) { r.Text = value; return r; }
        public static CapabilityStatement WithTitle(this CapabilityStatement r, FhirString value) { r.Title = value; return r; }
        public static CapabilityStatement WithUrl(this CapabilityStatement r, FhirUri value) { r.Url = value; return r; }
        public static CapabilityStatement AddUseContext(this CapabilityStatement r, UsageContext item) { r.UseContext ??= new List<UsageContext>(); r.UseContext!.Add(item); return r; }
        public static CapabilityStatement WithVersion(this CapabilityStatement r, FhirString value) { r.Version = value; return r; }
        public static CapabilityStatement WithVersionAlgorithmString(this CapabilityStatement r, FhirString value) { r.VersionAlgorithmString = value; return r; }
        public static CapabilityStatement WithVersionAlgorithmCoding(this CapabilityStatement r, Coding value) { r.VersionAlgorithmCoding = value; return r; }
    }
}
