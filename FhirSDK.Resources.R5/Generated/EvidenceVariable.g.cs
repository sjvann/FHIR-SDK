// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// A definition of an exposure, outcome, or other variable
    /// </summary>
    public partial class EvidenceVariable : ResourceBase
    {
        public override string ResourceType => "EvidenceVariable";

        public EvidenceVariable() { }
        public EvidenceVariable(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public EvidenceVariable(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private FhirBoolean? _actual;
        [JsonPropertyName("actual")]
        public FhirBoolean? Actual { get => _actual; set { _actual = value; OnPropertyChangedByClr(nameof(Actual), value); } }

        private FhirDate? _approvalDate;
        [JsonPropertyName("approvalDate")]
        public FhirDate? ApprovalDate { get => _approvalDate; set { _approvalDate = value; OnPropertyChangedByClr(nameof(ApprovalDate), value); } }

        private List<ContactDetail>? _author;
        [JsonPropertyName("author")]
        public List<ContactDetail>? Author { get => _author; set { _author = value; OnPropertyChangedByClr(nameof(Author), value); } }

        private List<EvidenceVariable_Category>? _category;
        [JsonPropertyName("category")]
        public List<EvidenceVariable_Category>? Category { get => _category; set { _category = value; OnPropertyChangedByClr(nameof(Category), value); } }

        /// <summary>
        /// A grouping for ordinal or polychotomous variables
        /// </summary>
        public partial class EvidenceVariable_Category : BackboneElement<EvidenceVariable_Category>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "EvidenceVariable_Category" : "evidenceVariable_Category";
            private FhirString? _name;
        [JsonPropertyName("name")]
        public FhirString? Name { get => _name; set { _name = value; } }

            private CodeableConcept? _valueCodeableConcept;
        [JsonPropertyName("valueCodeableConcept")]
        public CodeableConcept? ValueCodeableConcept { get => _valueCodeableConcept; set { _valueCodeableConcept = value; if (value != null) {{ _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueRange = null; OnPropertyChanged("valueRange", null); }}; OnPropertyChanged("valueCodeableConcept", value); } }

            private Quantity? _valueQuantity;
        [JsonPropertyName("valueQuantity")]
        public Quantity? ValueQuantity { get => _valueQuantity; set { _valueQuantity = value; if (value != null) {{ _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueRange = null; OnPropertyChanged("valueRange", null); }}; OnPropertyChanged("valueQuantity", value); } }

            private DataTypeServices.DataTypes.ComplexTypes.Range? _valueRange;
        [JsonPropertyName("valueRange")]
        public DataTypeServices.DataTypes.ComplexTypes.Range? ValueRange { get => _valueRange; set { _valueRange = value; if (value != null) {{ _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); }}; OnPropertyChanged("valueRange", value); } }

        }

        private List<EvidenceVariable_Characteristic>? _characteristic;
        [JsonPropertyName("characteristic")]
        public List<EvidenceVariable_Characteristic>? Characteristic { get => _characteristic; set { _characteristic = value; OnPropertyChangedByClr(nameof(Characteristic), value); } }

        /// <summary>
        /// A defining factor of the EvidenceVariable
        /// </summary>
        public partial class EvidenceVariable_Characteristic : BackboneElement<EvidenceVariable_Characteristic>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "EvidenceVariable_Characteristic" : "evidenceVariable_Characteristic";
            private EvidenceVariable_Characteristic_DefinitionByCombination? _definitionByCombination;
        [JsonPropertyName("definitionByCombination")]
        public EvidenceVariable_Characteristic_DefinitionByCombination? DefinitionByCombination { get => _definitionByCombination; set { _definitionByCombination = value; } }

            /// <summary>
            /// Used to specify how two or more characteristics are combined
            /// </summary>
            public partial class EvidenceVariable_Characteristic_DefinitionByCombination : BackboneElement<EvidenceVariable_Characteristic_DefinitionByCombination>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "EvidenceVariable_Characteristic_DefinitionByCombination" : "evidenceVariable_Characteristic_DefinitionByCombination";
                private List<FhirString> _characteristic = new();
        [JsonPropertyName("characteristic")]
        public List<FhirString> Characteristic { get => _characteristic; set { _characteristic = value; } }

                private FhirCode? _code;
        [JsonPropertyName("code")]
        public FhirCode Code { get => _code ?? throw new InvalidOperationException("Code is required"); set { _code = value; } }

                private FhirPositiveInt? _threshold;
        [JsonPropertyName("threshold")]
        public FhirPositiveInt? Threshold { get => _threshold; set { _threshold = value; } }

            }

            private EvidenceVariable_Characteristic_DefinitionByTypeAndValue? _definitionByTypeAndValue;
        [JsonPropertyName("definitionByTypeAndValue")]
        public EvidenceVariable_Characteristic_DefinitionByTypeAndValue? DefinitionByTypeAndValue { get => _definitionByTypeAndValue; set { _definitionByTypeAndValue = value; } }

            /// <summary>
            /// Defines the characteristic using type and value
            /// </summary>
            public partial class EvidenceVariable_Characteristic_DefinitionByTypeAndValue : BackboneElement<EvidenceVariable_Characteristic_DefinitionByTypeAndValue>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "EvidenceVariable_Characteristic_DefinitionByTypeAndValue" : "evidenceVariable_Characteristic_DefinitionByTypeAndValue";
                private ReferenceType? _device;
        [JsonPropertyName("device")]
        public ReferenceType? Device { get => _device; set { _device = value; } }

                private List<CodeableConcept>? _method;
        [JsonPropertyName("method")]
        public List<CodeableConcept>? Method { get => _method; set { _method = value; } }

                private CodeableConcept? _offset;
        [JsonPropertyName("offset")]
        public CodeableConcept? Offset { get => _offset; set { _offset = value; } }

                private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept Type { get => _type ?? throw new InvalidOperationException("Type is required"); set { _type = value; } }

                private CodeableConcept? _valueCodeableConcept;
        [JsonPropertyName("valueCodeableConcept")]
        public CodeableConcept? ValueCodeableConcept { get => _valueCodeableConcept; set { _valueCodeableConcept = value; if (value != null) {{ _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueRange = null; OnPropertyChanged("valueRange", null); _valueReference = null; OnPropertyChanged("valueReference", null); _valueid = null; OnPropertyChanged("valueid", null); }}; OnPropertyChanged("valueCodeableConcept", value); } }

                private FhirBoolean? _valueBoolean;
        [JsonPropertyName("valueBoolean")]
        public FhirBoolean? ValueBoolean { get => _valueBoolean; set { _valueBoolean = value; if (value != null) {{ _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueRange = null; OnPropertyChanged("valueRange", null); _valueReference = null; OnPropertyChanged("valueReference", null); _valueid = null; OnPropertyChanged("valueid", null); }}; OnPropertyChanged("valueBoolean", value); } }

                private Quantity? _valueQuantity;
        [JsonPropertyName("valueQuantity")]
        public Quantity? ValueQuantity { get => _valueQuantity; set { _valueQuantity = value; if (value != null) {{ _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueRange = null; OnPropertyChanged("valueRange", null); _valueReference = null; OnPropertyChanged("valueReference", null); _valueid = null; OnPropertyChanged("valueid", null); }}; OnPropertyChanged("valueQuantity", value); } }

                private DataTypeServices.DataTypes.ComplexTypes.Range? _valueRange;
        [JsonPropertyName("valueRange")]
        public DataTypeServices.DataTypes.ComplexTypes.Range? ValueRange { get => _valueRange; set { _valueRange = value; if (value != null) {{ _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueReference = null; OnPropertyChanged("valueReference", null); _valueid = null; OnPropertyChanged("valueid", null); }}; OnPropertyChanged("valueRange", value); } }

                private ReferenceType? _valueReference;
        [JsonPropertyName("valueReference")]
        public ReferenceType? ValueReference { get => _valueReference; set { _valueReference = value; if (value != null) {{ _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueRange = null; OnPropertyChanged("valueRange", null); _valueid = null; OnPropertyChanged("valueid", null); }}; OnPropertyChanged("valueReference", value); } }

                private FhirId? _valueid;
        [JsonPropertyName("valueid")]
        public FhirId? Valueid { get => _valueid; set { _valueid = value; if (value != null) {{ _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueRange = null; OnPropertyChanged("valueRange", null); _valueReference = null; OnPropertyChanged("valueReference", null); }}; OnPropertyChanged("valueid", value); } }

            }

            private FhirCanonical? _definitionCanonical;
        [JsonPropertyName("definitionCanonical")]
        public FhirCanonical? DefinitionCanonical { get => _definitionCanonical; set { _definitionCanonical = value; } }

            private CodeableConcept? _definitionCodeableConcept;
        [JsonPropertyName("definitionCodeableConcept")]
        public CodeableConcept? DefinitionCodeableConcept { get => _definitionCodeableConcept; set { _definitionCodeableConcept = value; } }

            private DataTypeServices.DataTypes.MetaTypes.ExpressionType? _definitionExpression;
        [JsonPropertyName("definitionExpression")]
        public DataTypeServices.DataTypes.MetaTypes.ExpressionType? DefinitionExpression { get => _definitionExpression; set { _definitionExpression = value; } }

            private FhirId? _definitionId;
        [JsonPropertyName("definitionId")]
        public FhirId? DefinitionId { get => _definitionId; set { _definitionId = value; } }

            private ReferenceType? _definitionReference;
        [JsonPropertyName("definitionReference")]
        public ReferenceType? DefinitionReference { get => _definitionReference; set { _definitionReference = value; } }

            private FhirMarkdown? _description;
        [JsonPropertyName("description")]
        public FhirMarkdown? Description { get => _description; set { _description = value; } }

            private Quantity? _durationQuantity;
        [JsonPropertyName("durationQuantity")]
        public Quantity? DurationQuantity { get => _durationQuantity; set { _durationQuantity = value; if (value != null) {{ _durationRange = null; OnPropertyChanged("durationRange", null); }}; OnPropertyChanged("durationQuantity", value); } }

            private DataTypeServices.DataTypes.ComplexTypes.Range? _durationRange;
        [JsonPropertyName("durationRange")]
        public DataTypeServices.DataTypes.ComplexTypes.Range? DurationRange { get => _durationRange; set { _durationRange = value; if (value != null) {{ _durationQuantity = null; OnPropertyChanged("durationQuantity", null); }}; OnPropertyChanged("durationRange", value); } }

            private FhirBoolean? _exclude;
        [JsonPropertyName("exclude")]
        public FhirBoolean? Exclude { get => _exclude; set { _exclude = value; } }

            private Quantity? _instancesQuantity;
        [JsonPropertyName("instancesQuantity")]
        public Quantity? InstancesQuantity { get => _instancesQuantity; set { _instancesQuantity = value; if (value != null) {{ _instancesRange = null; OnPropertyChanged("instancesRange", null); }}; OnPropertyChanged("instancesQuantity", value); } }

            private DataTypeServices.DataTypes.ComplexTypes.Range? _instancesRange;
        [JsonPropertyName("instancesRange")]
        public DataTypeServices.DataTypes.ComplexTypes.Range? InstancesRange { get => _instancesRange; set { _instancesRange = value; if (value != null) {{ _instancesQuantity = null; OnPropertyChanged("instancesQuantity", null); }}; OnPropertyChanged("instancesRange", value); } }

            private FhirId? _linkId;
        [JsonPropertyName("linkId")]
        public FhirId? LinkId { get => _linkId; set { _linkId = value; } }

            private List<Annotation>? _note;
        [JsonPropertyName("note")]
        public List<Annotation>? Note { get => _note; set { _note = value; } }

            private List<EvidenceVariable_Characteristic_TimeFromEvent>? _timeFromEvent;
        [JsonPropertyName("timeFromEvent")]
        public List<EvidenceVariable_Characteristic_TimeFromEvent>? TimeFromEvent { get => _timeFromEvent; set { _timeFromEvent = value; } }

            /// <summary>
            /// Timing in which the characteristic is determined
            /// </summary>
            public partial class EvidenceVariable_Characteristic_TimeFromEvent : BackboneElement<EvidenceVariable_Characteristic_TimeFromEvent>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "EvidenceVariable_Characteristic_TimeFromEvent" : "evidenceVariable_Characteristic_TimeFromEvent";
                private FhirMarkdown? _description;
        [JsonPropertyName("description")]
        public FhirMarkdown? Description { get => _description; set { _description = value; } }

                private CodeableConcept? _eventCodeableConcept;
        [JsonPropertyName("eventCodeableConcept")]
        public CodeableConcept? EventCodeableConcept { get => _eventCodeableConcept; set { _eventCodeableConcept = value; if (value != null) {{ _eventReference = null; OnPropertyChanged("eventReference", null); _eventDateTime = null; OnPropertyChanged("eventDateTime", null); _eventid = null; OnPropertyChanged("eventid", null); }}; OnPropertyChanged("eventCodeableConcept", value); } }

                private ReferenceType? _eventReference;
        [JsonPropertyName("eventReference")]
        public ReferenceType? EventReference { get => _eventReference; set { _eventReference = value; if (value != null) {{ _eventCodeableConcept = null; OnPropertyChanged("eventCodeableConcept", null); _eventDateTime = null; OnPropertyChanged("eventDateTime", null); _eventid = null; OnPropertyChanged("eventid", null); }}; OnPropertyChanged("eventReference", value); } }

                private FhirDateTime? _eventDateTime;
        [JsonPropertyName("eventDateTime")]
        public FhirDateTime? EventDateTime { get => _eventDateTime; set { _eventDateTime = value; if (value != null) {{ _eventCodeableConcept = null; OnPropertyChanged("eventCodeableConcept", null); _eventReference = null; OnPropertyChanged("eventReference", null); _eventid = null; OnPropertyChanged("eventid", null); }}; OnPropertyChanged("eventDateTime", value); } }

                private FhirId? _eventid;
        [JsonPropertyName("eventid")]
        public FhirId? Eventid { get => _eventid; set { _eventid = value; if (value != null) {{ _eventCodeableConcept = null; OnPropertyChanged("eventCodeableConcept", null); _eventReference = null; OnPropertyChanged("eventReference", null); _eventDateTime = null; OnPropertyChanged("eventDateTime", null); }}; OnPropertyChanged("eventid", value); } }

                private List<Annotation>? _note;
        [JsonPropertyName("note")]
        public List<Annotation>? Note { get => _note; set { _note = value; } }

                private Quantity? _quantity;
        [JsonPropertyName("quantity")]
        public Quantity? Quantity { get => _quantity; set { _quantity = value; } }

                private DataTypeServices.DataTypes.ComplexTypes.Range? _range;
        [JsonPropertyName("range")]
        public DataTypeServices.DataTypes.ComplexTypes.Range? Range { get => _range; set { _range = value; } }

            }

        }

        private List<ContactDetail>? _contact;
        [JsonPropertyName("contact")]
        public List<ContactDetail>? Contact { get => _contact; set { _contact = value; OnPropertyChangedByClr(nameof(Contact), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private FhirMarkdown? _copyright;
        [JsonPropertyName("copyright")]
        public FhirMarkdown? Copyright { get => _copyright; set { _copyright = value; OnPropertyChangedByClr(nameof(Copyright), value); } }

        private FhirString? _copyrightLabel;
        [JsonPropertyName("copyrightLabel")]
        public FhirString? CopyrightLabel { get => _copyrightLabel; set { _copyrightLabel = value; OnPropertyChangedByClr(nameof(CopyrightLabel), value); } }

        private FhirDateTime? _date;
        [JsonPropertyName("date")]
        public FhirDateTime? Date { get => _date; set { _date = value; OnPropertyChangedByClr(nameof(Date), value); } }

        private FhirMarkdown? _description;
        [JsonPropertyName("description")]
        public FhirMarkdown? Description { get => _description; set { _description = value; OnPropertyChangedByClr(nameof(Description), value); } }

        private List<ContactDetail>? _editor;
        [JsonPropertyName("editor")]
        public List<ContactDetail>? Editor { get => _editor; set { _editor = value; OnPropertyChangedByClr(nameof(Editor), value); } }

        private Period? _effectivePeriod;
        [JsonPropertyName("effectivePeriod")]
        public Period? EffectivePeriod { get => _effectivePeriod; set { _effectivePeriod = value; OnPropertyChangedByClr(nameof(EffectivePeriod), value); } }

        private List<ContactDetail>? _endorser;
        [JsonPropertyName("endorser")]
        public List<ContactDetail>? Endorser { get => _endorser; set { _endorser = value; OnPropertyChangedByClr(nameof(Endorser), value); } }

        private FhirBoolean? _experimental;
        [JsonPropertyName("experimental")]
        public FhirBoolean? Experimental { get => _experimental; set { _experimental = value; OnPropertyChangedByClr(nameof(Experimental), value); } }

        private FhirCode? _handling;
        [JsonPropertyName("handling")]
        public FhirCode? Handling { get => _handling; set { _handling = value; OnPropertyChangedByClr(nameof(Handling), value); } }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private FhirDate? _lastReviewDate;
        [JsonPropertyName("lastReviewDate")]
        public FhirDate? LastReviewDate { get => _lastReviewDate; set { _lastReviewDate = value; OnPropertyChangedByClr(nameof(LastReviewDate), value); } }

        private FhirString? _name;
        [JsonPropertyName("name")]
        public FhirString? Name { get => _name; set { _name = value; OnPropertyChangedByClr(nameof(Name), value); } }

        private List<Annotation>? _note;
        [JsonPropertyName("note")]
        public List<Annotation>? Note { get => _note; set { _note = value; OnPropertyChangedByClr(nameof(Note), value); } }

        private FhirString? _publisher;
        [JsonPropertyName("publisher")]
        public FhirString? Publisher { get => _publisher; set { _publisher = value; OnPropertyChangedByClr(nameof(Publisher), value); } }

        private FhirMarkdown? _purpose;
        [JsonPropertyName("purpose")]
        public FhirMarkdown? Purpose { get => _purpose; set { _purpose = value; OnPropertyChangedByClr(nameof(Purpose), value); } }

        private List<RelatedArtifact>? _relatedArtifact;
        [JsonPropertyName("relatedArtifact")]
        public List<RelatedArtifact>? RelatedArtifact { get => _relatedArtifact; set { _relatedArtifact = value; OnPropertyChangedByClr(nameof(RelatedArtifact), value); } }

        private List<ContactDetail>? _reviewer;
        [JsonPropertyName("reviewer")]
        public List<ContactDetail>? Reviewer { get => _reviewer; set { _reviewer = value; OnPropertyChangedByClr(nameof(Reviewer), value); } }

        private FhirString? _shortTitle;
        [JsonPropertyName("shortTitle")]
        public FhirString? ShortTitle { get => _shortTitle; set { _shortTitle = value; OnPropertyChangedByClr(nameof(ShortTitle), value); } }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode Status { get => _status ?? throw new InvalidOperationException("Status is required"); set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

        private FhirString? _title;
        [JsonPropertyName("title")]
        public FhirString? Title { get => _title; set { _title = value; OnPropertyChangedByClr(nameof(Title), value); } }

        private FhirUri? _url;
        [JsonPropertyName("url")]
        public FhirUri? Url { get => _url; set { _url = value; OnPropertyChangedByClr(nameof(Url), value); } }

        private List<UsageContext>? _useContext;
        [JsonPropertyName("useContext")]
        public List<UsageContext>? UseContext { get => _useContext; set { _useContext = value; OnPropertyChangedByClr(nameof(UseContext), value); } }

        private FhirString? _version;
        [JsonPropertyName("version")]
        public FhirString? Version { get => _version; set { _version = value; OnPropertyChangedByClr(nameof(Version), value); } }

        private FhirString? _versionAlgorithmString;
        [JsonPropertyName("versionAlgorithmString")]
        public FhirString? VersionAlgorithmString { get => _versionAlgorithmString; set { _versionAlgorithmString = value; if (value != null) {{ _versionAlgorithmCoding = null; OnPropertyChangedByClr(nameof(VersionAlgorithmCoding), null); }}; OnPropertyChangedByClr(nameof(VersionAlgorithmString), value); } }

        private Coding? _versionAlgorithmCoding;
        [JsonPropertyName("versionAlgorithmCoding")]
        public Coding? VersionAlgorithmCoding { get => _versionAlgorithmCoding; set { _versionAlgorithmCoding = value; if (value != null) {{ _versionAlgorithmString = null; OnPropertyChangedByClr(nameof(VersionAlgorithmString), null); }}; OnPropertyChangedByClr(nameof(VersionAlgorithmCoding), value); } }

    }
}
