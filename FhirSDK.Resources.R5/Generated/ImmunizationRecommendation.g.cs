// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// Guidance or advice relating to an immunization
    /// </summary>
    public partial class ImmunizationRecommendation : ResourceBase
    {
        public override string ResourceType => "ImmunizationRecommendation";

        public ImmunizationRecommendation() { }
        public ImmunizationRecommendation(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public ImmunizationRecommendation(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private ReferenceType? _authority;
        [JsonPropertyName("authority")]
        public ReferenceType? Authority { get => _authority; set { _authority = value; OnPropertyChangedByClr(nameof(Authority), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private FhirDateTime? _date;
        [JsonPropertyName("date")]
        public FhirDateTime Date { get => _date ?? throw new InvalidOperationException("Date is required"); set { _date = value; OnPropertyChangedByClr(nameof(Date), value); } }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private ReferenceType? _patient;
        [JsonPropertyName("patient")]
        public ReferenceType Patient { get => _patient ?? throw new InvalidOperationException("Patient is required"); set { _patient = value; OnPropertyChangedByClr(nameof(Patient), value); } }

        private List<ImmunizationRecommendation_Recommendation> _recommendation = new();
        [JsonPropertyName("recommendation")]
        public List<ImmunizationRecommendation_Recommendation> Recommendation { get => _recommendation; set { _recommendation = value; OnPropertyChangedByClr(nameof(Recommendation), value); } }

        /// <summary>
        /// Vaccine administration recommendations
        /// </summary>
        public partial class ImmunizationRecommendation_Recommendation : BackboneElement<ImmunizationRecommendation_Recommendation>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ImmunizationRecommendation_Recommendation" : "immunizationRecommendation_Recommendation";
            private List<CodeableConcept>? _contraindicatedVaccineCode;
        [JsonPropertyName("contraindicatedVaccineCode")]
        public List<CodeableConcept>? ContraindicatedVaccineCode { get => _contraindicatedVaccineCode; set { _contraindicatedVaccineCode = value; } }

            private List<ImmunizationRecommendation_Recommendation_DateCriterion>? _dateCriterion;
        [JsonPropertyName("dateCriterion")]
        public List<ImmunizationRecommendation_Recommendation_DateCriterion>? DateCriterion { get => _dateCriterion; set { _dateCriterion = value; } }

            /// <summary>
            /// Dates governing proposed immunization
            /// </summary>
            public partial class ImmunizationRecommendation_Recommendation_DateCriterion : BackboneElement<ImmunizationRecommendation_Recommendation_DateCriterion>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ImmunizationRecommendation_Recommendation_DateCriterion" : "immunizationRecommendation_Recommendation_DateCriterion";
                private CodeableConcept? _code;
        [JsonPropertyName("code")]
        public CodeableConcept Code { get => _code ?? throw new InvalidOperationException("Code is required"); set { _code = value; } }

                private FhirDateTime? _value;
        [JsonPropertyName("value")]
        public FhirDateTime Value { get => _value ?? throw new InvalidOperationException("Value is required"); set { _value = value; } }

            }

            private FhirMarkdown? _description;
        [JsonPropertyName("description")]
        public FhirMarkdown? Description { get => _description; set { _description = value; } }

            private FhirString? _doseNumber;
        [JsonPropertyName("doseNumber")]
        public FhirString? DoseNumber { get => _doseNumber; set { _doseNumber = value; } }

            private List<CodeableConcept>? _forecastReason;
        [JsonPropertyName("forecastReason")]
        public List<CodeableConcept>? ForecastReason { get => _forecastReason; set { _forecastReason = value; } }

            private CodeableConcept? _forecastStatus;
        [JsonPropertyName("forecastStatus")]
        public CodeableConcept ForecastStatus { get => _forecastStatus ?? throw new InvalidOperationException("ForecastStatus is required"); set { _forecastStatus = value; } }

            private FhirString? _series;
        [JsonPropertyName("series")]
        public FhirString? Series { get => _series; set { _series = value; } }

            private FhirString? _seriesDoses;
        [JsonPropertyName("seriesDoses")]
        public FhirString? SeriesDoses { get => _seriesDoses; set { _seriesDoses = value; } }

            private List<ReferenceType>? _supportingImmunization;
        [JsonPropertyName("supportingImmunization")]
        public List<ReferenceType>? SupportingImmunization { get => _supportingImmunization; set { _supportingImmunization = value; } }

            private List<ReferenceType>? _supportingPatientInformation;
        [JsonPropertyName("supportingPatientInformation")]
        public List<ReferenceType>? SupportingPatientInformation { get => _supportingPatientInformation; set { _supportingPatientInformation = value; } }

            private List<CodeableConcept>? _targetDisease;
        [JsonPropertyName("targetDisease")]
        public List<CodeableConcept>? TargetDisease { get => _targetDisease; set { _targetDisease = value; } }

            private List<CodeableConcept>? _vaccineCode;
        [JsonPropertyName("vaccineCode")]
        public List<CodeableConcept>? VaccineCode { get => _vaccineCode; set { _vaccineCode = value; } }

        }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

    }
}
