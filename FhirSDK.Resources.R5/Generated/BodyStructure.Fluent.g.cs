// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class BodyStructureFluentExtensions
    {
        public static BodyStructure WithActive(this BodyStructure r, FhirBoolean value) { r.Active = value; return r; }
        public static BodyStructure AddContained(this BodyStructure r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static BodyStructure WithDescription(this BodyStructure r, FhirMarkdown value) { r.Description = value; return r; }
        public static BodyStructure AddExcludedStructure(this BodyStructure r, FhirString item) { r.ExcludedStructure ??= new List<FhirString>(); r.ExcludedStructure!.Add(item); return r; }
        public static BodyStructure AddIdentifier(this BodyStructure r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static BodyStructure AddImage(this BodyStructure r, Attachment item) { r.Image ??= new List<Attachment>(); r.Image!.Add(item); return r; }
        public static BodyStructure AddIncludedStructure(this BodyStructure r, BackboneElement item) { r.IncludedStructure ??= new List<BackboneElement>(); r.IncludedStructure!.Add(item); return r; }
        public static BodyStructure WithMorphology(this BodyStructure r, CodeableConcept value) { r.Morphology = value; return r; }
        public static BodyStructure WithPatient(this BodyStructure r, ReferenceType value) { r.Patient = value; return r; }
        public static BodyStructure WithText(this BodyStructure r, Narrative value) { r.Text = value; return r; }
    }
}
