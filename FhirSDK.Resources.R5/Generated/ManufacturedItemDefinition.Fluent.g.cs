// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class ManufacturedItemDefinitionFluentExtensions
    {
        public static ManufacturedItemDefinition AddComponent(this ManufacturedItemDefinition r, BackboneElement item) { r.Component ??= new List<BackboneElement>(); r.Component!.Add(item); return r; }
        public static ManufacturedItemDefinition AddContained(this ManufacturedItemDefinition r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static ManufacturedItemDefinition AddIdentifier(this ManufacturedItemDefinition r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static ManufacturedItemDefinition AddIngredient(this ManufacturedItemDefinition r, CodeableConcept item) { r.Ingredient ??= new List<CodeableConcept>(); r.Ingredient!.Add(item); return r; }
        public static ManufacturedItemDefinition WithManufacturedDoseForm(this ManufacturedItemDefinition r, CodeableConcept value) { r.ManufacturedDoseForm = value; return r; }
        public static ManufacturedItemDefinition AddManufacturer(this ManufacturedItemDefinition r, ReferenceType item) { r.Manufacturer ??= new List<ReferenceType>(); r.Manufacturer!.Add(item); return r; }
        public static ManufacturedItemDefinition AddMarketingStatus(this ManufacturedItemDefinition r, MarketingStatus item) { r.MarketingStatus ??= new List<MarketingStatus>(); r.MarketingStatus!.Add(item); return r; }
        public static ManufacturedItemDefinition WithName(this ManufacturedItemDefinition r, FhirString value) { r.Name = value; return r; }
        public static ManufacturedItemDefinition AddProperty(this ManufacturedItemDefinition r, BackboneElement item) { r.Property ??= new List<BackboneElement>(); r.Property!.Add(item); return r; }
        public static ManufacturedItemDefinition WithStatus(this ManufacturedItemDefinition r, FhirCode value) { r.Status = value; return r; }
        public static ManufacturedItemDefinition WithText(this ManufacturedItemDefinition r, Narrative value) { r.Text = value; return r; }
        public static ManufacturedItemDefinition WithUnitOfPresentation(this ManufacturedItemDefinition r, CodeableConcept value) { r.UnitOfPresentation = value; return r; }
    }
}
