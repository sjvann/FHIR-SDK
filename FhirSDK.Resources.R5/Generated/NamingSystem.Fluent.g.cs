// <auto-generated>
#nullable enable
using System.Collections.Generic;
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
namespace FhirSDK.Resources.R5
{
    public static class NamingSystemFluentExtensions
    {
        public static NamingSystem WithApprovalDate(this NamingSystem r, FhirDate value) { r.ApprovalDate = value; return r; }
        public static NamingSystem AddAuthor(this NamingSystem r, ContactDetail item) { r.Author ??= new List<ContactDetail>(); r.Author!.Add(item); return r; }
        public static NamingSystem AddContact(this NamingSystem r, ContactDetail item) { r.Contact ??= new List<ContactDetail>(); r.Contact!.Add(item); return r; }
        public static NamingSystem AddContained(this NamingSystem r, Resource item) { r.Contained ??= new List<Resource>(); r.Contained!.Add(item); return r; }
        public static NamingSystem WithCopyright(this NamingSystem r, FhirMarkdown value) { r.Copyright = value; return r; }
        public static NamingSystem WithCopyrightLabel(this NamingSystem r, FhirString value) { r.CopyrightLabel = value; return r; }
        public static NamingSystem WithDate(this NamingSystem r, FhirDateTime value) { r.Date = value; return r; }
        public static NamingSystem WithDescription(this NamingSystem r, FhirMarkdown value) { r.Description = value; return r; }
        public static NamingSystem AddEditor(this NamingSystem r, ContactDetail item) { r.Editor ??= new List<ContactDetail>(); r.Editor!.Add(item); return r; }
        public static NamingSystem WithEffectivePeriod(this NamingSystem r, Period value) { r.EffectivePeriod = value; return r; }
        public static NamingSystem AddEndorser(this NamingSystem r, ContactDetail item) { r.Endorser ??= new List<ContactDetail>(); r.Endorser!.Add(item); return r; }
        public static NamingSystem WithExperimental(this NamingSystem r, FhirBoolean value) { r.Experimental = value; return r; }
        public static NamingSystem AddIdentifier(this NamingSystem r, Identifier item) { r.Identifier ??= new List<Identifier>(); r.Identifier!.Add(item); return r; }
        public static NamingSystem AddJurisdiction(this NamingSystem r, CodeableConcept item) { r.Jurisdiction ??= new List<CodeableConcept>(); r.Jurisdiction!.Add(item); return r; }
        public static NamingSystem WithKind(this NamingSystem r, FhirCode value) { r.Kind = value; return r; }
        public static NamingSystem WithLastReviewDate(this NamingSystem r, FhirDate value) { r.LastReviewDate = value; return r; }
        public static NamingSystem WithName(this NamingSystem r, FhirString value) { r.Name = value; return r; }
        public static NamingSystem WithPublisher(this NamingSystem r, FhirString value) { r.Publisher = value; return r; }
        public static NamingSystem WithPurpose(this NamingSystem r, FhirMarkdown value) { r.Purpose = value; return r; }
        public static NamingSystem AddRelatedArtifact(this NamingSystem r, RelatedArtifact item) { r.RelatedArtifact ??= new List<RelatedArtifact>(); r.RelatedArtifact!.Add(item); return r; }
        public static NamingSystem WithResponsible(this NamingSystem r, FhirString value) { r.Responsible = value; return r; }
        public static NamingSystem AddReviewer(this NamingSystem r, ContactDetail item) { r.Reviewer ??= new List<ContactDetail>(); r.Reviewer!.Add(item); return r; }
        public static NamingSystem WithStatus(this NamingSystem r, FhirCode value) { r.Status = value; return r; }
        public static NamingSystem WithText(this NamingSystem r, Narrative value) { r.Text = value; return r; }
        public static NamingSystem WithTitle(this NamingSystem r, FhirString value) { r.Title = value; return r; }
        public static NamingSystem AddTopic(this NamingSystem r, CodeableConcept item) { r.Topic ??= new List<CodeableConcept>(); r.Topic!.Add(item); return r; }
        public static NamingSystem WithType(this NamingSystem r, CodeableConcept value) { r.Type = value; return r; }
        public static NamingSystem AddUniqueId(this NamingSystem r, BackboneElement item) { r.UniqueId ??= new List<BackboneElement>(); r.UniqueId!.Add(item); return r; }
        public static NamingSystem WithUrl(this NamingSystem r, FhirUri value) { r.Url = value; return r; }
        public static NamingSystem WithUsage(this NamingSystem r, FhirString value) { r.Usage = value; return r; }
        public static NamingSystem AddUseContext(this NamingSystem r, UsageContext item) { r.UseContext ??= new List<UsageContext>(); r.UseContext!.Add(item); return r; }
        public static NamingSystem WithVersion(this NamingSystem r, FhirString value) { r.Version = value; return r; }
        public static NamingSystem WithVersionAlgorithmString(this NamingSystem r, FhirString value) { r.VersionAlgorithmString = value; return r; }
        public static NamingSystem WithVersionAlgorithmCoding(this NamingSystem r, Coding value) { r.VersionAlgorithmCoding = value; return r; }
    }
}
