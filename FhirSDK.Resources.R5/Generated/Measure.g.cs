// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// A quality measure definition
    /// </summary>
    public partial class Measure : ResourceBase
    {
        public override string ResourceType => "Measure";

        public Measure() { }
        public Measure(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public Measure(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private FhirDate? _approvalDate;
        [JsonPropertyName("approvalDate")]
        public FhirDate? ApprovalDate { get => _approvalDate; set { _approvalDate = value; OnPropertyChangedByClr(nameof(ApprovalDate), value); } }

        private List<ContactDetail>? _author;
        [JsonPropertyName("author")]
        public List<ContactDetail>? Author { get => _author; set { _author = value; OnPropertyChangedByClr(nameof(Author), value); } }

        private FhirCode? _basis;
        [JsonPropertyName("basis")]
        public FhirCode? Basis { get => _basis; set { _basis = value; OnPropertyChangedByClr(nameof(Basis), value); } }

        private FhirMarkdown? _clinicalRecommendationStatement;
        [JsonPropertyName("clinicalRecommendationStatement")]
        public FhirMarkdown? ClinicalRecommendationStatement { get => _clinicalRecommendationStatement; set { _clinicalRecommendationStatement = value; OnPropertyChangedByClr(nameof(ClinicalRecommendationStatement), value); } }

        private CodeableConcept? _compositeScoring;
        [JsonPropertyName("compositeScoring")]
        public CodeableConcept? CompositeScoring { get => _compositeScoring; set { _compositeScoring = value; OnPropertyChangedByClr(nameof(CompositeScoring), value); } }

        private List<ContactDetail>? _contact;
        [JsonPropertyName("contact")]
        public List<ContactDetail>? Contact { get => _contact; set { _contact = value; OnPropertyChangedByClr(nameof(Contact), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private FhirMarkdown? _copyright;
        [JsonPropertyName("copyright")]
        public FhirMarkdown? Copyright { get => _copyright; set { _copyright = value; OnPropertyChangedByClr(nameof(Copyright), value); } }

        private FhirString? _copyrightLabel;
        [JsonPropertyName("copyrightLabel")]
        public FhirString? CopyrightLabel { get => _copyrightLabel; set { _copyrightLabel = value; OnPropertyChangedByClr(nameof(CopyrightLabel), value); } }

        private FhirDateTime? _date;
        [JsonPropertyName("date")]
        public FhirDateTime? Date { get => _date; set { _date = value; OnPropertyChangedByClr(nameof(Date), value); } }

        private FhirMarkdown? _description;
        [JsonPropertyName("description")]
        public FhirMarkdown? Description { get => _description; set { _description = value; OnPropertyChangedByClr(nameof(Description), value); } }

        private FhirMarkdown? _disclaimer;
        [JsonPropertyName("disclaimer")]
        public FhirMarkdown? Disclaimer { get => _disclaimer; set { _disclaimer = value; OnPropertyChangedByClr(nameof(Disclaimer), value); } }

        private List<ContactDetail>? _editor;
        [JsonPropertyName("editor")]
        public List<ContactDetail>? Editor { get => _editor; set { _editor = value; OnPropertyChangedByClr(nameof(Editor), value); } }

        private Period? _effectivePeriod;
        [JsonPropertyName("effectivePeriod")]
        public Period? EffectivePeriod { get => _effectivePeriod; set { _effectivePeriod = value; OnPropertyChangedByClr(nameof(EffectivePeriod), value); } }

        private List<ContactDetail>? _endorser;
        [JsonPropertyName("endorser")]
        public List<ContactDetail>? Endorser { get => _endorser; set { _endorser = value; OnPropertyChangedByClr(nameof(Endorser), value); } }

        private FhirBoolean? _experimental;
        [JsonPropertyName("experimental")]
        public FhirBoolean? Experimental { get => _experimental; set { _experimental = value; OnPropertyChangedByClr(nameof(Experimental), value); } }

        private List<Measure_Group>? _group;
        [JsonPropertyName("group")]
        public List<Measure_Group>? Group { get => _group; set { _group = value; OnPropertyChangedByClr(nameof(Group), value); } }

        /// <summary>
        /// Population criteria group
        /// </summary>
        public partial class Measure_Group : BackboneElement<Measure_Group>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Measure_Group" : "measure_Group";
            private FhirCode? _basis;
        [JsonPropertyName("basis")]
        public FhirCode? Basis { get => _basis; set { _basis = value; } }

            private CodeableConcept? _code;
        [JsonPropertyName("code")]
        public CodeableConcept? Code { get => _code; set { _code = value; } }

            private FhirMarkdown? _description;
        [JsonPropertyName("description")]
        public FhirMarkdown? Description { get => _description; set { _description = value; } }

            private CodeableConcept? _improvementNotation;
        [JsonPropertyName("improvementNotation")]
        public CodeableConcept? ImprovementNotation { get => _improvementNotation; set { _improvementNotation = value; } }

            private List<FhirCanonical>? _library;
        [JsonPropertyName("library")]
        public List<FhirCanonical>? Library { get => _library; set { _library = value; } }

            private FhirString? _linkId;
        [JsonPropertyName("linkId")]
        public FhirString? LinkId { get => _linkId; set { _linkId = value; } }

            private List<Measure_Group_Population>? _population;
        [JsonPropertyName("population")]
        public List<Measure_Group_Population>? Population { get => _population; set { _population = value; } }

            /// <summary>
            /// Population criteria
            /// </summary>
            public partial class Measure_Group_Population : BackboneElement<Measure_Group_Population>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Measure_Group_Population" : "measure_Group_Population";
                private CodeableConcept? _aggregateMethod;
        [JsonPropertyName("aggregateMethod")]
        public CodeableConcept? AggregateMethod { get => _aggregateMethod; set { _aggregateMethod = value; } }

                private CodeableConcept? _code;
        [JsonPropertyName("code")]
        public CodeableConcept? Code { get => _code; set { _code = value; } }

                private DataTypeServices.DataTypes.MetaTypes.ExpressionType? _criteria;
        [JsonPropertyName("criteria")]
        public DataTypeServices.DataTypes.MetaTypes.ExpressionType? Criteria { get => _criteria; set { _criteria = value; } }

                private FhirMarkdown? _description;
        [JsonPropertyName("description")]
        public FhirMarkdown? Description { get => _description; set { _description = value; } }

                private ReferenceType? _groupDefinition;
        [JsonPropertyName("groupDefinition")]
        public ReferenceType? GroupDefinition { get => _groupDefinition; set { _groupDefinition = value; } }

                private FhirString? _inputPopulationId;
        [JsonPropertyName("inputPopulationId")]
        public FhirString? InputPopulationId { get => _inputPopulationId; set { _inputPopulationId = value; } }

                private FhirString? _linkId;
        [JsonPropertyName("linkId")]
        public FhirString? LinkId { get => _linkId; set { _linkId = value; } }

            }

            private FhirMarkdown? _rateAggregation;
        [JsonPropertyName("rateAggregation")]
        public FhirMarkdown? RateAggregation { get => _rateAggregation; set { _rateAggregation = value; } }

            private CodeableConcept? _scoring;
        [JsonPropertyName("scoring")]
        public CodeableConcept? Scoring { get => _scoring; set { _scoring = value; } }

            private CodeableConcept? _scoringUnit;
        [JsonPropertyName("scoringUnit")]
        public CodeableConcept? ScoringUnit { get => _scoringUnit; set { _scoringUnit = value; } }

            private List<Measure_Group_Stratifier>? _stratifier;
        [JsonPropertyName("stratifier")]
        public List<Measure_Group_Stratifier>? Stratifier { get => _stratifier; set { _stratifier = value; } }

            /// <summary>
            /// Stratifier criteria for the measure
            /// </summary>
            public partial class Measure_Group_Stratifier : BackboneElement<Measure_Group_Stratifier>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Measure_Group_Stratifier" : "measure_Group_Stratifier";
                private CodeableConcept? _code;
        [JsonPropertyName("code")]
        public CodeableConcept? Code { get => _code; set { _code = value; } }

                private List<Measure_Group_Stratifier_Component>? _component;
        [JsonPropertyName("component")]
        public List<Measure_Group_Stratifier_Component>? Component { get => _component; set { _component = value; } }

                /// <summary>
                /// Stratifier criteria component for the measure
                /// </summary>
                public partial class Measure_Group_Stratifier_Component : BackboneElement<Measure_Group_Stratifier_Component>
                {
                    public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Measure_Group_Stratifier_Component" : "measure_Group_Stratifier_Component";
                    private CodeableConcept? _code;
        [JsonPropertyName("code")]
        public CodeableConcept? Code { get => _code; set { _code = value; } }

                    private DataTypeServices.DataTypes.MetaTypes.ExpressionType? _criteria;
        [JsonPropertyName("criteria")]
        public DataTypeServices.DataTypes.MetaTypes.ExpressionType? Criteria { get => _criteria; set { _criteria = value; } }

                    private FhirMarkdown? _description;
        [JsonPropertyName("description")]
        public FhirMarkdown? Description { get => _description; set { _description = value; } }

                    private ReferenceType? _groupDefinition;
        [JsonPropertyName("groupDefinition")]
        public ReferenceType? GroupDefinition { get => _groupDefinition; set { _groupDefinition = value; } }

                    private FhirString? _linkId;
        [JsonPropertyName("linkId")]
        public FhirString? LinkId { get => _linkId; set { _linkId = value; } }

                }

                private DataTypeServices.DataTypes.MetaTypes.ExpressionType? _criteria;
        [JsonPropertyName("criteria")]
        public DataTypeServices.DataTypes.MetaTypes.ExpressionType? Criteria { get => _criteria; set { _criteria = value; } }

                private FhirMarkdown? _description;
        [JsonPropertyName("description")]
        public FhirMarkdown? Description { get => _description; set { _description = value; } }

                private ReferenceType? _groupDefinition;
        [JsonPropertyName("groupDefinition")]
        public ReferenceType? GroupDefinition { get => _groupDefinition; set { _groupDefinition = value; } }

                private FhirString? _linkId;
        [JsonPropertyName("linkId")]
        public FhirString? LinkId { get => _linkId; set { _linkId = value; } }

            }

            private CodeableConcept? _subjectCodeableConcept;
        [JsonPropertyName("subjectCodeableConcept")]
        public CodeableConcept? SubjectCodeableConcept { get => _subjectCodeableConcept; set { _subjectCodeableConcept = value; if (value != null) {{ _subjectReference = null; OnPropertyChanged("subjectReference", null); }}; OnPropertyChanged("subjectCodeableConcept", value); } }

            private ReferenceType? _subjectReference;
        [JsonPropertyName("subjectReference")]
        public ReferenceType? SubjectReference { get => _subjectReference; set { _subjectReference = value; if (value != null) {{ _subjectCodeableConcept = null; OnPropertyChanged("subjectCodeableConcept", null); }}; OnPropertyChanged("subjectReference", value); } }

            private List<CodeableConcept>? _type;
        [JsonPropertyName("type")]
        public List<CodeableConcept>? Type { get => _type; set { _type = value; } }

        }

        private FhirMarkdown? _guidance;
        [JsonPropertyName("guidance")]
        public FhirMarkdown? Guidance { get => _guidance; set { _guidance = value; OnPropertyChangedByClr(nameof(Guidance), value); } }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private CodeableConcept? _improvementNotation;
        [JsonPropertyName("improvementNotation")]
        public CodeableConcept? ImprovementNotation { get => _improvementNotation; set { _improvementNotation = value; OnPropertyChangedByClr(nameof(ImprovementNotation), value); } }

        private List<CodeableConcept>? _jurisdiction;
        [JsonPropertyName("jurisdiction")]
        public List<CodeableConcept>? Jurisdiction { get => _jurisdiction; set { _jurisdiction = value; OnPropertyChangedByClr(nameof(Jurisdiction), value); } }

        private FhirDate? _lastReviewDate;
        [JsonPropertyName("lastReviewDate")]
        public FhirDate? LastReviewDate { get => _lastReviewDate; set { _lastReviewDate = value; OnPropertyChangedByClr(nameof(LastReviewDate), value); } }

        private List<FhirCanonical>? _library;
        [JsonPropertyName("library")]
        public List<FhirCanonical>? Library { get => _library; set { _library = value; OnPropertyChangedByClr(nameof(Library), value); } }

        private FhirString? _name;
        [JsonPropertyName("name")]
        public FhirString? Name { get => _name; set { _name = value; OnPropertyChangedByClr(nameof(Name), value); } }

        private FhirString? _publisher;
        [JsonPropertyName("publisher")]
        public FhirString? Publisher { get => _publisher; set { _publisher = value; OnPropertyChangedByClr(nameof(Publisher), value); } }

        private FhirMarkdown? _purpose;
        [JsonPropertyName("purpose")]
        public FhirMarkdown? Purpose { get => _purpose; set { _purpose = value; OnPropertyChangedByClr(nameof(Purpose), value); } }

        private FhirMarkdown? _rateAggregation;
        [JsonPropertyName("rateAggregation")]
        public FhirMarkdown? RateAggregation { get => _rateAggregation; set { _rateAggregation = value; OnPropertyChangedByClr(nameof(RateAggregation), value); } }

        private FhirMarkdown? _rationale;
        [JsonPropertyName("rationale")]
        public FhirMarkdown? Rationale { get => _rationale; set { _rationale = value; OnPropertyChangedByClr(nameof(Rationale), value); } }

        private List<RelatedArtifact>? _relatedArtifact;
        [JsonPropertyName("relatedArtifact")]
        public List<RelatedArtifact>? RelatedArtifact { get => _relatedArtifact; set { _relatedArtifact = value; OnPropertyChangedByClr(nameof(RelatedArtifact), value); } }

        private List<ContactDetail>? _reviewer;
        [JsonPropertyName("reviewer")]
        public List<ContactDetail>? Reviewer { get => _reviewer; set { _reviewer = value; OnPropertyChangedByClr(nameof(Reviewer), value); } }

        private FhirMarkdown? _riskAdjustment;
        [JsonPropertyName("riskAdjustment")]
        public FhirMarkdown? RiskAdjustment { get => _riskAdjustment; set { _riskAdjustment = value; OnPropertyChangedByClr(nameof(RiskAdjustment), value); } }

        private CodeableConcept? _scoring;
        [JsonPropertyName("scoring")]
        public CodeableConcept? Scoring { get => _scoring; set { _scoring = value; OnPropertyChangedByClr(nameof(Scoring), value); } }

        private CodeableConcept? _scoringUnit;
        [JsonPropertyName("scoringUnit")]
        public CodeableConcept? ScoringUnit { get => _scoringUnit; set { _scoringUnit = value; OnPropertyChangedByClr(nameof(ScoringUnit), value); } }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode Status { get => _status ?? throw new InvalidOperationException("Status is required"); set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private CodeableConcept? _subjectCodeableConcept;
        [JsonPropertyName("subjectCodeableConcept")]
        public CodeableConcept? SubjectCodeableConcept { get => _subjectCodeableConcept; set { _subjectCodeableConcept = value; if (value != null) {{ _subjectReference = null; OnPropertyChangedByClr(nameof(SubjectReference), null); }}; OnPropertyChangedByClr(nameof(SubjectCodeableConcept), value); } }

        private ReferenceType? _subjectReference;
        [JsonPropertyName("subjectReference")]
        public ReferenceType? SubjectReference { get => _subjectReference; set { _subjectReference = value; if (value != null) {{ _subjectCodeableConcept = null; OnPropertyChangedByClr(nameof(SubjectCodeableConcept), null); }}; OnPropertyChangedByClr(nameof(SubjectReference), value); } }

        private FhirString? _subtitle;
        [JsonPropertyName("subtitle")]
        public FhirString? Subtitle { get => _subtitle; set { _subtitle = value; OnPropertyChangedByClr(nameof(Subtitle), value); } }

        private List<Measure_SupplementalData>? _supplementalData;
        [JsonPropertyName("supplementalData")]
        public List<Measure_SupplementalData>? SupplementalData { get => _supplementalData; set { _supplementalData = value; OnPropertyChangedByClr(nameof(SupplementalData), value); } }

        /// <summary>
        /// What other data should be reported with the measure
        /// </summary>
        public partial class Measure_SupplementalData : BackboneElement<Measure_SupplementalData>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Measure_SupplementalData" : "measure_SupplementalData";
            private CodeableConcept? _code;
        [JsonPropertyName("code")]
        public CodeableConcept? Code { get => _code; set { _code = value; } }

            private DataTypeServices.DataTypes.MetaTypes.ExpressionType? _criteria;
        [JsonPropertyName("criteria")]
        public DataTypeServices.DataTypes.MetaTypes.ExpressionType Criteria { get => _criteria ?? throw new InvalidOperationException("Criteria is required"); set { _criteria = value; } }

            private FhirMarkdown? _description;
        [JsonPropertyName("description")]
        public FhirMarkdown? Description { get => _description; set { _description = value; } }

            private FhirString? _linkId;
        [JsonPropertyName("linkId")]
        public FhirString? LinkId { get => _linkId; set { _linkId = value; } }

            private List<CodeableConcept>? _usage;
        [JsonPropertyName("usage")]
        public List<CodeableConcept>? Usage { get => _usage; set { _usage = value; } }

        }

        private List<Measure_Term>? _term;
        [JsonPropertyName("term")]
        public List<Measure_Term>? Term { get => _term; set { _term = value; OnPropertyChangedByClr(nameof(Term), value); } }

        /// <summary>
        /// Defined terms used in the measure documentation
        /// </summary>
        public partial class Measure_Term : BackboneElement<Measure_Term>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "Measure_Term" : "measure_Term";
            private CodeableConcept? _code;
        [JsonPropertyName("code")]
        public CodeableConcept? Code { get => _code; set { _code = value; } }

            private FhirMarkdown? _definition;
        [JsonPropertyName("definition")]
        public FhirMarkdown? Definition { get => _definition; set { _definition = value; } }

        }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

        private FhirString? _title;
        [JsonPropertyName("title")]
        public FhirString? Title { get => _title; set { _title = value; OnPropertyChangedByClr(nameof(Title), value); } }

        private List<CodeableConcept>? _topic;
        [JsonPropertyName("topic")]
        public List<CodeableConcept>? Topic { get => _topic; set { _topic = value; OnPropertyChangedByClr(nameof(Topic), value); } }

        private List<CodeableConcept>? _type;
        [JsonPropertyName("type")]
        public List<CodeableConcept>? Type { get => _type; set { _type = value; OnPropertyChangedByClr(nameof(Type), value); } }

        private FhirUri? _url;
        [JsonPropertyName("url")]
        public FhirUri? Url { get => _url; set { _url = value; OnPropertyChangedByClr(nameof(Url), value); } }

        private FhirMarkdown? _usage;
        [JsonPropertyName("usage")]
        public FhirMarkdown? Usage { get => _usage; set { _usage = value; OnPropertyChangedByClr(nameof(Usage), value); } }

        private List<UsageContext>? _useContext;
        [JsonPropertyName("useContext")]
        public List<UsageContext>? UseContext { get => _useContext; set { _useContext = value; OnPropertyChangedByClr(nameof(UseContext), value); } }

        private FhirString? _version;
        [JsonPropertyName("version")]
        public FhirString? Version { get => _version; set { _version = value; OnPropertyChangedByClr(nameof(Version), value); } }

        private FhirString? _versionAlgorithmString;
        [JsonPropertyName("versionAlgorithmString")]
        public FhirString? VersionAlgorithmString { get => _versionAlgorithmString; set { _versionAlgorithmString = value; if (value != null) {{ _versionAlgorithmCoding = null; OnPropertyChangedByClr(nameof(VersionAlgorithmCoding), null); }}; OnPropertyChangedByClr(nameof(VersionAlgorithmString), value); } }

        private Coding? _versionAlgorithmCoding;
        [JsonPropertyName("versionAlgorithmCoding")]
        public Coding? VersionAlgorithmCoding { get => _versionAlgorithmCoding; set { _versionAlgorithmCoding = value; if (value != null) {{ _versionAlgorithmString = null; OnPropertyChangedByClr(nameof(VersionAlgorithmString), null); }}; OnPropertyChangedByClr(nameof(VersionAlgorithmCoding), value); } }

    }
}
