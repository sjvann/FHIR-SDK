// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// Explanation of Benefit resource
    /// </summary>
    public partial class ExplanationOfBenefit : ResourceBase
    {
        public override string ResourceType => "ExplanationOfBenefit";

        public ExplanationOfBenefit() { }
        public ExplanationOfBenefit(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public ExplanationOfBenefit(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private ExplanationOfBenefit_Accident? _accident;
        [JsonPropertyName("accident")]
        public ExplanationOfBenefit_Accident? Accident { get => _accident; set { _accident = value; OnPropertyChangedByClr(nameof(Accident), value); } }

        /// <summary>
        /// Details of the event
        /// </summary>
        public partial class ExplanationOfBenefit_Accident : BackboneElement<ExplanationOfBenefit_Accident>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ExplanationOfBenefit_Accident" : "explanationOfBenefit_Accident";
            private FhirDate? _date;
        [JsonPropertyName("date")]
        public FhirDate? Date { get => _date; set { _date = value; } }

            private Address? _locationAddress;
        [JsonPropertyName("locationAddress")]
        public Address? LocationAddress { get => _locationAddress; set { _locationAddress = value; if (value != null) {{ _locationReference = null; OnPropertyChanged("locationReference", null); }}; OnPropertyChanged("locationAddress", value); } }

            private ReferenceType? _locationReference;
        [JsonPropertyName("locationReference")]
        public ReferenceType? LocationReference { get => _locationReference; set { _locationReference = value; if (value != null) {{ _locationAddress = null; OnPropertyChanged("locationAddress", null); }}; OnPropertyChanged("locationReference", value); } }

            private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept? Type { get => _type; set { _type = value; } }

        }

        private List<ExplanationOfBenefit_AddItem>? _addItem;
        [JsonPropertyName("addItem")]
        public List<ExplanationOfBenefit_AddItem>? AddItem { get => _addItem; set { _addItem = value; OnPropertyChangedByClr(nameof(AddItem), value); } }

        /// <summary>
        /// Insurer added line items
        /// </summary>
        public partial class ExplanationOfBenefit_AddItem : BackboneElement<ExplanationOfBenefit_AddItem>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ExplanationOfBenefit_AddItem" : "explanationOfBenefit_AddItem";
            private List<FhirString>? _adjudication;
        [JsonPropertyName("adjudication")]
        public List<FhirString>? Adjudication { get => _adjudication; set { _adjudication = value; } }

            private List<ExplanationOfBenefit_AddItem_BodySite>? _bodySite;
        [JsonPropertyName("bodySite")]
        public List<ExplanationOfBenefit_AddItem_BodySite>? BodySite { get => _bodySite; set { _bodySite = value; } }

            /// <summary>
            /// Anatomical location
            /// </summary>
            public partial class ExplanationOfBenefit_AddItem_BodySite : BackboneElement<ExplanationOfBenefit_AddItem_BodySite>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ExplanationOfBenefit_AddItem_BodySite" : "explanationOfBenefit_AddItem_BodySite";
                private List<CodeableReference> _site = new();
        [JsonPropertyName("site")]
        public List<CodeableReference> Site { get => _site; set { _site = value; } }

                private List<CodeableConcept>? _subSite;
        [JsonPropertyName("subSite")]
        public List<CodeableConcept>? SubSite { get => _subSite; set { _subSite = value; } }

            }

            private List<ExplanationOfBenefit_AddItem_Detail>? _detail;
        [JsonPropertyName("detail")]
        public List<ExplanationOfBenefit_AddItem_Detail>? Detail { get => _detail; set { _detail = value; } }

            /// <summary>
            /// Insurer added line items
            /// </summary>
            public partial class ExplanationOfBenefit_AddItem_Detail : BackboneElement<ExplanationOfBenefit_AddItem_Detail>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ExplanationOfBenefit_AddItem_Detail" : "explanationOfBenefit_AddItem_Detail";
                private List<FhirString>? _adjudication;
        [JsonPropertyName("adjudication")]
        public List<FhirString>? Adjudication { get => _adjudication; set { _adjudication = value; } }

                private FhirDecimal? _factor;
        [JsonPropertyName("factor")]
        public FhirDecimal? Factor { get => _factor; set { _factor = value; } }

                private List<CodeableConcept>? _modifier;
        [JsonPropertyName("modifier")]
        public List<CodeableConcept>? Modifier { get => _modifier; set { _modifier = value; } }

                private Money? _net;
        [JsonPropertyName("net")]
        public Money? Net { get => _net; set { _net = value; } }

                private List<FhirPositiveInt>? _noteNumber;
        [JsonPropertyName("noteNumber")]
        public List<FhirPositiveInt>? NoteNumber { get => _noteNumber; set { _noteNumber = value; } }

                private Money? _patientPaid;
        [JsonPropertyName("patientPaid")]
        public Money? PatientPaid { get => _patientPaid; set { _patientPaid = value; } }

                private CodeableConcept? _productOrService;
        [JsonPropertyName("productOrService")]
        public CodeableConcept? ProductOrService { get => _productOrService; set { _productOrService = value; } }

                private CodeableConcept? _productOrServiceEnd;
        [JsonPropertyName("productOrServiceEnd")]
        public CodeableConcept? ProductOrServiceEnd { get => _productOrServiceEnd; set { _productOrServiceEnd = value; } }

                private Quantity? _quantity;
        [JsonPropertyName("quantity")]
        public Quantity? Quantity { get => _quantity; set { _quantity = value; } }

                private CodeableConcept? _revenue;
        [JsonPropertyName("revenue")]
        public CodeableConcept? Revenue { get => _revenue; set { _revenue = value; } }

                private FhirString? _reviewOutcome;
        [JsonPropertyName("reviewOutcome")]
        public FhirString? ReviewOutcome { get => _reviewOutcome; set { _reviewOutcome = value; } }

                private List<ExplanationOfBenefit_AddItem_Detail_SubDetail>? _subDetail;
        [JsonPropertyName("subDetail")]
        public List<ExplanationOfBenefit_AddItem_Detail_SubDetail>? SubDetail { get => _subDetail; set { _subDetail = value; } }

                /// <summary>
                /// Insurer added line items
                /// </summary>
                public partial class ExplanationOfBenefit_AddItem_Detail_SubDetail : BackboneElement<ExplanationOfBenefit_AddItem_Detail_SubDetail>
                {
                    public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ExplanationOfBenefit_AddItem_Detail_SubDetail" : "explanationOfBenefit_AddItem_Detail_SubDetail";
                    private List<FhirString>? _adjudication;
        [JsonPropertyName("adjudication")]
        public List<FhirString>? Adjudication { get => _adjudication; set { _adjudication = value; } }

                    private FhirDecimal? _factor;
        [JsonPropertyName("factor")]
        public FhirDecimal? Factor { get => _factor; set { _factor = value; } }

                    private List<CodeableConcept>? _modifier;
        [JsonPropertyName("modifier")]
        public List<CodeableConcept>? Modifier { get => _modifier; set { _modifier = value; } }

                    private Money? _net;
        [JsonPropertyName("net")]
        public Money? Net { get => _net; set { _net = value; } }

                    private List<FhirPositiveInt>? _noteNumber;
        [JsonPropertyName("noteNumber")]
        public List<FhirPositiveInt>? NoteNumber { get => _noteNumber; set { _noteNumber = value; } }

                    private Money? _patientPaid;
        [JsonPropertyName("patientPaid")]
        public Money? PatientPaid { get => _patientPaid; set { _patientPaid = value; } }

                    private CodeableConcept? _productOrService;
        [JsonPropertyName("productOrService")]
        public CodeableConcept? ProductOrService { get => _productOrService; set { _productOrService = value; } }

                    private CodeableConcept? _productOrServiceEnd;
        [JsonPropertyName("productOrServiceEnd")]
        public CodeableConcept? ProductOrServiceEnd { get => _productOrServiceEnd; set { _productOrServiceEnd = value; } }

                    private Quantity? _quantity;
        [JsonPropertyName("quantity")]
        public Quantity? Quantity { get => _quantity; set { _quantity = value; } }

                    private CodeableConcept? _revenue;
        [JsonPropertyName("revenue")]
        public CodeableConcept? Revenue { get => _revenue; set { _revenue = value; } }

                    private FhirString? _reviewOutcome;
        [JsonPropertyName("reviewOutcome")]
        public FhirString? ReviewOutcome { get => _reviewOutcome; set { _reviewOutcome = value; } }

                    private Money? _tax;
        [JsonPropertyName("tax")]
        public Money? Tax { get => _tax; set { _tax = value; } }

                    private List<Identifier>? _traceNumber;
        [JsonPropertyName("traceNumber")]
        public List<Identifier>? TraceNumber { get => _traceNumber; set { _traceNumber = value; } }

                    private Money? _unitPrice;
        [JsonPropertyName("unitPrice")]
        public Money? UnitPrice { get => _unitPrice; set { _unitPrice = value; } }

                }

                private Money? _tax;
        [JsonPropertyName("tax")]
        public Money? Tax { get => _tax; set { _tax = value; } }

                private List<Identifier>? _traceNumber;
        [JsonPropertyName("traceNumber")]
        public List<Identifier>? TraceNumber { get => _traceNumber; set { _traceNumber = value; } }

                private Money? _unitPrice;
        [JsonPropertyName("unitPrice")]
        public Money? UnitPrice { get => _unitPrice; set { _unitPrice = value; } }

            }

            private List<FhirPositiveInt>? _detailSequence;
        [JsonPropertyName("detailSequence")]
        public List<FhirPositiveInt>? DetailSequence { get => _detailSequence; set { _detailSequence = value; } }

            private FhirDecimal? _factor;
        [JsonPropertyName("factor")]
        public FhirDecimal? Factor { get => _factor; set { _factor = value; } }

            private List<FhirPositiveInt>? _itemSequence;
        [JsonPropertyName("itemSequence")]
        public List<FhirPositiveInt>? ItemSequence { get => _itemSequence; set { _itemSequence = value; } }

            private CodeableConcept? _locationCodeableConcept;
        [JsonPropertyName("locationCodeableConcept")]
        public CodeableConcept? LocationCodeableConcept { get => _locationCodeableConcept; set { _locationCodeableConcept = value; if (value != null) {{ _locationAddress = null; OnPropertyChanged("locationAddress", null); _locationReference = null; OnPropertyChanged("locationReference", null); }}; OnPropertyChanged("locationCodeableConcept", value); } }

            private Address? _locationAddress;
        [JsonPropertyName("locationAddress")]
        public Address? LocationAddress { get => _locationAddress; set { _locationAddress = value; if (value != null) {{ _locationCodeableConcept = null; OnPropertyChanged("locationCodeableConcept", null); _locationReference = null; OnPropertyChanged("locationReference", null); }}; OnPropertyChanged("locationAddress", value); } }

            private ReferenceType? _locationReference;
        [JsonPropertyName("locationReference")]
        public ReferenceType? LocationReference { get => _locationReference; set { _locationReference = value; if (value != null) {{ _locationCodeableConcept = null; OnPropertyChanged("locationCodeableConcept", null); _locationAddress = null; OnPropertyChanged("locationAddress", null); }}; OnPropertyChanged("locationReference", value); } }

            private List<CodeableConcept>? _modifier;
        [JsonPropertyName("modifier")]
        public List<CodeableConcept>? Modifier { get => _modifier; set { _modifier = value; } }

            private Money? _net;
        [JsonPropertyName("net")]
        public Money? Net { get => _net; set { _net = value; } }

            private List<FhirPositiveInt>? _noteNumber;
        [JsonPropertyName("noteNumber")]
        public List<FhirPositiveInt>? NoteNumber { get => _noteNumber; set { _noteNumber = value; } }

            private Money? _patientPaid;
        [JsonPropertyName("patientPaid")]
        public Money? PatientPaid { get => _patientPaid; set { _patientPaid = value; } }

            private CodeableConcept? _productOrService;
        [JsonPropertyName("productOrService")]
        public CodeableConcept? ProductOrService { get => _productOrService; set { _productOrService = value; } }

            private CodeableConcept? _productOrServiceEnd;
        [JsonPropertyName("productOrServiceEnd")]
        public CodeableConcept? ProductOrServiceEnd { get => _productOrServiceEnd; set { _productOrServiceEnd = value; } }

            private List<CodeableConcept>? _programCode;
        [JsonPropertyName("programCode")]
        public List<CodeableConcept>? ProgramCode { get => _programCode; set { _programCode = value; } }

            private List<ReferenceType>? _provider;
        [JsonPropertyName("provider")]
        public List<ReferenceType>? Provider { get => _provider; set { _provider = value; } }

            private Quantity? _quantity;
        [JsonPropertyName("quantity")]
        public Quantity? Quantity { get => _quantity; set { _quantity = value; } }

            private List<ReferenceType>? _request;
        [JsonPropertyName("request")]
        public List<ReferenceType>? Request { get => _request; set { _request = value; } }

            private CodeableConcept? _revenue;
        [JsonPropertyName("revenue")]
        public CodeableConcept? Revenue { get => _revenue; set { _revenue = value; } }

            private FhirString? _reviewOutcome;
        [JsonPropertyName("reviewOutcome")]
        public FhirString? ReviewOutcome { get => _reviewOutcome; set { _reviewOutcome = value; } }

            private FhirDate? _serviceddate;
        [JsonPropertyName("serviceddate")]
        public FhirDate? Serviceddate { get => _serviceddate; set { _serviceddate = value; if (value != null) {{ _servicedPeriod = null; OnPropertyChanged("servicedPeriod", null); }}; OnPropertyChanged("serviceddate", value); } }

            private Period? _servicedPeriod;
        [JsonPropertyName("servicedPeriod")]
        public Period? ServicedPeriod { get => _servicedPeriod; set { _servicedPeriod = value; if (value != null) {{ _serviceddate = null; OnPropertyChanged("serviceddate", null); }}; OnPropertyChanged("servicedPeriod", value); } }

            private List<FhirPositiveInt>? _subDetailSequence;
        [JsonPropertyName("subDetailSequence")]
        public List<FhirPositiveInt>? SubDetailSequence { get => _subDetailSequence; set { _subDetailSequence = value; } }

            private Money? _tax;
        [JsonPropertyName("tax")]
        public Money? Tax { get => _tax; set { _tax = value; } }

            private List<Identifier>? _traceNumber;
        [JsonPropertyName("traceNumber")]
        public List<Identifier>? TraceNumber { get => _traceNumber; set { _traceNumber = value; } }

            private Money? _unitPrice;
        [JsonPropertyName("unitPrice")]
        public Money? UnitPrice { get => _unitPrice; set { _unitPrice = value; } }

        }

        private List<FhirString>? _adjudication;
        [JsonPropertyName("adjudication")]
        public List<FhirString>? Adjudication { get => _adjudication; set { _adjudication = value; OnPropertyChangedByClr(nameof(Adjudication), value); } }

        private List<ExplanationOfBenefit_BenefitBalance>? _benefitBalance;
        [JsonPropertyName("benefitBalance")]
        public List<ExplanationOfBenefit_BenefitBalance>? BenefitBalance { get => _benefitBalance; set { _benefitBalance = value; OnPropertyChangedByClr(nameof(BenefitBalance), value); } }

        /// <summary>
        /// Balance by Benefit Category
        /// </summary>
        public partial class ExplanationOfBenefit_BenefitBalance : BackboneElement<ExplanationOfBenefit_BenefitBalance>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ExplanationOfBenefit_BenefitBalance" : "explanationOfBenefit_BenefitBalance";
            private CodeableConcept? _category;
        [JsonPropertyName("category")]
        public CodeableConcept Category { get => _category ?? throw new InvalidOperationException("Category is required"); set { _category = value; } }

            private FhirString? _description;
        [JsonPropertyName("description")]
        public FhirString? Description { get => _description; set { _description = value; } }

            private FhirBoolean? _excluded;
        [JsonPropertyName("excluded")]
        public FhirBoolean? Excluded { get => _excluded; set { _excluded = value; } }

            private List<ExplanationOfBenefit_BenefitBalance_Financial>? _financial;
        [JsonPropertyName("financial")]
        public List<ExplanationOfBenefit_BenefitBalance_Financial>? Financial { get => _financial; set { _financial = value; } }

            /// <summary>
            /// Benefit Summary
            /// </summary>
            public partial class ExplanationOfBenefit_BenefitBalance_Financial : BackboneElement<ExplanationOfBenefit_BenefitBalance_Financial>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ExplanationOfBenefit_BenefitBalance_Financial" : "explanationOfBenefit_BenefitBalance_Financial";
                private FhirUnsignedInt? _allowedunsignedInt;
        [JsonPropertyName("allowedunsignedInt")]
        public FhirUnsignedInt? AllowedunsignedInt { get => _allowedunsignedInt; set { _allowedunsignedInt = value; if (value != null) {{ _allowedString = null; OnPropertyChanged("allowedString", null); _allowedMoney = null; OnPropertyChanged("allowedMoney", null); }}; OnPropertyChanged("allowedunsignedInt", value); } }

                private FhirString? _allowedString;
        [JsonPropertyName("allowedString")]
        public FhirString? AllowedString { get => _allowedString; set { _allowedString = value; if (value != null) {{ _allowedunsignedInt = null; OnPropertyChanged("allowedunsignedInt", null); _allowedMoney = null; OnPropertyChanged("allowedMoney", null); }}; OnPropertyChanged("allowedString", value); } }

                private Money? _allowedMoney;
        [JsonPropertyName("allowedMoney")]
        public Money? AllowedMoney { get => _allowedMoney; set { _allowedMoney = value; if (value != null) {{ _allowedunsignedInt = null; OnPropertyChanged("allowedunsignedInt", null); _allowedString = null; OnPropertyChanged("allowedString", null); }}; OnPropertyChanged("allowedMoney", value); } }

                private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept Type { get => _type ?? throw new InvalidOperationException("Type is required"); set { _type = value; } }

                private FhirUnsignedInt? _usedunsignedInt;
        [JsonPropertyName("usedunsignedInt")]
        public FhirUnsignedInt? UsedunsignedInt { get => _usedunsignedInt; set { _usedunsignedInt = value; if (value != null) {{ _usedMoney = null; OnPropertyChanged("usedMoney", null); }}; OnPropertyChanged("usedunsignedInt", value); } }

                private Money? _usedMoney;
        [JsonPropertyName("usedMoney")]
        public Money? UsedMoney { get => _usedMoney; set { _usedMoney = value; if (value != null) {{ _usedunsignedInt = null; OnPropertyChanged("usedunsignedInt", null); }}; OnPropertyChanged("usedMoney", value); } }

            }

            private FhirString? _name;
        [JsonPropertyName("name")]
        public FhirString? Name { get => _name; set { _name = value; } }

            private CodeableConcept? _network;
        [JsonPropertyName("network")]
        public CodeableConcept? Network { get => _network; set { _network = value; } }

            private CodeableConcept? _term;
        [JsonPropertyName("term")]
        public CodeableConcept? Term { get => _term; set { _term = value; } }

            private CodeableConcept? _unit;
        [JsonPropertyName("unit")]
        public CodeableConcept? Unit { get => _unit; set { _unit = value; } }

        }

        private Period? _benefitPeriod;
        [JsonPropertyName("benefitPeriod")]
        public Period? BenefitPeriod { get => _benefitPeriod; set { _benefitPeriod = value; OnPropertyChangedByClr(nameof(BenefitPeriod), value); } }

        private Period? _billablePeriod;
        [JsonPropertyName("billablePeriod")]
        public Period? BillablePeriod { get => _billablePeriod; set { _billablePeriod = value; OnPropertyChangedByClr(nameof(BillablePeriod), value); } }

        private List<ExplanationOfBenefit_CareTeam>? _careTeam;
        [JsonPropertyName("careTeam")]
        public List<ExplanationOfBenefit_CareTeam>? CareTeam { get => _careTeam; set { _careTeam = value; OnPropertyChangedByClr(nameof(CareTeam), value); } }

        /// <summary>
        /// Care Team members
        /// </summary>
        public partial class ExplanationOfBenefit_CareTeam : BackboneElement<ExplanationOfBenefit_CareTeam>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ExplanationOfBenefit_CareTeam" : "explanationOfBenefit_CareTeam";
            private ReferenceType? _provider;
        [JsonPropertyName("provider")]
        public ReferenceType Provider { get => _provider ?? throw new InvalidOperationException("Provider is required"); set { _provider = value; } }

            private FhirBoolean? _responsible;
        [JsonPropertyName("responsible")]
        public FhirBoolean? Responsible { get => _responsible; set { _responsible = value; } }

            private CodeableConcept? _role;
        [JsonPropertyName("role")]
        public CodeableConcept? Role { get => _role; set { _role = value; } }

            private FhirPositiveInt? _sequence;
        [JsonPropertyName("sequence")]
        public FhirPositiveInt Sequence { get => _sequence ?? throw new InvalidOperationException("Sequence is required"); set { _sequence = value; } }

            private CodeableConcept? _specialty;
        [JsonPropertyName("specialty")]
        public CodeableConcept? Specialty { get => _specialty; set { _specialty = value; } }

        }

        private ReferenceType? _claim;
        [JsonPropertyName("claim")]
        public ReferenceType? Claim { get => _claim; set { _claim = value; OnPropertyChangedByClr(nameof(Claim), value); } }

        private ReferenceType? _claimResponse;
        [JsonPropertyName("claimResponse")]
        public ReferenceType? ClaimResponse { get => _claimResponse; set { _claimResponse = value; OnPropertyChangedByClr(nameof(ClaimResponse), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private FhirDateTime? _created;
        [JsonPropertyName("created")]
        public FhirDateTime Created { get => _created ?? throw new InvalidOperationException("Created is required"); set { _created = value; OnPropertyChangedByClr(nameof(Created), value); } }

        private CodeableConcept? _decision;
        [JsonPropertyName("decision")]
        public CodeableConcept? Decision { get => _decision; set { _decision = value; OnPropertyChangedByClr(nameof(Decision), value); } }

        private List<ExplanationOfBenefit_Diagnosis>? _diagnosis;
        [JsonPropertyName("diagnosis")]
        public List<ExplanationOfBenefit_Diagnosis>? Diagnosis { get => _diagnosis; set { _diagnosis = value; OnPropertyChangedByClr(nameof(Diagnosis), value); } }

        /// <summary>
        /// Pertinent diagnosis information
        /// </summary>
        public partial class ExplanationOfBenefit_Diagnosis : BackboneElement<ExplanationOfBenefit_Diagnosis>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ExplanationOfBenefit_Diagnosis" : "explanationOfBenefit_Diagnosis";
            private CodeableConcept? _diagnosisCodeableConcept;
        [JsonPropertyName("diagnosisCodeableConcept")]
        public CodeableConcept? DiagnosisCodeableConcept { get => _diagnosisCodeableConcept; set { _diagnosisCodeableConcept = value; if (value != null) {{ _diagnosisReference = null; OnPropertyChanged("diagnosisReference", null); }}; OnPropertyChanged("diagnosisCodeableConcept", value); } }

            private ReferenceType? _diagnosisReference;
        [JsonPropertyName("diagnosisReference")]
        public ReferenceType? DiagnosisReference { get => _diagnosisReference; set { _diagnosisReference = value; if (value != null) {{ _diagnosisCodeableConcept = null; OnPropertyChanged("diagnosisCodeableConcept", null); }}; OnPropertyChanged("diagnosisReference", value); } }

            private CodeableConcept? _onAdmission;
        [JsonPropertyName("onAdmission")]
        public CodeableConcept? OnAdmission { get => _onAdmission; set { _onAdmission = value; } }

            private FhirPositiveInt? _sequence;
        [JsonPropertyName("sequence")]
        public FhirPositiveInt Sequence { get => _sequence ?? throw new InvalidOperationException("Sequence is required"); set { _sequence = value; } }

            private List<CodeableConcept>? _type;
        [JsonPropertyName("type")]
        public List<CodeableConcept>? Type { get => _type; set { _type = value; } }

        }

        private CodeableConcept? _diagnosisRelatedGroup;
        [JsonPropertyName("diagnosisRelatedGroup")]
        public CodeableConcept? DiagnosisRelatedGroup { get => _diagnosisRelatedGroup; set { _diagnosisRelatedGroup = value; OnPropertyChangedByClr(nameof(DiagnosisRelatedGroup), value); } }

        private FhirString? _disposition;
        [JsonPropertyName("disposition")]
        public FhirString? Disposition { get => _disposition; set { _disposition = value; OnPropertyChangedByClr(nameof(Disposition), value); } }

        private List<ReferenceType>? _encounter;
        [JsonPropertyName("encounter")]
        public List<ReferenceType>? Encounter { get => _encounter; set { _encounter = value; OnPropertyChangedByClr(nameof(Encounter), value); } }

        private ReferenceType? _enterer;
        [JsonPropertyName("enterer")]
        public ReferenceType? Enterer { get => _enterer; set { _enterer = value; OnPropertyChangedByClr(nameof(Enterer), value); } }

        private List<ExplanationOfBenefit_Event>? _event;
        [JsonPropertyName("event")]
        public List<ExplanationOfBenefit_Event>? Event { get => _event; set { _event = value; OnPropertyChangedByClr(nameof(Event), value); } }

        /// <summary>
        /// Event information
        /// </summary>
        public partial class ExplanationOfBenefit_Event : BackboneElement<ExplanationOfBenefit_Event>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ExplanationOfBenefit_Event" : "explanationOfBenefit_Event";
            private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept Type { get => _type ?? throw new InvalidOperationException("Type is required"); set { _type = value; } }

            private FhirDateTime? _whenDateTime;
        [JsonPropertyName("whenDateTime")]
        public FhirDateTime? WhenDateTime { get => _whenDateTime; set { _whenDateTime = value; if (value != null) {{ _whenPeriod = null; OnPropertyChanged("whenPeriod", null); }}; OnPropertyChanged("whenDateTime", value); } }

            private Period? _whenPeriod;
        [JsonPropertyName("whenPeriod")]
        public Period? WhenPeriod { get => _whenPeriod; set { _whenPeriod = value; if (value != null) {{ _whenDateTime = null; OnPropertyChanged("whenDateTime", null); }}; OnPropertyChanged("whenPeriod", value); } }

        }

        private ReferenceType? _facility;
        [JsonPropertyName("facility")]
        public ReferenceType? Facility { get => _facility; set { _facility = value; OnPropertyChangedByClr(nameof(Facility), value); } }

        private Attachment? _form;
        [JsonPropertyName("form")]
        public Attachment? Form { get => _form; set { _form = value; OnPropertyChangedByClr(nameof(Form), value); } }

        private CodeableConcept? _formCode;
        [JsonPropertyName("formCode")]
        public CodeableConcept? FormCode { get => _formCode; set { _formCode = value; OnPropertyChangedByClr(nameof(FormCode), value); } }

        private CodeableConcept? _fundsReserve;
        [JsonPropertyName("fundsReserve")]
        public CodeableConcept? FundsReserve { get => _fundsReserve; set { _fundsReserve = value; OnPropertyChangedByClr(nameof(FundsReserve), value); } }

        private CodeableConcept? _fundsReserveRequested;
        [JsonPropertyName("fundsReserveRequested")]
        public CodeableConcept? FundsReserveRequested { get => _fundsReserveRequested; set { _fundsReserveRequested = value; OnPropertyChangedByClr(nameof(FundsReserveRequested), value); } }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private List<ExplanationOfBenefit_Insurance>? _insurance;
        [JsonPropertyName("insurance")]
        public List<ExplanationOfBenefit_Insurance>? Insurance { get => _insurance; set { _insurance = value; OnPropertyChangedByClr(nameof(Insurance), value); } }

        /// <summary>
        /// Patient insurance information
        /// </summary>
        public partial class ExplanationOfBenefit_Insurance : BackboneElement<ExplanationOfBenefit_Insurance>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ExplanationOfBenefit_Insurance" : "explanationOfBenefit_Insurance";
            private ReferenceType? _coverage;
        [JsonPropertyName("coverage")]
        public ReferenceType Coverage { get => _coverage ?? throw new InvalidOperationException("Coverage is required"); set { _coverage = value; } }

            private FhirBoolean? _focal;
        [JsonPropertyName("focal")]
        public FhirBoolean Focal { get => _focal ?? throw new InvalidOperationException("Focal is required"); set { _focal = value; } }

            private List<FhirString>? _preAuthRef;
        [JsonPropertyName("preAuthRef")]
        public List<FhirString>? PreAuthRef { get => _preAuthRef; set { _preAuthRef = value; } }

        }

        private ReferenceType? _insurer;
        [JsonPropertyName("insurer")]
        public ReferenceType? Insurer { get => _insurer; set { _insurer = value; OnPropertyChangedByClr(nameof(Insurer), value); } }

        private List<ExplanationOfBenefit_Item>? _item;
        [JsonPropertyName("item")]
        public List<ExplanationOfBenefit_Item>? Item { get => _item; set { _item = value; OnPropertyChangedByClr(nameof(Item), value); } }

        /// <summary>
        /// Product or service provided
        /// </summary>
        public partial class ExplanationOfBenefit_Item : BackboneElement<ExplanationOfBenefit_Item>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ExplanationOfBenefit_Item" : "explanationOfBenefit_Item";
            private List<ExplanationOfBenefit_Item_Adjudication>? _adjudication;
        [JsonPropertyName("adjudication")]
        public List<ExplanationOfBenefit_Item_Adjudication>? Adjudication { get => _adjudication; set { _adjudication = value; } }

            /// <summary>
            /// Adjudication details
            /// </summary>
            public partial class ExplanationOfBenefit_Item_Adjudication : BackboneElement<ExplanationOfBenefit_Item_Adjudication>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ExplanationOfBenefit_Item_Adjudication" : "explanationOfBenefit_Item_Adjudication";
                private Money? _amount;
        [JsonPropertyName("amount")]
        public Money? Amount { get => _amount; set { _amount = value; } }

                private CodeableConcept? _category;
        [JsonPropertyName("category")]
        public CodeableConcept Category { get => _category ?? throw new InvalidOperationException("Category is required"); set { _category = value; } }

                private Quantity? _quantity;
        [JsonPropertyName("quantity")]
        public Quantity? Quantity { get => _quantity; set { _quantity = value; } }

                private CodeableConcept? _reason;
        [JsonPropertyName("reason")]
        public CodeableConcept? Reason { get => _reason; set { _reason = value; } }

            }

            private List<ExplanationOfBenefit_Item_BodySite>? _bodySite;
        [JsonPropertyName("bodySite")]
        public List<ExplanationOfBenefit_Item_BodySite>? BodySite { get => _bodySite; set { _bodySite = value; } }

            /// <summary>
            /// Anatomical location
            /// </summary>
            public partial class ExplanationOfBenefit_Item_BodySite : BackboneElement<ExplanationOfBenefit_Item_BodySite>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ExplanationOfBenefit_Item_BodySite" : "explanationOfBenefit_Item_BodySite";
                private List<CodeableReference> _site = new();
        [JsonPropertyName("site")]
        public List<CodeableReference> Site { get => _site; set { _site = value; } }

                private List<CodeableConcept>? _subSite;
        [JsonPropertyName("subSite")]
        public List<CodeableConcept>? SubSite { get => _subSite; set { _subSite = value; } }

            }

            private List<FhirPositiveInt>? _careTeamSequence;
        [JsonPropertyName("careTeamSequence")]
        public List<FhirPositiveInt>? CareTeamSequence { get => _careTeamSequence; set { _careTeamSequence = value; } }

            private CodeableConcept? _category;
        [JsonPropertyName("category")]
        public CodeableConcept? Category { get => _category; set { _category = value; } }

            private List<ExplanationOfBenefit_Item_Detail>? _detail;
        [JsonPropertyName("detail")]
        public List<ExplanationOfBenefit_Item_Detail>? Detail { get => _detail; set { _detail = value; } }

            /// <summary>
            /// Additional items
            /// </summary>
            public partial class ExplanationOfBenefit_Item_Detail : BackboneElement<ExplanationOfBenefit_Item_Detail>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ExplanationOfBenefit_Item_Detail" : "explanationOfBenefit_Item_Detail";
                private List<FhirString>? _adjudication;
        [JsonPropertyName("adjudication")]
        public List<FhirString>? Adjudication { get => _adjudication; set { _adjudication = value; } }

                private CodeableConcept? _category;
        [JsonPropertyName("category")]
        public CodeableConcept? Category { get => _category; set { _category = value; } }

                private FhirDecimal? _factor;
        [JsonPropertyName("factor")]
        public FhirDecimal? Factor { get => _factor; set { _factor = value; } }

                private List<CodeableConcept>? _modifier;
        [JsonPropertyName("modifier")]
        public List<CodeableConcept>? Modifier { get => _modifier; set { _modifier = value; } }

                private Money? _net;
        [JsonPropertyName("net")]
        public Money? Net { get => _net; set { _net = value; } }

                private List<FhirPositiveInt>? _noteNumber;
        [JsonPropertyName("noteNumber")]
        public List<FhirPositiveInt>? NoteNumber { get => _noteNumber; set { _noteNumber = value; } }

                private Money? _patientPaid;
        [JsonPropertyName("patientPaid")]
        public Money? PatientPaid { get => _patientPaid; set { _patientPaid = value; } }

                private CodeableConcept? _productOrService;
        [JsonPropertyName("productOrService")]
        public CodeableConcept? ProductOrService { get => _productOrService; set { _productOrService = value; } }

                private CodeableConcept? _productOrServiceEnd;
        [JsonPropertyName("productOrServiceEnd")]
        public CodeableConcept? ProductOrServiceEnd { get => _productOrServiceEnd; set { _productOrServiceEnd = value; } }

                private List<CodeableConcept>? _programCode;
        [JsonPropertyName("programCode")]
        public List<CodeableConcept>? ProgramCode { get => _programCode; set { _programCode = value; } }

                private Quantity? _quantity;
        [JsonPropertyName("quantity")]
        public Quantity? Quantity { get => _quantity; set { _quantity = value; } }

                private CodeableConcept? _revenue;
        [JsonPropertyName("revenue")]
        public CodeableConcept? Revenue { get => _revenue; set { _revenue = value; } }

                private FhirString? _reviewOutcome;
        [JsonPropertyName("reviewOutcome")]
        public FhirString? ReviewOutcome { get => _reviewOutcome; set { _reviewOutcome = value; } }

                private FhirPositiveInt? _sequence;
        [JsonPropertyName("sequence")]
        public FhirPositiveInt Sequence { get => _sequence ?? throw new InvalidOperationException("Sequence is required"); set { _sequence = value; } }

                private List<ExplanationOfBenefit_Item_Detail_SubDetail>? _subDetail;
        [JsonPropertyName("subDetail")]
        public List<ExplanationOfBenefit_Item_Detail_SubDetail>? SubDetail { get => _subDetail; set { _subDetail = value; } }

                /// <summary>
                /// Additional items
                /// </summary>
                public partial class ExplanationOfBenefit_Item_Detail_SubDetail : BackboneElement<ExplanationOfBenefit_Item_Detail_SubDetail>
                {
                    public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ExplanationOfBenefit_Item_Detail_SubDetail" : "explanationOfBenefit_Item_Detail_SubDetail";
                    private List<FhirString>? _adjudication;
        [JsonPropertyName("adjudication")]
        public List<FhirString>? Adjudication { get => _adjudication; set { _adjudication = value; } }

                    private CodeableConcept? _category;
        [JsonPropertyName("category")]
        public CodeableConcept? Category { get => _category; set { _category = value; } }

                    private FhirDecimal? _factor;
        [JsonPropertyName("factor")]
        public FhirDecimal? Factor { get => _factor; set { _factor = value; } }

                    private List<CodeableConcept>? _modifier;
        [JsonPropertyName("modifier")]
        public List<CodeableConcept>? Modifier { get => _modifier; set { _modifier = value; } }

                    private Money? _net;
        [JsonPropertyName("net")]
        public Money? Net { get => _net; set { _net = value; } }

                    private List<FhirPositiveInt>? _noteNumber;
        [JsonPropertyName("noteNumber")]
        public List<FhirPositiveInt>? NoteNumber { get => _noteNumber; set { _noteNumber = value; } }

                    private Money? _patientPaid;
        [JsonPropertyName("patientPaid")]
        public Money? PatientPaid { get => _patientPaid; set { _patientPaid = value; } }

                    private CodeableConcept? _productOrService;
        [JsonPropertyName("productOrService")]
        public CodeableConcept? ProductOrService { get => _productOrService; set { _productOrService = value; } }

                    private CodeableConcept? _productOrServiceEnd;
        [JsonPropertyName("productOrServiceEnd")]
        public CodeableConcept? ProductOrServiceEnd { get => _productOrServiceEnd; set { _productOrServiceEnd = value; } }

                    private List<CodeableConcept>? _programCode;
        [JsonPropertyName("programCode")]
        public List<CodeableConcept>? ProgramCode { get => _programCode; set { _programCode = value; } }

                    private Quantity? _quantity;
        [JsonPropertyName("quantity")]
        public Quantity? Quantity { get => _quantity; set { _quantity = value; } }

                    private CodeableConcept? _revenue;
        [JsonPropertyName("revenue")]
        public CodeableConcept? Revenue { get => _revenue; set { _revenue = value; } }

                    private FhirString? _reviewOutcome;
        [JsonPropertyName("reviewOutcome")]
        public FhirString? ReviewOutcome { get => _reviewOutcome; set { _reviewOutcome = value; } }

                    private FhirPositiveInt? _sequence;
        [JsonPropertyName("sequence")]
        public FhirPositiveInt Sequence { get => _sequence ?? throw new InvalidOperationException("Sequence is required"); set { _sequence = value; } }

                    private Money? _tax;
        [JsonPropertyName("tax")]
        public Money? Tax { get => _tax; set { _tax = value; } }

                    private List<Identifier>? _traceNumber;
        [JsonPropertyName("traceNumber")]
        public List<Identifier>? TraceNumber { get => _traceNumber; set { _traceNumber = value; } }

                    private List<ReferenceType>? _udi;
        [JsonPropertyName("udi")]
        public List<ReferenceType>? Udi { get => _udi; set { _udi = value; } }

                    private Money? _unitPrice;
        [JsonPropertyName("unitPrice")]
        public Money? UnitPrice { get => _unitPrice; set { _unitPrice = value; } }

                }

                private Money? _tax;
        [JsonPropertyName("tax")]
        public Money? Tax { get => _tax; set { _tax = value; } }

                private List<Identifier>? _traceNumber;
        [JsonPropertyName("traceNumber")]
        public List<Identifier>? TraceNumber { get => _traceNumber; set { _traceNumber = value; } }

                private List<ReferenceType>? _udi;
        [JsonPropertyName("udi")]
        public List<ReferenceType>? Udi { get => _udi; set { _udi = value; } }

                private Money? _unitPrice;
        [JsonPropertyName("unitPrice")]
        public Money? UnitPrice { get => _unitPrice; set { _unitPrice = value; } }

            }

            private List<FhirPositiveInt>? _diagnosisSequence;
        [JsonPropertyName("diagnosisSequence")]
        public List<FhirPositiveInt>? DiagnosisSequence { get => _diagnosisSequence; set { _diagnosisSequence = value; } }

            private List<ReferenceType>? _encounter;
        [JsonPropertyName("encounter")]
        public List<ReferenceType>? Encounter { get => _encounter; set { _encounter = value; } }

            private FhirDecimal? _factor;
        [JsonPropertyName("factor")]
        public FhirDecimal? Factor { get => _factor; set { _factor = value; } }

            private List<FhirPositiveInt>? _informationSequence;
        [JsonPropertyName("informationSequence")]
        public List<FhirPositiveInt>? InformationSequence { get => _informationSequence; set { _informationSequence = value; } }

            private CodeableConcept? _locationCodeableConcept;
        [JsonPropertyName("locationCodeableConcept")]
        public CodeableConcept? LocationCodeableConcept { get => _locationCodeableConcept; set { _locationCodeableConcept = value; if (value != null) {{ _locationAddress = null; OnPropertyChanged("locationAddress", null); _locationReference = null; OnPropertyChanged("locationReference", null); }}; OnPropertyChanged("locationCodeableConcept", value); } }

            private Address? _locationAddress;
        [JsonPropertyName("locationAddress")]
        public Address? LocationAddress { get => _locationAddress; set { _locationAddress = value; if (value != null) {{ _locationCodeableConcept = null; OnPropertyChanged("locationCodeableConcept", null); _locationReference = null; OnPropertyChanged("locationReference", null); }}; OnPropertyChanged("locationAddress", value); } }

            private ReferenceType? _locationReference;
        [JsonPropertyName("locationReference")]
        public ReferenceType? LocationReference { get => _locationReference; set { _locationReference = value; if (value != null) {{ _locationCodeableConcept = null; OnPropertyChanged("locationCodeableConcept", null); _locationAddress = null; OnPropertyChanged("locationAddress", null); }}; OnPropertyChanged("locationReference", value); } }

            private List<CodeableConcept>? _modifier;
        [JsonPropertyName("modifier")]
        public List<CodeableConcept>? Modifier { get => _modifier; set { _modifier = value; } }

            private Money? _net;
        [JsonPropertyName("net")]
        public Money? Net { get => _net; set { _net = value; } }

            private List<FhirPositiveInt>? _noteNumber;
        [JsonPropertyName("noteNumber")]
        public List<FhirPositiveInt>? NoteNumber { get => _noteNumber; set { _noteNumber = value; } }

            private Money? _patientPaid;
        [JsonPropertyName("patientPaid")]
        public Money? PatientPaid { get => _patientPaid; set { _patientPaid = value; } }

            private List<FhirPositiveInt>? _procedureSequence;
        [JsonPropertyName("procedureSequence")]
        public List<FhirPositiveInt>? ProcedureSequence { get => _procedureSequence; set { _procedureSequence = value; } }

            private CodeableConcept? _productOrService;
        [JsonPropertyName("productOrService")]
        public CodeableConcept? ProductOrService { get => _productOrService; set { _productOrService = value; } }

            private CodeableConcept? _productOrServiceEnd;
        [JsonPropertyName("productOrServiceEnd")]
        public CodeableConcept? ProductOrServiceEnd { get => _productOrServiceEnd; set { _productOrServiceEnd = value; } }

            private List<CodeableConcept>? _programCode;
        [JsonPropertyName("programCode")]
        public List<CodeableConcept>? ProgramCode { get => _programCode; set { _programCode = value; } }

            private Quantity? _quantity;
        [JsonPropertyName("quantity")]
        public Quantity? Quantity { get => _quantity; set { _quantity = value; } }

            private List<ReferenceType>? _request;
        [JsonPropertyName("request")]
        public List<ReferenceType>? Request { get => _request; set { _request = value; } }

            private CodeableConcept? _revenue;
        [JsonPropertyName("revenue")]
        public CodeableConcept? Revenue { get => _revenue; set { _revenue = value; } }

            private ExplanationOfBenefit_Item_ReviewOutcome? _reviewOutcome;
        [JsonPropertyName("reviewOutcome")]
        public ExplanationOfBenefit_Item_ReviewOutcome? ReviewOutcome { get => _reviewOutcome; set { _reviewOutcome = value; } }

            /// <summary>
            /// Adjudication results
            /// </summary>
            public partial class ExplanationOfBenefit_Item_ReviewOutcome : BackboneElement<ExplanationOfBenefit_Item_ReviewOutcome>
            {
                public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ExplanationOfBenefit_Item_ReviewOutcome" : "explanationOfBenefit_Item_ReviewOutcome";
                private CodeableConcept? _decision;
        [JsonPropertyName("decision")]
        public CodeableConcept? Decision { get => _decision; set { _decision = value; } }

                private Period? _preAuthPeriod;
        [JsonPropertyName("preAuthPeriod")]
        public Period? PreAuthPeriod { get => _preAuthPeriod; set { _preAuthPeriod = value; } }

                private FhirString? _preAuthRef;
        [JsonPropertyName("preAuthRef")]
        public FhirString? PreAuthRef { get => _preAuthRef; set { _preAuthRef = value; } }

                private List<CodeableConcept>? _reason;
        [JsonPropertyName("reason")]
        public List<CodeableConcept>? Reason { get => _reason; set { _reason = value; } }

            }

            private FhirPositiveInt? _sequence;
        [JsonPropertyName("sequence")]
        public FhirPositiveInt Sequence { get => _sequence ?? throw new InvalidOperationException("Sequence is required"); set { _sequence = value; } }

            private FhirDate? _serviceddate;
        [JsonPropertyName("serviceddate")]
        public FhirDate? Serviceddate { get => _serviceddate; set { _serviceddate = value; if (value != null) {{ _servicedPeriod = null; OnPropertyChanged("servicedPeriod", null); }}; OnPropertyChanged("serviceddate", value); } }

            private Period? _servicedPeriod;
        [JsonPropertyName("servicedPeriod")]
        public Period? ServicedPeriod { get => _servicedPeriod; set { _servicedPeriod = value; if (value != null) {{ _serviceddate = null; OnPropertyChanged("serviceddate", null); }}; OnPropertyChanged("servicedPeriod", value); } }

            private Money? _tax;
        [JsonPropertyName("tax")]
        public Money? Tax { get => _tax; set { _tax = value; } }

            private List<Identifier>? _traceNumber;
        [JsonPropertyName("traceNumber")]
        public List<Identifier>? TraceNumber { get => _traceNumber; set { _traceNumber = value; } }

            private List<ReferenceType>? _udi;
        [JsonPropertyName("udi")]
        public List<ReferenceType>? Udi { get => _udi; set { _udi = value; } }

            private Money? _unitPrice;
        [JsonPropertyName("unitPrice")]
        public Money? UnitPrice { get => _unitPrice; set { _unitPrice = value; } }

        }

        private ReferenceType? _originalPrescription;
        [JsonPropertyName("originalPrescription")]
        public ReferenceType? OriginalPrescription { get => _originalPrescription; set { _originalPrescription = value; OnPropertyChangedByClr(nameof(OriginalPrescription), value); } }

        private FhirCode? _outcome;
        [JsonPropertyName("outcome")]
        public FhirCode Outcome { get => _outcome ?? throw new InvalidOperationException("Outcome is required"); set { _outcome = value; OnPropertyChangedByClr(nameof(Outcome), value); } }

        private ReferenceType? _patient;
        [JsonPropertyName("patient")]
        public ReferenceType Patient { get => _patient ?? throw new InvalidOperationException("Patient is required"); set { _patient = value; OnPropertyChangedByClr(nameof(Patient), value); } }

        private Money? _patientPaid;
        [JsonPropertyName("patientPaid")]
        public Money? PatientPaid { get => _patientPaid; set { _patientPaid = value; OnPropertyChangedByClr(nameof(PatientPaid), value); } }

        private ExplanationOfBenefit_Payee? _payee;
        [JsonPropertyName("payee")]
        public ExplanationOfBenefit_Payee? Payee { get => _payee; set { _payee = value; OnPropertyChangedByClr(nameof(Payee), value); } }

        /// <summary>
        /// Recipient of benefits payable
        /// </summary>
        public partial class ExplanationOfBenefit_Payee : BackboneElement<ExplanationOfBenefit_Payee>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ExplanationOfBenefit_Payee" : "explanationOfBenefit_Payee";
            private ReferenceType? _party;
        [JsonPropertyName("party")]
        public ReferenceType? Party { get => _party; set { _party = value; } }

            private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept? Type { get => _type; set { _type = value; } }

        }

        private ExplanationOfBenefit_Payment? _payment;
        [JsonPropertyName("payment")]
        public ExplanationOfBenefit_Payment? Payment { get => _payment; set { _payment = value; OnPropertyChangedByClr(nameof(Payment), value); } }

        /// <summary>
        /// Payment Details
        /// </summary>
        public partial class ExplanationOfBenefit_Payment : BackboneElement<ExplanationOfBenefit_Payment>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ExplanationOfBenefit_Payment" : "explanationOfBenefit_Payment";
            private Money? _adjustment;
        [JsonPropertyName("adjustment")]
        public Money? Adjustment { get => _adjustment; set { _adjustment = value; } }

            private CodeableConcept? _adjustmentReason;
        [JsonPropertyName("adjustmentReason")]
        public CodeableConcept? AdjustmentReason { get => _adjustmentReason; set { _adjustmentReason = value; } }

            private Money? _amount;
        [JsonPropertyName("amount")]
        public Money? Amount { get => _amount; set { _amount = value; } }

            private FhirDate? _date;
        [JsonPropertyName("date")]
        public FhirDate? Date { get => _date; set { _date = value; } }

            private Identifier? _identifier;
        [JsonPropertyName("identifier")]
        public Identifier? Identifier { get => _identifier; set { _identifier = value; } }

            private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept? Type { get => _type; set { _type = value; } }

        }

        private List<FhirString>? _preAuthRef;
        [JsonPropertyName("preAuthRef")]
        public List<FhirString>? PreAuthRef { get => _preAuthRef; set { _preAuthRef = value; OnPropertyChangedByClr(nameof(PreAuthRef), value); } }

        private List<Period>? _preAuthRefPeriod;
        [JsonPropertyName("preAuthRefPeriod")]
        public List<Period>? PreAuthRefPeriod { get => _preAuthRefPeriod; set { _preAuthRefPeriod = value; OnPropertyChangedByClr(nameof(PreAuthRefPeriod), value); } }

        private FhirPositiveInt? _precedence;
        [JsonPropertyName("precedence")]
        public FhirPositiveInt? Precedence { get => _precedence; set { _precedence = value; OnPropertyChangedByClr(nameof(Precedence), value); } }

        private ReferenceType? _prescription;
        [JsonPropertyName("prescription")]
        public ReferenceType? Prescription { get => _prescription; set { _prescription = value; OnPropertyChangedByClr(nameof(Prescription), value); } }

        private CodeableConcept? _priority;
        [JsonPropertyName("priority")]
        public CodeableConcept? Priority { get => _priority; set { _priority = value; OnPropertyChangedByClr(nameof(Priority), value); } }

        private List<ExplanationOfBenefit_Procedure>? _procedure;
        [JsonPropertyName("procedure")]
        public List<ExplanationOfBenefit_Procedure>? Procedure { get => _procedure; set { _procedure = value; OnPropertyChangedByClr(nameof(Procedure), value); } }

        /// <summary>
        /// Clinical procedures performed
        /// </summary>
        public partial class ExplanationOfBenefit_Procedure : BackboneElement<ExplanationOfBenefit_Procedure>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ExplanationOfBenefit_Procedure" : "explanationOfBenefit_Procedure";
            private FhirDateTime? _date;
        [JsonPropertyName("date")]
        public FhirDateTime? Date { get => _date; set { _date = value; } }

            private CodeableConcept? _procedureCodeableConcept;
        [JsonPropertyName("procedureCodeableConcept")]
        public CodeableConcept? ProcedureCodeableConcept { get => _procedureCodeableConcept; set { _procedureCodeableConcept = value; if (value != null) {{ _procedureReference = null; OnPropertyChanged("procedureReference", null); }}; OnPropertyChanged("procedureCodeableConcept", value); } }

            private ReferenceType? _procedureReference;
        [JsonPropertyName("procedureReference")]
        public ReferenceType? ProcedureReference { get => _procedureReference; set { _procedureReference = value; if (value != null) {{ _procedureCodeableConcept = null; OnPropertyChanged("procedureCodeableConcept", null); }}; OnPropertyChanged("procedureReference", value); } }

            private FhirPositiveInt? _sequence;
        [JsonPropertyName("sequence")]
        public FhirPositiveInt Sequence { get => _sequence ?? throw new InvalidOperationException("Sequence is required"); set { _sequence = value; } }

            private List<CodeableConcept>? _type;
        [JsonPropertyName("type")]
        public List<CodeableConcept>? Type { get => _type; set { _type = value; } }

            private List<ReferenceType>? _udi;
        [JsonPropertyName("udi")]
        public List<ReferenceType>? Udi { get => _udi; set { _udi = value; } }

        }

        private List<ExplanationOfBenefit_ProcessNote>? _processNote;
        [JsonPropertyName("processNote")]
        public List<ExplanationOfBenefit_ProcessNote>? ProcessNote { get => _processNote; set { _processNote = value; OnPropertyChangedByClr(nameof(ProcessNote), value); } }

        /// <summary>
        /// Note concerning adjudication
        /// </summary>
        public partial class ExplanationOfBenefit_ProcessNote : BackboneElement<ExplanationOfBenefit_ProcessNote>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ExplanationOfBenefit_ProcessNote" : "explanationOfBenefit_ProcessNote";
            private CodeableConcept? _language;
        [JsonPropertyName("language")]
        public CodeableConcept? Language { get => _language; set { _language = value; } }

            private FhirPositiveInt? _number;
        [JsonPropertyName("number")]
        public FhirPositiveInt? Number { get => _number; set { _number = value; } }

            private FhirString? _text;
        [JsonPropertyName("text")]
        public FhirString? Text { get => _text; set { _text = value; } }

            private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept? Type { get => _type; set { _type = value; } }

        }

        private ReferenceType? _provider;
        [JsonPropertyName("provider")]
        public ReferenceType? Provider { get => _provider; set { _provider = value; OnPropertyChangedByClr(nameof(Provider), value); } }

        private ReferenceType? _referral;
        [JsonPropertyName("referral")]
        public ReferenceType? Referral { get => _referral; set { _referral = value; OnPropertyChangedByClr(nameof(Referral), value); } }

        private List<ExplanationOfBenefit_Related>? _related;
        [JsonPropertyName("related")]
        public List<ExplanationOfBenefit_Related>? Related { get => _related; set { _related = value; OnPropertyChangedByClr(nameof(Related), value); } }

        /// <summary>
        /// Prior or corollary claims
        /// </summary>
        public partial class ExplanationOfBenefit_Related : BackboneElement<ExplanationOfBenefit_Related>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ExplanationOfBenefit_Related" : "explanationOfBenefit_Related";
            private ReferenceType? _claim;
        [JsonPropertyName("claim")]
        public ReferenceType? Claim { get => _claim; set { _claim = value; } }

            private Identifier? _reference;
        [JsonPropertyName("reference")]
        public Identifier? Reference { get => _reference; set { _reference = value; } }

            private CodeableConcept? _relationship;
        [JsonPropertyName("relationship")]
        public CodeableConcept? Relationship { get => _relationship; set { _relationship = value; } }

        }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode Status { get => _status ?? throw new InvalidOperationException("Status is required"); set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private CodeableConcept? _subType;
        [JsonPropertyName("subType")]
        public CodeableConcept? SubType { get => _subType; set { _subType = value; OnPropertyChangedByClr(nameof(SubType), value); } }

        private List<ExplanationOfBenefit_SupportingInfo>? _supportingInfo;
        [JsonPropertyName("supportingInfo")]
        public List<ExplanationOfBenefit_SupportingInfo>? SupportingInfo { get => _supportingInfo; set { _supportingInfo = value; OnPropertyChangedByClr(nameof(SupportingInfo), value); } }

        /// <summary>
        /// Supporting information
        /// </summary>
        public partial class ExplanationOfBenefit_SupportingInfo : BackboneElement<ExplanationOfBenefit_SupportingInfo>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ExplanationOfBenefit_SupportingInfo" : "explanationOfBenefit_SupportingInfo";
            private CodeableConcept? _category;
        [JsonPropertyName("category")]
        public CodeableConcept Category { get => _category ?? throw new InvalidOperationException("Category is required"); set { _category = value; } }

            private CodeableConcept? _code;
        [JsonPropertyName("code")]
        public CodeableConcept? Code { get => _code; set { _code = value; } }

            private Coding? _reason;
        [JsonPropertyName("reason")]
        public Coding? Reason { get => _reason; set { _reason = value; } }

            private FhirPositiveInt? _sequence;
        [JsonPropertyName("sequence")]
        public FhirPositiveInt Sequence { get => _sequence ?? throw new InvalidOperationException("Sequence is required"); set { _sequence = value; } }

            private FhirDate? _timingdate;
        [JsonPropertyName("timingdate")]
        public FhirDate? Timingdate { get => _timingdate; set { _timingdate = value; if (value != null) {{ _timingPeriod = null; OnPropertyChanged("timingPeriod", null); }}; OnPropertyChanged("timingdate", value); } }

            private Period? _timingPeriod;
        [JsonPropertyName("timingPeriod")]
        public Period? TimingPeriod { get => _timingPeriod; set { _timingPeriod = value; if (value != null) {{ _timingdate = null; OnPropertyChanged("timingdate", null); }}; OnPropertyChanged("timingPeriod", value); } }

            private FhirBoolean? _valueBoolean;
        [JsonPropertyName("valueBoolean")]
        public FhirBoolean? ValueBoolean { get => _valueBoolean; set { _valueBoolean = value; if (value != null) {{ _valueString = null; OnPropertyChanged("valueString", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueAttachment = null; OnPropertyChanged("valueAttachment", null); _valueReference = null; OnPropertyChanged("valueReference", null); _valueIdentifier = null; OnPropertyChanged("valueIdentifier", null); }}; OnPropertyChanged("valueBoolean", value); } }

            private FhirString? _valueString;
        [JsonPropertyName("valueString")]
        public FhirString? ValueString { get => _valueString; set { _valueString = value; if (value != null) {{ _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueAttachment = null; OnPropertyChanged("valueAttachment", null); _valueReference = null; OnPropertyChanged("valueReference", null); _valueIdentifier = null; OnPropertyChanged("valueIdentifier", null); }}; OnPropertyChanged("valueString", value); } }

            private Quantity? _valueQuantity;
        [JsonPropertyName("valueQuantity")]
        public Quantity? ValueQuantity { get => _valueQuantity; set { _valueQuantity = value; if (value != null) {{ _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueString = null; OnPropertyChanged("valueString", null); _valueAttachment = null; OnPropertyChanged("valueAttachment", null); _valueReference = null; OnPropertyChanged("valueReference", null); _valueIdentifier = null; OnPropertyChanged("valueIdentifier", null); }}; OnPropertyChanged("valueQuantity", value); } }

            private Attachment? _valueAttachment;
        [JsonPropertyName("valueAttachment")]
        public Attachment? ValueAttachment { get => _valueAttachment; set { _valueAttachment = value; if (value != null) {{ _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueString = null; OnPropertyChanged("valueString", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueReference = null; OnPropertyChanged("valueReference", null); _valueIdentifier = null; OnPropertyChanged("valueIdentifier", null); }}; OnPropertyChanged("valueAttachment", value); } }

            private ReferenceType? _valueReference;
        [JsonPropertyName("valueReference")]
        public ReferenceType? ValueReference { get => _valueReference; set { _valueReference = value; if (value != null) {{ _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueString = null; OnPropertyChanged("valueString", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueAttachment = null; OnPropertyChanged("valueAttachment", null); _valueIdentifier = null; OnPropertyChanged("valueIdentifier", null); }}; OnPropertyChanged("valueReference", value); } }

            private Identifier? _valueIdentifier;
        [JsonPropertyName("valueIdentifier")]
        public Identifier? ValueIdentifier { get => _valueIdentifier; set { _valueIdentifier = value; if (value != null) {{ _valueBoolean = null; OnPropertyChanged("valueBoolean", null); _valueString = null; OnPropertyChanged("valueString", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueAttachment = null; OnPropertyChanged("valueAttachment", null); _valueReference = null; OnPropertyChanged("valueReference", null); }}; OnPropertyChanged("valueIdentifier", value); } }

        }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

        private List<ExplanationOfBenefit_Total>? _total;
        [JsonPropertyName("total")]
        public List<ExplanationOfBenefit_Total>? Total { get => _total; set { _total = value; OnPropertyChangedByClr(nameof(Total), value); } }

        /// <summary>
        /// Adjudication totals
        /// </summary>
        public partial class ExplanationOfBenefit_Total : BackboneElement<ExplanationOfBenefit_Total>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "ExplanationOfBenefit_Total" : "explanationOfBenefit_Total";
            private Money? _amount;
        [JsonPropertyName("amount")]
        public Money Amount { get => _amount ?? throw new InvalidOperationException("Amount is required"); set { _amount = value; } }

            private CodeableConcept? _category;
        [JsonPropertyName("category")]
        public CodeableConcept Category { get => _category ?? throw new InvalidOperationException("Category is required"); set { _category = value; } }

        }

        private List<Identifier>? _traceNumber;
        [JsonPropertyName("traceNumber")]
        public List<Identifier>? TraceNumber { get => _traceNumber; set { _traceNumber = value; OnPropertyChangedByClr(nameof(TraceNumber), value); } }

        private CodeableConcept? _type;
        [JsonPropertyName("type")]
        public CodeableConcept Type { get => _type ?? throw new InvalidOperationException("Type is required"); set { _type = value; OnPropertyChangedByClr(nameof(Type), value); } }

        private FhirCode? _use;
        [JsonPropertyName("use")]
        public FhirCode Use { get => _use ?? throw new InvalidOperationException("Use is required"); set { _use = value; OnPropertyChangedByClr(nameof(Use), value); } }

    }
}
