// <auto-generated>
#nullable enable
using DataTypeServices.DataTypes.PrimitiveTypes;
using DataTypeServices.DataTypes.ComplexTypes;
using DataTypeServices.DataTypes.SpecialTypes;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;
using System.Linq;
using FhirCore.Base;
using DataTypeServices.TypeFramework;
using DataTypeServices.DataTypes.MetaTypes;
namespace FhirSDK.Resources.R5
{
    /// <summary>
    /// Medical device request
    /// </summary>
    public partial class DeviceRequest : ResourceBase
    {
        public override string ResourceType => "DeviceRequest";

        public DeviceRequest() { }
        public DeviceRequest(string json) { SetRawFrom(JsonNode.Parse(json)); }
        public DeviceRequest(JsonNode? source) { SetRawFrom(source); }
        protected override void OnPropertyChanged(string propertyName, object? newValue) { base.OnPropertyChanged(propertyName, newValue); }

        private FhirBoolean? _asNeeded;
        [JsonPropertyName("asNeeded")]
        public FhirBoolean? AsNeeded { get => _asNeeded; set { _asNeeded = value; OnPropertyChangedByClr(nameof(AsNeeded), value); } }

        private CodeableConcept? _asNeededFor;
        [JsonPropertyName("asNeededFor")]
        public CodeableConcept? AsNeededFor { get => _asNeededFor; set { _asNeededFor = value; OnPropertyChangedByClr(nameof(AsNeededFor), value); } }

        private FhirDateTime? _authoredOn;
        [JsonPropertyName("authoredOn")]
        public FhirDateTime? AuthoredOn { get => _authoredOn; set { _authoredOn = value; OnPropertyChangedByClr(nameof(AuthoredOn), value); } }

        private List<ReferenceType>? _basedOn;
        [JsonPropertyName("basedOn")]
        public List<ReferenceType>? BasedOn { get => _basedOn; set { _basedOn = value; OnPropertyChangedByClr(nameof(BasedOn), value); } }

        private CodeableReference? _code;
        [JsonPropertyName("code")]
        public CodeableReference Code { get => _code ?? throw new InvalidOperationException("Code is required"); set { _code = value; OnPropertyChangedByClr(nameof(Code), value); } }

        private List<Resource>? _contained;
        [JsonPropertyName("contained")]
        public List<Resource>? Contained { get => _contained; set { _contained = value; OnPropertyChangedByClr(nameof(Contained), value); } }

        private FhirBoolean? _doNotPerform;
        [JsonPropertyName("doNotPerform")]
        public FhirBoolean? DoNotPerform { get => _doNotPerform; set { _doNotPerform = value; OnPropertyChangedByClr(nameof(DoNotPerform), value); } }

        private ReferenceType? _encounter;
        [JsonPropertyName("encounter")]
        public ReferenceType? Encounter { get => _encounter; set { _encounter = value; OnPropertyChangedByClr(nameof(Encounter), value); } }

        private Identifier? _groupIdentifier;
        [JsonPropertyName("groupIdentifier")]
        public Identifier? GroupIdentifier { get => _groupIdentifier; set { _groupIdentifier = value; OnPropertyChangedByClr(nameof(GroupIdentifier), value); } }

        private List<Identifier>? _identifier;
        [JsonPropertyName("identifier")]
        public List<Identifier>? Identifier { get => _identifier; set { _identifier = value; OnPropertyChangedByClr(nameof(Identifier), value); } }

        private List<FhirCanonical>? _instantiatesCanonical;
        [JsonPropertyName("instantiatesCanonical")]
        public List<FhirCanonical>? InstantiatesCanonical { get => _instantiatesCanonical; set { _instantiatesCanonical = value; OnPropertyChangedByClr(nameof(InstantiatesCanonical), value); } }

        private List<FhirUri>? _instantiatesUri;
        [JsonPropertyName("instantiatesUri")]
        public List<FhirUri>? InstantiatesUri { get => _instantiatesUri; set { _instantiatesUri = value; OnPropertyChangedByClr(nameof(InstantiatesUri), value); } }

        private List<ReferenceType>? _insurance;
        [JsonPropertyName("insurance")]
        public List<ReferenceType>? Insurance { get => _insurance; set { _insurance = value; OnPropertyChangedByClr(nameof(Insurance), value); } }

        private FhirCode? _intent;
        [JsonPropertyName("intent")]
        public FhirCode Intent { get => _intent ?? throw new InvalidOperationException("Intent is required"); set { _intent = value; OnPropertyChangedByClr(nameof(Intent), value); } }

        private List<Annotation>? _note;
        [JsonPropertyName("note")]
        public List<Annotation>? Note { get => _note; set { _note = value; OnPropertyChangedByClr(nameof(Note), value); } }

        private FhirDateTime? _occurrenceDateTime;
        [JsonPropertyName("occurrenceDateTime")]
        public FhirDateTime? OccurrenceDateTime { get => _occurrenceDateTime; set { _occurrenceDateTime = value; if (value != null) {{ _occurrencePeriod = null; OnPropertyChangedByClr(nameof(OccurrencePeriod), null); _occurrenceTiming = null; OnPropertyChangedByClr(nameof(OccurrenceTiming), null); }}; OnPropertyChangedByClr(nameof(OccurrenceDateTime), value); } }

        private Period? _occurrencePeriod;
        [JsonPropertyName("occurrencePeriod")]
        public Period? OccurrencePeriod { get => _occurrencePeriod; set { _occurrencePeriod = value; if (value != null) {{ _occurrenceDateTime = null; OnPropertyChangedByClr(nameof(OccurrenceDateTime), null); _occurrenceTiming = null; OnPropertyChangedByClr(nameof(OccurrenceTiming), null); }}; OnPropertyChangedByClr(nameof(OccurrencePeriod), value); } }

        private Timing? _occurrenceTiming;
        [JsonPropertyName("occurrenceTiming")]
        public Timing? OccurrenceTiming { get => _occurrenceTiming; set { _occurrenceTiming = value; if (value != null) {{ _occurrenceDateTime = null; OnPropertyChangedByClr(nameof(OccurrenceDateTime), null); _occurrencePeriod = null; OnPropertyChangedByClr(nameof(OccurrencePeriod), null); }}; OnPropertyChangedByClr(nameof(OccurrenceTiming), value); } }

        private List<DeviceRequest_Parameter>? _parameter;
        [JsonPropertyName("parameter")]
        public List<DeviceRequest_Parameter>? Parameter { get => _parameter; set { _parameter = value; OnPropertyChangedByClr(nameof(Parameter), value); } }

        /// <summary>
        /// Device details
        /// </summary>
        public partial class DeviceRequest_Parameter : BackboneElement<DeviceRequest_Parameter>
        {
            public override string GetFhirTypeName(bool withCapital = true) => withCapital ? "DeviceRequest_Parameter" : "deviceRequest_Parameter";
            private CodeableConcept? _code;
        [JsonPropertyName("code")]
        public CodeableConcept? Code { get => _code; set { _code = value; } }

            private CodeableConcept? _valueCodeableConcept;
        [JsonPropertyName("valueCodeableConcept")]
        public CodeableConcept? ValueCodeableConcept { get => _valueCodeableConcept; set { _valueCodeableConcept = value; if (value != null) {{ _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueRange = null; OnPropertyChanged("valueRange", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); }}; OnPropertyChanged("valueCodeableConcept", value); } }

            private Quantity? _valueQuantity;
        [JsonPropertyName("valueQuantity")]
        public Quantity? ValueQuantity { get => _valueQuantity; set { _valueQuantity = value; if (value != null) {{ _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueRange = null; OnPropertyChanged("valueRange", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); }}; OnPropertyChanged("valueQuantity", value); } }

            private DataTypeServices.DataTypes.ComplexTypes.Range? _valueRange;
        [JsonPropertyName("valueRange")]
        public DataTypeServices.DataTypes.ComplexTypes.Range? ValueRange { get => _valueRange; set { _valueRange = value; if (value != null) {{ _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueBoolean = null; OnPropertyChanged("valueBoolean", null); }}; OnPropertyChanged("valueRange", value); } }

            private FhirBoolean? _valueBoolean;
        [JsonPropertyName("valueBoolean")]
        public FhirBoolean? ValueBoolean { get => _valueBoolean; set { _valueBoolean = value; if (value != null) {{ _valueCodeableConcept = null; OnPropertyChanged("valueCodeableConcept", null); _valueQuantity = null; OnPropertyChanged("valueQuantity", null); _valueRange = null; OnPropertyChanged("valueRange", null); }}; OnPropertyChanged("valueBoolean", value); } }

        }

        private CodeableReference? _performer;
        [JsonPropertyName("performer")]
        public CodeableReference? Performer { get => _performer; set { _performer = value; OnPropertyChangedByClr(nameof(Performer), value); } }

        private FhirCode? _priority;
        [JsonPropertyName("priority")]
        public FhirCode? Priority { get => _priority; set { _priority = value; OnPropertyChangedByClr(nameof(Priority), value); } }

        private FhirInteger? _quantity;
        [JsonPropertyName("quantity")]
        public FhirInteger? Quantity { get => _quantity; set { _quantity = value; OnPropertyChangedByClr(nameof(Quantity), value); } }

        private List<CodeableReference>? _reason;
        [JsonPropertyName("reason")]
        public List<CodeableReference>? Reason { get => _reason; set { _reason = value; OnPropertyChangedByClr(nameof(Reason), value); } }

        private List<ReferenceType>? _relevantHistory;
        [JsonPropertyName("relevantHistory")]
        public List<ReferenceType>? RelevantHistory { get => _relevantHistory; set { _relevantHistory = value; OnPropertyChangedByClr(nameof(RelevantHistory), value); } }

        private List<ReferenceType>? _replaces;
        [JsonPropertyName("replaces")]
        public List<ReferenceType>? Replaces { get => _replaces; set { _replaces = value; OnPropertyChangedByClr(nameof(Replaces), value); } }

        private ReferenceType? _requester;
        [JsonPropertyName("requester")]
        public ReferenceType? Requester { get => _requester; set { _requester = value; OnPropertyChangedByClr(nameof(Requester), value); } }

        private FhirCode? _status;
        [JsonPropertyName("status")]
        public FhirCode? Status { get => _status; set { _status = value; OnPropertyChangedByClr(nameof(Status), value); } }

        private ReferenceType? _subject;
        [JsonPropertyName("subject")]
        public ReferenceType Subject { get => _subject ?? throw new InvalidOperationException("Subject is required"); set { _subject = value; OnPropertyChangedByClr(nameof(Subject), value); } }

        private List<ReferenceType>? _supportingInfo;
        [JsonPropertyName("supportingInfo")]
        public List<ReferenceType>? SupportingInfo { get => _supportingInfo; set { _supportingInfo = value; OnPropertyChangedByClr(nameof(SupportingInfo), value); } }

        private Narrative? _text;
        [JsonPropertyName("text")]
        public Narrative? Text { get => _text; set { _text = value; OnPropertyChangedByClr(nameof(Text), value); } }

    }
}
