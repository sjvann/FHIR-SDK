name: CI/CD Pipeline
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ['9.0.x']
        os: [ubuntu-latest, windows-latest]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
          
      - name: Restore dependencies
        run: dotnet restore
        
      - name: Build
        run: dotnet build --no-restore --configuration Release
        
      - name: Test
        run: dotnet test --no-build --verbosity normal --configuration Release --collect:"XPlat Code Coverage" --results-directory ./coverage
        
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/coverage.cobertura.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  code-quality:
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
          
      - name: Run Code Analysis
        run: |
          dotnet build --verbosity normal
          dotnet format --verify-no-changes
          
      - name: Run StyleCop
        run: |
          dotnet tool install --global StyleCop.Analyzers
          dotnet build --verbosity normal
          
      - name: Security scan
        uses: github/codeql-action/analyze@v2

  performance-test:
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
          
      - name: Install BenchmarkDotNet
        run: dotnet tool install --global dotnet-benchmark
        
      - name: Run Performance Tests
        run: |
          dotnet build --configuration Release
          dotnet benchmark --configuration Release --filter "*" --exporters JSON --artifacts ./benchmarks

  publish:
    runs-on: ubuntu-latest
    needs: [build-and-test, code-quality, performance-test]
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
          
      - name: Build for release
        run: dotnet build --configuration Release --no-restore
        
      - name: Pack
        run: dotnet pack --configuration Release --no-build --output ./nupkgs
        
      - name: Publish to NuGet
        run: |
          dotnet nuget push ./nupkgs/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json 