// <auto-generated />
// Generated by FHIR Generator {{ env.generator_version }} on {{ env.generation_date }}

using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using Fhir.Support.Attributes;
using Fhir.Support.Base;

namespace Fhir.Models.{{ model.namespace }};

/// <summary>
/// {{ model.description | string.replace "\n" " " | string.replace "\r" "" }}
/// </summary>
public class {{ model.name }}{{ if model.base_type }} : {{ model.base_type }}{{ end }}
{
    {{- for property in model.properties }}
    /// <summary>
    /// {{ property.description | string.replace "\n" " " | string.replace "\r" "" }}
    /// </summary>
    [FhirElement("{{ property.original_name | default property.name }}", Order = {{ property.order }})]
    [Cardinality({{ property.min_cardinality }}, {{ if property.max_cardinality == "*" }}int.MaxValue{{ else }}{{ property.max_cardinality }}{{ end }})]
    {{- if property.is_choice_type }}
    [ChoiceType]
    {{- end }}
    [JsonPropertyName("{{ property.original_name | default property.name }}")]
    public {{ property.type }}{{ if property.is_array }}[]{{ end }} {{ property.name }} { get; set; }
    {{- end }}

    {{- if model.has_choice_types }}

    /// <summary>
    /// Validates choice type constraints
    /// </summary>
    public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
    {
        foreach (var result in base.Validate(validationContext))
            yield return result;

        {{ model.choice_validation_code }}
    }
    {{- end }}
}
