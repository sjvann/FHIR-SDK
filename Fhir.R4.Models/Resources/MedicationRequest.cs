// <auto-generated />
// FHIR R4 Resource: MedicationRequest
// This file is automatically generated. Do not edit manually.

using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using Fhir.R4.Models.Base;
using Fhir.TypeFramework.DataTypes;

namespace Fhir.R4.Models.Resources;

/// <summary>
/// An order or request for both supply of the medication and the instructions for administration of the medication to a patient. The resource is called "MedicationRequest" rather than "MedicationPrescription" or "MedicationOrder" to generalize the use across inpatient and outpatient settings, including care plans, etc., and to harmonize with workflow patterns.
/// </summary>
public class MedicationRequest : DomainResource
{
    /// <summary>
    /// Resource type name
    /// </summary>
    [JsonPropertyName("resourceType")]
    public override string ResourceType => "MedicationRequest";

    /// <summary>
    /// External ids for this request
    /// </summary>
    [JsonPropertyName("identifier")]
    public List<Identifier>? IdentifierValue { get; set; }

    /// <summary>
    /// active | on-hold | cancelled | completed | entered-in-error | stopped | draft | unknown
    /// </summary>
    [Required]
    [JsonPropertyName("status")]
    public FhirCode Status { get; set; }

    /// <summary>
    /// Reason for current status
    /// </summary>
    [JsonPropertyName("statusReason")]
    public CodeableConcept StatusReason { get; set; }

    /// <summary>
    /// proposal | plan | order | original-order | reflex-order | filler-order | instance-order | option
    /// </summary>
    [Required]
    [JsonPropertyName("intent")]
    public FhirCode Intent { get; set; }

    /// <summary>
    /// Type of medication usage
    /// </summary>
    [JsonPropertyName("category")]
    public List<CodeableConcept>? Category { get; set; }

    /// <summary>
    /// routine | urgent | asap | stat
    /// </summary>
    [JsonPropertyName("priority")]
    public FhirCode Priority { get; set; }

    /// <summary>
    /// True if request is prohibiting action
    /// </summary>
    [JsonPropertyName("doNotPerform")]
    public FhirBoolean DoNotPerform { get; set; }

    /// <summary>
    /// Who or group medication request is for
    /// </summary>
    [Required]
    [JsonPropertyName("subject")]
    public Reference Subject { get; set; }

    /// <summary>
    /// Encounter created as part of encounter/admission/stay
    /// </summary>
    [JsonPropertyName("encounter")]
    public Reference Encounter { get; set; }

    /// <summary>
    /// Information to support ordering of the medication
    /// </summary>
    [JsonPropertyName("supportingInformation")]
    public List<Reference>? SupportingInformation { get; set; }

    /// <summary>
    /// When request was initially authored
    /// </summary>
    [JsonPropertyName("authoredOn")]
    public FhirDateTime AuthoredOn { get; set; }

    /// <summary>
    /// Who/What requested the Request
    /// </summary>
    [JsonPropertyName("requester")]
    public Reference Requester { get; set; }

    /// <summary>
    /// Intended performer of administration
    /// </summary>
    [JsonPropertyName("performer")]
    public Reference Performer { get; set; }

    /// <summary>
    /// Desired kind of performer of the medication administration
    /// </summary>
    [JsonPropertyName("performerType")]
    public CodeableConcept PerformerType { get; set; }

    /// <summary>
    /// Person who entered the request
    /// </summary>
    [JsonPropertyName("recorder")]
    public Reference Recorder { get; set; }

    /// <summary>
    /// Reason or indication for ordering or not ordering the medication
    /// </summary>
    [JsonPropertyName("reasonCode")]
    public List<CodeableConcept>? ReasonCode { get; set; }

    /// <summary>
    /// Condition or observation that supports why the prescription is being written
    /// </summary>
    [JsonPropertyName("reasonReference")]
    public List<Reference>? ReasonReference { get; set; }

    /// <summary>
    /// Instantiates FHIR protocol or definition
    /// </summary>
    [JsonPropertyName("instantiatesCanonical")]
    public List<FhirCanonical>? InstantiatesCanonical { get; set; }

    /// <summary>
    /// Instantiates external protocol or definition
    /// </summary>
    [JsonPropertyName("instantiatesUri")]
    public List<FhirUri>? InstantiatesUri { get; set; }

    /// <summary>
    /// What request fulfills
    /// </summary>
    [JsonPropertyName("basedOn")]
    public List<Reference>? BasedOn { get; set; }

    /// <summary>
    /// Composite request this is part of
    /// </summary>
    [JsonPropertyName("groupIdentifier")]
    public Identifier GroupIdentifier { get; set; }

    /// <summary>
    /// Overall pattern of medication administration
    /// </summary>
    [JsonPropertyName("courseOfTherapyType")]
    public CodeableConcept CourseOfTherapyType { get; set; }

    /// <summary>
    /// Associated insurance coverage
    /// </summary>
    [JsonPropertyName("insurance")]
    public List<Reference>? Insurance { get; set; }

    /// <summary>
    /// Information about the prescription
    /// </summary>
    [JsonPropertyName("note")]
    public List<Annotation>? Note { get; set; }

    /// <summary>
    /// How the medication should be taken
    /// </summary>
    [JsonPropertyName("dosageInstruction")]
    public List<Dosage>? DosageInstruction { get; set; }

    /// <summary>
    /// Medication supply authorization
    /// </summary>
    [JsonPropertyName("dispenseRequest")]
    public BackboneElement DispenseRequest { get; set; }

    /// <summary>
    /// First fill details
    /// </summary>
    [JsonPropertyName("initialFill")]
    public BackboneElement InitialFill { get; set; }

    /// <summary>
    /// Minimum period of time between dispenses
    /// </summary>
    [JsonPropertyName("dispenseInterval")]
    public Duration DispenseInterval { get; set; }

    /// <summary>
    /// Time period supply is authorized for
    /// </summary>
    [JsonPropertyName("validityPeriod")]
    public Period ValidityPeriod { get; set; }

    /// <summary>
    /// Number of refills authorized
    /// </summary>
    [JsonPropertyName("numberOfRepeatsAllowed")]
    public FhirUnsignedInt NumberOfRepeatsAllowed { get; set; }

    /// <summary>
    /// Amount of medication to supply per dispense
    /// </summary>
    [JsonPropertyName("quantity")]
    public Quantity QuantityValue { get; set; }

    /// <summary>
    /// Number of days supply per dispense
    /// </summary>
    [JsonPropertyName("expectedSupplyDuration")]
    public Duration ExpectedSupplyDuration { get; set; }

    /// <summary>
    /// Intended dispenser
    /// </summary>
    [JsonPropertyName("performer")]
    public Reference Performer { get; set; }

    /// <summary>
    /// Any restrictions on medication substitution
    /// </summary>
    [JsonPropertyName("substitution")]
    public BackboneElement Substitution { get; set; }

    /// <summary>
    /// Why should (not) substitution be made
    /// </summary>
    [JsonPropertyName("reason")]
    public CodeableConcept Reason { get; set; }

    /// <summary>
    /// An order/prescription that is being replaced
    /// </summary>
    [JsonPropertyName("priorPrescription")]
    public Reference PriorPrescription { get; set; }

    /// <summary>
    /// Clinical Issue with action
    /// </summary>
    [JsonPropertyName("detectedIssue")]
    public List<Reference>? DetectedIssue { get; set; }

    /// <summary>
    /// A list of events of interest in the lifecycle
    /// </summary>
    [JsonPropertyName("eventHistory")]
    public List<Reference>? EventHistory { get; set; }

    /// <summary>
    /// Validates this instance according to FHIR rules
    /// </summary>
    public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
    {
        foreach (var result in base.Validate(validationContext))
            yield return result;

        // TODO: Add specific validation rules
    }

}
