// <auto-generated />
// FHIR R4 Resource: ClaimResponse
// This file is automatically generated. Do not edit manually.

using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using Fhir.R4.Models.Base;
using Fhir.TypeFramework.DataTypes;

namespace Fhir.R4.Models.Resources;

/// <summary>
/// This resource provides the adjudication details from the processing of a Claim resource.
/// </summary>
public class ClaimResponse : DomainResource
{
    /// <summary>
    /// Resource type name
    /// </summary>
    [JsonPropertyName("resourceType")]
    public override string ResourceType => "ClaimResponse";

    /// <summary>
    /// Business Identifier for a claim response
    /// </summary>
    [JsonPropertyName("identifier")]
    public List<Identifier>? IdentifierValue { get; set; }

    /// <summary>
    /// active | cancelled | draft | entered-in-error
    /// </summary>
    [Required]
    [JsonPropertyName("status")]
    public FhirCode Status { get; set; }

    /// <summary>
    /// More granular claim type
    /// </summary>
    [Required]
    [JsonPropertyName("type")]
    public CodeableConcept Type { get; set; }

    /// <summary>
    /// More granular claim type
    /// </summary>
    [JsonPropertyName("subType")]
    public CodeableConcept SubType { get; set; }

    /// <summary>
    /// claim | preauthorization | predetermination
    /// </summary>
    [Required]
    [JsonPropertyName("use")]
    public FhirCode Use { get; set; }

    /// <summary>
    /// The recipient of the products and services
    /// </summary>
    [Required]
    [JsonPropertyName("patient")]
    public Reference Patient { get; set; }

    /// <summary>
    /// Response creation date
    /// </summary>
    [Required]
    [JsonPropertyName("created")]
    public FhirDateTime Created { get; set; }

    /// <summary>
    /// Party responsible for reimbursement
    /// </summary>
    [Required]
    [JsonPropertyName("insurer")]
    public Reference Insurer { get; set; }

    /// <summary>
    /// Party responsible for the claim
    /// </summary>
    [JsonPropertyName("requestor")]
    public Reference Requestor { get; set; }

    /// <summary>
    /// Id of resource triggering adjudication
    /// </summary>
    [JsonPropertyName("request")]
    public Reference Request { get; set; }

    /// <summary>
    /// queued | complete | error | partial
    /// </summary>
    [Required]
    [JsonPropertyName("outcome")]
    public FhirCode Outcome { get; set; }

    /// <summary>
    /// Disposition Message
    /// </summary>
    [JsonPropertyName("disposition")]
    public FhirString Disposition { get; set; }

    /// <summary>
    /// Preauthorization reference
    /// </summary>
    [JsonPropertyName("preAuthRef")]
    public FhirString PreAuthRef { get; set; }

    /// <summary>
    /// Preauthorization reference effective period
    /// </summary>
    [JsonPropertyName("preAuthPeriod")]
    public Period PreAuthPeriod { get; set; }

    /// <summary>
    /// Party to be paid any benefits payable
    /// </summary>
    [JsonPropertyName("payeeType")]
    public CodeableConcept PayeeType { get; set; }

    /// <summary>
    /// Adjudication for claim line items
    /// </summary>
    [JsonPropertyName("item")]
    public List<BackboneElement>? Item { get; set; }

    /// <summary>
    /// Insurer added line items
    /// </summary>
    [JsonPropertyName("addItem")]
    public List<BackboneElement>? AddItem { get; set; }

    /// <summary>
    /// Item sequence number
    /// </summary>
    [JsonPropertyName("itemSequence")]
    public List<FhirPositiveInt>? ItemSequence { get; set; }

    /// <summary>
    /// Detail sequence number
    /// </summary>
    [JsonPropertyName("detailSequence")]
    public List<FhirPositiveInt>? DetailSequence { get; set; }

    /// <summary>
    /// Subdetail sequence number
    /// </summary>
    [JsonPropertyName("subdetailSequence")]
    public List<FhirPositiveInt>? SubdetailSequence { get; set; }

    /// <summary>
    /// Authorized providers
    /// </summary>
    [JsonPropertyName("provider")]
    public List<Reference>? Provider { get; set; }

    /// <summary>
    /// Billing, service, product, or drug code
    /// </summary>
    [Required]
    [JsonPropertyName("productOrService")]
    public CodeableConcept ProductOrService { get; set; }

    /// <summary>
    /// Service/Product billing modifiers
    /// </summary>
    [JsonPropertyName("modifier")]
    public List<CodeableConcept>? Modifier { get; set; }

    /// <summary>
    /// Program the product or service is provided under
    /// </summary>
    [JsonPropertyName("programCode")]
    public List<CodeableConcept>? ProgramCode { get; set; }

    /// <summary>
    /// Count of products or services
    /// </summary>
    [JsonPropertyName("quantity")]
    public Quantity QuantityValue { get; set; }

    /// <summary>
    /// Fee, charge or cost per item
    /// </summary>
    [JsonPropertyName("unitPrice")]
    public Money UnitPrice { get; set; }

    /// <summary>
    /// Price scaling factor
    /// </summary>
    [JsonPropertyName("factor")]
    public FhirDecimal Factor { get; set; }

    /// <summary>
    /// Total item cost
    /// </summary>
    [JsonPropertyName("net")]
    public Money Net { get; set; }

    /// <summary>
    /// Anatomical location
    /// </summary>
    [JsonPropertyName("bodySite")]
    public CodeableConcept BodySite { get; set; }

    /// <summary>
    /// Anatomical sub-location
    /// </summary>
    [JsonPropertyName("subSite")]
    public List<CodeableConcept>? SubSite { get; set; }

    /// <summary>
    /// Applicable note numbers
    /// </summary>
    [JsonPropertyName("noteNumber")]
    public List<FhirPositiveInt>? NoteNumber { get; set; }

    /// <summary>
    /// Added items adjudication
    /// </summary>
    [Required]
    [JsonPropertyName("adjudication")]
    public List<> Adjudication { get; set; }

    /// <summary>
    /// Insurer added line details
    /// </summary>
    [JsonPropertyName("detail")]
    public List<BackboneElement>? Detail { get; set; }

    /// <summary>
    /// Header-level adjudication
    /// </summary>
    [JsonPropertyName("adjudication")]
    public List<>? Adjudication { get; set; }

    /// <summary>
    /// Adjudication totals
    /// </summary>
    [JsonPropertyName("total")]
    public List<BackboneElement>? Total { get; set; }

    /// <summary>
    /// Payment Details
    /// </summary>
    [JsonPropertyName("payment")]
    public BackboneElement Payment { get; set; }

    /// <summary>
    /// Funds reserved status
    /// </summary>
    [JsonPropertyName("fundsReserve")]
    public CodeableConcept FundsReserve { get; set; }

    /// <summary>
    /// Printed form identifier
    /// </summary>
    [JsonPropertyName("formCode")]
    public CodeableConcept FormCode { get; set; }

    /// <summary>
    /// Printed reference or actual form
    /// </summary>
    [JsonPropertyName("form")]
    public Attachment Form { get; set; }

    /// <summary>
    /// Note concerning adjudication
    /// </summary>
    [JsonPropertyName("processNote")]
    public List<BackboneElement>? ProcessNote { get; set; }

    /// <summary>
    /// Note instance identifier
    /// </summary>
    [JsonPropertyName("number")]
    public FhirPositiveInt Number { get; set; }

    /// <summary>
    /// display | print | printoper
    /// </summary>
    [JsonPropertyName("type")]
    public FhirCode Type { get; set; }

    /// <summary>
    /// Request for additional information
    /// </summary>
    [JsonPropertyName("communicationRequest")]
    public List<Reference>? CommunicationRequest { get; set; }

    /// <summary>
    /// Patient insurance information
    /// </summary>
    [JsonPropertyName("insurance")]
    public List<BackboneElement>? Insurance { get; set; }

    /// <summary>
    /// Processing errors
    /// </summary>
    [JsonPropertyName("error")]
    public List<BackboneElement>? Error { get; set; }

    /// <summary>
    /// Item sequence number
    /// </summary>
    [JsonPropertyName("itemSequence")]
    public FhirPositiveInt ItemSequence { get; set; }

    /// <summary>
    /// Detail sequence number
    /// </summary>
    [JsonPropertyName("detailSequence")]
    public FhirPositiveInt DetailSequence { get; set; }

    /// <summary>
    /// Subdetail sequence number
    /// </summary>
    [JsonPropertyName("subDetailSequence")]
    public FhirPositiveInt SubDetailSequence { get; set; }

    /// <summary>
    /// Error code detailing processing issues
    /// </summary>
    [Required]
    [JsonPropertyName("code")]
    public CodeableConcept Code { get; set; }

    /// <summary>
    /// Validates this instance according to FHIR rules
    /// </summary>
    public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
    {
        foreach (var result in base.Validate(validationContext))
            yield return result;

        // TODO: Add specific validation rules
    }

}
