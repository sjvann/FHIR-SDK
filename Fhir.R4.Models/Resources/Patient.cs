// <auto-generated />
// FHIR R4 Resource: Patient
// This file is automatically generated. Do not edit manually.

using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using Fhir.R4.Models.Base;
using Fhir.TypeFramework.DataTypes;

namespace Fhir.R4.Models.Resources;

/// <summary>
/// Demographics and other administrative information about an individual or animal receiving care or other health-related services.
/// </summary>
public class Patient : DomainResource
{
    /// <summary>
    /// Resource type name
    /// </summary>
    [JsonPropertyName("resourceType")]
    public override string ResourceType => "Patient";

    /// <summary>
    /// An identifier for this patient
    /// </summary>
    [JsonPropertyName("identifier")]
    public List<Identifier>? IdentifierValue { get; set; }

    /// <summary>
    /// Whether this patient&apos;s record is in active use
    /// </summary>
    [JsonPropertyName("active")]
    public FhirBoolean Active { get; set; }

    /// <summary>
    /// A name associated with the patient
    /// </summary>
    [JsonPropertyName("name")]
    public List<HumanName>? Name { get; set; }

    /// <summary>
    /// A contact detail for the individual
    /// </summary>
    [JsonPropertyName("telecom")]
    public List<ContactPoint>? Telecom { get; set; }

    /// <summary>
    /// male | female | other | unknown
    /// </summary>
    [JsonPropertyName("gender")]
    public FhirCode Gender { get; set; }

    /// <summary>
    /// The date of birth for the individual
    /// </summary>
    [JsonPropertyName("birthDate")]
    public FhirDate BirthDate { get; set; }

    /// <summary>
    /// An address for the individual
    /// </summary>
    [JsonPropertyName("address")]
    public List<Address>? AddressValue { get; set; }

    /// <summary>
    /// Marital (civil) status of a patient
    /// </summary>
    [JsonPropertyName("maritalStatus")]
    public CodeableConcept MaritalStatus { get; set; }

    /// <summary>
    /// Image of the patient
    /// </summary>
    [JsonPropertyName("photo")]
    public List<Attachment>? Photo { get; set; }

    /// <summary>
    /// A contact party (e.g. guardian, partner, friend) for the patient
    /// </summary>
    [JsonPropertyName("contact")]
    public List<BackboneElement>? Contact { get; set; }

    /// <summary>
    /// A language which may be used to communicate with the patient about his or her health
    /// </summary>
    [JsonPropertyName("communication")]
    public List<BackboneElement>? Communication { get; set; }

    /// <summary>
    /// Patient&apos;s nominated primary care provider
    /// </summary>
    [JsonPropertyName("generalPractitioner")]
    public List<Reference>? GeneralPractitioner { get; set; }

    /// <summary>
    /// Organization that is the custodian of the patient record
    /// </summary>
    [JsonPropertyName("managingOrganization")]
    public Reference ManagingOrganization { get; set; }

    /// <summary>
    /// Link to another patient resource that concerns the same actual person
    /// </summary>
    [JsonPropertyName("link")]
    public List<BackboneElement>? Link { get; set; }

    /// <summary>
    /// Validates this instance according to FHIR rules
    /// </summary>
    public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
    {
        foreach (var result in base.Validate(validationContext))
            yield return result;

        // TODO: Add specific validation rules
    }

}
