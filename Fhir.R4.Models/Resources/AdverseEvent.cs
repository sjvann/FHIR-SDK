// <auto-generated />
// FHIR R4 Resource: AdverseEvent
// This file is automatically generated. Do not edit manually.

using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using Fhir.R4.Models.Base;
using Fhir.TypeFramework.DataTypes;

namespace Fhir.R4.Models.Resources;

/// <summary>
/// Actual or  potential/avoided event causing unintended physical injury resulting from or contributed to by medical care, a research study or other healthcare setting factors that requires additional monitoring, treatment, or hospitalization, or that results in death.
/// </summary>
public class AdverseEvent : DomainResource
{
    /// <summary>
    /// Resource type name
    /// </summary>
    [JsonPropertyName("resourceType")]
    public override string ResourceType => "AdverseEvent";

    /// <summary>
    /// Business identifier for the event
    /// </summary>
    [JsonPropertyName("identifier")]
    public Identifier IdentifierValue { get; set; }

    /// <summary>
    /// actual | potential
    /// </summary>
    [Required]
    [JsonPropertyName("actuality")]
    public FhirCode Actuality { get; set; }

    /// <summary>
    /// product-problem | product-quality | product-use-error | wrong-dose | incorrect-prescribing-information | wrong-technique | wrong-route-of-administration | wrong-rate | wrong-duration | wrong-time | expired-drug | medical-device-use-error | problem-different-manufacturer | unsafe-physical-environment
    /// </summary>
    [JsonPropertyName("category")]
    public List<CodeableConcept>? Category { get; set; }

    /// <summary>
    /// Type of the event itself in relation to the subject
    /// </summary>
    [JsonPropertyName("event")]
    public CodeableConcept Event { get; set; }

    /// <summary>
    /// Subject impacted by event
    /// </summary>
    [Required]
    [JsonPropertyName("subject")]
    public Reference Subject { get; set; }

    /// <summary>
    /// Encounter created as part of
    /// </summary>
    [JsonPropertyName("encounter")]
    public Reference Encounter { get; set; }

    /// <summary>
    /// When the event occurred
    /// </summary>
    [JsonPropertyName("date")]
    public FhirDateTime Date { get; set; }

    /// <summary>
    /// When the event was detected
    /// </summary>
    [JsonPropertyName("detected")]
    public FhirDateTime Detected { get; set; }

    /// <summary>
    /// When the event was recorded
    /// </summary>
    [JsonPropertyName("recordedDate")]
    public FhirDateTime RecordedDate { get; set; }

    /// <summary>
    /// Effect on the subject due to this event
    /// </summary>
    [JsonPropertyName("resultingCondition")]
    public List<Reference>? ResultingCondition { get; set; }

    /// <summary>
    /// Location where adverse event occurred
    /// </summary>
    [JsonPropertyName("location")]
    public Reference Location { get; set; }

    /// <summary>
    /// Seriousness of the event
    /// </summary>
    [JsonPropertyName("seriousness")]
    public CodeableConcept Seriousness { get; set; }

    /// <summary>
    /// mild | moderate | severe
    /// </summary>
    [JsonPropertyName("severity")]
    public CodeableConcept Severity { get; set; }

    /// <summary>
    /// resolved | recovering | ongoing | resolvedWithSequelae | fatal | unknown
    /// </summary>
    [JsonPropertyName("outcome")]
    public CodeableConcept Outcome { get; set; }

    /// <summary>
    /// Who recorded the adverse event
    /// </summary>
    [JsonPropertyName("recorder")]
    public Reference Recorder { get; set; }

    /// <summary>
    /// Who  was involved in the adverse event or the potential adverse event
    /// </summary>
    [JsonPropertyName("contributor")]
    public List<Reference>? Contributor { get; set; }

    /// <summary>
    /// The suspected agent causing the adverse event
    /// </summary>
    [JsonPropertyName("suspectEntity")]
    public List<BackboneElement>? SuspectEntity { get; set; }

    /// <summary>
    /// Refers to the specific entity that caused the adverse event
    /// </summary>
    [Required]
    [JsonPropertyName("instance")]
    public Reference Instance { get; set; }

    /// <summary>
    /// Information on the possible cause of the event
    /// </summary>
    [JsonPropertyName("causality")]
    public List<BackboneElement>? Causality { get; set; }

    /// <summary>
    /// AdverseEvent.subjectMedicalHistory
    /// </summary>
    [JsonPropertyName("subjectMedicalHistory")]
    public List<Reference>? SubjectMedicalHistory { get; set; }

    /// <summary>
    /// AdverseEvent.referenceDocument
    /// </summary>
    [JsonPropertyName("referenceDocument")]
    public List<Reference>? ReferenceDocument { get; set; }

    /// <summary>
    /// AdverseEvent.study
    /// </summary>
    [JsonPropertyName("study")]
    public List<Reference>? Study { get; set; }

    /// <summary>
    /// Validates this instance according to FHIR rules
    /// </summary>
    public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
    {
        foreach (var result in base.Validate(validationContext))
            yield return result;

        // TODO: Add specific validation rules
    }

}
