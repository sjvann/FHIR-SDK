// <auto-generated />
// FHIR R4 Resource: SpecimenDefinition
// This file is automatically generated. Do not edit manually.

using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using Fhir.R4.Models.Base;
using Fhir.TypeFramework.DataTypes;

namespace Fhir.R4.Models.Resources;

/// <summary>
/// A kind of specimen with associated set of requirements.
/// </summary>
public class SpecimenDefinition : DomainResource
{
    /// <summary>
    /// Resource type name
    /// </summary>
    [JsonPropertyName("resourceType")]
    public override string ResourceType => "SpecimenDefinition";

    /// <summary>
    /// Business identifier of a kind of specimen
    /// </summary>
    [JsonPropertyName("identifier")]
    public Identifier IdentifierValue { get; set; }

    /// <summary>
    /// Kind of material to collect
    /// </summary>
    [JsonPropertyName("typeCollected")]
    public CodeableConcept TypeCollected { get; set; }

    /// <summary>
    /// Patient preparation for collection
    /// </summary>
    [JsonPropertyName("patientPreparation")]
    public List<CodeableConcept>? PatientPreparation { get; set; }

    /// <summary>
    /// Time aspect for collection
    /// </summary>
    [JsonPropertyName("timeAspect")]
    public FhirString TimeAspect { get; set; }

    /// <summary>
    /// Specimen collection procedure
    /// </summary>
    [JsonPropertyName("collection")]
    public List<CodeableConcept>? Collection { get; set; }

    /// <summary>
    /// Specimen in container intended for testing by lab
    /// </summary>
    [JsonPropertyName("typeTested")]
    public List<BackboneElement>? TypeTested { get; set; }

    /// <summary>
    /// Primary or secondary specimen
    /// </summary>
    [JsonPropertyName("isDerived")]
    public FhirBoolean IsDerived { get; set; }

    /// <summary>
    /// Type of intended specimen
    /// </summary>
    [JsonPropertyName("type")]
    public CodeableConcept Type { get; set; }

    /// <summary>
    /// preferred | alternate
    /// </summary>
    [Required]
    [JsonPropertyName("preference")]
    public FhirCode Preference { get; set; }

    /// <summary>
    /// The specimen&apos;s container
    /// </summary>
    [JsonPropertyName("container")]
    public BackboneElement Container { get; set; }

    /// <summary>
    /// Specimen requirements
    /// </summary>
    [JsonPropertyName("requirement")]
    public FhirString Requirement { get; set; }

    /// <summary>
    /// Specimen retention time
    /// </summary>
    [JsonPropertyName("retentionTime")]
    public Duration RetentionTime { get; set; }

    /// <summary>
    /// Rejection criterion
    /// </summary>
    [JsonPropertyName("rejectionCriterion")]
    public List<CodeableConcept>? RejectionCriterion { get; set; }

    /// <summary>
    /// Specimen handling before testing
    /// </summary>
    [JsonPropertyName("handling")]
    public List<BackboneElement>? Handling { get; set; }

    /// <summary>
    /// Validates this instance according to FHIR rules
    /// </summary>
    public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
    {
        foreach (var result in base.Validate(validationContext))
            yield return result;

        // TODO: Add specific validation rules
    }

}
