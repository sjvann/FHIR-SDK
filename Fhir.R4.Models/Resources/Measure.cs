// <auto-generated />
// FHIR R4 Resource: Measure
// This file is automatically generated. Do not edit manually.

using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using Fhir.R4.Models.Base;
using Fhir.TypeFramework.DataTypes;

namespace Fhir.R4.Models.Resources;

/// <summary>
/// The Measure resource provides the definition of a quality measure.
/// </summary>
public class Measure : DomainResource
{
    /// <summary>
    /// Resource type name
    /// </summary>
    [JsonPropertyName("resourceType")]
    public override string ResourceType => "Measure";

    /// <summary>
    /// Canonical identifier for this measure, represented as a URI (globally unique)
    /// </summary>
    [JsonPropertyName("url")]
    public FhirUri Url { get; set; }

    /// <summary>
    /// Additional identifier for the measure
    /// </summary>
    [JsonPropertyName("identifier")]
    public List<Identifier>? IdentifierValue { get; set; }

    /// <summary>
    /// Business version of the measure
    /// </summary>
    [JsonPropertyName("version")]
    public FhirString Version { get; set; }

    /// <summary>
    /// Name for this measure (computer friendly)
    /// </summary>
    [JsonPropertyName("name")]
    public FhirString Name { get; set; }

    /// <summary>
    /// Name for this measure (human friendly)
    /// </summary>
    [JsonPropertyName("title")]
    public FhirString Title { get; set; }

    /// <summary>
    /// Subordinate title of the measure
    /// </summary>
    [JsonPropertyName("subtitle")]
    public FhirString Subtitle { get; set; }

    /// <summary>
    /// draft | active | retired | unknown
    /// </summary>
    [Required]
    [JsonPropertyName("status")]
    public FhirCode Status { get; set; }

    /// <summary>
    /// For testing purposes, not real usage
    /// </summary>
    [JsonPropertyName("experimental")]
    public FhirBoolean Experimental { get; set; }

    /// <summary>
    /// Date last changed
    /// </summary>
    [JsonPropertyName("date")]
    public FhirDateTime Date { get; set; }

    /// <summary>
    /// Name of the publisher (organization or individual)
    /// </summary>
    [JsonPropertyName("publisher")]
    public FhirString Publisher { get; set; }

    /// <summary>
    /// Contact details for the publisher
    /// </summary>
    [JsonPropertyName("contact")]
    public List<ContactDetail>? Contact { get; set; }

    /// <summary>
    /// Natural language description of the measure
    /// </summary>
    [JsonPropertyName("description")]
    public FhirMarkdown Description { get; set; }

    /// <summary>
    /// The context that the content is intended to support
    /// </summary>
    [JsonPropertyName("useContext")]
    public List<UsageContext>? UseContext { get; set; }

    /// <summary>
    /// Intended jurisdiction for measure (if applicable)
    /// </summary>
    [JsonPropertyName("jurisdiction")]
    public List<CodeableConcept>? Jurisdiction { get; set; }

    /// <summary>
    /// Why this measure is defined
    /// </summary>
    [JsonPropertyName("purpose")]
    public FhirMarkdown Purpose { get; set; }

    /// <summary>
    /// Describes the clinical usage of the measure
    /// </summary>
    [JsonPropertyName("usage")]
    public FhirString Usage { get; set; }

    /// <summary>
    /// Use and/or publishing restrictions
    /// </summary>
    [JsonPropertyName("copyright")]
    public FhirMarkdown Copyright { get; set; }

    /// <summary>
    /// When the measure was approved by publisher
    /// </summary>
    [JsonPropertyName("approvalDate")]
    public FhirDate ApprovalDate { get; set; }

    /// <summary>
    /// When the measure was last reviewed
    /// </summary>
    [JsonPropertyName("lastReviewDate")]
    public FhirDate LastReviewDate { get; set; }

    /// <summary>
    /// When the measure is expected to be used
    /// </summary>
    [JsonPropertyName("effectivePeriod")]
    public Period EffectivePeriod { get; set; }

    /// <summary>
    /// The category of the measure, such as Education, Treatment, Assessment, etc.
    /// </summary>
    [JsonPropertyName("topic")]
    public List<CodeableConcept>? Topic { get; set; }

    /// <summary>
    /// Who authored the content
    /// </summary>
    [JsonPropertyName("author")]
    public List<ContactDetail>? Author { get; set; }

    /// <summary>
    /// Who edited the content
    /// </summary>
    [JsonPropertyName("editor")]
    public List<ContactDetail>? Editor { get; set; }

    /// <summary>
    /// Who reviewed the content
    /// </summary>
    [JsonPropertyName("reviewer")]
    public List<ContactDetail>? Reviewer { get; set; }

    /// <summary>
    /// Who endorsed the content
    /// </summary>
    [JsonPropertyName("endorser")]
    public List<ContactDetail>? Endorser { get; set; }

    /// <summary>
    /// Additional documentation, citations, etc.
    /// </summary>
    [JsonPropertyName("relatedArtifact")]
    public List<RelatedArtifact>? RelatedArtifactValue { get; set; }

    /// <summary>
    /// Logic used by the measure
    /// </summary>
    [JsonPropertyName("library")]
    public List<FhirCanonical>? Library { get; set; }

    /// <summary>
    /// Disclaimer for use of the measure or its referenced content
    /// </summary>
    [JsonPropertyName("disclaimer")]
    public FhirMarkdown Disclaimer { get; set; }

    /// <summary>
    /// proportion | ratio | continuous-variable | cohort
    /// </summary>
    [JsonPropertyName("scoring")]
    public CodeableConcept Scoring { get; set; }

    /// <summary>
    /// opportunity | all-or-nothing | linear | weighted
    /// </summary>
    [JsonPropertyName("compositeScoring")]
    public CodeableConcept CompositeScoring { get; set; }

    /// <summary>
    /// process | outcome | structure | patient-reported-outcome | composite
    /// </summary>
    [JsonPropertyName("type")]
    public List<CodeableConcept>? Type { get; set; }

    /// <summary>
    /// How risk adjustment is applied for this measure
    /// </summary>
    [JsonPropertyName("riskAdjustment")]
    public FhirString RiskAdjustment { get; set; }

    /// <summary>
    /// How is rate aggregation performed for this measure
    /// </summary>
    [JsonPropertyName("rateAggregation")]
    public FhirString RateAggregation { get; set; }

    /// <summary>
    /// Detailed description of why the measure exists
    /// </summary>
    [JsonPropertyName("rationale")]
    public FhirMarkdown Rationale { get; set; }

    /// <summary>
    /// Summary of clinical guidelines
    /// </summary>
    [JsonPropertyName("clinicalRecommendationStatement")]
    public FhirMarkdown ClinicalRecommendationStatement { get; set; }

    /// <summary>
    /// increase | decrease
    /// </summary>
    [JsonPropertyName("improvementNotation")]
    public CodeableConcept ImprovementNotation { get; set; }

    /// <summary>
    /// Defined terms used in the measure documentation
    /// </summary>
    [JsonPropertyName("definition")]
    public List<FhirMarkdown>? Definition { get; set; }

    /// <summary>
    /// Additional guidance for implementers
    /// </summary>
    [JsonPropertyName("guidance")]
    public FhirMarkdown Guidance { get; set; }

    /// <summary>
    /// Population criteria group
    /// </summary>
    [JsonPropertyName("group")]
    public List<BackboneElement>? Group { get; set; }

    /// <summary>
    /// Meaning of the group
    /// </summary>
    [JsonPropertyName("code")]
    public CodeableConcept Code { get; set; }

    /// <summary>
    /// Summary description
    /// </summary>
    [JsonPropertyName("description")]
    public FhirString Description { get; set; }

    /// <summary>
    /// Population criteria
    /// </summary>
    [JsonPropertyName("population")]
    public List<BackboneElement>? Population { get; set; }

    /// <summary>
    /// Stratifier criteria for the measure
    /// </summary>
    [JsonPropertyName("stratifier")]
    public List<BackboneElement>? Stratifier { get; set; }

    /// <summary>
    /// What other data should be reported with the measure
    /// </summary>
    [JsonPropertyName("supplementalData")]
    public List<BackboneElement>? SupplementalData { get; set; }

    /// <summary>
    /// Meaning of the supplemental data
    /// </summary>
    [JsonPropertyName("code")]
    public CodeableConcept Code { get; set; }

    /// <summary>
    /// supplemental-data | risk-adjustment-factor
    /// </summary>
    [JsonPropertyName("usage")]
    public List<CodeableConcept>? Usage { get; set; }

    /// <summary>
    /// The human readable description of this supplemental data
    /// </summary>
    [JsonPropertyName("description")]
    public FhirString Description { get; set; }

    /// <summary>
    /// Expression describing additional data to be reported
    /// </summary>
    [Required]
    [JsonPropertyName("criteria")]
    public Expression Criteria { get; set; }

    /// <summary>
    /// Validates this instance according to FHIR rules
    /// </summary>
    public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
    {
        foreach (var result in base.Validate(validationContext))
            yield return result;

        // TODO: Add specific validation rules
    }

}
