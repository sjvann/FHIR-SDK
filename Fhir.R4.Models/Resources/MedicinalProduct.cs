// <auto-generated />
// FHIR R4 Resource: MedicinalProduct
// This file is automatically generated. Do not edit manually.

using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using Fhir.R4.Models.Base;
using Fhir.TypeFramework.DataTypes;

namespace Fhir.R4.Models.Resources;

/// <summary>
/// Detailed definition of a medicinal product, typically for uses other than direct patient care (e.g. regulatory use).
/// </summary>
public class MedicinalProduct : DomainResource
{
    /// <summary>
    /// Resource type name
    /// </summary>
    [JsonPropertyName("resourceType")]
    public override string ResourceType => "MedicinalProduct";

    /// <summary>
    /// Business identifier for this product. Could be an MPID
    /// </summary>
    [JsonPropertyName("identifier")]
    public List<Identifier>? IdentifierValue { get; set; }

    /// <summary>
    /// Regulatory type, e.g. Investigational or Authorized
    /// </summary>
    [JsonPropertyName("type")]
    public CodeableConcept Type { get; set; }

    /// <summary>
    /// If this medicine applies to human or veterinary uses
    /// </summary>
    [JsonPropertyName("domain")]
    public Coding Domain { get; set; }

    /// <summary>
    /// The dose form for a single part product, or combined form of a multiple part product
    /// </summary>
    [JsonPropertyName("combinedPharmaceuticalDoseForm")]
    public CodeableConcept CombinedPharmaceuticalDoseForm { get; set; }

    /// <summary>
    /// The legal status of supply of the medicinal product as classified by the regulator
    /// </summary>
    [JsonPropertyName("legalStatusOfSupply")]
    public CodeableConcept LegalStatusOfSupply { get; set; }

    /// <summary>
    /// Whether the Medicinal Product is subject to additional monitoring for regulatory reasons
    /// </summary>
    [JsonPropertyName("additionalMonitoringIndicator")]
    public CodeableConcept AdditionalMonitoringIndicator { get; set; }

    /// <summary>
    /// Whether the Medicinal Product is subject to special measures for regulatory reasons
    /// </summary>
    [JsonPropertyName("specialMeasures")]
    public List<FhirString>? SpecialMeasures { get; set; }

    /// <summary>
    /// If authorised for use in children
    /// </summary>
    [JsonPropertyName("paediatricUseIndicator")]
    public CodeableConcept PaediatricUseIndicator { get; set; }

    /// <summary>
    /// Allows the product to be classified by various systems
    /// </summary>
    [JsonPropertyName("productClassification")]
    public List<CodeableConcept>? ProductClassification { get; set; }

    /// <summary>
    /// Marketing status of the medicinal product, in contrast to marketing authorizaton
    /// </summary>
    [JsonPropertyName("marketingStatus")]
    public List<MarketingStatus>? MarketingStatusValue { get; set; }

    /// <summary>
    /// Pharmaceutical aspects of product
    /// </summary>
    [JsonPropertyName("pharmaceuticalProduct")]
    public List<Reference>? PharmaceuticalProduct { get; set; }

    /// <summary>
    /// Package representation for the product
    /// </summary>
    [JsonPropertyName("packagedMedicinalProduct")]
    public List<Reference>? PackagedMedicinalProduct { get; set; }

    /// <summary>
    /// Supporting documentation, typically for regulatory submission
    /// </summary>
    [JsonPropertyName("attachedDocument")]
    public List<Reference>? AttachedDocument { get; set; }

    /// <summary>
    /// A master file for to the medicinal product (e.g. Pharmacovigilance System Master File)
    /// </summary>
    [JsonPropertyName("masterFile")]
    public List<Reference>? MasterFile { get; set; }

    /// <summary>
    /// A product specific contact, person (in a role), or an organization
    /// </summary>
    [JsonPropertyName("contact")]
    public List<Reference>? Contact { get; set; }

    /// <summary>
    /// Clinical trials or studies that this product is involved in
    /// </summary>
    [JsonPropertyName("clinicalTrial")]
    public List<Reference>? ClinicalTrial { get; set; }

    /// <summary>
    /// The product&apos;s name, including full name and possibly coded parts
    /// </summary>
    [Required]
    [JsonPropertyName("name")]
    public List<BackboneElement> Name { get; set; }

    /// <summary>
    /// The full product name
    /// </summary>
    [Required]
    [JsonPropertyName("productName")]
    public FhirString ProductName { get; set; }

    /// <summary>
    /// Coding words or phrases of the name
    /// </summary>
    [JsonPropertyName("namePart")]
    public List<BackboneElement>? NamePart { get; set; }

    /// <summary>
    /// Country where the name applies
    /// </summary>
    [JsonPropertyName("countryLanguage")]
    public List<BackboneElement>? CountryLanguage { get; set; }

    /// <summary>
    /// Reference to another product, e.g. for linking authorised to investigational product
    /// </summary>
    [JsonPropertyName("crossReference")]
    public List<Identifier>? CrossReference { get; set; }

    /// <summary>
    /// An operation applied to the product, for manufacturing or adminsitrative purpose
    /// </summary>
    [JsonPropertyName("manufacturingBusinessOperation")]
    public List<BackboneElement>? ManufacturingBusinessOperation { get; set; }

    /// <summary>
    /// The type of manufacturing operation
    /// </summary>
    [JsonPropertyName("operationType")]
    public CodeableConcept OperationType { get; set; }

    /// <summary>
    /// Regulatory authorization reference number
    /// </summary>
    [JsonPropertyName("authorisationReferenceNumber")]
    public Identifier AuthorisationReferenceNumber { get; set; }

    /// <summary>
    /// Regulatory authorization date
    /// </summary>
    [JsonPropertyName("effectiveDate")]
    public FhirDateTime EffectiveDate { get; set; }

    /// <summary>
    /// To indicate if this proces is commercially confidential
    /// </summary>
    [JsonPropertyName("confidentialityIndicator")]
    public CodeableConcept ConfidentialityIndicator { get; set; }

    /// <summary>
    /// The manufacturer or establishment associated with the process
    /// </summary>
    [JsonPropertyName("manufacturer")]
    public List<Reference>? Manufacturer { get; set; }

    /// <summary>
    /// A regulator which oversees the operation
    /// </summary>
    [JsonPropertyName("regulator")]
    public Reference Regulator { get; set; }

    /// <summary>
    /// Indicates if the medicinal product has an orphan designation for the treatment of a rare disease
    /// </summary>
    [JsonPropertyName("specialDesignation")]
    public List<BackboneElement>? SpecialDesignation { get; set; }

    /// <summary>
    /// Identifier for the designation, or procedure number
    /// </summary>
    [JsonPropertyName("identifier")]
    public List<Identifier>? IdentifierValue { get; set; }

    /// <summary>
    /// The type of special designation, e.g. orphan drug, minor use
    /// </summary>
    [JsonPropertyName("type")]
    public CodeableConcept Type { get; set; }

    /// <summary>
    /// The intended use of the product, e.g. prevention, treatment
    /// </summary>
    [JsonPropertyName("intendedUse")]
    public CodeableConcept IntendedUse { get; set; }

    /// <summary>
    /// For example granted, pending, expired or withdrawn
    /// </summary>
    [JsonPropertyName("status")]
    public CodeableConcept Status { get; set; }

    /// <summary>
    /// Date when the designation was granted
    /// </summary>
    [JsonPropertyName("date")]
    public FhirDateTime Date { get; set; }

    /// <summary>
    /// Animal species for which this applies
    /// </summary>
    [JsonPropertyName("species")]
    public CodeableConcept Species { get; set; }

    /// <summary>
    /// Validates this instance according to FHIR rules
    /// </summary>
    public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
    {
        foreach (var result in base.Validate(validationContext))
            yield return result;

        // TODO: Add specific validation rules
    }

}
