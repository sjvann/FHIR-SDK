// <auto-generated />
// FHIR R4 Resource: DetectedIssue
// This file is automatically generated. Do not edit manually.

using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using Fhir.R4.Models.Base;
using Fhir.TypeFramework.DataTypes;

namespace Fhir.R4.Models.Resources;

/// <summary>
/// Indicates an actual or potential clinical issue with or between one or more active or proposed clinical actions for a patient; e.g. Drug-drug interaction, Ineffective treatment frequency, Procedure-condition conflict, etc.
/// </summary>
public class DetectedIssue : DomainResource
{
    /// <summary>
    /// Resource type name
    /// </summary>
    [JsonPropertyName("resourceType")]
    public override string ResourceType => "DetectedIssue";

    /// <summary>
    /// Unique id for the detected issue
    /// </summary>
    [JsonPropertyName("identifier")]
    public List<Identifier>? IdentifierValue { get; set; }

    /// <summary>
    /// registered | preliminary | final | amended +
    /// </summary>
    [Required]
    [JsonPropertyName("status")]
    public FhirCode Status { get; set; }

    /// <summary>
    /// Issue Category, e.g. drug-drug, duplicate therapy, etc.
    /// </summary>
    [JsonPropertyName("code")]
    public CodeableConcept Code { get; set; }

    /// <summary>
    /// high | moderate | low
    /// </summary>
    [JsonPropertyName("severity")]
    public FhirCode Severity { get; set; }

    /// <summary>
    /// Associated patient
    /// </summary>
    [JsonPropertyName("patient")]
    public Reference Patient { get; set; }

    /// <summary>
    /// The provider or device that identified the issue
    /// </summary>
    [JsonPropertyName("author")]
    public Reference Author { get; set; }

    /// <summary>
    /// Problem resource
    /// </summary>
    [JsonPropertyName("implicated")]
    public List<Reference>? Implicated { get; set; }

    /// <summary>
    /// Supporting evidence
    /// </summary>
    [JsonPropertyName("evidence")]
    public List<BackboneElement>? Evidence { get; set; }

    /// <summary>
    /// Manifestation
    /// </summary>
    [JsonPropertyName("code")]
    public List<CodeableConcept>? Code { get; set; }

    /// <summary>
    /// Supporting information
    /// </summary>
    [JsonPropertyName("detail")]
    public List<Reference>? Detail { get; set; }

    /// <summary>
    /// Description and context
    /// </summary>
    [JsonPropertyName("detail")]
    public FhirString Detail { get; set; }

    /// <summary>
    /// Authority for issue
    /// </summary>
    [JsonPropertyName("reference")]
    public FhirUri Reference { get; set; }

    /// <summary>
    /// Step taken to address
    /// </summary>
    [JsonPropertyName("mitigation")]
    public List<BackboneElement>? Mitigation { get; set; }

    /// <summary>
    /// What mitigation?
    /// </summary>
    [Required]
    [JsonPropertyName("action")]
    public CodeableConcept Action { get; set; }

    /// <summary>
    /// Date committed
    /// </summary>
    [JsonPropertyName("date")]
    public FhirDateTime Date { get; set; }

    /// <summary>
    /// Who is committing?
    /// </summary>
    [JsonPropertyName("author")]
    public Reference Author { get; set; }

    /// <summary>
    /// Validates this instance according to FHIR rules
    /// </summary>
    public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
    {
        foreach (var result in base.Validate(validationContext))
            yield return result;

        // TODO: Add specific validation rules
    }

}
