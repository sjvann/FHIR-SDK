// <auto-generated />
// FHIR R4 Resource: MedicinalProductPharmaceutical
// This file is automatically generated. Do not edit manually.

using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using Fhir.R4.Models.Base;
using Fhir.TypeFramework.DataTypes;

namespace Fhir.R4.Models.Resources;

/// <summary>
/// A pharmaceutical product described in terms of its composition and dose form.
/// </summary>
public class MedicinalProductPharmaceutical : DomainResource
{
    /// <summary>
    /// Resource type name
    /// </summary>
    [JsonPropertyName("resourceType")]
    public override string ResourceType => "MedicinalProductPharmaceutical";

    /// <summary>
    /// An identifier for the pharmaceutical medicinal product
    /// </summary>
    [JsonPropertyName("identifier")]
    public List<Identifier>? IdentifierValue { get; set; }

    /// <summary>
    /// The administrable dose form, after necessary reconstitution
    /// </summary>
    [Required]
    [JsonPropertyName("administrableDoseForm")]
    public CodeableConcept AdministrableDoseForm { get; set; }

    /// <summary>
    /// Todo
    /// </summary>
    [JsonPropertyName("unitOfPresentation")]
    public CodeableConcept UnitOfPresentation { get; set; }

    /// <summary>
    /// Ingredient
    /// </summary>
    [JsonPropertyName("ingredient")]
    public List<Reference>? Ingredient { get; set; }

    /// <summary>
    /// Accompanying device
    /// </summary>
    [JsonPropertyName("device")]
    public List<Reference>? Device { get; set; }

    /// <summary>
    /// Characteristics e.g. a products onset of action
    /// </summary>
    [JsonPropertyName("characteristics")]
    public List<BackboneElement>? Characteristics { get; set; }

    /// <summary>
    /// A coded characteristic
    /// </summary>
    [Required]
    [JsonPropertyName("code")]
    public CodeableConcept Code { get; set; }

    /// <summary>
    /// The status of characteristic e.g. assigned or pending
    /// </summary>
    [JsonPropertyName("status")]
    public CodeableConcept Status { get; set; }

    /// <summary>
    /// The path by which the pharmaceutical product is taken into or makes contact with the body
    /// </summary>
    [Required]
    [JsonPropertyName("routeOfAdministration")]
    public List<BackboneElement> RouteOfAdministration { get; set; }

    /// <summary>
    /// Coded expression for the route
    /// </summary>
    [Required]
    [JsonPropertyName("code")]
    public CodeableConcept Code { get; set; }

    /// <summary>
    /// The first dose (dose quantity) administered in humans can be specified, for a product under investigation, using a numerical value and its unit of measurement
    /// </summary>
    [JsonPropertyName("firstDose")]
    public Quantity FirstDose { get; set; }

    /// <summary>
    /// The maximum single dose that can be administered as per the protocol of a clinical trial can be specified using a numerical value and its unit of measurement
    /// </summary>
    [JsonPropertyName("maxSingleDose")]
    public Quantity MaxSingleDose { get; set; }

    /// <summary>
    /// The maximum dose per day (maximum dose quantity to be administered in any one 24-h period) that can be administered as per the protocol referenced in the clinical trial authorisation
    /// </summary>
    [JsonPropertyName("maxDosePerDay")]
    public Quantity MaxDosePerDay { get; set; }

    /// <summary>
    /// The maximum dose per treatment period that can be administered as per the protocol referenced in the clinical trial authorisation
    /// </summary>
    [JsonPropertyName("maxDosePerTreatmentPeriod")]
    public Ratio MaxDosePerTreatmentPeriod { get; set; }

    /// <summary>
    /// The maximum treatment period during which an Investigational Medicinal Product can be administered as per the protocol referenced in the clinical trial authorisation
    /// </summary>
    [JsonPropertyName("maxTreatmentPeriod")]
    public Duration MaxTreatmentPeriod { get; set; }

    /// <summary>
    /// A species for which this route applies
    /// </summary>
    [JsonPropertyName("targetSpecies")]
    public List<BackboneElement>? TargetSpecies { get; set; }

    /// <summary>
    /// Validates this instance according to FHIR rules
    /// </summary>
    public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
    {
        foreach (var result in base.Validate(validationContext))
            yield return result;

        // TODO: Add specific validation rules
    }

}
