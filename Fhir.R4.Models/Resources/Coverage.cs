// <auto-generated />
// FHIR R4 Resource: Coverage
// This file is automatically generated. Do not edit manually.

using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using Fhir.R4.Models.Base;
using Fhir.TypeFramework.DataTypes;

namespace Fhir.R4.Models.Resources;

/// <summary>
/// Financial instrument which may be used to reimburse or pay for health care products and services. Includes both insurance and self-payment.
/// </summary>
public class Coverage : DomainResource
{
    /// <summary>
    /// Resource type name
    /// </summary>
    [JsonPropertyName("resourceType")]
    public override string ResourceType => "Coverage";

    /// <summary>
    /// Business Identifier for the coverage
    /// </summary>
    [JsonPropertyName("identifier")]
    public List<Identifier>? IdentifierValue { get; set; }

    /// <summary>
    /// active | cancelled | draft | entered-in-error
    /// </summary>
    [Required]
    [JsonPropertyName("status")]
    public FhirCode Status { get; set; }

    /// <summary>
    /// Coverage category such as medical or accident
    /// </summary>
    [JsonPropertyName("type")]
    public CodeableConcept Type { get; set; }

    /// <summary>
    /// Owner of the policy
    /// </summary>
    [JsonPropertyName("policyHolder")]
    public Reference PolicyHolder { get; set; }

    /// <summary>
    /// Subscriber to the policy
    /// </summary>
    [JsonPropertyName("subscriber")]
    public Reference Subscriber { get; set; }

    /// <summary>
    /// ID assigned to the subscriber
    /// </summary>
    [JsonPropertyName("subscriberId")]
    public FhirString SubscriberId { get; set; }

    /// <summary>
    /// Plan beneficiary
    /// </summary>
    [Required]
    [JsonPropertyName("beneficiary")]
    public Reference Beneficiary { get; set; }

    /// <summary>
    /// Dependent number
    /// </summary>
    [JsonPropertyName("dependent")]
    public FhirString Dependent { get; set; }

    /// <summary>
    /// Beneficiary relationship to the subscriber
    /// </summary>
    [JsonPropertyName("relationship")]
    public CodeableConcept Relationship { get; set; }

    /// <summary>
    /// Coverage start and end dates
    /// </summary>
    [JsonPropertyName("period")]
    public Period PeriodValue { get; set; }

    /// <summary>
    /// Issuer of the policy
    /// </summary>
    [Required]
    [JsonPropertyName("payor")]
    public List<Reference> Payor { get; set; }

    /// <summary>
    /// Additional coverage classifications
    /// </summary>
    [JsonPropertyName("class")]
    public List<BackboneElement>? Class { get; set; }

    /// <summary>
    /// Type of class such as &apos;group&apos; or &apos;plan&apos;
    /// </summary>
    [Required]
    [JsonPropertyName("type")]
    public CodeableConcept Type { get; set; }

    /// <summary>
    /// Value associated with the type
    /// </summary>
    [Required]
    [JsonPropertyName("value")]
    public FhirString Value { get; set; }

    /// <summary>
    /// Human readable description of the type and value
    /// </summary>
    [JsonPropertyName("name")]
    public FhirString Name { get; set; }

    /// <summary>
    /// Relative order of the coverage
    /// </summary>
    [JsonPropertyName("order")]
    public FhirPositiveInt Order { get; set; }

    /// <summary>
    /// Insurer network
    /// </summary>
    [JsonPropertyName("network")]
    public FhirString Network { get; set; }

    /// <summary>
    /// Patient payments for services/products
    /// </summary>
    [JsonPropertyName("costToBeneficiary")]
    public List<BackboneElement>? CostToBeneficiary { get; set; }

    /// <summary>
    /// Cost category
    /// </summary>
    [JsonPropertyName("type")]
    public CodeableConcept Type { get; set; }

    /// <summary>
    /// Exceptions for patient payments
    /// </summary>
    [JsonPropertyName("exception")]
    public List<BackboneElement>? Exception { get; set; }

    /// <summary>
    /// Reimbursement to insurer
    /// </summary>
    [JsonPropertyName("subrogation")]
    public FhirBoolean Subrogation { get; set; }

    /// <summary>
    /// Contract details
    /// </summary>
    [JsonPropertyName("contract")]
    public List<Reference>? Contract { get; set; }

    /// <summary>
    /// Validates this instance according to FHIR rules
    /// </summary>
    public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
    {
        foreach (var result in base.Validate(validationContext))
            yield return result;

        // TODO: Add specific validation rules
    }

}
