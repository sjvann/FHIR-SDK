// <auto-generated />
// FHIR R4 Resource: Slot
// This file is automatically generated. Do not edit manually.

using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using Fhir.R4.Models.Base;
using Fhir.TypeFramework.DataTypes;

namespace Fhir.R4.Models.Resources;

/// <summary>
/// A slot of time on a schedule that may be available for booking appointments.
/// </summary>
public class Slot : DomainResource
{
    /// <summary>
    /// Resource type name
    /// </summary>
    [JsonPropertyName("resourceType")]
    public override string ResourceType => "Slot";

    /// <summary>
    /// External Ids for this item
    /// </summary>
    [JsonPropertyName("identifier")]
    public List<Identifier>? IdentifierValue { get; set; }

    /// <summary>
    /// A broad categorization of the service that is to be performed during this appointment
    /// </summary>
    [JsonPropertyName("serviceCategory")]
    public List<CodeableConcept>? ServiceCategory { get; set; }

    /// <summary>
    /// The type of appointments that can be booked into this slot (ideally this would be an identifiable service - which is at a location, rather than the location itself). If provided then this overrides the value provided on the availability resource
    /// </summary>
    [JsonPropertyName("serviceType")]
    public List<CodeableConcept>? ServiceType { get; set; }

    /// <summary>
    /// The specialty of a practitioner that would be required to perform the service requested in this appointment
    /// </summary>
    [JsonPropertyName("specialty")]
    public List<CodeableConcept>? Specialty { get; set; }

    /// <summary>
    /// The style of appointment or patient that may be booked in the slot (not service type)
    /// </summary>
    [JsonPropertyName("appointmentType")]
    public CodeableConcept AppointmentType { get; set; }

    /// <summary>
    /// The schedule resource that this slot defines an interval of status information
    /// </summary>
    [Required]
    [JsonPropertyName("schedule")]
    public Reference Schedule { get; set; }

    /// <summary>
    /// busy | free | busy-unavailable | busy-tentative | entered-in-error
    /// </summary>
    [Required]
    [JsonPropertyName("status")]
    public FhirCode Status { get; set; }

    /// <summary>
    /// Date/Time that the slot is to begin
    /// </summary>
    [Required]
    [JsonPropertyName("start")]
    public FhirInstant Start { get; set; }

    /// <summary>
    /// Date/Time that the slot is to conclude
    /// </summary>
    [Required]
    [JsonPropertyName("end")]
    public FhirInstant End { get; set; }

    /// <summary>
    /// This slot has already been overbooked, appointments are unlikely to be accepted for this time
    /// </summary>
    [JsonPropertyName("overbooked")]
    public FhirBoolean Overbooked { get; set; }

    /// <summary>
    /// Comments on the slot to describe any extended information. Such as custom constraints on the slot
    /// </summary>
    [JsonPropertyName("comment")]
    public FhirString Comment { get; set; }

    /// <summary>
    /// Validates this instance according to FHIR rules
    /// </summary>
    public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
    {
        foreach (var result in base.Validate(validationContext))
            yield return result;

        // TODO: Add specific validation rules
    }

}
