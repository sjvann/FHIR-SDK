// <auto-generated />
// FHIR R4 Resource: RelatedPerson
// This file is automatically generated. Do not edit manually.

using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using Fhir.R4.Models.Base;
using Fhir.TypeFramework.DataTypes;

namespace Fhir.R4.Models.Resources;

/// <summary>
/// Information about a person that is involved in the care for a patient, but who is not the target of healthcare, nor has a formal responsibility in the care process.
/// </summary>
public class RelatedPerson : DomainResource
{
    /// <summary>
    /// Resource type name
    /// </summary>
    [JsonPropertyName("resourceType")]
    public override string ResourceType => "RelatedPerson";

    /// <summary>
    /// A human identifier for this person
    /// </summary>
    [JsonPropertyName("identifier")]
    public List<Identifier>? IdentifierValue { get; set; }

    /// <summary>
    /// Whether this related person&apos;s record is in active use
    /// </summary>
    [JsonPropertyName("active")]
    public FhirBoolean Active { get; set; }

    /// <summary>
    /// The patient this person is related to
    /// </summary>
    [Required]
    [JsonPropertyName("patient")]
    public Reference Patient { get; set; }

    /// <summary>
    /// The nature of the relationship
    /// </summary>
    [JsonPropertyName("relationship")]
    public List<CodeableConcept>? Relationship { get; set; }

    /// <summary>
    /// A name associated with the person
    /// </summary>
    [JsonPropertyName("name")]
    public List<HumanName>? Name { get; set; }

    /// <summary>
    /// A contact detail for the person
    /// </summary>
    [JsonPropertyName("telecom")]
    public List<ContactPoint>? Telecom { get; set; }

    /// <summary>
    /// male | female | other | unknown
    /// </summary>
    [JsonPropertyName("gender")]
    public FhirCode Gender { get; set; }

    /// <summary>
    /// The date on which the related person was born
    /// </summary>
    [JsonPropertyName("birthDate")]
    public FhirDate BirthDate { get; set; }

    /// <summary>
    /// Address where the related person can be contacted or visited
    /// </summary>
    [JsonPropertyName("address")]
    public List<Address>? AddressValue { get; set; }

    /// <summary>
    /// Image of the person
    /// </summary>
    [JsonPropertyName("photo")]
    public List<Attachment>? Photo { get; set; }

    /// <summary>
    /// Period of time that this relationship is considered valid
    /// </summary>
    [JsonPropertyName("period")]
    public Period PeriodValue { get; set; }

    /// <summary>
    /// A language which may be used to communicate with about the patient&apos;s health
    /// </summary>
    [JsonPropertyName("communication")]
    public List<BackboneElement>? Communication { get; set; }

    /// <summary>
    /// Validates this instance according to FHIR rules
    /// </summary>
    public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
    {
        foreach (var result in base.Validate(validationContext))
            yield return result;

        // TODO: Add specific validation rules
    }

}
