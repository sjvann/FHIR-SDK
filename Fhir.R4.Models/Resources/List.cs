// <auto-generated />
// FHIR R4 Resource: List
// This file is automatically generated. Do not edit manually.

using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using Fhir.R4.Models.Base;
using Fhir.TypeFramework.DataTypes;

namespace Fhir.R4.Models.Resources;

/// <summary>
/// A list is a curated collection of resources.
/// </summary>
public class List : DomainResource
{
    /// <summary>
    /// Resource type name
    /// </summary>
    [JsonPropertyName("resourceType")]
    public override string ResourceType => "List";

    /// <summary>
    /// Business identifier
    /// </summary>
    [JsonPropertyName("identifier")]
    public List<Identifier>? IdentifierValue { get; set; }

    /// <summary>
    /// current | retired | entered-in-error
    /// </summary>
    [Required]
    [JsonPropertyName("status")]
    public FhirCode Status { get; set; }

    /// <summary>
    /// working | snapshot | changes
    /// </summary>
    [Required]
    [JsonPropertyName("mode")]
    public FhirCode Mode { get; set; }

    /// <summary>
    /// Descriptive name for the list
    /// </summary>
    [JsonPropertyName("title")]
    public FhirString Title { get; set; }

    /// <summary>
    /// What the purpose of this list is
    /// </summary>
    [JsonPropertyName("code")]
    public CodeableConcept Code { get; set; }

    /// <summary>
    /// If all resources have the same subject
    /// </summary>
    [JsonPropertyName("subject")]
    public Reference Subject { get; set; }

    /// <summary>
    /// Context in which list created
    /// </summary>
    [JsonPropertyName("encounter")]
    public Reference Encounter { get; set; }

    /// <summary>
    /// When the list was prepared
    /// </summary>
    [JsonPropertyName("date")]
    public FhirDateTime Date { get; set; }

    /// <summary>
    /// Who and/or what defined the list contents (aka Author)
    /// </summary>
    [JsonPropertyName("source")]
    public Reference Source { get; set; }

    /// <summary>
    /// What order the list has
    /// </summary>
    [JsonPropertyName("orderedBy")]
    public CodeableConcept OrderedBy { get; set; }

    /// <summary>
    /// Comments about the list
    /// </summary>
    [JsonPropertyName("note")]
    public List<Annotation>? Note { get; set; }

    /// <summary>
    /// Entries in the list
    /// </summary>
    [JsonPropertyName("entry")]
    public List<BackboneElement>? Entry { get; set; }

    /// <summary>
    /// Why list is empty
    /// </summary>
    [JsonPropertyName("emptyReason")]
    public CodeableConcept EmptyReason { get; set; }

    /// <summary>
    /// Validates this instance according to FHIR rules
    /// </summary>
    public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
    {
        foreach (var result in base.Validate(validationContext))
            yield return result;

        // TODO: Add specific validation rules
    }

}
