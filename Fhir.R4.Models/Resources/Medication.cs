// <auto-generated />
// FHIR R4 Resource: Medication
// This file is automatically generated. Do not edit manually.

using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using Fhir.R4.Models.Base;
using Fhir.TypeFramework.DataTypes;

namespace Fhir.R4.Models.Resources;

/// <summary>
/// This resource is primarily used for the identification and definition of a medication for the purposes of prescribing, dispensing, and administering a medication as well as for making statements about medication use.
/// </summary>
public class Medication : DomainResource
{
    /// <summary>
    /// Resource type name
    /// </summary>
    [JsonPropertyName("resourceType")]
    public override string ResourceType => "Medication";

    /// <summary>
    /// Business identifier for this medication
    /// </summary>
    [JsonPropertyName("identifier")]
    public List<Identifier>? IdentifierValue { get; set; }

    /// <summary>
    /// Codes that identify this medication
    /// </summary>
    [JsonPropertyName("code")]
    public CodeableConcept Code { get; set; }

    /// <summary>
    /// active | inactive | entered-in-error
    /// </summary>
    [JsonPropertyName("status")]
    public FhirCode Status { get; set; }

    /// <summary>
    /// Manufacturer of the item
    /// </summary>
    [JsonPropertyName("manufacturer")]
    public Reference Manufacturer { get; set; }

    /// <summary>
    /// powder | tablets | capsule +
    /// </summary>
    [JsonPropertyName("form")]
    public CodeableConcept Form { get; set; }

    /// <summary>
    /// Amount of drug in package
    /// </summary>
    [JsonPropertyName("amount")]
    public Ratio Amount { get; set; }

    /// <summary>
    /// Active or inactive ingredient
    /// </summary>
    [JsonPropertyName("ingredient")]
    public List<BackboneElement>? Ingredient { get; set; }

    /// <summary>
    /// Active ingredient indicator
    /// </summary>
    [JsonPropertyName("isActive")]
    public FhirBoolean IsActive { get; set; }

    /// <summary>
    /// Quantity of ingredient present
    /// </summary>
    [JsonPropertyName("strength")]
    public Ratio Strength { get; set; }

    /// <summary>
    /// Details about packaged medications
    /// </summary>
    [JsonPropertyName("batch")]
    public BackboneElement Batch { get; set; }

    /// <summary>
    /// Identifier assigned to batch
    /// </summary>
    [JsonPropertyName("lotNumber")]
    public FhirString LotNumber { get; set; }

    /// <summary>
    /// When batch will expire
    /// </summary>
    [JsonPropertyName("expirationDate")]
    public FhirDateTime ExpirationDate { get; set; }

    /// <summary>
    /// Validates this instance according to FHIR rules
    /// </summary>
    public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
    {
        foreach (var result in base.Validate(validationContext))
            yield return result;

        // TODO: Add specific validation rules
    }

}
