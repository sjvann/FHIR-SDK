// <auto-generated />
// FHIR R4 Resource: ActivityDefinition
// This file is automatically generated. Do not edit manually.

using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using Fhir.R4.Models.Base;
using Fhir.TypeFramework.DataTypes;

namespace Fhir.R4.Models.Resources;

/// <summary>
/// This resource allows for the definition of some activity to be performed, independent of a particular patient, practitioner, or other performance context.
/// </summary>
public class ActivityDefinition : DomainResource
{
    /// <summary>
    /// Resource type name
    /// </summary>
    [JsonPropertyName("resourceType")]
    public override string ResourceType => "ActivityDefinition";

    /// <summary>
    /// Canonical identifier for this activity definition, represented as a URI (globally unique)
    /// </summary>
    [JsonPropertyName("url")]
    public FhirUri Url { get; set; }

    /// <summary>
    /// Additional identifier for the activity definition
    /// </summary>
    [JsonPropertyName("identifier")]
    public List<Identifier>? IdentifierValue { get; set; }

    /// <summary>
    /// Business version of the activity definition
    /// </summary>
    [JsonPropertyName("version")]
    public FhirString Version { get; set; }

    /// <summary>
    /// Name for this activity definition (computer friendly)
    /// </summary>
    [JsonPropertyName("name")]
    public FhirString Name { get; set; }

    /// <summary>
    /// Name for this activity definition (human friendly)
    /// </summary>
    [JsonPropertyName("title")]
    public FhirString Title { get; set; }

    /// <summary>
    /// Subordinate title of the activity definition
    /// </summary>
    [JsonPropertyName("subtitle")]
    public FhirString Subtitle { get; set; }

    /// <summary>
    /// draft | active | retired | unknown
    /// </summary>
    [Required]
    [JsonPropertyName("status")]
    public FhirCode Status { get; set; }

    /// <summary>
    /// For testing purposes, not real usage
    /// </summary>
    [JsonPropertyName("experimental")]
    public FhirBoolean Experimental { get; set; }

    /// <summary>
    /// Date last changed
    /// </summary>
    [JsonPropertyName("date")]
    public FhirDateTime Date { get; set; }

    /// <summary>
    /// Name of the publisher (organization or individual)
    /// </summary>
    [JsonPropertyName("publisher")]
    public FhirString Publisher { get; set; }

    /// <summary>
    /// Contact details for the publisher
    /// </summary>
    [JsonPropertyName("contact")]
    public List<ContactDetail>? Contact { get; set; }

    /// <summary>
    /// Natural language description of the activity definition
    /// </summary>
    [JsonPropertyName("description")]
    public FhirMarkdown Description { get; set; }

    /// <summary>
    /// The context that the content is intended to support
    /// </summary>
    [JsonPropertyName("useContext")]
    public List<UsageContext>? UseContext { get; set; }

    /// <summary>
    /// Intended jurisdiction for activity definition (if applicable)
    /// </summary>
    [JsonPropertyName("jurisdiction")]
    public List<CodeableConcept>? Jurisdiction { get; set; }

    /// <summary>
    /// Why this activity definition is defined
    /// </summary>
    [JsonPropertyName("purpose")]
    public FhirMarkdown Purpose { get; set; }

    /// <summary>
    /// Describes the clinical usage of the activity definition
    /// </summary>
    [JsonPropertyName("usage")]
    public FhirString Usage { get; set; }

    /// <summary>
    /// Use and/or publishing restrictions
    /// </summary>
    [JsonPropertyName("copyright")]
    public FhirMarkdown Copyright { get; set; }

    /// <summary>
    /// When the activity definition was approved by publisher
    /// </summary>
    [JsonPropertyName("approvalDate")]
    public FhirDate ApprovalDate { get; set; }

    /// <summary>
    /// When the activity definition was last reviewed
    /// </summary>
    [JsonPropertyName("lastReviewDate")]
    public FhirDate LastReviewDate { get; set; }

    /// <summary>
    /// When the activity definition is expected to be used
    /// </summary>
    [JsonPropertyName("effectivePeriod")]
    public Period EffectivePeriod { get; set; }

    /// <summary>
    /// E.g. Education, Treatment, Assessment, etc.
    /// </summary>
    [JsonPropertyName("topic")]
    public List<CodeableConcept>? Topic { get; set; }

    /// <summary>
    /// Who authored the content
    /// </summary>
    [JsonPropertyName("author")]
    public List<ContactDetail>? Author { get; set; }

    /// <summary>
    /// Who edited the content
    /// </summary>
    [JsonPropertyName("editor")]
    public List<ContactDetail>? Editor { get; set; }

    /// <summary>
    /// Who reviewed the content
    /// </summary>
    [JsonPropertyName("reviewer")]
    public List<ContactDetail>? Reviewer { get; set; }

    /// <summary>
    /// Who endorsed the content
    /// </summary>
    [JsonPropertyName("endorser")]
    public List<ContactDetail>? Endorser { get; set; }

    /// <summary>
    /// Additional documentation, citations, etc.
    /// </summary>
    [JsonPropertyName("relatedArtifact")]
    public List<RelatedArtifact>? RelatedArtifactValue { get; set; }

    /// <summary>
    /// Logic used by the activity definition
    /// </summary>
    [JsonPropertyName("library")]
    public List<FhirCanonical>? Library { get; set; }

    /// <summary>
    /// Kind of resource
    /// </summary>
    [JsonPropertyName("kind")]
    public FhirCode Kind { get; set; }

    /// <summary>
    /// What profile the resource needs to conform to
    /// </summary>
    [JsonPropertyName("profile")]
    public FhirCanonical Profile { get; set; }

    /// <summary>
    /// Detail type of activity
    /// </summary>
    [JsonPropertyName("code")]
    public CodeableConcept Code { get; set; }

    /// <summary>
    /// proposal | plan | directive | order | original-order | reflex-order | filler-order | instance-order | option
    /// </summary>
    [JsonPropertyName("intent")]
    public FhirCode Intent { get; set; }

    /// <summary>
    /// routine | urgent | asap | stat
    /// </summary>
    [JsonPropertyName("priority")]
    public FhirCode Priority { get; set; }

    /// <summary>
    /// True if the activity should not be performed
    /// </summary>
    [JsonPropertyName("doNotPerform")]
    public FhirBoolean DoNotPerform { get; set; }

    /// <summary>
    /// Where it should happen
    /// </summary>
    [JsonPropertyName("location")]
    public Reference Location { get; set; }

    /// <summary>
    /// Who should participate in the action
    /// </summary>
    [JsonPropertyName("participant")]
    public List<BackboneElement>? Participant { get; set; }

    /// <summary>
    /// How much is administered/consumed/supplied
    /// </summary>
    [JsonPropertyName("quantity")]
    public Quantity QuantityValue { get; set; }

    /// <summary>
    /// Detailed dosage instructions
    /// </summary>
    [JsonPropertyName("dosage")]
    public List<Dosage>? DosageValue { get; set; }

    /// <summary>
    /// What part of body to perform on
    /// </summary>
    [JsonPropertyName("bodySite")]
    public List<CodeableConcept>? BodySite { get; set; }

    /// <summary>
    /// What specimens are required to perform this action
    /// </summary>
    [JsonPropertyName("specimenRequirement")]
    public List<Reference>? SpecimenRequirement { get; set; }

    /// <summary>
    /// What observations are required to perform this action
    /// </summary>
    [JsonPropertyName("observationRequirement")]
    public List<Reference>? ObservationRequirement { get; set; }

    /// <summary>
    /// What observations must be produced by this action
    /// </summary>
    [JsonPropertyName("observationResultRequirement")]
    public List<Reference>? ObservationResultRequirement { get; set; }

    /// <summary>
    /// Transform to apply the template
    /// </summary>
    [JsonPropertyName("transform")]
    public FhirCanonical Transform { get; set; }

    /// <summary>
    /// Dynamic aspects of the definition
    /// </summary>
    [JsonPropertyName("dynamicValue")]
    public List<BackboneElement>? DynamicValue { get; set; }

    /// <summary>
    /// The path to the element to be set dynamically
    /// </summary>
    [Required]
    [JsonPropertyName("path")]
    public FhirString Path { get; set; }

    /// <summary>
    /// An expression that provides the dynamic value for the customization
    /// </summary>
    [Required]
    [JsonPropertyName("expression")]
    public Expression ExpressionValue { get; set; }

    /// <summary>
    /// Validates this instance according to FHIR rules
    /// </summary>
    public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
    {
        foreach (var result in base.Validate(validationContext))
            yield return result;

        // TODO: Add specific validation rules
    }

}
