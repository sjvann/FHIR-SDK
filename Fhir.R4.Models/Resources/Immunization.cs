// <auto-generated />
// FHIR R4 Resource: Immunization
// This file is automatically generated. Do not edit manually.

using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using Fhir.R4.Models.Base;
using Fhir.TypeFramework.DataTypes;

namespace Fhir.R4.Models.Resources;

/// <summary>
/// Describes the event of a patient being administered a vaccine or a record of an immunization as reported by a patient, a clinician or another party.
/// </summary>
public class Immunization : DomainResource
{
    /// <summary>
    /// Resource type name
    /// </summary>
    [JsonPropertyName("resourceType")]
    public override string ResourceType => "Immunization";

    /// <summary>
    /// Business identifier
    /// </summary>
    [JsonPropertyName("identifier")]
    public List<Identifier>? IdentifierValue { get; set; }

    /// <summary>
    /// completed | entered-in-error | not-done
    /// </summary>
    [Required]
    [JsonPropertyName("status")]
    public FhirCode Status { get; set; }

    /// <summary>
    /// Reason not done
    /// </summary>
    [JsonPropertyName("statusReason")]
    public CodeableConcept StatusReason { get; set; }

    /// <summary>
    /// Vaccine product administered
    /// </summary>
    [Required]
    [JsonPropertyName("vaccineCode")]
    public CodeableConcept VaccineCode { get; set; }

    /// <summary>
    /// Who was immunized
    /// </summary>
    [Required]
    [JsonPropertyName("patient")]
    public Reference Patient { get; set; }

    /// <summary>
    /// Encounter immunization was part of
    /// </summary>
    [JsonPropertyName("encounter")]
    public Reference Encounter { get; set; }

    /// <summary>
    /// When the immunization was first captured in the subject&apos;s record
    /// </summary>
    [JsonPropertyName("recorded")]
    public FhirDateTime Recorded { get; set; }

    /// <summary>
    /// Indicates context the data was recorded in
    /// </summary>
    [JsonPropertyName("primarySource")]
    public FhirBoolean PrimarySource { get; set; }

    /// <summary>
    /// Indicates the source of a secondarily reported record
    /// </summary>
    [JsonPropertyName("reportOrigin")]
    public CodeableConcept ReportOrigin { get; set; }

    /// <summary>
    /// Where immunization occurred
    /// </summary>
    [JsonPropertyName("location")]
    public Reference Location { get; set; }

    /// <summary>
    /// Vaccine manufacturer
    /// </summary>
    [JsonPropertyName("manufacturer")]
    public Reference Manufacturer { get; set; }

    /// <summary>
    /// Vaccine lot number
    /// </summary>
    [JsonPropertyName("lotNumber")]
    public FhirString LotNumber { get; set; }

    /// <summary>
    /// Vaccine expiration date
    /// </summary>
    [JsonPropertyName("expirationDate")]
    public FhirDate ExpirationDate { get; set; }

    /// <summary>
    /// Body site vaccine  was administered
    /// </summary>
    [JsonPropertyName("site")]
    public CodeableConcept Site { get; set; }

    /// <summary>
    /// How vaccine entered body
    /// </summary>
    [JsonPropertyName("route")]
    public CodeableConcept Route { get; set; }

    /// <summary>
    /// Amount of vaccine administered
    /// </summary>
    [JsonPropertyName("doseQuantity")]
    public Quantity DoseQuantity { get; set; }

    /// <summary>
    /// Who performed event
    /// </summary>
    [JsonPropertyName("performer")]
    public List<BackboneElement>? Performer { get; set; }

    /// <summary>
    /// Additional immunization notes
    /// </summary>
    [JsonPropertyName("note")]
    public List<Annotation>? Note { get; set; }

    /// <summary>
    /// Why immunization occurred
    /// </summary>
    [JsonPropertyName("reasonCode")]
    public List<CodeableConcept>? ReasonCode { get; set; }

    /// <summary>
    /// Why immunization occurred
    /// </summary>
    [JsonPropertyName("reasonReference")]
    public List<Reference>? ReasonReference { get; set; }

    /// <summary>
    /// Dose potency
    /// </summary>
    [JsonPropertyName("isSubpotent")]
    public FhirBoolean IsSubpotent { get; set; }

    /// <summary>
    /// Reason for being subpotent
    /// </summary>
    [JsonPropertyName("subpotentReason")]
    public List<CodeableConcept>? SubpotentReason { get; set; }

    /// <summary>
    /// Educational material presented to patient
    /// </summary>
    [JsonPropertyName("education")]
    public List<BackboneElement>? Education { get; set; }

    /// <summary>
    /// Educational material document identifier
    /// </summary>
    [JsonPropertyName("documentType")]
    public FhirString DocumentType { get; set; }

    /// <summary>
    /// Educational material reference pointer
    /// </summary>
    [JsonPropertyName("reference")]
    public FhirUri Reference { get; set; }

    /// <summary>
    /// Educational material publication date
    /// </summary>
    [JsonPropertyName("publicationDate")]
    public FhirDateTime PublicationDate { get; set; }

    /// <summary>
    /// Educational material presentation date
    /// </summary>
    [JsonPropertyName("presentationDate")]
    public FhirDateTime PresentationDate { get; set; }

    /// <summary>
    /// Patient eligibility for a vaccination program
    /// </summary>
    [JsonPropertyName("programEligibility")]
    public List<CodeableConcept>? ProgramEligibility { get; set; }

    /// <summary>
    /// Funding source for the vaccine
    /// </summary>
    [JsonPropertyName("fundingSource")]
    public CodeableConcept FundingSource { get; set; }

    /// <summary>
    /// Details of a reaction that follows immunization
    /// </summary>
    [JsonPropertyName("reaction")]
    public List<BackboneElement>? Reaction { get; set; }

    /// <summary>
    /// When reaction started
    /// </summary>
    [JsonPropertyName("date")]
    public FhirDateTime Date { get; set; }

    /// <summary>
    /// Additional information on reaction
    /// </summary>
    [JsonPropertyName("detail")]
    public Reference Detail { get; set; }

    /// <summary>
    /// Indicates self-reported reaction
    /// </summary>
    [JsonPropertyName("reported")]
    public FhirBoolean Reported { get; set; }

    /// <summary>
    /// Protocol followed by the provider
    /// </summary>
    [JsonPropertyName("protocolApplied")]
    public List<BackboneElement>? ProtocolApplied { get; set; }

    /// <summary>
    /// Name of vaccine series
    /// </summary>
    [JsonPropertyName("series")]
    public FhirString Series { get; set; }

    /// <summary>
    /// Who is responsible for publishing the recommendations
    /// </summary>
    [JsonPropertyName("authority")]
    public Reference Authority { get; set; }

    /// <summary>
    /// Vaccine preventatable disease being targetted
    /// </summary>
    [JsonPropertyName("targetDisease")]
    public List<CodeableConcept>? TargetDisease { get; set; }

    /// <summary>
    /// Validates this instance according to FHIR rules
    /// </summary>
    public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
    {
        foreach (var result in base.Validate(validationContext))
            yield return result;

        // TODO: Add specific validation rules
    }

}
