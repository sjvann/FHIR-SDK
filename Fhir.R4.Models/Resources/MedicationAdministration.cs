// <auto-generated />
// FHIR R4 Resource: MedicationAdministration
// This file is automatically generated. Do not edit manually.

using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using Fhir.R4.Models.Base;
using Fhir.TypeFramework.DataTypes;

namespace Fhir.R4.Models.Resources;

/// <summary>
/// Describes the event of a patient consuming or otherwise being administered a medication.  This may be as simple as swallowing a tablet or it may be a long running infusion.  Related resources tie this event to the authorizing prescription, and the specific encounter between patient and health care practitioner.
/// </summary>
public class MedicationAdministration : DomainResource
{
    /// <summary>
    /// Resource type name
    /// </summary>
    [JsonPropertyName("resourceType")]
    public override string ResourceType => "MedicationAdministration";

    /// <summary>
    /// External identifier
    /// </summary>
    [JsonPropertyName("identifier")]
    public List<Identifier>? IdentifierValue { get; set; }

    /// <summary>
    /// Instantiates protocol or definition
    /// </summary>
    [JsonPropertyName("instantiates")]
    public List<FhirUri>? Instantiates { get; set; }

    /// <summary>
    /// Part of referenced event
    /// </summary>
    [JsonPropertyName("partOf")]
    public List<Reference>? PartOf { get; set; }

    /// <summary>
    /// in-progress | not-done | on-hold | completed | entered-in-error | stopped | unknown
    /// </summary>
    [Required]
    [JsonPropertyName("status")]
    public FhirCode Status { get; set; }

    /// <summary>
    /// Reason administration not performed
    /// </summary>
    [JsonPropertyName("statusReason")]
    public List<CodeableConcept>? StatusReason { get; set; }

    /// <summary>
    /// Type of medication usage
    /// </summary>
    [JsonPropertyName("category")]
    public CodeableConcept Category { get; set; }

    /// <summary>
    /// Who received medication
    /// </summary>
    [Required]
    [JsonPropertyName("subject")]
    public Reference Subject { get; set; }

    /// <summary>
    /// Encounter or Episode of Care administered as part of
    /// </summary>
    [JsonPropertyName("context")]
    public Reference Context { get; set; }

    /// <summary>
    /// Additional information to support administration
    /// </summary>
    [JsonPropertyName("supportingInformation")]
    public List<Reference>? SupportingInformation { get; set; }

    /// <summary>
    /// Who performed the medication administration and what they did
    /// </summary>
    [JsonPropertyName("performer")]
    public List<BackboneElement>? Performer { get; set; }

    /// <summary>
    /// Reason administration performed
    /// </summary>
    [JsonPropertyName("reasonCode")]
    public List<CodeableConcept>? ReasonCode { get; set; }

    /// <summary>
    /// Condition or observation that supports why the medication was administered
    /// </summary>
    [JsonPropertyName("reasonReference")]
    public List<Reference>? ReasonReference { get; set; }

    /// <summary>
    /// Request administration performed against
    /// </summary>
    [JsonPropertyName("request")]
    public Reference Request { get; set; }

    /// <summary>
    /// Device used to administer
    /// </summary>
    [JsonPropertyName("device")]
    public List<Reference>? Device { get; set; }

    /// <summary>
    /// Information about the administration
    /// </summary>
    [JsonPropertyName("note")]
    public List<Annotation>? Note { get; set; }

    /// <summary>
    /// Details of how medication was taken
    /// </summary>
    [JsonPropertyName("dosage")]
    public BackboneElement Dosage { get; set; }

    /// <summary>
    /// Body site administered to
    /// </summary>
    [JsonPropertyName("site")]
    public CodeableConcept Site { get; set; }

    /// <summary>
    /// Path of substance into body
    /// </summary>
    [JsonPropertyName("route")]
    public CodeableConcept Route { get; set; }

    /// <summary>
    /// How drug was administered
    /// </summary>
    [JsonPropertyName("method")]
    public CodeableConcept Method { get; set; }

    /// <summary>
    /// Amount of medication per dose
    /// </summary>
    [JsonPropertyName("dose")]
    public Quantity Dose { get; set; }

    /// <summary>
    /// A list of events of interest in the lifecycle
    /// </summary>
    [JsonPropertyName("eventHistory")]
    public List<Reference>? EventHistory { get; set; }

    /// <summary>
    /// Validates this instance according to FHIR rules
    /// </summary>
    public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
    {
        foreach (var result in base.Validate(validationContext))
            yield return result;

        // TODO: Add specific validation rules
    }

}
