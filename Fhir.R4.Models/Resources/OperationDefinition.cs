// <auto-generated />
// FHIR R4 Resource: OperationDefinition
// This file is automatically generated. Do not edit manually.

using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using Fhir.R4.Models.Base;
using Fhir.TypeFramework.DataTypes;

namespace Fhir.R4.Models.Resources;

/// <summary>
/// A formal computable definition of an operation (on the RESTful interface) or a named query (using the search interaction).
/// </summary>
public class OperationDefinition : DomainResource
{
    /// <summary>
    /// Resource type name
    /// </summary>
    [JsonPropertyName("resourceType")]
    public override string ResourceType => "OperationDefinition";

    /// <summary>
    /// Canonical identifier for this operation definition, represented as a URI (globally unique)
    /// </summary>
    [JsonPropertyName("url")]
    public FhirUri Url { get; set; }

    /// <summary>
    /// Business version of the operation definition
    /// </summary>
    [JsonPropertyName("version")]
    public FhirString Version { get; set; }

    /// <summary>
    /// Name for this operation definition (computer friendly)
    /// </summary>
    [Required]
    [JsonPropertyName("name")]
    public FhirString Name { get; set; }

    /// <summary>
    /// Name for this operation definition (human friendly)
    /// </summary>
    [JsonPropertyName("title")]
    public FhirString Title { get; set; }

    /// <summary>
    /// draft | active | retired | unknown
    /// </summary>
    [Required]
    [JsonPropertyName("status")]
    public FhirCode Status { get; set; }

    /// <summary>
    /// operation | query
    /// </summary>
    [Required]
    [JsonPropertyName("kind")]
    public FhirCode Kind { get; set; }

    /// <summary>
    /// For testing purposes, not real usage
    /// </summary>
    [JsonPropertyName("experimental")]
    public FhirBoolean Experimental { get; set; }

    /// <summary>
    /// Date last changed
    /// </summary>
    [JsonPropertyName("date")]
    public FhirDateTime Date { get; set; }

    /// <summary>
    /// Name of the publisher (organization or individual)
    /// </summary>
    [JsonPropertyName("publisher")]
    public FhirString Publisher { get; set; }

    /// <summary>
    /// Contact details for the publisher
    /// </summary>
    [JsonPropertyName("contact")]
    public List<ContactDetail>? Contact { get; set; }

    /// <summary>
    /// Natural language description of the operation definition
    /// </summary>
    [JsonPropertyName("description")]
    public FhirMarkdown Description { get; set; }

    /// <summary>
    /// The context that the content is intended to support
    /// </summary>
    [JsonPropertyName("useContext")]
    public List<UsageContext>? UseContext { get; set; }

    /// <summary>
    /// Intended jurisdiction for operation definition (if applicable)
    /// </summary>
    [JsonPropertyName("jurisdiction")]
    public List<CodeableConcept>? Jurisdiction { get; set; }

    /// <summary>
    /// Why this operation definition is defined
    /// </summary>
    [JsonPropertyName("purpose")]
    public FhirMarkdown Purpose { get; set; }

    /// <summary>
    /// Whether content is changed by the operation
    /// </summary>
    [JsonPropertyName("affectsState")]
    public FhirBoolean AffectsState { get; set; }

    /// <summary>
    /// Name used to invoke the operation
    /// </summary>
    [Required]
    [JsonPropertyName("code")]
    public FhirCode CodeValue { get; set; }

    /// <summary>
    /// Additional information about use
    /// </summary>
    [JsonPropertyName("comment")]
    public FhirMarkdown Comment { get; set; }

    /// <summary>
    /// Marks this as a profile of the base
    /// </summary>
    [JsonPropertyName("base")]
    public FhirCanonical Base { get; set; }

    /// <summary>
    /// Types this operation applies to
    /// </summary>
    [JsonPropertyName("resource")]
    public List<FhirCode>? Resource { get; set; }

    /// <summary>
    /// Invoke at the system level?
    /// </summary>
    [Required]
    [JsonPropertyName("system")]
    public FhirBoolean System { get; set; }

    /// <summary>
    /// Invoke at the type level?
    /// </summary>
    [Required]
    [JsonPropertyName("type")]
    public FhirBoolean Type { get; set; }

    /// <summary>
    /// Invoke on an instance?
    /// </summary>
    [Required]
    [JsonPropertyName("instance")]
    public FhirBoolean Instance { get; set; }

    /// <summary>
    /// Validation information for in parameters
    /// </summary>
    [JsonPropertyName("inputProfile")]
    public FhirCanonical InputProfile { get; set; }

    /// <summary>
    /// Validation information for out parameters
    /// </summary>
    [JsonPropertyName("outputProfile")]
    public FhirCanonical OutputProfile { get; set; }

    /// <summary>
    /// Parameters for the operation/query
    /// </summary>
    [JsonPropertyName("parameter")]
    public List<BackboneElement>? Parameter { get; set; }

    /// <summary>
    /// Define overloaded variants for when  generating code
    /// </summary>
    [JsonPropertyName("overload")]
    public List<BackboneElement>? Overload { get; set; }

    /// <summary>
    /// Name of parameter to include in overload
    /// </summary>
    [JsonPropertyName("parameterName")]
    public List<FhirString>? ParameterName { get; set; }

    /// <summary>
    /// Comments to go on overload
    /// </summary>
    [JsonPropertyName("comment")]
    public FhirString Comment { get; set; }

    /// <summary>
    /// Validates this instance according to FHIR rules
    /// </summary>
    public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
    {
        foreach (var result in base.Validate(validationContext))
            yield return result;

        // TODO: Add specific validation rules
    }

}
