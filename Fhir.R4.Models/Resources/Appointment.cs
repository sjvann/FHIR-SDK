// <auto-generated />
// FHIR R4 Resource: Appointment
// This file is automatically generated. Do not edit manually.

using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using Fhir.R4.Models.Base;
using Fhir.TypeFramework.DataTypes;

namespace Fhir.R4.Models.Resources;

/// <summary>
/// A booking of a healthcare event among patient(s), practitioner(s), related person(s) and/or device(s) for a specific date/time. This may result in one or more Encounter(s).
/// </summary>
public class Appointment : DomainResource
{
    /// <summary>
    /// Resource type name
    /// </summary>
    [JsonPropertyName("resourceType")]
    public override string ResourceType => "Appointment";

    /// <summary>
    /// External Ids for this item
    /// </summary>
    [JsonPropertyName("identifier")]
    public List<Identifier>? IdentifierValue { get; set; }

    /// <summary>
    /// proposed | pending | booked | arrived | fulfilled | cancelled | noshow | entered-in-error | checked-in | waitlist
    /// </summary>
    [Required]
    [JsonPropertyName("status")]
    public FhirCode Status { get; set; }

    /// <summary>
    /// The coded reason for the appointment being cancelled
    /// </summary>
    [JsonPropertyName("cancelationReason")]
    public CodeableConcept CancelationReason { get; set; }

    /// <summary>
    /// A broad categorization of the service that is to be performed during this appointment
    /// </summary>
    [JsonPropertyName("serviceCategory")]
    public List<CodeableConcept>? ServiceCategory { get; set; }

    /// <summary>
    /// The specific service that is to be performed during this appointment
    /// </summary>
    [JsonPropertyName("serviceType")]
    public List<CodeableConcept>? ServiceType { get; set; }

    /// <summary>
    /// The specialty of a practitioner that would be required to perform the service requested in this appointment
    /// </summary>
    [JsonPropertyName("specialty")]
    public List<CodeableConcept>? Specialty { get; set; }

    /// <summary>
    /// The style of appointment or patient that has been booked in the slot (not service type)
    /// </summary>
    [JsonPropertyName("appointmentType")]
    public CodeableConcept AppointmentType { get; set; }

    /// <summary>
    /// Coded reason this appointment is scheduled
    /// </summary>
    [JsonPropertyName("reasonCode")]
    public List<CodeableConcept>? ReasonCode { get; set; }

    /// <summary>
    /// Reason the appointment is to take place (resource)
    /// </summary>
    [JsonPropertyName("reasonReference")]
    public List<Reference>? ReasonReference { get; set; }

    /// <summary>
    /// Used to make informed decisions if needing to re-prioritize
    /// </summary>
    [JsonPropertyName("priority")]
    public FhirUnsignedInt Priority { get; set; }

    /// <summary>
    /// Shown on a subject line in a meeting request, or appointment list
    /// </summary>
    [JsonPropertyName("description")]
    public FhirString Description { get; set; }

    /// <summary>
    /// Additional information to support the appointment
    /// </summary>
    [JsonPropertyName("supportingInformation")]
    public List<Reference>? SupportingInformation { get; set; }

    /// <summary>
    /// When appointment is to take place
    /// </summary>
    [JsonPropertyName("start")]
    public FhirInstant Start { get; set; }

    /// <summary>
    /// When appointment is to conclude
    /// </summary>
    [JsonPropertyName("end")]
    public FhirInstant End { get; set; }

    /// <summary>
    /// Can be less than start/end (e.g. estimate)
    /// </summary>
    [JsonPropertyName("minutesDuration")]
    public FhirPositiveInt MinutesDuration { get; set; }

    /// <summary>
    /// The slots that this appointment is filling
    /// </summary>
    [JsonPropertyName("slot")]
    public List<Reference>? Slot { get; set; }

    /// <summary>
    /// The date that this appointment was initially created
    /// </summary>
    [JsonPropertyName("created")]
    public FhirDateTime Created { get; set; }

    /// <summary>
    /// Additional comments
    /// </summary>
    [JsonPropertyName("comment")]
    public FhirString Comment { get; set; }

    /// <summary>
    /// Detailed information and instructions for the patient
    /// </summary>
    [JsonPropertyName("patientInstruction")]
    public FhirString PatientInstruction { get; set; }

    /// <summary>
    /// The service request this appointment is allocated to assess
    /// </summary>
    [JsonPropertyName("basedOn")]
    public List<Reference>? BasedOn { get; set; }

    /// <summary>
    /// Participants involved in appointment
    /// </summary>
    [Required]
    [JsonPropertyName("participant")]
    public List<BackboneElement> Participant { get; set; }

    /// <summary>
    /// Potential date/time interval(s) requested to allocate the appointment within
    /// </summary>
    [JsonPropertyName("requestedPeriod")]
    public List<Period>? RequestedPeriod { get; set; }

    /// <summary>
    /// Validates this instance according to FHIR rules
    /// </summary>
    public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
    {
        foreach (var result in base.Validate(validationContext))
            yield return result;

        // TODO: Add specific validation rules
    }

}
