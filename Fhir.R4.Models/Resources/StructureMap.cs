// <auto-generated />
// FHIR R4 Resource: StructureMap
// This file is automatically generated. Do not edit manually.

using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using Fhir.R4.Models.Base;
using Fhir.TypeFramework.DataTypes;

namespace Fhir.R4.Models.Resources;

/// <summary>
/// A Map of relationships between 2 structures that can be used to transform data.
/// </summary>
public class StructureMap : DomainResource
{
    /// <summary>
    /// Resource type name
    /// </summary>
    [JsonPropertyName("resourceType")]
    public override string ResourceType => "StructureMap";

    /// <summary>
    /// Canonical identifier for this structure map, represented as a URI (globally unique)
    /// </summary>
    [Required]
    [JsonPropertyName("url")]
    public FhirUri Url { get; set; }

    /// <summary>
    /// Additional identifier for the structure map
    /// </summary>
    [JsonPropertyName("identifier")]
    public List<Identifier>? IdentifierValue { get; set; }

    /// <summary>
    /// Business version of the structure map
    /// </summary>
    [JsonPropertyName("version")]
    public FhirString Version { get; set; }

    /// <summary>
    /// Name for this structure map (computer friendly)
    /// </summary>
    [Required]
    [JsonPropertyName("name")]
    public FhirString Name { get; set; }

    /// <summary>
    /// Name for this structure map (human friendly)
    /// </summary>
    [JsonPropertyName("title")]
    public FhirString Title { get; set; }

    /// <summary>
    /// draft | active | retired | unknown
    /// </summary>
    [Required]
    [JsonPropertyName("status")]
    public FhirCode Status { get; set; }

    /// <summary>
    /// For testing purposes, not real usage
    /// </summary>
    [JsonPropertyName("experimental")]
    public FhirBoolean Experimental { get; set; }

    /// <summary>
    /// Date last changed
    /// </summary>
    [JsonPropertyName("date")]
    public FhirDateTime Date { get; set; }

    /// <summary>
    /// Name of the publisher (organization or individual)
    /// </summary>
    [JsonPropertyName("publisher")]
    public FhirString Publisher { get; set; }

    /// <summary>
    /// Contact details for the publisher
    /// </summary>
    [JsonPropertyName("contact")]
    public List<ContactDetail>? Contact { get; set; }

    /// <summary>
    /// Natural language description of the structure map
    /// </summary>
    [JsonPropertyName("description")]
    public FhirMarkdown Description { get; set; }

    /// <summary>
    /// The context that the content is intended to support
    /// </summary>
    [JsonPropertyName("useContext")]
    public List<UsageContext>? UseContext { get; set; }

    /// <summary>
    /// Intended jurisdiction for structure map (if applicable)
    /// </summary>
    [JsonPropertyName("jurisdiction")]
    public List<CodeableConcept>? Jurisdiction { get; set; }

    /// <summary>
    /// Why this structure map is defined
    /// </summary>
    [JsonPropertyName("purpose")]
    public FhirMarkdown Purpose { get; set; }

    /// <summary>
    /// Use and/or publishing restrictions
    /// </summary>
    [JsonPropertyName("copyright")]
    public FhirMarkdown Copyright { get; set; }

    /// <summary>
    /// Structure Definition used by this map
    /// </summary>
    [JsonPropertyName("structure")]
    public List<BackboneElement>? Structure { get; set; }

    /// <summary>
    /// Canonical reference to structure definition
    /// </summary>
    [Required]
    [JsonPropertyName("url")]
    public FhirCanonical Url { get; set; }

    /// <summary>
    /// source | queried | target | produced
    /// </summary>
    [Required]
    [JsonPropertyName("mode")]
    public FhirCode Mode { get; set; }

    /// <summary>
    /// Name for type in this map
    /// </summary>
    [JsonPropertyName("alias")]
    public FhirString Alias { get; set; }

    /// <summary>
    /// Documentation on use of structure
    /// </summary>
    [JsonPropertyName("documentation")]
    public FhirString Documentation { get; set; }

    /// <summary>
    /// Other maps used by this map (canonical URLs)
    /// </summary>
    [JsonPropertyName("import")]
    public List<FhirCanonical>? Import { get; set; }

    /// <summary>
    /// Named sections for reader convenience
    /// </summary>
    [Required]
    [JsonPropertyName("group")]
    public List<BackboneElement> Group { get; set; }

    /// <summary>
    /// Human-readable label
    /// </summary>
    [Required]
    [JsonPropertyName("name")]
    public FhirId Name { get; set; }

    /// <summary>
    /// Another group that this group adds rules to
    /// </summary>
    [JsonPropertyName("extends")]
    public FhirId Extends { get; set; }

    /// <summary>
    /// none | types | type-and-types
    /// </summary>
    [Required]
    [JsonPropertyName("typeMode")]
    public FhirCode TypeMode { get; set; }

    /// <summary>
    /// Additional description/explanation for group
    /// </summary>
    [JsonPropertyName("documentation")]
    public FhirString Documentation { get; set; }

    /// <summary>
    /// Named instance provided when invoking the map
    /// </summary>
    [Required]
    [JsonPropertyName("input")]
    public List<BackboneElement> Input { get; set; }

    /// <summary>
    /// Transform Rule from source to target
    /// </summary>
    [Required]
    [JsonPropertyName("rule")]
    public List<BackboneElement> Rule { get; set; }

    /// <summary>
    /// Validates this instance according to FHIR rules
    /// </summary>
    public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
    {
        foreach (var result in base.Validate(validationContext))
            yield return result;

        // TODO: Add specific validation rules
    }

}
