// <auto-generated />
// FHIR R4 Resource: NamingSystem
// This file is automatically generated. Do not edit manually.

using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using Fhir.R4.Models.Base;
using Fhir.TypeFramework.DataTypes;

namespace Fhir.R4.Models.Resources;

/// <summary>
/// A curated namespace that issues unique symbols within that namespace for the identification of concepts, people, devices, etc.  Represents a "System" used within the Identifier and Coding data types.
/// </summary>
public class NamingSystem : DomainResource
{
    /// <summary>
    /// Resource type name
    /// </summary>
    [JsonPropertyName("resourceType")]
    public override string ResourceType => "NamingSystem";

    /// <summary>
    /// Name for this naming system (computer friendly)
    /// </summary>
    [Required]
    [JsonPropertyName("name")]
    public FhirString Name { get; set; }

    /// <summary>
    /// draft | active | retired | unknown
    /// </summary>
    [Required]
    [JsonPropertyName("status")]
    public FhirCode Status { get; set; }

    /// <summary>
    /// codesystem | identifier | root
    /// </summary>
    [Required]
    [JsonPropertyName("kind")]
    public FhirCode Kind { get; set; }

    /// <summary>
    /// Date last changed
    /// </summary>
    [Required]
    [JsonPropertyName("date")]
    public FhirDateTime Date { get; set; }

    /// <summary>
    /// Name of the publisher (organization or individual)
    /// </summary>
    [JsonPropertyName("publisher")]
    public FhirString Publisher { get; set; }

    /// <summary>
    /// Contact details for the publisher
    /// </summary>
    [JsonPropertyName("contact")]
    public List<ContactDetail>? Contact { get; set; }

    /// <summary>
    /// Who maintains system namespace?
    /// </summary>
    [JsonPropertyName("responsible")]
    public FhirString Responsible { get; set; }

    /// <summary>
    /// e.g. driver,  provider,  patient, bank etc.
    /// </summary>
    [JsonPropertyName("type")]
    public CodeableConcept Type { get; set; }

    /// <summary>
    /// Natural language description of the naming system
    /// </summary>
    [JsonPropertyName("description")]
    public FhirMarkdown Description { get; set; }

    /// <summary>
    /// The context that the content is intended to support
    /// </summary>
    [JsonPropertyName("useContext")]
    public List<UsageContext>? UseContext { get; set; }

    /// <summary>
    /// Intended jurisdiction for naming system (if applicable)
    /// </summary>
    [JsonPropertyName("jurisdiction")]
    public List<CodeableConcept>? Jurisdiction { get; set; }

    /// <summary>
    /// How/where is it used
    /// </summary>
    [JsonPropertyName("usage")]
    public FhirString Usage { get; set; }

    /// <summary>
    /// Unique identifiers used for system
    /// </summary>
    [Required]
    [JsonPropertyName("uniqueId")]
    public List<BackboneElement> UniqueId { get; set; }

    /// <summary>
    /// oid | uuid | uri | other
    /// </summary>
    [Required]
    [JsonPropertyName("type")]
    public FhirCode Type { get; set; }

    /// <summary>
    /// The unique identifier
    /// </summary>
    [Required]
    [JsonPropertyName("value")]
    public FhirString Value { get; set; }

    /// <summary>
    /// Is this the id that should be used for this type
    /// </summary>
    [JsonPropertyName("preferred")]
    public FhirBoolean Preferred { get; set; }

    /// <summary>
    /// Notes about identifier usage
    /// </summary>
    [JsonPropertyName("comment")]
    public FhirString Comment { get; set; }

    /// <summary>
    /// When is identifier valid?
    /// </summary>
    [JsonPropertyName("period")]
    public Period PeriodValue { get; set; }

    /// <summary>
    /// Validates this instance according to FHIR rules
    /// </summary>
    public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
    {
        foreach (var result in base.Validate(validationContext))
            yield return result;

        // TODO: Add specific validation rules
    }

}
