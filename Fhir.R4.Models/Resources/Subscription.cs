// <auto-generated />
// FHIR R4 Resource: Subscription
// This file is automatically generated. Do not edit manually.

using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using Fhir.R4.Models.Base;
using Fhir.TypeFramework.DataTypes;

namespace Fhir.R4.Models.Resources;

/// <summary>
/// The subscription resource is used to define a push-based subscription from a server to another system. Once a subscription is registered with the server, the server checks every resource that is created or updated, and if the resource matches the given criteria, it sends a message on the defined "channel" so that another system can take an appropriate action.
/// </summary>
public class Subscription : DomainResource
{
    /// <summary>
    /// Resource type name
    /// </summary>
    [JsonPropertyName("resourceType")]
    public override string ResourceType => "Subscription";

    /// <summary>
    /// requested | active | error | off
    /// </summary>
    [Required]
    [JsonPropertyName("status")]
    public FhirCode Status { get; set; }

    /// <summary>
    /// Contact details for source (e.g. troubleshooting)
    /// </summary>
    [JsonPropertyName("contact")]
    public List<ContactPoint>? Contact { get; set; }

    /// <summary>
    /// When to automatically delete the subscription
    /// </summary>
    [JsonPropertyName("end")]
    public FhirInstant End { get; set; }

    /// <summary>
    /// Description of why this subscription was created
    /// </summary>
    [Required]
    [JsonPropertyName("reason")]
    public FhirString Reason { get; set; }

    /// <summary>
    /// Rule for server push
    /// </summary>
    [Required]
    [JsonPropertyName("criteria")]
    public FhirString Criteria { get; set; }

    /// <summary>
    /// Latest error note
    /// </summary>
    [JsonPropertyName("error")]
    public FhirString Error { get; set; }

    /// <summary>
    /// The channel on which to report matches to the criteria
    /// </summary>
    [Required]
    [JsonPropertyName("channel")]
    public BackboneElement Channel { get; set; }

    /// <summary>
    /// rest-hook | websocket | email | sms | message
    /// </summary>
    [Required]
    [JsonPropertyName("type")]
    public FhirCode Type { get; set; }

    /// <summary>
    /// Where the channel points to
    /// </summary>
    [JsonPropertyName("endpoint")]
    public FhirUrl Endpoint { get; set; }

    /// <summary>
    /// MIME type to send, or omit for no payload
    /// </summary>
    [JsonPropertyName("payload")]
    public FhirCode Payload { get; set; }

    /// <summary>
    /// Usage depends on the channel type
    /// </summary>
    [JsonPropertyName("header")]
    public List<FhirString>? Header { get; set; }

    /// <summary>
    /// Validates this instance according to FHIR rules
    /// </summary>
    public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
    {
        foreach (var result in base.Validate(validationContext))
            yield return result;

        // TODO: Add specific validation rules
    }

}
