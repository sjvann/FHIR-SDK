// <auto-generated />
// FHIR R4 Resource: GuidanceResponse
// This file is automatically generated. Do not edit manually.

using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using Fhir.R4.Models.Base;
using Fhir.TypeFramework.DataTypes;

namespace Fhir.R4.Models.Resources;

/// <summary>
/// A guidance response is the formal response to a guidance request, including any output parameters returned by the evaluation, as well as the description of any proposed actions to be taken.
/// </summary>
public class GuidanceResponse : DomainResource
{
    /// <summary>
    /// Resource type name
    /// </summary>
    [JsonPropertyName("resourceType")]
    public override string ResourceType => "GuidanceResponse";

    /// <summary>
    /// The identifier of the request associated with this response, if any
    /// </summary>
    [JsonPropertyName("requestIdentifier")]
    public Identifier RequestIdentifier { get; set; }

    /// <summary>
    /// Business identifier
    /// </summary>
    [JsonPropertyName("identifier")]
    public List<Identifier>? IdentifierValue { get; set; }

    /// <summary>
    /// success | data-requested | data-required | in-progress | failure | entered-in-error
    /// </summary>
    [Required]
    [JsonPropertyName("status")]
    public FhirCode Status { get; set; }

    /// <summary>
    /// Patient the request was performed for
    /// </summary>
    [JsonPropertyName("subject")]
    public Reference Subject { get; set; }

    /// <summary>
    /// Encounter during which the response was returned
    /// </summary>
    [JsonPropertyName("encounter")]
    public Reference Encounter { get; set; }

    /// <summary>
    /// When the guidance response was processed
    /// </summary>
    [JsonPropertyName("occurrenceDateTime")]
    public FhirDateTime OccurrenceDateTime { get; set; }

    /// <summary>
    /// Device returning the guidance
    /// </summary>
    [JsonPropertyName("performer")]
    public Reference Performer { get; set; }

    /// <summary>
    /// Why guidance is needed
    /// </summary>
    [JsonPropertyName("reasonCode")]
    public List<CodeableConcept>? ReasonCode { get; set; }

    /// <summary>
    /// Why guidance is needed
    /// </summary>
    [JsonPropertyName("reasonReference")]
    public List<Reference>? ReasonReference { get; set; }

    /// <summary>
    /// Additional notes about the response
    /// </summary>
    [JsonPropertyName("note")]
    public List<Annotation>? Note { get; set; }

    /// <summary>
    /// Messages resulting from the evaluation of the artifact or artifacts
    /// </summary>
    [JsonPropertyName("evaluationMessage")]
    public List<Reference>? EvaluationMessage { get; set; }

    /// <summary>
    /// The output parameters of the evaluation, if any
    /// </summary>
    [JsonPropertyName("outputParameters")]
    public Reference OutputParameters { get; set; }

    /// <summary>
    /// Proposed actions, if any
    /// </summary>
    [JsonPropertyName("result")]
    public Reference Result { get; set; }

    /// <summary>
    /// Additional required data
    /// </summary>
    [JsonPropertyName("dataRequirement")]
    public List<DataRequirement>? DataRequirementValue { get; set; }

    /// <summary>
    /// Validates this instance according to FHIR rules
    /// </summary>
    public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
    {
        foreach (var result in base.Validate(validationContext))
            yield return result;

        // TODO: Add specific validation rules
    }

}
