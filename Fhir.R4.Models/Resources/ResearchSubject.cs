// <auto-generated />
// FHIR R4 Resource: ResearchSubject
// This file is automatically generated. Do not edit manually.

using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using Fhir.R4.Models.Base;
using Fhir.TypeFramework.DataTypes;

namespace Fhir.R4.Models.Resources;

/// <summary>
/// A physical entity which is the primary unit of operational and/or administrative interest in a study.
/// </summary>
public class ResearchSubject : DomainResource
{
    /// <summary>
    /// Resource type name
    /// </summary>
    [JsonPropertyName("resourceType")]
    public override string ResourceType => "ResearchSubject";

    /// <summary>
    /// Business Identifier for research subject in a study
    /// </summary>
    [JsonPropertyName("identifier")]
    public List<Identifier>? IdentifierValue { get; set; }

    /// <summary>
    /// candidate | eligible | follow-up | ineligible | not-registered | off-study | on-study | on-study-intervention | on-study-observation | pending-on-study | potential-candidate | screening | withdrawn
    /// </summary>
    [Required]
    [JsonPropertyName("status")]
    public FhirCode Status { get; set; }

    /// <summary>
    /// Start and end of participation
    /// </summary>
    [JsonPropertyName("period")]
    public Period PeriodValue { get; set; }

    /// <summary>
    /// Study subject is part of
    /// </summary>
    [Required]
    [JsonPropertyName("study")]
    public Reference Study { get; set; }

    /// <summary>
    /// Who is part of study
    /// </summary>
    [Required]
    [JsonPropertyName("individual")]
    public Reference Individual { get; set; }

    /// <summary>
    /// What path should be followed
    /// </summary>
    [JsonPropertyName("assignedArm")]
    public FhirString AssignedArm { get; set; }

    /// <summary>
    /// What path was followed
    /// </summary>
    [JsonPropertyName("actualArm")]
    public FhirString ActualArm { get; set; }

    /// <summary>
    /// Agreement to participate in study
    /// </summary>
    [JsonPropertyName("consent")]
    public Reference Consent { get; set; }

    /// <summary>
    /// Validates this instance according to FHIR rules
    /// </summary>
    public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
    {
        foreach (var result in base.Validate(validationContext))
            yield return result;

        // TODO: Add specific validation rules
    }

}
