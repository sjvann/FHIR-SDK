// <auto-generated />
// FHIR R4 Resource: ImagingStudy
// This file is automatically generated. Do not edit manually.

using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using Fhir.R4.Models.Base;
using Fhir.TypeFramework.DataTypes;

namespace Fhir.R4.Models.Resources;

/// <summary>
/// Representation of the content produced in a DICOM imaging study. A study comprises a set of series, each of which includes a set of Service-Object Pair Instances (SOP Instances - images or other data) acquired or produced in a common context.  A series is of only one modality (e.g. X-ray, CT, MR, ultrasound), but a study may have multiple series of different modalities.
/// </summary>
public class ImagingStudy : DomainResource
{
    /// <summary>
    /// Resource type name
    /// </summary>
    [JsonPropertyName("resourceType")]
    public override string ResourceType => "ImagingStudy";

    /// <summary>
    /// Identifiers for the whole study
    /// </summary>
    [JsonPropertyName("identifier")]
    public List<Identifier>? IdentifierValue { get; set; }

    /// <summary>
    /// registered | available | cancelled | entered-in-error | unknown
    /// </summary>
    [Required]
    [JsonPropertyName("status")]
    public FhirCode Status { get; set; }

    /// <summary>
    /// All series modality if actual acquisition modalities
    /// </summary>
    [JsonPropertyName("modality")]
    public List<Coding>? Modality { get; set; }

    /// <summary>
    /// Who or what is the subject of the study
    /// </summary>
    [Required]
    [JsonPropertyName("subject")]
    public Reference Subject { get; set; }

    /// <summary>
    /// Encounter with which this imaging study is associated
    /// </summary>
    [JsonPropertyName("encounter")]
    public Reference Encounter { get; set; }

    /// <summary>
    /// When the study was started
    /// </summary>
    [JsonPropertyName("started")]
    public FhirDateTime Started { get; set; }

    /// <summary>
    /// Request fulfilled
    /// </summary>
    [JsonPropertyName("basedOn")]
    public List<Reference>? BasedOn { get; set; }

    /// <summary>
    /// Referring physician
    /// </summary>
    [JsonPropertyName("referrer")]
    public Reference Referrer { get; set; }

    /// <summary>
    /// Who interpreted images
    /// </summary>
    [JsonPropertyName("interpreter")]
    public List<Reference>? Interpreter { get; set; }

    /// <summary>
    /// Study access endpoint
    /// </summary>
    [JsonPropertyName("endpoint")]
    public List<Reference>? Endpoint { get; set; }

    /// <summary>
    /// Number of Study Related Series
    /// </summary>
    [JsonPropertyName("numberOfSeries")]
    public FhirUnsignedInt NumberOfSeries { get; set; }

    /// <summary>
    /// Number of Study Related Instances
    /// </summary>
    [JsonPropertyName("numberOfInstances")]
    public FhirUnsignedInt NumberOfInstances { get; set; }

    /// <summary>
    /// The performed Procedure reference
    /// </summary>
    [JsonPropertyName("procedureReference")]
    public Reference ProcedureReference { get; set; }

    /// <summary>
    /// The performed procedure code
    /// </summary>
    [JsonPropertyName("procedureCode")]
    public List<CodeableConcept>? ProcedureCode { get; set; }

    /// <summary>
    /// Where ImagingStudy occurred
    /// </summary>
    [JsonPropertyName("location")]
    public Reference Location { get; set; }

    /// <summary>
    /// Why the study was requested
    /// </summary>
    [JsonPropertyName("reasonCode")]
    public List<CodeableConcept>? ReasonCode { get; set; }

    /// <summary>
    /// Why was study performed
    /// </summary>
    [JsonPropertyName("reasonReference")]
    public List<Reference>? ReasonReference { get; set; }

    /// <summary>
    /// User-defined comments
    /// </summary>
    [JsonPropertyName("note")]
    public List<Annotation>? Note { get; set; }

    /// <summary>
    /// Institution-generated description
    /// </summary>
    [JsonPropertyName("description")]
    public FhirString Description { get; set; }

    /// <summary>
    /// Each study has one or more series of instances
    /// </summary>
    [JsonPropertyName("series")]
    public List<BackboneElement>? Series { get; set; }

    /// <summary>
    /// DICOM Series Instance UID for the series
    /// </summary>
    [Required]
    [JsonPropertyName("uid")]
    public FhirId Uid { get; set; }

    /// <summary>
    /// Numeric identifier of this series
    /// </summary>
    [JsonPropertyName("number")]
    public FhirUnsignedInt Number { get; set; }

    /// <summary>
    /// The modality of the instances in the series
    /// </summary>
    [Required]
    [JsonPropertyName("modality")]
    public Coding Modality { get; set; }

    /// <summary>
    /// A short human readable summary of the series
    /// </summary>
    [JsonPropertyName("description")]
    public FhirString Description { get; set; }

    /// <summary>
    /// Number of Series Related Instances
    /// </summary>
    [JsonPropertyName("numberOfInstances")]
    public FhirUnsignedInt NumberOfInstances { get; set; }

    /// <summary>
    /// Series access endpoint
    /// </summary>
    [JsonPropertyName("endpoint")]
    public List<Reference>? Endpoint { get; set; }

    /// <summary>
    /// Body part examined
    /// </summary>
    [JsonPropertyName("bodySite")]
    public Coding BodySite { get; set; }

    /// <summary>
    /// Body part laterality
    /// </summary>
    [JsonPropertyName("laterality")]
    public Coding Laterality { get; set; }

    /// <summary>
    /// Specimen imaged
    /// </summary>
    [JsonPropertyName("specimen")]
    public List<Reference>? Specimen { get; set; }

    /// <summary>
    /// When the series started
    /// </summary>
    [JsonPropertyName("started")]
    public FhirDateTime Started { get; set; }

    /// <summary>
    /// Who performed the series
    /// </summary>
    [JsonPropertyName("performer")]
    public List<BackboneElement>? Performer { get; set; }

    /// <summary>
    /// A single SOP instance from the series
    /// </summary>
    [JsonPropertyName("instance")]
    public List<BackboneElement>? Instance { get; set; }

    /// <summary>
    /// Validates this instance according to FHIR rules
    /// </summary>
    public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
    {
        foreach (var result in base.Validate(validationContext))
            yield return result;

        // TODO: Add specific validation rules
    }

}
