// <auto-generated />
// FHIR R4 Resource: MedicinalProductInteraction
// This file is automatically generated. Do not edit manually.

using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using Fhir.R4.Models.Base;
using Fhir.TypeFramework.DataTypes;

namespace Fhir.R4.Models.Resources;

/// <summary>
/// The interactions of the medicinal product with other medicinal products, or other forms of interactions.
/// </summary>
public class MedicinalProductInteraction : DomainResource
{
    /// <summary>
    /// Resource type name
    /// </summary>
    [JsonPropertyName("resourceType")]
    public override string ResourceType => "MedicinalProductInteraction";

    /// <summary>
    /// The medication for which this is a described interaction
    /// </summary>
    [JsonPropertyName("subject")]
    public List<Reference>? Subject { get; set; }

    /// <summary>
    /// The interaction described
    /// </summary>
    [JsonPropertyName("description")]
    public FhirString Description { get; set; }

    /// <summary>
    /// The specific medication, food or laboratory test that interacts
    /// </summary>
    [JsonPropertyName("interactant")]
    public List<BackboneElement>? Interactant { get; set; }

    /// <summary>
    /// The type of the interaction e.g. drug-drug interaction, drug-food interaction, drug-lab test interaction
    /// </summary>
    [JsonPropertyName("type")]
    public CodeableConcept Type { get; set; }

    /// <summary>
    /// The effect of the interaction, for example &quot;reduced gastric absorption of primary medication&quot;
    /// </summary>
    [JsonPropertyName("effect")]
    public CodeableConcept Effect { get; set; }

    /// <summary>
    /// The incidence of the interaction, e.g. theoretical, observed
    /// </summary>
    [JsonPropertyName("incidence")]
    public CodeableConcept Incidence { get; set; }

    /// <summary>
    /// Actions for managing the interaction
    /// </summary>
    [JsonPropertyName("management")]
    public CodeableConcept Management { get; set; }

    /// <summary>
    /// Validates this instance according to FHIR rules
    /// </summary>
    public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
    {
        foreach (var result in base.Validate(validationContext))
            yield return result;

        // TODO: Add specific validation rules
    }

}
