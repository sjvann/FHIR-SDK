// <auto-generated />
// FHIR R4 Resource: MedicationDispense
// This file is automatically generated. Do not edit manually.

using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using Fhir.R4.Models.Base;
using Fhir.TypeFramework.DataTypes;

namespace Fhir.R4.Models.Resources;

/// <summary>
/// Indicates that a medication product is to be or has been dispensed for a named person/patient.  This includes a description of the medication product (supply) provided and the instructions for administering the medication.  The medication dispense is the result of a pharmacy system responding to a medication order.
/// </summary>
public class MedicationDispense : DomainResource
{
    /// <summary>
    /// Resource type name
    /// </summary>
    [JsonPropertyName("resourceType")]
    public override string ResourceType => "MedicationDispense";

    /// <summary>
    /// External identifier
    /// </summary>
    [JsonPropertyName("identifier")]
    public List<Identifier>? IdentifierValue { get; set; }

    /// <summary>
    /// Event that dispense is part of
    /// </summary>
    [JsonPropertyName("partOf")]
    public List<Reference>? PartOf { get; set; }

    /// <summary>
    /// preparation | in-progress | cancelled | on-hold | completed | entered-in-error | stopped | declined | unknown
    /// </summary>
    [Required]
    [JsonPropertyName("status")]
    public FhirCode Status { get; set; }

    /// <summary>
    /// Type of medication dispense
    /// </summary>
    [JsonPropertyName("category")]
    public CodeableConcept Category { get; set; }

    /// <summary>
    /// Who the dispense is for
    /// </summary>
    [JsonPropertyName("subject")]
    public Reference Subject { get; set; }

    /// <summary>
    /// Encounter / Episode associated with event
    /// </summary>
    [JsonPropertyName("context")]
    public Reference Context { get; set; }

    /// <summary>
    /// Information that supports the dispensing of the medication
    /// </summary>
    [JsonPropertyName("supportingInformation")]
    public List<Reference>? SupportingInformation { get; set; }

    /// <summary>
    /// Who performed event
    /// </summary>
    [JsonPropertyName("performer")]
    public List<BackboneElement>? Performer { get; set; }

    /// <summary>
    /// Where the dispense occurred
    /// </summary>
    [JsonPropertyName("location")]
    public Reference Location { get; set; }

    /// <summary>
    /// Medication order that authorizes the dispense
    /// </summary>
    [JsonPropertyName("authorizingPrescription")]
    public List<Reference>? AuthorizingPrescription { get; set; }

    /// <summary>
    /// Trial fill, partial fill, emergency fill, etc.
    /// </summary>
    [JsonPropertyName("type")]
    public CodeableConcept Type { get; set; }

    /// <summary>
    /// Amount dispensed
    /// </summary>
    [JsonPropertyName("quantity")]
    public Quantity QuantityValue { get; set; }

    /// <summary>
    /// Amount of medication expressed as a timing amount
    /// </summary>
    [JsonPropertyName("daysSupply")]
    public Quantity DaysSupply { get; set; }

    /// <summary>
    /// When product was packaged and reviewed
    /// </summary>
    [JsonPropertyName("whenPrepared")]
    public FhirDateTime WhenPrepared { get; set; }

    /// <summary>
    /// When product was given out
    /// </summary>
    [JsonPropertyName("whenHandedOver")]
    public FhirDateTime WhenHandedOver { get; set; }

    /// <summary>
    /// Where the medication was sent
    /// </summary>
    [JsonPropertyName("destination")]
    public Reference Destination { get; set; }

    /// <summary>
    /// Who collected the medication
    /// </summary>
    [JsonPropertyName("receiver")]
    public List<Reference>? Receiver { get; set; }

    /// <summary>
    /// Information about the dispense
    /// </summary>
    [JsonPropertyName("note")]
    public List<Annotation>? Note { get; set; }

    /// <summary>
    /// How the medication is to be used by the patient or administered by the caregiver
    /// </summary>
    [JsonPropertyName("dosageInstruction")]
    public List<Dosage>? DosageInstruction { get; set; }

    /// <summary>
    /// Whether a substitution was performed on the dispense
    /// </summary>
    [JsonPropertyName("substitution")]
    public BackboneElement Substitution { get; set; }

    /// <summary>
    /// Whether a substitution was or was not performed on the dispense
    /// </summary>
    [Required]
    [JsonPropertyName("wasSubstituted")]
    public FhirBoolean WasSubstituted { get; set; }

    /// <summary>
    /// Code signifying whether a different drug was dispensed from what was prescribed
    /// </summary>
    [JsonPropertyName("type")]
    public CodeableConcept Type { get; set; }

    /// <summary>
    /// Why was substitution made
    /// </summary>
    [JsonPropertyName("reason")]
    public List<CodeableConcept>? Reason { get; set; }

    /// <summary>
    /// Who is responsible for the substitution
    /// </summary>
    [JsonPropertyName("responsibleParty")]
    public List<Reference>? ResponsibleParty { get; set; }

    /// <summary>
    /// Clinical issue with action
    /// </summary>
    [JsonPropertyName("detectedIssue")]
    public List<Reference>? DetectedIssue { get; set; }

    /// <summary>
    /// A list of relevant lifecycle events
    /// </summary>
    [JsonPropertyName("eventHistory")]
    public List<Reference>? EventHistory { get; set; }

    /// <summary>
    /// Validates this instance according to FHIR rules
    /// </summary>
    public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
    {
        foreach (var result in base.Validate(validationContext))
            yield return result;

        // TODO: Add specific validation rules
    }

}
