// <auto-generated />
// FHIR R4 Resource: Group
// This file is automatically generated. Do not edit manually.

using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using Fhir.R4.Models.Base;
using Fhir.TypeFramework.DataTypes;

namespace Fhir.R4.Models.Resources;

/// <summary>
/// Represents a defined collection of entities that may be discussed or acted upon collectively but which are not expected to act collectively, and are not formally or legally recognized; i.e. a collection of entities that isn't an Organization.
/// </summary>
public class Group : DomainResource
{
    /// <summary>
    /// Resource type name
    /// </summary>
    [JsonPropertyName("resourceType")]
    public override string ResourceType => "Group";

    /// <summary>
    /// Unique id
    /// </summary>
    [JsonPropertyName("identifier")]
    public List<Identifier>? IdentifierValue { get; set; }

    /// <summary>
    /// Whether this group&apos;s record is in active use
    /// </summary>
    [JsonPropertyName("active")]
    public FhirBoolean Active { get; set; }

    /// <summary>
    /// person | animal | practitioner | device | medication | substance
    /// </summary>
    [Required]
    [JsonPropertyName("type")]
    public FhirCode Type { get; set; }

    /// <summary>
    /// Descriptive or actual
    /// </summary>
    [Required]
    [JsonPropertyName("actual")]
    public FhirBoolean Actual { get; set; }

    /// <summary>
    /// Kind of Group members
    /// </summary>
    [JsonPropertyName("code")]
    public CodeableConcept Code { get; set; }

    /// <summary>
    /// Label for Group
    /// </summary>
    [JsonPropertyName("name")]
    public FhirString Name { get; set; }

    /// <summary>
    /// Number of members
    /// </summary>
    [JsonPropertyName("quantity")]
    public FhirUnsignedInt Quantity { get; set; }

    /// <summary>
    /// Entity that is the custodian of the Group&apos;s definition
    /// </summary>
    [JsonPropertyName("managingEntity")]
    public Reference ManagingEntity { get; set; }

    /// <summary>
    /// Include / Exclude group members by Trait
    /// </summary>
    [JsonPropertyName("characteristic")]
    public List<BackboneElement>? Characteristic { get; set; }

    /// <summary>
    /// Kind of characteristic
    /// </summary>
    [Required]
    [JsonPropertyName("code")]
    public CodeableConcept Code { get; set; }

    /// <summary>
    /// Group includes or excludes
    /// </summary>
    [Required]
    [JsonPropertyName("exclude")]
    public FhirBoolean Exclude { get; set; }

    /// <summary>
    /// Period over which characteristic is tested
    /// </summary>
    [JsonPropertyName("period")]
    public Period PeriodValue { get; set; }

    /// <summary>
    /// Who or what is in group
    /// </summary>
    [JsonPropertyName("member")]
    public List<BackboneElement>? Member { get; set; }

    /// <summary>
    /// Reference to the group member
    /// </summary>
    [Required]
    [JsonPropertyName("entity")]
    public Reference Entity { get; set; }

    /// <summary>
    /// Period member belonged to the group
    /// </summary>
    [JsonPropertyName("period")]
    public Period PeriodValue { get; set; }

    /// <summary>
    /// If member is no longer in group
    /// </summary>
    [JsonPropertyName("inactive")]
    public FhirBoolean Inactive { get; set; }

    /// <summary>
    /// Validates this instance according to FHIR rules
    /// </summary>
    public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
    {
        foreach (var result in base.Validate(validationContext))
            yield return result;

        // TODO: Add specific validation rules
    }

}
