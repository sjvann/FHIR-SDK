// <auto-generated />
// FHIR R4 Resource: TestScript
// This file is automatically generated. Do not edit manually.

using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using Fhir.R4.Models.Base;
using Fhir.TypeFramework.DataTypes;

namespace Fhir.R4.Models.Resources;

/// <summary>
/// A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.
/// </summary>
public class TestScript : DomainResource
{
    /// <summary>
    /// Resource type name
    /// </summary>
    [JsonPropertyName("resourceType")]
    public override string ResourceType => "TestScript";

    /// <summary>
    /// Canonical identifier for this test script, represented as a URI (globally unique)
    /// </summary>
    [Required]
    [JsonPropertyName("url")]
    public FhirUri Url { get; set; }

    /// <summary>
    /// Additional identifier for the test script
    /// </summary>
    [JsonPropertyName("identifier")]
    public Identifier IdentifierValue { get; set; }

    /// <summary>
    /// Business version of the test script
    /// </summary>
    [JsonPropertyName("version")]
    public FhirString Version { get; set; }

    /// <summary>
    /// Name for this test script (computer friendly)
    /// </summary>
    [Required]
    [JsonPropertyName("name")]
    public FhirString Name { get; set; }

    /// <summary>
    /// Name for this test script (human friendly)
    /// </summary>
    [JsonPropertyName("title")]
    public FhirString Title { get; set; }

    /// <summary>
    /// draft | active | retired | unknown
    /// </summary>
    [Required]
    [JsonPropertyName("status")]
    public FhirCode Status { get; set; }

    /// <summary>
    /// For testing purposes, not real usage
    /// </summary>
    [JsonPropertyName("experimental")]
    public FhirBoolean Experimental { get; set; }

    /// <summary>
    /// Date last changed
    /// </summary>
    [JsonPropertyName("date")]
    public FhirDateTime Date { get; set; }

    /// <summary>
    /// Name of the publisher (organization or individual)
    /// </summary>
    [JsonPropertyName("publisher")]
    public FhirString Publisher { get; set; }

    /// <summary>
    /// Contact details for the publisher
    /// </summary>
    [JsonPropertyName("contact")]
    public List<ContactDetail>? Contact { get; set; }

    /// <summary>
    /// Natural language description of the test script
    /// </summary>
    [JsonPropertyName("description")]
    public FhirMarkdown Description { get; set; }

    /// <summary>
    /// The context that the content is intended to support
    /// </summary>
    [JsonPropertyName("useContext")]
    public List<UsageContext>? UseContext { get; set; }

    /// <summary>
    /// Intended jurisdiction for test script (if applicable)
    /// </summary>
    [JsonPropertyName("jurisdiction")]
    public List<CodeableConcept>? Jurisdiction { get; set; }

    /// <summary>
    /// Why this test script is defined
    /// </summary>
    [JsonPropertyName("purpose")]
    public FhirMarkdown Purpose { get; set; }

    /// <summary>
    /// Use and/or publishing restrictions
    /// </summary>
    [JsonPropertyName("copyright")]
    public FhirMarkdown Copyright { get; set; }

    /// <summary>
    /// An abstract server representing a client or sender in a message exchange
    /// </summary>
    [JsonPropertyName("origin")]
    public List<BackboneElement>? Origin { get; set; }

    /// <summary>
    /// The index of the abstract origin server starting at 1
    /// </summary>
    [Required]
    [JsonPropertyName("index")]
    public FhirInteger Index { get; set; }

    /// <summary>
    /// FHIR-Client | FHIR-SDC-FormFiller
    /// </summary>
    [Required]
    [JsonPropertyName("profile")]
    public Coding Profile { get; set; }

    /// <summary>
    /// An abstract server representing a destination or receiver in a message exchange
    /// </summary>
    [JsonPropertyName("destination")]
    public List<BackboneElement>? Destination { get; set; }

    /// <summary>
    /// The index of the abstract destination server starting at 1
    /// </summary>
    [Required]
    [JsonPropertyName("index")]
    public FhirInteger Index { get; set; }

    /// <summary>
    /// FHIR-Server | FHIR-SDC-FormManager | FHIR-SDC-FormReceiver | FHIR-SDC-FormProcessor
    /// </summary>
    [Required]
    [JsonPropertyName("profile")]
    public Coding Profile { get; set; }

    /// <summary>
    /// Required capability that is assumed to function correctly on the FHIR server being tested
    /// </summary>
    [JsonPropertyName("metadata")]
    public BackboneElement Metadata { get; set; }

    /// <summary>
    /// Links to the FHIR specification
    /// </summary>
    [JsonPropertyName("link")]
    public List<BackboneElement>? Link { get; set; }

    /// <summary>
    /// Capabilities  that are assumed to function correctly on the FHIR server being tested
    /// </summary>
    [Required]
    [JsonPropertyName("capability")]
    public List<BackboneElement> Capability { get; set; }

    /// <summary>
    /// Fixture in the test script - by reference (uri)
    /// </summary>
    [JsonPropertyName("fixture")]
    public List<BackboneElement>? Fixture { get; set; }

    /// <summary>
    /// Whether or not to implicitly create the fixture during setup
    /// </summary>
    [Required]
    [JsonPropertyName("autocreate")]
    public FhirBoolean Autocreate { get; set; }

    /// <summary>
    /// Whether or not to implicitly delete the fixture during teardown
    /// </summary>
    [Required]
    [JsonPropertyName("autodelete")]
    public FhirBoolean Autodelete { get; set; }

    /// <summary>
    /// Reference of the resource
    /// </summary>
    [JsonPropertyName("resource")]
    public Reference Resource { get; set; }

    /// <summary>
    /// Reference of the validation profile
    /// </summary>
    [JsonPropertyName("profile")]
    public List<Reference>? Profile { get; set; }

    /// <summary>
    /// Placeholder for evaluated elements
    /// </summary>
    [JsonPropertyName("variable")]
    public List<BackboneElement>? Variable { get; set; }

    /// <summary>
    /// Descriptive name for this variable
    /// </summary>
    [Required]
    [JsonPropertyName("name")]
    public FhirString Name { get; set; }

    /// <summary>
    /// Default, hard-coded, or user-defined value for this variable
    /// </summary>
    [JsonPropertyName("defaultValue")]
    public FhirString DefaultValue { get; set; }

    /// <summary>
    /// Natural language description of the variable
    /// </summary>
    [JsonPropertyName("description")]
    public FhirString Description { get; set; }

    /// <summary>
    /// The FHIRPath expression against the fixture body
    /// </summary>
    [JsonPropertyName("expression")]
    public FhirString Expression { get; set; }

    /// <summary>
    /// HTTP header field name for source
    /// </summary>
    [JsonPropertyName("headerField")]
    public FhirString HeaderField { get; set; }

    /// <summary>
    /// Hint help text for default value to enter
    /// </summary>
    [JsonPropertyName("hint")]
    public FhirString Hint { get; set; }

    /// <summary>
    /// XPath or JSONPath against the fixture body
    /// </summary>
    [JsonPropertyName("path")]
    public FhirString Path { get; set; }

    /// <summary>
    /// Fixture Id of source expression or headerField within this variable
    /// </summary>
    [JsonPropertyName("sourceId")]
    public FhirId SourceId { get; set; }

    /// <summary>
    /// A series of required setup operations before tests are executed
    /// </summary>
    [JsonPropertyName("setup")]
    public BackboneElement Setup { get; set; }

    /// <summary>
    /// A setup operation or assert to perform
    /// </summary>
    [Required]
    [JsonPropertyName("action")]
    public List<BackboneElement> Action { get; set; }

    /// <summary>
    /// A test in this script
    /// </summary>
    [JsonPropertyName("test")]
    public List<BackboneElement>? Test { get; set; }

    /// <summary>
    /// Tracking/logging name of this test
    /// </summary>
    [JsonPropertyName("name")]
    public FhirString Name { get; set; }

    /// <summary>
    /// Tracking/reporting short description of the test
    /// </summary>
    [JsonPropertyName("description")]
    public FhirString Description { get; set; }

    /// <summary>
    /// A test operation or assert to perform
    /// </summary>
    [Required]
    [JsonPropertyName("action")]
    public List<BackboneElement> Action { get; set; }

    /// <summary>
    /// A series of required clean up steps
    /// </summary>
    [JsonPropertyName("teardown")]
    public BackboneElement Teardown { get; set; }

    /// <summary>
    /// One or more teardown operations to perform
    /// </summary>
    [Required]
    [JsonPropertyName("action")]
    public List<BackboneElement> Action { get; set; }

    /// <summary>
    /// Validates this instance according to FHIR rules
    /// </summary>
    public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
    {
        foreach (var result in base.Validate(validationContext))
            yield return result;

        // TODO: Add specific validation rules
    }

}
