// <auto-generated />
// FHIR R4 Resource: DeviceDefinition
// This file is automatically generated. Do not edit manually.

using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using Fhir.R4.Models.Base;
using Fhir.TypeFramework.DataTypes;

namespace Fhir.R4.Models.Resources;

/// <summary>
/// The characteristics, operational status and capabilities of a medical-related component of a medical device.
/// </summary>
public class DeviceDefinition : DomainResource
{
    /// <summary>
    /// Resource type name
    /// </summary>
    [JsonPropertyName("resourceType")]
    public override string ResourceType => "DeviceDefinition";

    /// <summary>
    /// Instance identifier
    /// </summary>
    [JsonPropertyName("identifier")]
    public List<Identifier>? IdentifierValue { get; set; }

    /// <summary>
    /// Unique Device Identifier (UDI) Barcode string
    /// </summary>
    [JsonPropertyName("udiDeviceIdentifier")]
    public List<BackboneElement>? UdiDeviceIdentifier { get; set; }

    /// <summary>
    /// The identifier that is to be associated with every Device that references this DeviceDefintiion for the issuer and jurisdication porvided in the DeviceDefinition.udiDeviceIdentifier
    /// </summary>
    [Required]
    [JsonPropertyName("deviceIdentifier")]
    public FhirString DeviceIdentifier { get; set; }

    /// <summary>
    /// The organization that assigns the identifier algorithm
    /// </summary>
    [Required]
    [JsonPropertyName("issuer")]
    public FhirUri Issuer { get; set; }

    /// <summary>
    /// The jurisdiction to which the deviceIdentifier applies
    /// </summary>
    [Required]
    [JsonPropertyName("jurisdiction")]
    public FhirUri Jurisdiction { get; set; }

    /// <summary>
    /// A name given to the device to identify it
    /// </summary>
    [JsonPropertyName("deviceName")]
    public List<BackboneElement>? DeviceName { get; set; }

    /// <summary>
    /// The name of the device
    /// </summary>
    [Required]
    [JsonPropertyName("name")]
    public FhirString Name { get; set; }

    /// <summary>
    /// udi-label-name | user-friendly-name | patient-reported-name | manufacturer-name | model-name | other
    /// </summary>
    [Required]
    [JsonPropertyName("type")]
    public FhirCode Type { get; set; }

    /// <summary>
    /// The model number for the device
    /// </summary>
    [JsonPropertyName("modelNumber")]
    public FhirString ModelNumber { get; set; }

    /// <summary>
    /// What kind of device or device system this is
    /// </summary>
    [JsonPropertyName("type")]
    public CodeableConcept Type { get; set; }

    /// <summary>
    /// The capabilities supported on a  device, the standards to which the device conforms for a particular purpose, and used for the communication
    /// </summary>
    [JsonPropertyName("specialization")]
    public List<BackboneElement>? Specialization { get; set; }

    /// <summary>
    /// The standard that is used to operate and communicate
    /// </summary>
    [Required]
    [JsonPropertyName("systemType")]
    public FhirString SystemType { get; set; }

    /// <summary>
    /// The version of the standard that is used to operate and communicate
    /// </summary>
    [JsonPropertyName("version")]
    public FhirString Version { get; set; }

    /// <summary>
    /// Available versions
    /// </summary>
    [JsonPropertyName("version")]
    public List<FhirString>? Version { get; set; }

    /// <summary>
    /// Safety characteristics of the device
    /// </summary>
    [JsonPropertyName("safety")]
    public List<CodeableConcept>? Safety { get; set; }

    /// <summary>
    /// Shelf Life and storage information
    /// </summary>
    [JsonPropertyName("shelfLifeStorage")]
    public List<ProductShelfLife>? ShelfLifeStorage { get; set; }

    /// <summary>
    /// Dimensions, color etc.
    /// </summary>
    [JsonPropertyName("physicalCharacteristics")]
    public ProdCharacteristic PhysicalCharacteristics { get; set; }

    /// <summary>
    /// Language code for the human-readable text strings produced by the device (all supported)
    /// </summary>
    [JsonPropertyName("languageCode")]
    public List<CodeableConcept>? LanguageCode { get; set; }

    /// <summary>
    /// Device capabilities
    /// </summary>
    [JsonPropertyName("capability")]
    public List<BackboneElement>? Capability { get; set; }

    /// <summary>
    /// Type of capability
    /// </summary>
    [Required]
    [JsonPropertyName("type")]
    public CodeableConcept Type { get; set; }

    /// <summary>
    /// Description of capability
    /// </summary>
    [JsonPropertyName("description")]
    public List<CodeableConcept>? Description { get; set; }

    /// <summary>
    /// The actual configuration settings of a device as it actually operates, e.g., regulation status, time properties
    /// </summary>
    [JsonPropertyName("property")]
    public List<BackboneElement>? Property { get; set; }

    /// <summary>
    /// Code that specifies the property DeviceDefinitionPropetyCode (Extensible)
    /// </summary>
    [Required]
    [JsonPropertyName("type")]
    public CodeableConcept Type { get; set; }

    /// <summary>
    /// Property value as a quantity
    /// </summary>
    [JsonPropertyName("valueQuantity")]
    public List<Quantity>? ValueQuantity { get; set; }

    /// <summary>
    /// Property value as a code, e.g., NTP4 (synced to NTP)
    /// </summary>
    [JsonPropertyName("valueCode")]
    public List<CodeableConcept>? ValueCode { get; set; }

    /// <summary>
    /// Organization responsible for device
    /// </summary>
    [JsonPropertyName("owner")]
    public Reference Owner { get; set; }

    /// <summary>
    /// Details for human/organization for support
    /// </summary>
    [JsonPropertyName("contact")]
    public List<ContactPoint>? Contact { get; set; }

    /// <summary>
    /// Network address to contact device
    /// </summary>
    [JsonPropertyName("url")]
    public FhirUri Url { get; set; }

    /// <summary>
    /// Access to on-line information
    /// </summary>
    [JsonPropertyName("onlineInformation")]
    public FhirUri OnlineInformation { get; set; }

    /// <summary>
    /// Device notes and comments
    /// </summary>
    [JsonPropertyName("note")]
    public List<Annotation>? Note { get; set; }

    /// <summary>
    /// The quantity of the device present in the packaging (e.g. the number of devices present in a pack, or the number of devices in the same package of the medicinal product)
    /// </summary>
    [JsonPropertyName("quantity")]
    public Quantity QuantityValue { get; set; }

    /// <summary>
    /// The parent device it can be part of
    /// </summary>
    [JsonPropertyName("parentDevice")]
    public Reference ParentDevice { get; set; }

    /// <summary>
    /// A substance used to create the material(s) of which the device is made
    /// </summary>
    [JsonPropertyName("material")]
    public List<BackboneElement>? Material { get; set; }

    /// <summary>
    /// The substance
    /// </summary>
    [Required]
    [JsonPropertyName("substance")]
    public CodeableConcept Substance { get; set; }

    /// <summary>
    /// Indicates an alternative material of the device
    /// </summary>
    [JsonPropertyName("alternate")]
    public FhirBoolean Alternate { get; set; }

    /// <summary>
    /// Whether the substance is a known or suspected allergen
    /// </summary>
    [JsonPropertyName("allergenicIndicator")]
    public FhirBoolean AllergenicIndicator { get; set; }

    /// <summary>
    /// Validates this instance according to FHIR rules
    /// </summary>
    public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
    {
        foreach (var result in base.Validate(validationContext))
            yield return result;

        // TODO: Add specific validation rules
    }

}
