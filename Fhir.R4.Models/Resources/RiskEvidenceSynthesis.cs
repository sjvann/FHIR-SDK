// <auto-generated />
// FHIR R4 Resource: RiskEvidenceSynthesis
// This file is automatically generated. Do not edit manually.

using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using Fhir.R4.Models.Base;
using Fhir.TypeFramework.DataTypes;

namespace Fhir.R4.Models.Resources;

/// <summary>
/// The RiskEvidenceSynthesis resource describes the likelihood of an outcome in a population plus exposure state where the risk estimate is derived from a combination of research studies.
/// </summary>
public class RiskEvidenceSynthesis : DomainResource
{
    /// <summary>
    /// Resource type name
    /// </summary>
    [JsonPropertyName("resourceType")]
    public override string ResourceType => "RiskEvidenceSynthesis";

    /// <summary>
    /// Canonical identifier for this risk evidence synthesis, represented as a URI (globally unique)
    /// </summary>
    [JsonPropertyName("url")]
    public FhirUri Url { get; set; }

    /// <summary>
    /// Additional identifier for the risk evidence synthesis
    /// </summary>
    [JsonPropertyName("identifier")]
    public List<Identifier>? IdentifierValue { get; set; }

    /// <summary>
    /// Business version of the risk evidence synthesis
    /// </summary>
    [JsonPropertyName("version")]
    public FhirString Version { get; set; }

    /// <summary>
    /// Name for this risk evidence synthesis (computer friendly)
    /// </summary>
    [JsonPropertyName("name")]
    public FhirString Name { get; set; }

    /// <summary>
    /// Name for this risk evidence synthesis (human friendly)
    /// </summary>
    [JsonPropertyName("title")]
    public FhirString Title { get; set; }

    /// <summary>
    /// draft | active | retired | unknown
    /// </summary>
    [Required]
    [JsonPropertyName("status")]
    public FhirCode Status { get; set; }

    /// <summary>
    /// Date last changed
    /// </summary>
    [JsonPropertyName("date")]
    public FhirDateTime Date { get; set; }

    /// <summary>
    /// Name of the publisher (organization or individual)
    /// </summary>
    [JsonPropertyName("publisher")]
    public FhirString Publisher { get; set; }

    /// <summary>
    /// Contact details for the publisher
    /// </summary>
    [JsonPropertyName("contact")]
    public List<ContactDetail>? Contact { get; set; }

    /// <summary>
    /// Natural language description of the risk evidence synthesis
    /// </summary>
    [JsonPropertyName("description")]
    public FhirMarkdown Description { get; set; }

    /// <summary>
    /// Used for footnotes or explanatory notes
    /// </summary>
    [JsonPropertyName("note")]
    public List<Annotation>? Note { get; set; }

    /// <summary>
    /// The context that the content is intended to support
    /// </summary>
    [JsonPropertyName("useContext")]
    public List<UsageContext>? UseContext { get; set; }

    /// <summary>
    /// Intended jurisdiction for risk evidence synthesis (if applicable)
    /// </summary>
    [JsonPropertyName("jurisdiction")]
    public List<CodeableConcept>? Jurisdiction { get; set; }

    /// <summary>
    /// Use and/or publishing restrictions
    /// </summary>
    [JsonPropertyName("copyright")]
    public FhirMarkdown Copyright { get; set; }

    /// <summary>
    /// When the risk evidence synthesis was approved by publisher
    /// </summary>
    [JsonPropertyName("approvalDate")]
    public FhirDate ApprovalDate { get; set; }

    /// <summary>
    /// When the risk evidence synthesis was last reviewed
    /// </summary>
    [JsonPropertyName("lastReviewDate")]
    public FhirDate LastReviewDate { get; set; }

    /// <summary>
    /// When the risk evidence synthesis is expected to be used
    /// </summary>
    [JsonPropertyName("effectivePeriod")]
    public Period EffectivePeriod { get; set; }

    /// <summary>
    /// The category of the EffectEvidenceSynthesis, such as Education, Treatment, Assessment, etc.
    /// </summary>
    [JsonPropertyName("topic")]
    public List<CodeableConcept>? Topic { get; set; }

    /// <summary>
    /// Who authored the content
    /// </summary>
    [JsonPropertyName("author")]
    public List<ContactDetail>? Author { get; set; }

    /// <summary>
    /// Who edited the content
    /// </summary>
    [JsonPropertyName("editor")]
    public List<ContactDetail>? Editor { get; set; }

    /// <summary>
    /// Who reviewed the content
    /// </summary>
    [JsonPropertyName("reviewer")]
    public List<ContactDetail>? Reviewer { get; set; }

    /// <summary>
    /// Who endorsed the content
    /// </summary>
    [JsonPropertyName("endorser")]
    public List<ContactDetail>? Endorser { get; set; }

    /// <summary>
    /// Additional documentation, citations, etc.
    /// </summary>
    [JsonPropertyName("relatedArtifact")]
    public List<RelatedArtifact>? RelatedArtifactValue { get; set; }

    /// <summary>
    /// Type of synthesis
    /// </summary>
    [JsonPropertyName("synthesisType")]
    public CodeableConcept SynthesisType { get; set; }

    /// <summary>
    /// Type of study
    /// </summary>
    [JsonPropertyName("studyType")]
    public CodeableConcept StudyType { get; set; }

    /// <summary>
    /// What population?
    /// </summary>
    [Required]
    [JsonPropertyName("population")]
    public Reference Population { get; set; }

    /// <summary>
    /// What exposure?
    /// </summary>
    [JsonPropertyName("exposure")]
    public Reference Exposure { get; set; }

    /// <summary>
    /// What outcome?
    /// </summary>
    [Required]
    [JsonPropertyName("outcome")]
    public Reference Outcome { get; set; }

    /// <summary>
    /// What sample size was involved?
    /// </summary>
    [JsonPropertyName("sampleSize")]
    public BackboneElement SampleSize { get; set; }

    /// <summary>
    /// Description of sample size
    /// </summary>
    [JsonPropertyName("description")]
    public FhirString Description { get; set; }

    /// <summary>
    /// How many studies?
    /// </summary>
    [JsonPropertyName("numberOfStudies")]
    public FhirInteger NumberOfStudies { get; set; }

    /// <summary>
    /// How many participants?
    /// </summary>
    [JsonPropertyName("numberOfParticipants")]
    public FhirInteger NumberOfParticipants { get; set; }

    /// <summary>
    /// What was the estimated risk
    /// </summary>
    [JsonPropertyName("riskEstimate")]
    public BackboneElement RiskEstimate { get; set; }

    /// <summary>
    /// Description of risk estimate
    /// </summary>
    [JsonPropertyName("description")]
    public FhirString Description { get; set; }

    /// <summary>
    /// Type of risk estimate
    /// </summary>
    [JsonPropertyName("type")]
    public CodeableConcept Type { get; set; }

    /// <summary>
    /// Point estimate
    /// </summary>
    [JsonPropertyName("value")]
    public FhirDecimal Value { get; set; }

    /// <summary>
    /// What unit is the outcome described in?
    /// </summary>
    [JsonPropertyName("unitOfMeasure")]
    public CodeableConcept UnitOfMeasure { get; set; }

    /// <summary>
    /// Sample size for group measured
    /// </summary>
    [JsonPropertyName("denominatorCount")]
    public FhirInteger DenominatorCount { get; set; }

    /// <summary>
    /// Number with the outcome
    /// </summary>
    [JsonPropertyName("numeratorCount")]
    public FhirInteger NumeratorCount { get; set; }

    /// <summary>
    /// How precise the estimate is
    /// </summary>
    [JsonPropertyName("precisionEstimate")]
    public List<BackboneElement>? PrecisionEstimate { get; set; }

    /// <summary>
    /// How certain is the risk
    /// </summary>
    [JsonPropertyName("certainty")]
    public List<BackboneElement>? Certainty { get; set; }

    /// <summary>
    /// Certainty rating
    /// </summary>
    [JsonPropertyName("rating")]
    public List<CodeableConcept>? Rating { get; set; }

    /// <summary>
    /// Used for footnotes or explanatory notes
    /// </summary>
    [JsonPropertyName("note")]
    public List<Annotation>? Note { get; set; }

    /// <summary>
    /// A component that contributes to the overall certainty
    /// </summary>
    [JsonPropertyName("certaintySubcomponent")]
    public List<BackboneElement>? CertaintySubcomponent { get; set; }

    /// <summary>
    /// Validates this instance according to FHIR rules
    /// </summary>
    public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
    {
        foreach (var result in base.Validate(validationContext))
            yield return result;

        // TODO: Add specific validation rules
    }

}
