// <auto-generated />
// FHIR R4 Resource: InsurancePlan
// This file is automatically generated. Do not edit manually.

using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using Fhir.R4.Models.Base;
using Fhir.TypeFramework.DataTypes;

namespace Fhir.R4.Models.Resources;

/// <summary>
/// Details of a Health Insurance product/plan provided by an organization.
/// </summary>
public class InsurancePlan : DomainResource
{
    /// <summary>
    /// Resource type name
    /// </summary>
    [JsonPropertyName("resourceType")]
    public override string ResourceType => "InsurancePlan";

    /// <summary>
    /// Business Identifier for Product
    /// </summary>
    [JsonPropertyName("identifier")]
    public List<Identifier>? IdentifierValue { get; set; }

    /// <summary>
    /// draft | active | retired | unknown
    /// </summary>
    [JsonPropertyName("status")]
    public FhirCode Status { get; set; }

    /// <summary>
    /// Kind of product
    /// </summary>
    [JsonPropertyName("type")]
    public List<CodeableConcept>? Type { get; set; }

    /// <summary>
    /// Official name
    /// </summary>
    [JsonPropertyName("name")]
    public FhirString Name { get; set; }

    /// <summary>
    /// Alternate names
    /// </summary>
    [JsonPropertyName("alias")]
    public List<FhirString>? Alias { get; set; }

    /// <summary>
    /// When the product is available
    /// </summary>
    [JsonPropertyName("period")]
    public Period PeriodValue { get; set; }

    /// <summary>
    /// Plan issuer
    /// </summary>
    [JsonPropertyName("ownedBy")]
    public Reference OwnedBy { get; set; }

    /// <summary>
    /// Product administrator
    /// </summary>
    [JsonPropertyName("administeredBy")]
    public Reference AdministeredBy { get; set; }

    /// <summary>
    /// Where product applies
    /// </summary>
    [JsonPropertyName("coverageArea")]
    public List<Reference>? CoverageArea { get; set; }

    /// <summary>
    /// Contact for the product
    /// </summary>
    [JsonPropertyName("contact")]
    public List<BackboneElement>? Contact { get; set; }

    /// <summary>
    /// Technical endpoint
    /// </summary>
    [JsonPropertyName("endpoint")]
    public List<Reference>? Endpoint { get; set; }

    /// <summary>
    /// What networks are Included
    /// </summary>
    [JsonPropertyName("network")]
    public List<Reference>? Network { get; set; }

    /// <summary>
    /// Coverage details
    /// </summary>
    [JsonPropertyName("coverage")]
    public List<BackboneElement>? Coverage { get; set; }

    /// <summary>
    /// Plan details
    /// </summary>
    [JsonPropertyName("plan")]
    public List<BackboneElement>? Plan { get; set; }

    /// <summary>
    /// Business Identifier for Product
    /// </summary>
    [JsonPropertyName("identifier")]
    public List<Identifier>? IdentifierValue { get; set; }

    /// <summary>
    /// Type of plan
    /// </summary>
    [JsonPropertyName("type")]
    public CodeableConcept Type { get; set; }

    /// <summary>
    /// Where product applies
    /// </summary>
    [JsonPropertyName("coverageArea")]
    public List<Reference>? CoverageArea { get; set; }

    /// <summary>
    /// What networks provide coverage
    /// </summary>
    [JsonPropertyName("network")]
    public List<Reference>? Network { get; set; }

    /// <summary>
    /// Overall costs
    /// </summary>
    [JsonPropertyName("generalCost")]
    public List<BackboneElement>? GeneralCost { get; set; }

    /// <summary>
    /// Specific costs
    /// </summary>
    [JsonPropertyName("specificCost")]
    public List<BackboneElement>? SpecificCost { get; set; }

    /// <summary>
    /// Validates this instance according to FHIR rules
    /// </summary>
    public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
    {
        foreach (var result in base.Validate(validationContext))
            yield return result;

        // TODO: Add specific validation rules
    }

}
