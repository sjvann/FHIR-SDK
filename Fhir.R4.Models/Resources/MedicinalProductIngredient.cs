// <auto-generated />
// FHIR R4 Resource: MedicinalProductIngredient
// This file is automatically generated. Do not edit manually.

using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using Fhir.R4.Models.Base;
using Fhir.TypeFramework.DataTypes;

namespace Fhir.R4.Models.Resources;

/// <summary>
/// An ingredient of a manufactured item or pharmaceutical product.
/// </summary>
public class MedicinalProductIngredient : DomainResource
{
    /// <summary>
    /// Resource type name
    /// </summary>
    [JsonPropertyName("resourceType")]
    public override string ResourceType => "MedicinalProductIngredient";

    /// <summary>
    /// Identifier for the ingredient
    /// </summary>
    [JsonPropertyName("identifier")]
    public Identifier IdentifierValue { get; set; }

    /// <summary>
    /// Ingredient role e.g. Active ingredient, excipient
    /// </summary>
    [Required]
    [JsonPropertyName("role")]
    public CodeableConcept Role { get; set; }

    /// <summary>
    /// If the ingredient is a known or suspected allergen
    /// </summary>
    [JsonPropertyName("allergenicIndicator")]
    public FhirBoolean AllergenicIndicator { get; set; }

    /// <summary>
    /// Manufacturer of this Ingredient
    /// </summary>
    [JsonPropertyName("manufacturer")]
    public List<Reference>? Manufacturer { get; set; }

    /// <summary>
    /// A specified substance that comprises this ingredient
    /// </summary>
    [JsonPropertyName("specifiedSubstance")]
    public List<BackboneElement>? SpecifiedSubstance { get; set; }

    /// <summary>
    /// The specified substance
    /// </summary>
    [Required]
    [JsonPropertyName("code")]
    public CodeableConcept Code { get; set; }

    /// <summary>
    /// The group of specified substance, e.g. group 1 to 4
    /// </summary>
    [Required]
    [JsonPropertyName("group")]
    public CodeableConcept Group { get; set; }

    /// <summary>
    /// Confidentiality level of the specified substance as the ingredient
    /// </summary>
    [JsonPropertyName("confidentiality")]
    public CodeableConcept Confidentiality { get; set; }

    /// <summary>
    /// Quantity of the substance or specified substance present in the manufactured item or pharmaceutical product
    /// </summary>
    [JsonPropertyName("strength")]
    public List<BackboneElement>? Strength { get; set; }

    /// <summary>
    /// The ingredient substance
    /// </summary>
    [JsonPropertyName("substance")]
    public BackboneElement Substance { get; set; }

    /// <summary>
    /// The ingredient substance
    /// </summary>
    [Required]
    [JsonPropertyName("code")]
    public CodeableConcept Code { get; set; }

    /// <summary>
    /// Quantity of the substance or specified substance present in the manufactured item or pharmaceutical product
    /// </summary>
    [JsonPropertyName("strength")]
    public List<>? Strength { get; set; }

    /// <summary>
    /// Validates this instance according to FHIR rules
    /// </summary>
    public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
    {
        foreach (var result in base.Validate(validationContext))
            yield return result;

        // TODO: Add specific validation rules
    }

}
