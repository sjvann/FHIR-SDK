// <auto-generated />
// FHIR R4 Resource: MessageDefinition
// This file is automatically generated. Do not edit manually.

using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using Fhir.R4.Models.Base;
using Fhir.TypeFramework.DataTypes;

namespace Fhir.R4.Models.Resources;

/// <summary>
/// Defines the characteristics of a message that can be shared between systems, including the type of event that initiates the message, the content to be transmitted and what response(s), if any, are permitted.
/// </summary>
public class MessageDefinition : DomainResource
{
    /// <summary>
    /// Resource type name
    /// </summary>
    [JsonPropertyName("resourceType")]
    public override string ResourceType => "MessageDefinition";

    /// <summary>
    /// Business Identifier for a given MessageDefinition
    /// </summary>
    [JsonPropertyName("url")]
    public FhirUri Url { get; set; }

    /// <summary>
    /// Primary key for the message definition on a given server
    /// </summary>
    [JsonPropertyName("identifier")]
    public List<Identifier>? IdentifierValue { get; set; }

    /// <summary>
    /// Business version of the message definition
    /// </summary>
    [JsonPropertyName("version")]
    public FhirString Version { get; set; }

    /// <summary>
    /// Name for this message definition (computer friendly)
    /// </summary>
    [JsonPropertyName("name")]
    public FhirString Name { get; set; }

    /// <summary>
    /// Name for this message definition (human friendly)
    /// </summary>
    [JsonPropertyName("title")]
    public FhirString Title { get; set; }

    /// <summary>
    /// Takes the place of
    /// </summary>
    [JsonPropertyName("replaces")]
    public List<FhirCanonical>? Replaces { get; set; }

    /// <summary>
    /// draft | active | retired | unknown
    /// </summary>
    [Required]
    [JsonPropertyName("status")]
    public FhirCode Status { get; set; }

    /// <summary>
    /// For testing purposes, not real usage
    /// </summary>
    [JsonPropertyName("experimental")]
    public FhirBoolean Experimental { get; set; }

    /// <summary>
    /// Date last changed
    /// </summary>
    [Required]
    [JsonPropertyName("date")]
    public FhirDateTime Date { get; set; }

    /// <summary>
    /// Name of the publisher (organization or individual)
    /// </summary>
    [JsonPropertyName("publisher")]
    public FhirString Publisher { get; set; }

    /// <summary>
    /// Contact details for the publisher
    /// </summary>
    [JsonPropertyName("contact")]
    public List<ContactDetail>? Contact { get; set; }

    /// <summary>
    /// Natural language description of the message definition
    /// </summary>
    [JsonPropertyName("description")]
    public FhirMarkdown Description { get; set; }

    /// <summary>
    /// The context that the content is intended to support
    /// </summary>
    [JsonPropertyName("useContext")]
    public List<UsageContext>? UseContext { get; set; }

    /// <summary>
    /// Intended jurisdiction for message definition (if applicable)
    /// </summary>
    [JsonPropertyName("jurisdiction")]
    public List<CodeableConcept>? Jurisdiction { get; set; }

    /// <summary>
    /// Why this message definition is defined
    /// </summary>
    [JsonPropertyName("purpose")]
    public FhirMarkdown Purpose { get; set; }

    /// <summary>
    /// Use and/or publishing restrictions
    /// </summary>
    [JsonPropertyName("copyright")]
    public FhirMarkdown Copyright { get; set; }

    /// <summary>
    /// Definition this one is based on
    /// </summary>
    [JsonPropertyName("base")]
    public FhirCanonical Base { get; set; }

    /// <summary>
    /// Protocol/workflow this is part of
    /// </summary>
    [JsonPropertyName("parent")]
    public List<FhirCanonical>? Parent { get; set; }

    /// <summary>
    /// consequence | currency | notification
    /// </summary>
    [JsonPropertyName("category")]
    public FhirCode Category { get; set; }

    /// <summary>
    /// Resource(s) that are the subject of the event
    /// </summary>
    [JsonPropertyName("focus")]
    public List<BackboneElement>? Focus { get; set; }

    /// <summary>
    /// Type of resource
    /// </summary>
    [Required]
    [JsonPropertyName("code")]
    public FhirCode CodeValue { get; set; }

    /// <summary>
    /// Profile that must be adhered to by focus
    /// </summary>
    [JsonPropertyName("profile")]
    public FhirCanonical Profile { get; set; }

    /// <summary>
    /// Minimum number of focuses of this type
    /// </summary>
    [Required]
    [JsonPropertyName("min")]
    public FhirUnsignedInt Min { get; set; }

    /// <summary>
    /// Maximum number of focuses of this type
    /// </summary>
    [JsonPropertyName("max")]
    public FhirString Max { get; set; }

    /// <summary>
    /// always | on-error | never | on-success
    /// </summary>
    [JsonPropertyName("responseRequired")]
    public FhirCode ResponseRequired { get; set; }

    /// <summary>
    /// Responses to this message
    /// </summary>
    [JsonPropertyName("allowedResponse")]
    public List<BackboneElement>? AllowedResponse { get; set; }

    /// <summary>
    /// Reference to allowed message definition response
    /// </summary>
    [Required]
    [JsonPropertyName("message")]
    public FhirCanonical Message { get; set; }

    /// <summary>
    /// When should this response be used
    /// </summary>
    [JsonPropertyName("situation")]
    public FhirMarkdown Situation { get; set; }

    /// <summary>
    /// Canonical reference to a GraphDefinition
    /// </summary>
    [JsonPropertyName("graph")]
    public List<FhirCanonical>? Graph { get; set; }

    /// <summary>
    /// Validates this instance according to FHIR rules
    /// </summary>
    public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
    {
        foreach (var result in base.Validate(validationContext))
            yield return result;

        // TODO: Add specific validation rules
    }

}
