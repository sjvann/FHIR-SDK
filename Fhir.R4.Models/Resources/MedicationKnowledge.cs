// <auto-generated />
// FHIR R4 Resource: MedicationKnowledge
// This file is automatically generated. Do not edit manually.

using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using Fhir.R4.Models.Base;
using Fhir.TypeFramework.DataTypes;

namespace Fhir.R4.Models.Resources;

/// <summary>
/// Information about a medication that is used to support knowledge.
/// </summary>
public class MedicationKnowledge : DomainResource
{
    /// <summary>
    /// Resource type name
    /// </summary>
    [JsonPropertyName("resourceType")]
    public override string ResourceType => "MedicationKnowledge";

    /// <summary>
    /// Code that identifies this medication
    /// </summary>
    [JsonPropertyName("code")]
    public CodeableConcept Code { get; set; }

    /// <summary>
    /// active | inactive | entered-in-error
    /// </summary>
    [JsonPropertyName("status")]
    public FhirCode Status { get; set; }

    /// <summary>
    /// Manufacturer of the item
    /// </summary>
    [JsonPropertyName("manufacturer")]
    public Reference Manufacturer { get; set; }

    /// <summary>
    /// powder | tablets | capsule +
    /// </summary>
    [JsonPropertyName("doseForm")]
    public CodeableConcept DoseForm { get; set; }

    /// <summary>
    /// Amount of drug in package
    /// </summary>
    [JsonPropertyName("amount")]
    public Quantity Amount { get; set; }

    /// <summary>
    /// Additional names for a medication
    /// </summary>
    [JsonPropertyName("synonym")]
    public List<FhirString>? Synonym { get; set; }

    /// <summary>
    /// Associated or related medication information
    /// </summary>
    [JsonPropertyName("relatedMedicationKnowledge")]
    public List<BackboneElement>? RelatedMedicationKnowledge { get; set; }

    /// <summary>
    /// Category of medicationKnowledge
    /// </summary>
    [Required]
    [JsonPropertyName("type")]
    public CodeableConcept Type { get; set; }

    /// <summary>
    /// Associated documentation about the associated medication knowledge
    /// </summary>
    [Required]
    [JsonPropertyName("reference")]
    public List<Reference> ReferenceValue { get; set; }

    /// <summary>
    /// A medication resource that is associated with this medication
    /// </summary>
    [JsonPropertyName("associatedMedication")]
    public List<Reference>? AssociatedMedication { get; set; }

    /// <summary>
    /// Category of the medication or product
    /// </summary>
    [JsonPropertyName("productType")]
    public List<CodeableConcept>? ProductType { get; set; }

    /// <summary>
    /// Associated documentation about the medication
    /// </summary>
    [JsonPropertyName("monograph")]
    public List<BackboneElement>? Monograph { get; set; }

    /// <summary>
    /// The category of medication document
    /// </summary>
    [JsonPropertyName("type")]
    public CodeableConcept Type { get; set; }

    /// <summary>
    /// Associated documentation about the medication
    /// </summary>
    [JsonPropertyName("source")]
    public Reference Source { get; set; }

    /// <summary>
    /// Active or inactive ingredient
    /// </summary>
    [JsonPropertyName("ingredient")]
    public List<BackboneElement>? Ingredient { get; set; }

    /// <summary>
    /// Active ingredient indicator
    /// </summary>
    [JsonPropertyName("isActive")]
    public FhirBoolean IsActive { get; set; }

    /// <summary>
    /// Quantity of ingredient present
    /// </summary>
    [JsonPropertyName("strength")]
    public Ratio Strength { get; set; }

    /// <summary>
    /// The instructions for preparing the medication
    /// </summary>
    [JsonPropertyName("preparationInstruction")]
    public FhirMarkdown PreparationInstruction { get; set; }

    /// <summary>
    /// The intended or approved route of administration
    /// </summary>
    [JsonPropertyName("intendedRoute")]
    public List<CodeableConcept>? IntendedRoute { get; set; }

    /// <summary>
    /// The pricing of the medication
    /// </summary>
    [JsonPropertyName("cost")]
    public List<BackboneElement>? Cost { get; set; }

    /// <summary>
    /// The category of the cost information
    /// </summary>
    [Required]
    [JsonPropertyName("type")]
    public CodeableConcept Type { get; set; }

    /// <summary>
    /// The source or owner for the price information
    /// </summary>
    [JsonPropertyName("source")]
    public FhirString Source { get; set; }

    /// <summary>
    /// The price of the medication
    /// </summary>
    [Required]
    [JsonPropertyName("cost")]
    public Money Cost { get; set; }

    /// <summary>
    /// Program under which a medication is reviewed
    /// </summary>
    [JsonPropertyName("monitoringProgram")]
    public List<BackboneElement>? MonitoringProgram { get; set; }

    /// <summary>
    /// Type of program under which the medication is monitored
    /// </summary>
    [JsonPropertyName("type")]
    public CodeableConcept Type { get; set; }

    /// <summary>
    /// Name of the reviewing program
    /// </summary>
    [JsonPropertyName("name")]
    public FhirString Name { get; set; }

    /// <summary>
    /// Guidelines for administration of the medication
    /// </summary>
    [JsonPropertyName("administrationGuidelines")]
    public List<BackboneElement>? AdministrationGuidelines { get; set; }

    /// <summary>
    /// Dosage for the medication for the specific guidelines
    /// </summary>
    [JsonPropertyName("dosage")]
    public List<BackboneElement>? Dosage { get; set; }

    /// <summary>
    /// Characteristics of the patient that are relevant to the administration guidelines
    /// </summary>
    [JsonPropertyName("patientCharacteristics")]
    public List<BackboneElement>? PatientCharacteristics { get; set; }

    /// <summary>
    /// Categorization of the medication within a formulary or classification system
    /// </summary>
    [JsonPropertyName("medicineClassification")]
    public List<BackboneElement>? MedicineClassification { get; set; }

    /// <summary>
    /// The type of category for the medication (for example, therapeutic classification, therapeutic sub-classification)
    /// </summary>
    [Required]
    [JsonPropertyName("type")]
    public CodeableConcept Type { get; set; }

    /// <summary>
    /// Specific category assigned to the medication
    /// </summary>
    [JsonPropertyName("classification")]
    public List<CodeableConcept>? Classification { get; set; }

    /// <summary>
    /// Details about packaged medications
    /// </summary>
    [JsonPropertyName("packaging")]
    public BackboneElement Packaging { get; set; }

    /// <summary>
    /// A code that defines the specific type of packaging that the medication can be found in
    /// </summary>
    [JsonPropertyName("type")]
    public CodeableConcept Type { get; set; }

    /// <summary>
    /// The number of product units the package would contain if fully loaded
    /// </summary>
    [JsonPropertyName("quantity")]
    public Quantity QuantityValue { get; set; }

    /// <summary>
    /// Specifies descriptive properties of the medicine
    /// </summary>
    [JsonPropertyName("drugCharacteristic")]
    public List<BackboneElement>? DrugCharacteristic { get; set; }

    /// <summary>
    /// Code specifying the type of characteristic of medication
    /// </summary>
    [JsonPropertyName("type")]
    public CodeableConcept Type { get; set; }

    /// <summary>
    /// Potential clinical issue with or between medication(s)
    /// </summary>
    [JsonPropertyName("contraindication")]
    public List<Reference>? Contraindication { get; set; }

    /// <summary>
    /// Regulatory information about a medication
    /// </summary>
    [JsonPropertyName("regulatory")]
    public List<BackboneElement>? Regulatory { get; set; }

    /// <summary>
    /// Specifies the authority of the regulation
    /// </summary>
    [Required]
    [JsonPropertyName("regulatoryAuthority")]
    public Reference RegulatoryAuthority { get; set; }

    /// <summary>
    /// Specifies if changes are allowed when dispensing a medication from a regulatory perspective
    /// </summary>
    [JsonPropertyName("substitution")]
    public List<BackboneElement>? Substitution { get; set; }

    /// <summary>
    /// Specifies the schedule of a medication in jurisdiction
    /// </summary>
    [JsonPropertyName("schedule")]
    public List<BackboneElement>? Schedule { get; set; }

    /// <summary>
    /// The maximum number of units of the medication that can be dispensed in a period
    /// </summary>
    [JsonPropertyName("maxDispense")]
    public BackboneElement MaxDispense { get; set; }

    /// <summary>
    /// The time course of drug absorption, distribution, metabolism and excretion of a medication from the body
    /// </summary>
    [JsonPropertyName("kinetics")]
    public List<BackboneElement>? Kinetics { get; set; }

    /// <summary>
    /// The drug concentration measured at certain discrete points in time
    /// </summary>
    [JsonPropertyName("areaUnderCurve")]
    public List<Quantity>? AreaUnderCurve { get; set; }

    /// <summary>
    /// The median lethal dose of a drug
    /// </summary>
    [JsonPropertyName("lethalDose50")]
    public List<Quantity>? LethalDose50 { get; set; }

    /// <summary>
    /// Time required for concentration in the body to decrease by half
    /// </summary>
    [JsonPropertyName("halfLifePeriod")]
    public Duration HalfLifePeriod { get; set; }

    /// <summary>
    /// Validates this instance according to FHIR rules
    /// </summary>
    public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
    {
        foreach (var result in base.Validate(validationContext))
            yield return result;

        // TODO: Add specific validation rules
    }

}
