// <auto-generated />
// FHIR R4 Resource: OrganizationAffiliation
// This file is automatically generated. Do not edit manually.

using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using Fhir.R4.Models.Base;
using Fhir.TypeFramework.DataTypes;

namespace Fhir.R4.Models.Resources;

/// <summary>
/// Defines an affiliation/assotiation/relationship between 2 distinct oganizations, that is not a part-of relationship/sub-division relationship.
/// </summary>
public class OrganizationAffiliation : DomainResource
{
    /// <summary>
    /// Resource type name
    /// </summary>
    [JsonPropertyName("resourceType")]
    public override string ResourceType => "OrganizationAffiliation";

    /// <summary>
    /// Business identifiers that are specific to this role
    /// </summary>
    [JsonPropertyName("identifier")]
    public List<Identifier>? IdentifierValue { get; set; }

    /// <summary>
    /// Whether this organization affiliation record is in active use
    /// </summary>
    [JsonPropertyName("active")]
    public FhirBoolean Active { get; set; }

    /// <summary>
    /// The period during which the participatingOrganization is affiliated with the primary organization
    /// </summary>
    [JsonPropertyName("period")]
    public Period PeriodValue { get; set; }

    /// <summary>
    /// Organization where the role is available
    /// </summary>
    [JsonPropertyName("organization")]
    public Reference Organization { get; set; }

    /// <summary>
    /// Organization that provides/performs the role (e.g. providing services or is a member of)
    /// </summary>
    [JsonPropertyName("participatingOrganization")]
    public Reference ParticipatingOrganization { get; set; }

    /// <summary>
    /// Health insurance provider network in which the participatingOrganization provides the role&apos;s services (if defined) at the indicated locations (if defined)
    /// </summary>
    [JsonPropertyName("network")]
    public List<Reference>? Network { get; set; }

    /// <summary>
    /// Definition of the role the participatingOrganization plays
    /// </summary>
    [JsonPropertyName("code")]
    public List<CodeableConcept>? Code { get; set; }

    /// <summary>
    /// Specific specialty of the participatingOrganization in the context of the role
    /// </summary>
    [JsonPropertyName("specialty")]
    public List<CodeableConcept>? Specialty { get; set; }

    /// <summary>
    /// The location(s) at which the role occurs
    /// </summary>
    [JsonPropertyName("location")]
    public List<Reference>? Location { get; set; }

    /// <summary>
    /// Healthcare services provided through the role
    /// </summary>
    [JsonPropertyName("healthcareService")]
    public List<Reference>? HealthcareService { get; set; }

    /// <summary>
    /// Contact details at the participatingOrganization relevant to this Affiliation
    /// </summary>
    [JsonPropertyName("telecom")]
    public List<ContactPoint>? Telecom { get; set; }

    /// <summary>
    /// Technical endpoints providing access to services operated for this role
    /// </summary>
    [JsonPropertyName("endpoint")]
    public List<Reference>? Endpoint { get; set; }

    /// <summary>
    /// Validates this instance according to FHIR rules
    /// </summary>
    public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
    {
        foreach (var result in base.Validate(validationContext))
            yield return result;

        // TODO: Add specific validation rules
    }

}
