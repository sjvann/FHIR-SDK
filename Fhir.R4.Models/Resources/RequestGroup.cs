// <auto-generated />
// FHIR R4 Resource: RequestGroup
// This file is automatically generated. Do not edit manually.

using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using Fhir.R4.Models.Base;
using Fhir.TypeFramework.DataTypes;

namespace Fhir.R4.Models.Resources;

/// <summary>
/// A group of related requests that can be used to capture intended activities that have inter-dependencies such as "give this medication after that one".
/// </summary>
public class RequestGroup : DomainResource
{
    /// <summary>
    /// Resource type name
    /// </summary>
    [JsonPropertyName("resourceType")]
    public override string ResourceType => "RequestGroup";

    /// <summary>
    /// Business identifier
    /// </summary>
    [JsonPropertyName("identifier")]
    public List<Identifier>? IdentifierValue { get; set; }

    /// <summary>
    /// Instantiates FHIR protocol or definition
    /// </summary>
    [JsonPropertyName("instantiatesCanonical")]
    public List<FhirCanonical>? InstantiatesCanonical { get; set; }

    /// <summary>
    /// Instantiates external protocol or definition
    /// </summary>
    [JsonPropertyName("instantiatesUri")]
    public List<FhirUri>? InstantiatesUri { get; set; }

    /// <summary>
    /// Fulfills plan, proposal, or order
    /// </summary>
    [JsonPropertyName("basedOn")]
    public List<Reference>? BasedOn { get; set; }

    /// <summary>
    /// Request(s) replaced by this request
    /// </summary>
    [JsonPropertyName("replaces")]
    public List<Reference>? Replaces { get; set; }

    /// <summary>
    /// Composite request this is part of
    /// </summary>
    [JsonPropertyName("groupIdentifier")]
    public Identifier GroupIdentifier { get; set; }

    /// <summary>
    /// draft | active | on-hold | revoked | completed | entered-in-error | unknown
    /// </summary>
    [Required]
    [JsonPropertyName("status")]
    public FhirCode Status { get; set; }

    /// <summary>
    /// proposal | plan | directive | order | original-order | reflex-order | filler-order | instance-order | option
    /// </summary>
    [Required]
    [JsonPropertyName("intent")]
    public FhirCode Intent { get; set; }

    /// <summary>
    /// routine | urgent | asap | stat
    /// </summary>
    [JsonPropertyName("priority")]
    public FhirCode Priority { get; set; }

    /// <summary>
    /// What&apos;s being requested/ordered
    /// </summary>
    [JsonPropertyName("code")]
    public CodeableConcept Code { get; set; }

    /// <summary>
    /// Who the request group is about
    /// </summary>
    [JsonPropertyName("subject")]
    public Reference Subject { get; set; }

    /// <summary>
    /// Created as part of
    /// </summary>
    [JsonPropertyName("encounter")]
    public Reference Encounter { get; set; }

    /// <summary>
    /// When the request group was authored
    /// </summary>
    [JsonPropertyName("authoredOn")]
    public FhirDateTime AuthoredOn { get; set; }

    /// <summary>
    /// Device or practitioner that authored the request group
    /// </summary>
    [JsonPropertyName("author")]
    public Reference Author { get; set; }

    /// <summary>
    /// Why the request group is needed
    /// </summary>
    [JsonPropertyName("reasonCode")]
    public List<CodeableConcept>? ReasonCode { get; set; }

    /// <summary>
    /// Why the request group is needed
    /// </summary>
    [JsonPropertyName("reasonReference")]
    public List<Reference>? ReasonReference { get; set; }

    /// <summary>
    /// Additional notes about the response
    /// </summary>
    [JsonPropertyName("note")]
    public List<Annotation>? Note { get; set; }

    /// <summary>
    /// Proposed actions, if any
    /// </summary>
    [JsonPropertyName("action")]
    public List<BackboneElement>? Action { get; set; }

    /// <summary>
    /// Validates this instance according to FHIR rules
    /// </summary>
    public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
    {
        foreach (var result in base.Validate(validationContext))
            yield return result;

        // TODO: Add specific validation rules
    }

}
