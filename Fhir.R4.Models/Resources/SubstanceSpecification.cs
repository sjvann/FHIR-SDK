// <auto-generated />
// FHIR R4 Resource: SubstanceSpecification
// This file is automatically generated. Do not edit manually.

using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using Fhir.R4.Models.Base;
using Fhir.TypeFramework.DataTypes;

namespace Fhir.R4.Models.Resources;

/// <summary>
/// The detailed description of a substance, typically at a level beyond what is used for prescribing.
/// </summary>
public class SubstanceSpecification : DomainResource
{
    /// <summary>
    /// Resource type name
    /// </summary>
    [JsonPropertyName("resourceType")]
    public override string ResourceType => "SubstanceSpecification";

    /// <summary>
    /// Identifier by which this substance is known
    /// </summary>
    [JsonPropertyName("identifier")]
    public Identifier IdentifierValue { get; set; }

    /// <summary>
    /// High level categorization, e.g. polymer or nucleic acid
    /// </summary>
    [JsonPropertyName("type")]
    public CodeableConcept Type { get; set; }

    /// <summary>
    /// Status of substance within the catalogue e.g. approved
    /// </summary>
    [JsonPropertyName("status")]
    public CodeableConcept Status { get; set; }

    /// <summary>
    /// If the substance applies to only human or veterinary use
    /// </summary>
    [JsonPropertyName("domain")]
    public CodeableConcept Domain { get; set; }

    /// <summary>
    /// Textual description of the substance
    /// </summary>
    [JsonPropertyName("description")]
    public FhirString Description { get; set; }

    /// <summary>
    /// Supporting literature
    /// </summary>
    [JsonPropertyName("source")]
    public List<Reference>? Source { get; set; }

    /// <summary>
    /// Textual comment about this record of a substance
    /// </summary>
    [JsonPropertyName("comment")]
    public FhirString Comment { get; set; }

    /// <summary>
    /// Moiety, for structural modifications
    /// </summary>
    [JsonPropertyName("moiety")]
    public List<BackboneElement>? Moiety { get; set; }

    /// <summary>
    /// Role that the moiety is playing
    /// </summary>
    [JsonPropertyName("role")]
    public CodeableConcept Role { get; set; }

    /// <summary>
    /// Identifier by which this moiety substance is known
    /// </summary>
    [JsonPropertyName("identifier")]
    public Identifier IdentifierValue { get; set; }

    /// <summary>
    /// Textual name for this moiety substance
    /// </summary>
    [JsonPropertyName("name")]
    public FhirString Name { get; set; }

    /// <summary>
    /// Stereochemistry type
    /// </summary>
    [JsonPropertyName("stereochemistry")]
    public CodeableConcept Stereochemistry { get; set; }

    /// <summary>
    /// Optical activity type
    /// </summary>
    [JsonPropertyName("opticalActivity")]
    public CodeableConcept OpticalActivity { get; set; }

    /// <summary>
    /// Molecular formula
    /// </summary>
    [JsonPropertyName("molecularFormula")]
    public FhirString MolecularFormula { get; set; }

    /// <summary>
    /// General specifications for this substance, including how it is related to other substances
    /// </summary>
    [JsonPropertyName("property")]
    public List<BackboneElement>? Property { get; set; }

    /// <summary>
    /// A category for this property, e.g. Physical, Chemical, Enzymatic
    /// </summary>
    [JsonPropertyName("category")]
    public CodeableConcept Category { get; set; }

    /// <summary>
    /// Property type e.g. viscosity, pH, isoelectric point
    /// </summary>
    [JsonPropertyName("code")]
    public CodeableConcept Code { get; set; }

    /// <summary>
    /// Parameters that were used in the measurement of a property (e.g. for viscosity: measured at 20C with a pH of 7.1)
    /// </summary>
    [JsonPropertyName("parameters")]
    public FhirString Parameters { get; set; }

    /// <summary>
    /// General information detailing this substance
    /// </summary>
    [JsonPropertyName("referenceInformation")]
    public Reference ReferenceInformation { get; set; }

    /// <summary>
    /// Structural information
    /// </summary>
    [JsonPropertyName("structure")]
    public BackboneElement Structure { get; set; }

    /// <summary>
    /// Stereochemistry type
    /// </summary>
    [JsonPropertyName("stereochemistry")]
    public CodeableConcept Stereochemistry { get; set; }

    /// <summary>
    /// Optical activity type
    /// </summary>
    [JsonPropertyName("opticalActivity")]
    public CodeableConcept OpticalActivity { get; set; }

    /// <summary>
    /// Molecular formula
    /// </summary>
    [JsonPropertyName("molecularFormula")]
    public FhirString MolecularFormula { get; set; }

    /// <summary>
    /// Specified per moiety according to the Hill system, i.e. first C, then H, then alphabetical, each moiety separated by a dot
    /// </summary>
    [JsonPropertyName("molecularFormulaByMoiety")]
    public FhirString MolecularFormulaByMoiety { get; set; }

    /// <summary>
    /// Applicable for single substances that contain a radionuclide or a non-natural isotopic ratio
    /// </summary>
    [JsonPropertyName("isotope")]
    public List<BackboneElement>? Isotope { get; set; }

    /// <summary>
    /// The molecular weight or weight range (for proteins, polymers or nucleic acids)
    /// </summary>
    [JsonPropertyName("molecularWeight")]
    public  MolecularWeight { get; set; }

    /// <summary>
    /// Supporting literature
    /// </summary>
    [JsonPropertyName("source")]
    public List<Reference>? Source { get; set; }

    /// <summary>
    /// Molecular structural representation
    /// </summary>
    [JsonPropertyName("representation")]
    public List<BackboneElement>? Representation { get; set; }

    /// <summary>
    /// Codes associated with the substance
    /// </summary>
    [JsonPropertyName("code")]
    public List<BackboneElement>? Code { get; set; }

    /// <summary>
    /// The specific code
    /// </summary>
    [JsonPropertyName("code")]
    public CodeableConcept Code { get; set; }

    /// <summary>
    /// Status of the code assignment
    /// </summary>
    [JsonPropertyName("status")]
    public CodeableConcept Status { get; set; }

    /// <summary>
    /// The date at which the code status is changed as part of the terminology maintenance
    /// </summary>
    [JsonPropertyName("statusDate")]
    public FhirDateTime StatusDate { get; set; }

    /// <summary>
    /// Any comment can be provided in this field, if necessary
    /// </summary>
    [JsonPropertyName("comment")]
    public FhirString Comment { get; set; }

    /// <summary>
    /// Supporting literature
    /// </summary>
    [JsonPropertyName("source")]
    public List<Reference>? Source { get; set; }

    /// <summary>
    /// Names applicable to this substance
    /// </summary>
    [JsonPropertyName("name")]
    public List<BackboneElement>? Name { get; set; }

    /// <summary>
    /// The actual name
    /// </summary>
    [Required]
    [JsonPropertyName("name")]
    public FhirString Name { get; set; }

    /// <summary>
    /// Name type
    /// </summary>
    [JsonPropertyName("type")]
    public CodeableConcept Type { get; set; }

    /// <summary>
    /// The status of the name
    /// </summary>
    [JsonPropertyName("status")]
    public CodeableConcept Status { get; set; }

    /// <summary>
    /// If this is the preferred name for this substance
    /// </summary>
    [JsonPropertyName("preferred")]
    public FhirBoolean Preferred { get; set; }

    /// <summary>
    /// The use context of this name for example if there is a different name a drug active ingredient as opposed to a food colour additive
    /// </summary>
    [JsonPropertyName("domain")]
    public List<CodeableConcept>? Domain { get; set; }

    /// <summary>
    /// The jurisdiction where this name applies
    /// </summary>
    [JsonPropertyName("jurisdiction")]
    public List<CodeableConcept>? Jurisdiction { get; set; }

    /// <summary>
    /// A synonym of this name
    /// </summary>
    [JsonPropertyName("synonym")]
    public List<>? Synonym { get; set; }

    /// <summary>
    /// A translation for this name
    /// </summary>
    [JsonPropertyName("translation")]
    public List<>? Translation { get; set; }

    /// <summary>
    /// Details of the official nature of this name
    /// </summary>
    [JsonPropertyName("official")]
    public List<BackboneElement>? Official { get; set; }

    /// <summary>
    /// Supporting literature
    /// </summary>
    [JsonPropertyName("source")]
    public List<Reference>? Source { get; set; }

    /// <summary>
    /// The molecular weight or weight range (for proteins, polymers or nucleic acids)
    /// </summary>
    [JsonPropertyName("molecularWeight")]
    public List<>? MolecularWeight { get; set; }

    /// <summary>
    /// A link between this substance and another, with details of the relationship
    /// </summary>
    [JsonPropertyName("relationship")]
    public List<BackboneElement>? Relationship { get; set; }

    /// <summary>
    /// For example &quot;salt to parent&quot;, &quot;active moiety&quot;, &quot;starting material&quot;
    /// </summary>
    [JsonPropertyName("relationship")]
    public CodeableConcept Relationship { get; set; }

    /// <summary>
    /// For example where an enzyme strongly bonds with a particular substance, this is a defining relationship for that enzyme, out of several possible substance relationships
    /// </summary>
    [JsonPropertyName("isDefining")]
    public FhirBoolean IsDefining { get; set; }

    /// <summary>
    /// For use when the numeric
    /// </summary>
    [JsonPropertyName("amountRatioLowLimit")]
    public Ratio AmountRatioLowLimit { get; set; }

    /// <summary>
    /// An operator for the amount, for example &quot;average&quot;, &quot;approximately&quot;, &quot;less than&quot;
    /// </summary>
    [JsonPropertyName("amountType")]
    public CodeableConcept AmountType { get; set; }

    /// <summary>
    /// Supporting literature
    /// </summary>
    [JsonPropertyName("source")]
    public List<Reference>? Source { get; set; }

    /// <summary>
    /// Data items specific to nucleic acids
    /// </summary>
    [JsonPropertyName("nucleicAcid")]
    public Reference NucleicAcid { get; set; }

    /// <summary>
    /// Data items specific to polymers
    /// </summary>
    [JsonPropertyName("polymer")]
    public Reference Polymer { get; set; }

    /// <summary>
    /// Data items specific to proteins
    /// </summary>
    [JsonPropertyName("protein")]
    public Reference Protein { get; set; }

    /// <summary>
    /// Material or taxonomic/anatomical source for the substance
    /// </summary>
    [JsonPropertyName("sourceMaterial")]
    public Reference SourceMaterial { get; set; }

    /// <summary>
    /// Validates this instance according to FHIR rules
    /// </summary>
    public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
    {
        foreach (var result in base.Validate(validationContext))
            yield return result;

        // TODO: Add specific validation rules
    }

}
