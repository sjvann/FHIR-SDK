// <auto-generated />
// FHIR R4 Resource: SubstanceSourceMaterial
// This file is automatically generated. Do not edit manually.

using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using Fhir.R4.Models.Base;
using Fhir.TypeFramework.DataTypes;

namespace Fhir.R4.Models.Resources;

/// <summary>
/// Source material shall capture information on the taxonomic and anatomical origins as well as the fraction of a material that can result in or can be modified to form a substance. This set of data elements shall be used to define polymer substances isolated from biological matrices. Taxonomic and anatomical origins shall be described using a controlled vocabulary as required. This information is captured for naturally derived polymers ( . starch) and structurally diverse substances. For Organisms belonging to the Kingdom Plantae the Substance level defines the fresh material of a single species or infraspecies, the Herbal Drug and the Herbal preparation. For Herbal preparations, the fraction information will be captured at the Substance information level and additional information for herbal extracts will be captured at the Specified Substance Group 1 information level. See for further explanation the Substance Class: Structurally Diverse and the herbal annex.
/// </summary>
public class SubstanceSourceMaterial : DomainResource
{
    /// <summary>
    /// Resource type name
    /// </summary>
    [JsonPropertyName("resourceType")]
    public override string ResourceType => "SubstanceSourceMaterial";

    /// <summary>
    /// General high level classification of the source material specific to the origin of the material
    /// </summary>
    [JsonPropertyName("sourceMaterialClass")]
    public CodeableConcept SourceMaterialClass { get; set; }

    /// <summary>
    /// The type of the source material shall be specified based on a controlled vocabulary. For vaccines, this subclause refers to the class of infectious agent
    /// </summary>
    [JsonPropertyName("sourceMaterialType")]
    public CodeableConcept SourceMaterialType { get; set; }

    /// <summary>
    /// The state of the source material when extracted
    /// </summary>
    [JsonPropertyName("sourceMaterialState")]
    public CodeableConcept SourceMaterialState { get; set; }

    /// <summary>
    /// The unique identifier associated with the source material parent organism shall be specified
    /// </summary>
    [JsonPropertyName("organismId")]
    public Identifier OrganismId { get; set; }

    /// <summary>
    /// The organism accepted Scientific name shall be provided based on the organism taxonomy
    /// </summary>
    [JsonPropertyName("organismName")]
    public FhirString OrganismName { get; set; }

    /// <summary>
    /// The parent of the herbal drug Ginkgo biloba, Leaf is the substance ID of the substance (fresh) of Ginkgo biloba L. or Ginkgo biloba L. (Whole plant)
    /// </summary>
    [JsonPropertyName("parentSubstanceId")]
    public List<Identifier>? ParentSubstanceId { get; set; }

    /// <summary>
    /// The parent substance of the Herbal Drug, or Herbal preparation
    /// </summary>
    [JsonPropertyName("parentSubstanceName")]
    public List<FhirString>? ParentSubstanceName { get; set; }

    /// <summary>
    /// The country where the plant material is harvested or the countries where the plasma is sourced from as laid down in accordance with the Plasma Master File. For “Plasma-derived substances” the attribute country of origin provides information about the countries used for the manufacturing of the Cryopoor plama or Crioprecipitate
    /// </summary>
    [JsonPropertyName("countryOfOrigin")]
    public List<CodeableConcept>? CountryOfOrigin { get; set; }

    /// <summary>
    /// The place/region where the plant is harvested or the places/regions where the animal source material has its habitat
    /// </summary>
    [JsonPropertyName("geographicalLocation")]
    public List<FhirString>? GeographicalLocation { get; set; }

    /// <summary>
    /// Stage of life for animals, plants, insects and microorganisms. This information shall be provided only when the substance is significantly different in these stages (e.g. foetal bovine serum)
    /// </summary>
    [JsonPropertyName("developmentStage")]
    public CodeableConcept DevelopmentStage { get; set; }

    /// <summary>
    /// Many complex materials are fractions of parts of plants, animals, or minerals. Fraction elements are often necessary to define both Substances and Specified Group 1 Substances. For substances derived from Plants, fraction information will be captured at the Substance information level ( . Oils, Juices and Exudates). Additional information for Extracts, such as extraction solvent composition, will be captured at the Specified Substance Group 1 information level. For plasma-derived products fraction information will be captured at the Substance and the Specified Substance Group 1 levels
    /// </summary>
    [JsonPropertyName("fractionDescription")]
    public List<BackboneElement>? FractionDescription { get; set; }

    /// <summary>
    /// This element is capturing information about the fraction of a plant part, or human plasma for fractionation
    /// </summary>
    [JsonPropertyName("fraction")]
    public FhirString Fraction { get; set; }

    /// <summary>
    /// The specific type of the material constituting the component. For Herbal preparations the particulars of the extracts (liquid/dry) is described in Specified Substance Group 1
    /// </summary>
    [JsonPropertyName("materialType")]
    public CodeableConcept MaterialType { get; set; }

    /// <summary>
    /// This subclause describes the organism which the substance is derived from. For vaccines, the parent organism shall be specified based on these subclause elements. As an example, full taxonomy will be described for the Substance Name: ., Leaf
    /// </summary>
    [JsonPropertyName("organism")]
    public BackboneElement Organism { get; set; }

    /// <summary>
    /// The family of an organism shall be specified
    /// </summary>
    [JsonPropertyName("family")]
    public CodeableConcept Family { get; set; }

    /// <summary>
    /// The genus of an organism shall be specified; refers to the Latin epithet of the genus element of the plant/animal scientific name; it is present in names for genera, species and infraspecies
    /// </summary>
    [JsonPropertyName("genus")]
    public CodeableConcept Genus { get; set; }

    /// <summary>
    /// The species of an organism shall be specified; refers to the Latin epithet of the species of the plant/animal; it is present in names for species and infraspecies
    /// </summary>
    [JsonPropertyName("species")]
    public CodeableConcept Species { get; set; }

    /// <summary>
    /// The Intraspecific type of an organism shall be specified
    /// </summary>
    [JsonPropertyName("intraspecificType")]
    public CodeableConcept IntraspecificType { get; set; }

    /// <summary>
    /// The intraspecific description of an organism shall be specified based on a controlled vocabulary. For Influenza Vaccine, the intraspecific description shall contain the syntax of the antigen in line with the WHO convention
    /// </summary>
    [JsonPropertyName("intraspecificDescription")]
    public FhirString IntraspecificDescription { get; set; }

    /// <summary>
    /// 4.9.13.6.1 Author type (Conditional)
    /// </summary>
    [JsonPropertyName("author")]
    public List<BackboneElement>? Author { get; set; }

    /// <summary>
    /// 4.9.13.8.1 Hybrid species maternal organism ID (Optional)
    /// </summary>
    [JsonPropertyName("hybrid")]
    public BackboneElement Hybrid { get; set; }

    /// <summary>
    /// 4.9.13.7.1 Kingdom (Conditional)
    /// </summary>
    [JsonPropertyName("organismGeneral")]
    public BackboneElement OrganismGeneral { get; set; }

    /// <summary>
    /// To do
    /// </summary>
    [JsonPropertyName("partDescription")]
    public List<BackboneElement>? PartDescription { get; set; }

    /// <summary>
    /// Entity of anatomical origin of source material within an organism
    /// </summary>
    [JsonPropertyName("part")]
    public CodeableConcept Part { get; set; }

    /// <summary>
    /// The detailed anatomic location when the part can be extracted from different anatomical locations of the organism. Multiple alternative locations may apply
    /// </summary>
    [JsonPropertyName("partLocation")]
    public CodeableConcept PartLocation { get; set; }

    /// <summary>
    /// Validates this instance according to FHIR rules
    /// </summary>
    public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
    {
        foreach (var result in base.Validate(validationContext))
            yield return result;

        // TODO: Add specific validation rules
    }

}
