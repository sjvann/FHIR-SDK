// <auto-generated />
// FHIR R4 Resource: NutritionOrder
// This file is automatically generated. Do not edit manually.

using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using Fhir.R4.Models.Base;
using Fhir.TypeFramework.DataTypes;

namespace Fhir.R4.Models.Resources;

/// <summary>
/// A request to supply a diet, formula feeding (enteral) or oral nutritional supplement to a patient/resident.
/// </summary>
public class NutritionOrder : DomainResource
{
    /// <summary>
    /// Resource type name
    /// </summary>
    [JsonPropertyName("resourceType")]
    public override string ResourceType => "NutritionOrder";

    /// <summary>
    /// Identifiers assigned to this order
    /// </summary>
    [JsonPropertyName("identifier")]
    public List<Identifier>? IdentifierValue { get; set; }

    /// <summary>
    /// Instantiates FHIR protocol or definition
    /// </summary>
    [JsonPropertyName("instantiatesCanonical")]
    public List<FhirCanonical>? InstantiatesCanonical { get; set; }

    /// <summary>
    /// Instantiates external protocol or definition
    /// </summary>
    [JsonPropertyName("instantiatesUri")]
    public List<FhirUri>? InstantiatesUri { get; set; }

    /// <summary>
    /// Instantiates protocol or definition
    /// </summary>
    [JsonPropertyName("instantiates")]
    public List<FhirUri>? Instantiates { get; set; }

    /// <summary>
    /// draft | active | on-hold | revoked | completed | entered-in-error | unknown
    /// </summary>
    [Required]
    [JsonPropertyName("status")]
    public FhirCode Status { get; set; }

    /// <summary>
    /// proposal | plan | directive | order | original-order | reflex-order | filler-order | instance-order | option
    /// </summary>
    [Required]
    [JsonPropertyName("intent")]
    public FhirCode Intent { get; set; }

    /// <summary>
    /// The person who requires the diet, formula or nutritional supplement
    /// </summary>
    [Required]
    [JsonPropertyName("patient")]
    public Reference Patient { get; set; }

    /// <summary>
    /// The encounter associated with this nutrition order
    /// </summary>
    [JsonPropertyName("encounter")]
    public Reference Encounter { get; set; }

    /// <summary>
    /// Date and time the nutrition order was requested
    /// </summary>
    [Required]
    [JsonPropertyName("dateTime")]
    public FhirDateTime DateTimeValue { get; set; }

    /// <summary>
    /// Who ordered the diet, formula or nutritional supplement
    /// </summary>
    [JsonPropertyName("orderer")]
    public Reference Orderer { get; set; }

    /// <summary>
    /// List of the patient&apos;s food and nutrition-related allergies and intolerances
    /// </summary>
    [JsonPropertyName("allergyIntolerance")]
    public List<Reference>? AllergyIntolerance { get; set; }

    /// <summary>
    /// Order-specific modifier about the type of food that should be given
    /// </summary>
    [JsonPropertyName("foodPreferenceModifier")]
    public List<CodeableConcept>? FoodPreferenceModifier { get; set; }

    /// <summary>
    /// Order-specific modifier about the type of food that should not be given
    /// </summary>
    [JsonPropertyName("excludeFoodModifier")]
    public List<CodeableConcept>? ExcludeFoodModifier { get; set; }

    /// <summary>
    /// Oral diet components
    /// </summary>
    [JsonPropertyName("oralDiet")]
    public BackboneElement OralDiet { get; set; }

    /// <summary>
    /// Type of oral diet or diet restrictions that describe what can be consumed orally
    /// </summary>
    [JsonPropertyName("type")]
    public List<CodeableConcept>? Type { get; set; }

    /// <summary>
    /// Scheduled frequency of diet
    /// </summary>
    [JsonPropertyName("schedule")]
    public List<Timing>? Schedule { get; set; }

    /// <summary>
    /// Required  nutrient modifications
    /// </summary>
    [JsonPropertyName("nutrient")]
    public List<BackboneElement>? Nutrient { get; set; }

    /// <summary>
    /// Required  texture modifications
    /// </summary>
    [JsonPropertyName("texture")]
    public List<BackboneElement>? Texture { get; set; }

    /// <summary>
    /// The required consistency of fluids and liquids provided to the patient
    /// </summary>
    [JsonPropertyName("fluidConsistencyType")]
    public List<CodeableConcept>? FluidConsistencyType { get; set; }

    /// <summary>
    /// Instructions or additional information about the oral diet
    /// </summary>
    [JsonPropertyName("instruction")]
    public FhirString Instruction { get; set; }

    /// <summary>
    /// Supplement components
    /// </summary>
    [JsonPropertyName("supplement")]
    public List<BackboneElement>? Supplement { get; set; }

    /// <summary>
    /// Type of supplement product requested
    /// </summary>
    [JsonPropertyName("type")]
    public CodeableConcept Type { get; set; }

    /// <summary>
    /// Product or brand name of the nutritional supplement
    /// </summary>
    [JsonPropertyName("productName")]
    public FhirString ProductName { get; set; }

    /// <summary>
    /// Scheduled frequency of supplement
    /// </summary>
    [JsonPropertyName("schedule")]
    public List<Timing>? Schedule { get; set; }

    /// <summary>
    /// Amount of the nutritional supplement
    /// </summary>
    [JsonPropertyName("quantity")]
    public Quantity QuantityValue { get; set; }

    /// <summary>
    /// Instructions or additional information about the oral supplement
    /// </summary>
    [JsonPropertyName("instruction")]
    public FhirString Instruction { get; set; }

    /// <summary>
    /// Enteral formula components
    /// </summary>
    [JsonPropertyName("enteralFormula")]
    public BackboneElement EnteralFormula { get; set; }

    /// <summary>
    /// Type of enteral or infant formula
    /// </summary>
    [JsonPropertyName("baseFormulaType")]
    public CodeableConcept BaseFormulaType { get; set; }

    /// <summary>
    /// Product or brand name of the enteral or infant formula
    /// </summary>
    [JsonPropertyName("baseFormulaProductName")]
    public FhirString BaseFormulaProductName { get; set; }

    /// <summary>
    /// Type of modular component to add to the feeding
    /// </summary>
    [JsonPropertyName("additiveType")]
    public CodeableConcept AdditiveType { get; set; }

    /// <summary>
    /// Product or brand name of the modular additive
    /// </summary>
    [JsonPropertyName("additiveProductName")]
    public FhirString AdditiveProductName { get; set; }

    /// <summary>
    /// Amount of energy per specified volume that is required
    /// </summary>
    [JsonPropertyName("caloricDensity")]
    public Quantity CaloricDensity { get; set; }

    /// <summary>
    /// How the formula should enter the patient&apos;s gastrointestinal tract
    /// </summary>
    [JsonPropertyName("routeofAdministration")]
    public CodeableConcept RouteofAdministration { get; set; }

    /// <summary>
    /// Formula feeding instruction as structured data
    /// </summary>
    [JsonPropertyName("administration")]
    public List<BackboneElement>? Administration { get; set; }

    /// <summary>
    /// Upper limit on formula volume per unit of time
    /// </summary>
    [JsonPropertyName("maxVolumeToDeliver")]
    public Quantity MaxVolumeToDeliver { get; set; }

    /// <summary>
    /// Formula feeding instructions expressed as text
    /// </summary>
    [JsonPropertyName("administrationInstruction")]
    public FhirString AdministrationInstruction { get; set; }

    /// <summary>
    /// Comments
    /// </summary>
    [JsonPropertyName("note")]
    public List<Annotation>? Note { get; set; }

    /// <summary>
    /// Validates this instance according to FHIR rules
    /// </summary>
    public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
    {
        foreach (var result in base.Validate(validationContext))
            yield return result;

        // TODO: Add specific validation rules
    }

}
