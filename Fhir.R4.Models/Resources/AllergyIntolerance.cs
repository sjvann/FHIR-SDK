// <auto-generated />
// FHIR R4 Resource: AllergyIntolerance
// This file is automatically generated. Do not edit manually.

using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using Fhir.R4.Models.Base;
using Fhir.TypeFramework.DataTypes;

namespace Fhir.R4.Models.Resources;

/// <summary>
/// Risk of harmful or undesirable, physiological response which is unique to an individual and associated with exposure to a substance.
/// </summary>
public class AllergyIntolerance : DomainResource
{
    /// <summary>
    /// Resource type name
    /// </summary>
    [JsonPropertyName("resourceType")]
    public override string ResourceType => "AllergyIntolerance";

    /// <summary>
    /// External ids for this item
    /// </summary>
    [JsonPropertyName("identifier")]
    public List<Identifier>? IdentifierValue { get; set; }

    /// <summary>
    /// active | inactive | resolved
    /// </summary>
    [JsonPropertyName("clinicalStatus")]
    public CodeableConcept ClinicalStatus { get; set; }

    /// <summary>
    /// unconfirmed | confirmed | refuted | entered-in-error
    /// </summary>
    [JsonPropertyName("verificationStatus")]
    public CodeableConcept VerificationStatus { get; set; }

    /// <summary>
    /// allergy | intolerance - Underlying mechanism (if known)
    /// </summary>
    [JsonPropertyName("type")]
    public FhirCode Type { get; set; }

    /// <summary>
    /// food | medication | environment | biologic
    /// </summary>
    [JsonPropertyName("category")]
    public List<FhirCode>? Category { get; set; }

    /// <summary>
    /// low | high | unable-to-assess
    /// </summary>
    [JsonPropertyName("criticality")]
    public FhirCode Criticality { get; set; }

    /// <summary>
    /// Code that identifies the allergy or intolerance
    /// </summary>
    [JsonPropertyName("code")]
    public CodeableConcept Code { get; set; }

    /// <summary>
    /// Who the sensitivity is for
    /// </summary>
    [Required]
    [JsonPropertyName("patient")]
    public Reference Patient { get; set; }

    /// <summary>
    /// Encounter when the allergy or intolerance was asserted
    /// </summary>
    [JsonPropertyName("encounter")]
    public Reference Encounter { get; set; }

    /// <summary>
    /// Date first version of the resource instance was recorded
    /// </summary>
    [JsonPropertyName("recordedDate")]
    public FhirDateTime RecordedDate { get; set; }

    /// <summary>
    /// Who recorded the sensitivity
    /// </summary>
    [JsonPropertyName("recorder")]
    public Reference Recorder { get; set; }

    /// <summary>
    /// Source of the information about the allergy
    /// </summary>
    [JsonPropertyName("asserter")]
    public Reference Asserter { get; set; }

    /// <summary>
    /// Date(/time) of last known occurrence of a reaction
    /// </summary>
    [JsonPropertyName("lastOccurrence")]
    public FhirDateTime LastOccurrence { get; set; }

    /// <summary>
    /// Additional text not captured in other fields
    /// </summary>
    [JsonPropertyName("note")]
    public List<Annotation>? Note { get; set; }

    /// <summary>
    /// Adverse Reaction Events linked to exposure to substance
    /// </summary>
    [JsonPropertyName("reaction")]
    public List<BackboneElement>? Reaction { get; set; }

    /// <summary>
    /// Specific substance or pharmaceutical product considered to be responsible for event
    /// </summary>
    [JsonPropertyName("substance")]
    public CodeableConcept Substance { get; set; }

    /// <summary>
    /// Clinical symptoms/signs associated with the Event
    /// </summary>
    [Required]
    [JsonPropertyName("manifestation")]
    public List<CodeableConcept> Manifestation { get; set; }

    /// <summary>
    /// Description of the event as a whole
    /// </summary>
    [JsonPropertyName("description")]
    public FhirString Description { get; set; }

    /// <summary>
    /// Date(/time) when manifestations showed
    /// </summary>
    [JsonPropertyName("onset")]
    public FhirDateTime Onset { get; set; }

    /// <summary>
    /// mild | moderate | severe (of event as a whole)
    /// </summary>
    [JsonPropertyName("severity")]
    public FhirCode Severity { get; set; }

    /// <summary>
    /// How the subject was exposed to the substance
    /// </summary>
    [JsonPropertyName("exposureRoute")]
    public CodeableConcept ExposureRoute { get; set; }

    /// <summary>
    /// Text about event not captured in other fields
    /// </summary>
    [JsonPropertyName("note")]
    public List<Annotation>? Note { get; set; }

    /// <summary>
    /// Validates this instance according to FHIR rules
    /// </summary>
    public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
    {
        foreach (var result in base.Validate(validationContext))
            yield return result;

        // TODO: Add specific validation rules
    }

}
