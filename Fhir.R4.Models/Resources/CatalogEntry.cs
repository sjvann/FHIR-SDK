// <auto-generated />
// FHIR R4 Resource: CatalogEntry
// This file is automatically generated. Do not edit manually.

using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using Fhir.R4.Models.Base;
using Fhir.TypeFramework.DataTypes;

namespace Fhir.R4.Models.Resources;

/// <summary>
/// Catalog entries are wrappers that contextualize items included in a catalog.
/// </summary>
public class CatalogEntry : DomainResource
{
    /// <summary>
    /// Resource type name
    /// </summary>
    [JsonPropertyName("resourceType")]
    public override string ResourceType => "CatalogEntry";

    /// <summary>
    /// Unique identifier of the catalog item
    /// </summary>
    [JsonPropertyName("identifier")]
    public List<Identifier>? IdentifierValue { get; set; }

    /// <summary>
    /// The type of item - medication, device, service, protocol or other
    /// </summary>
    [JsonPropertyName("type")]
    public CodeableConcept Type { get; set; }

    /// <summary>
    /// Whether the entry represents an orderable item
    /// </summary>
    [Required]
    [JsonPropertyName("orderable")]
    public FhirBoolean Orderable { get; set; }

    /// <summary>
    /// The item that is being defined
    /// </summary>
    [Required]
    [JsonPropertyName("referencedItem")]
    public Reference ReferencedItem { get; set; }

    /// <summary>
    /// Any additional identifier(s) for the catalog item, in the same granularity or concept
    /// </summary>
    [JsonPropertyName("additionalIdentifier")]
    public List<Identifier>? AdditionalIdentifier { get; set; }

    /// <summary>
    /// Classification (category or class) of the item entry
    /// </summary>
    [JsonPropertyName("classification")]
    public List<CodeableConcept>? Classification { get; set; }

    /// <summary>
    /// draft | active | retired | unknown
    /// </summary>
    [JsonPropertyName("status")]
    public FhirCode Status { get; set; }

    /// <summary>
    /// The time period in which this catalog entry is expected to be active
    /// </summary>
    [JsonPropertyName("validityPeriod")]
    public Period ValidityPeriod { get; set; }

    /// <summary>
    /// The date until which this catalog entry is expected to be active
    /// </summary>
    [JsonPropertyName("validTo")]
    public FhirDateTime ValidTo { get; set; }

    /// <summary>
    /// When was this catalog last updated
    /// </summary>
    [JsonPropertyName("lastUpdated")]
    public FhirDateTime LastUpdated { get; set; }

    /// <summary>
    /// Additional characteristics of the catalog entry
    /// </summary>
    [JsonPropertyName("additionalCharacteristic")]
    public List<CodeableConcept>? AdditionalCharacteristic { get; set; }

    /// <summary>
    /// Additional classification of the catalog entry
    /// </summary>
    [JsonPropertyName("additionalClassification")]
    public List<CodeableConcept>? AdditionalClassification { get; set; }

    /// <summary>
    /// An item that this catalog entry is related to
    /// </summary>
    [JsonPropertyName("relatedEntry")]
    public List<BackboneElement>? RelatedEntry { get; set; }

    /// <summary>
    /// triggers | is-replaced-by
    /// </summary>
    [Required]
    [JsonPropertyName("relationtype")]
    public FhirCode Relationtype { get; set; }

    /// <summary>
    /// The reference to the related item
    /// </summary>
    [Required]
    [JsonPropertyName("item")]
    public Reference Item { get; set; }

    /// <summary>
    /// Validates this instance according to FHIR rules
    /// </summary>
    public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
    {
        foreach (var result in base.Validate(validationContext))
            yield return result;

        // TODO: Add specific validation rules
    }

}
