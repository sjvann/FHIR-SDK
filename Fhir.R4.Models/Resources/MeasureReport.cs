// <auto-generated />
// FHIR R4 Resource: MeasureReport
// This file is automatically generated. Do not edit manually.

using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using Fhir.R4.Models.Base;
using Fhir.TypeFramework.DataTypes;

namespace Fhir.R4.Models.Resources;

/// <summary>
/// The MeasureReport resource contains the results of the calculation of a measure; and optionally a reference to the resources involved in that calculation.
/// </summary>
public class MeasureReport : DomainResource
{
    /// <summary>
    /// Resource type name
    /// </summary>
    [JsonPropertyName("resourceType")]
    public override string ResourceType => "MeasureReport";

    /// <summary>
    /// Additional identifier for the MeasureReport
    /// </summary>
    [JsonPropertyName("identifier")]
    public List<Identifier>? IdentifierValue { get; set; }

    /// <summary>
    /// complete | pending | error
    /// </summary>
    [Required]
    [JsonPropertyName("status")]
    public FhirCode Status { get; set; }

    /// <summary>
    /// individual | subject-list | summary | data-collection
    /// </summary>
    [Required]
    [JsonPropertyName("type")]
    public FhirCode Type { get; set; }

    /// <summary>
    /// What measure was calculated
    /// </summary>
    [Required]
    [JsonPropertyName("measure")]
    public FhirCanonical Measure { get; set; }

    /// <summary>
    /// What individual(s) the report is for
    /// </summary>
    [JsonPropertyName("subject")]
    public Reference Subject { get; set; }

    /// <summary>
    /// When the report was generated
    /// </summary>
    [JsonPropertyName("date")]
    public FhirDateTime Date { get; set; }

    /// <summary>
    /// Who is reporting the data
    /// </summary>
    [JsonPropertyName("reporter")]
    public Reference Reporter { get; set; }

    /// <summary>
    /// What period the report covers
    /// </summary>
    [Required]
    [JsonPropertyName("period")]
    public Period PeriodValue { get; set; }

    /// <summary>
    /// increase | decrease
    /// </summary>
    [JsonPropertyName("improvementNotation")]
    public CodeableConcept ImprovementNotation { get; set; }

    /// <summary>
    /// Measure results for each group
    /// </summary>
    [JsonPropertyName("group")]
    public List<BackboneElement>? Group { get; set; }

    /// <summary>
    /// Meaning of the group
    /// </summary>
    [JsonPropertyName("code")]
    public CodeableConcept Code { get; set; }

    /// <summary>
    /// The populations in the group
    /// </summary>
    [JsonPropertyName("population")]
    public List<BackboneElement>? Population { get; set; }

    /// <summary>
    /// What score this group achieved
    /// </summary>
    [JsonPropertyName("measureScore")]
    public Quantity MeasureScore { get; set; }

    /// <summary>
    /// Stratification results
    /// </summary>
    [JsonPropertyName("stratifier")]
    public List<BackboneElement>? Stratifier { get; set; }

    /// <summary>
    /// What data was used to calculate the measure score
    /// </summary>
    [JsonPropertyName("evaluatedResource")]
    public List<Reference>? EvaluatedResource { get; set; }

    /// <summary>
    /// Validates this instance according to FHIR rules
    /// </summary>
    public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
    {
        foreach (var result in base.Validate(validationContext))
            yield return result;

        // TODO: Add specific validation rules
    }

}
