// <auto-generated />
// FHIR R4 Resource: Consent
// This file is automatically generated. Do not edit manually.

using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using Fhir.R4.Models.Base;
using Fhir.TypeFramework.DataTypes;

namespace Fhir.R4.Models.Resources;

/// <summary>
/// A record of a healthcare consumerâ€™s  choices, which permits or denies identified recipient(s) or recipient role(s) to perform one or more actions within a given policy context, for specific purposes and periods of time.
/// </summary>
public class Consent : DomainResource
{
    /// <summary>
    /// Resource type name
    /// </summary>
    [JsonPropertyName("resourceType")]
    public override string ResourceType => "Consent";

    /// <summary>
    /// Identifier for this record (external references)
    /// </summary>
    [JsonPropertyName("identifier")]
    public List<Identifier>? IdentifierValue { get; set; }

    /// <summary>
    /// draft | proposed | active | rejected | inactive | entered-in-error
    /// </summary>
    [Required]
    [JsonPropertyName("status")]
    public FhirCode Status { get; set; }

    /// <summary>
    /// Which of the four areas this resource covers (extensible)
    /// </summary>
    [Required]
    [JsonPropertyName("scope")]
    public CodeableConcept Scope { get; set; }

    /// <summary>
    /// Classification of the consent statement - for indexing/retrieval
    /// </summary>
    [Required]
    [JsonPropertyName("category")]
    public List<CodeableConcept> Category { get; set; }

    /// <summary>
    /// Who the consent applies to
    /// </summary>
    [JsonPropertyName("patient")]
    public Reference Patient { get; set; }

    /// <summary>
    /// When this Consent was created or indexed
    /// </summary>
    [JsonPropertyName("dateTime")]
    public FhirDateTime DateTimeValue { get; set; }

    /// <summary>
    /// Who is agreeing to the policy and rules
    /// </summary>
    [JsonPropertyName("performer")]
    public List<Reference>? Performer { get; set; }

    /// <summary>
    /// Custodian of the consent
    /// </summary>
    [JsonPropertyName("organization")]
    public List<Reference>? Organization { get; set; }

    /// <summary>
    /// Policies covered by this consent
    /// </summary>
    [JsonPropertyName("policy")]
    public List<BackboneElement>? Policy { get; set; }

    /// <summary>
    /// Enforcement source for policy
    /// </summary>
    [JsonPropertyName("authority")]
    public FhirUri Authority { get; set; }

    /// <summary>
    /// Specific policy covered by this consent
    /// </summary>
    [JsonPropertyName("uri")]
    public FhirUri UriValue { get; set; }

    /// <summary>
    /// Regulation that this consents to
    /// </summary>
    [JsonPropertyName("policyRule")]
    public CodeableConcept PolicyRule { get; set; }

    /// <summary>
    /// Consent Verified by patient or family
    /// </summary>
    [JsonPropertyName("verification")]
    public List<BackboneElement>? Verification { get; set; }

    /// <summary>
    /// Has been verified
    /// </summary>
    [Required]
    [JsonPropertyName("verified")]
    public FhirBoolean Verified { get; set; }

    /// <summary>
    /// Person who verified
    /// </summary>
    [JsonPropertyName("verifiedWith")]
    public Reference VerifiedWith { get; set; }

    /// <summary>
    /// When consent verified
    /// </summary>
    [JsonPropertyName("verificationDate")]
    public FhirDateTime VerificationDate { get; set; }

    /// <summary>
    /// Constraints to the base Consent.policyRule
    /// </summary>
    [JsonPropertyName("provision")]
    public BackboneElement Provision { get; set; }

    /// <summary>
    /// deny | permit
    /// </summary>
    [JsonPropertyName("type")]
    public FhirCode Type { get; set; }

    /// <summary>
    /// Timeframe for this rule
    /// </summary>
    [JsonPropertyName("period")]
    public Period PeriodValue { get; set; }

    /// <summary>
    /// Who|what controlled by this rule (or group, by role)
    /// </summary>
    [JsonPropertyName("actor")]
    public List<BackboneElement>? Actor { get; set; }

    /// <summary>
    /// Actions controlled by this rule
    /// </summary>
    [JsonPropertyName("action")]
    public List<CodeableConcept>? Action { get; set; }

    /// <summary>
    /// Security Labels that define affected resources
    /// </summary>
    [JsonPropertyName("securityLabel")]
    public List<Coding>? SecurityLabel { get; set; }

    /// <summary>
    /// Context of activities covered by this rule
    /// </summary>
    [JsonPropertyName("purpose")]
    public List<Coding>? Purpose { get; set; }

    /// <summary>
    /// e.g. Resource Type, Profile, CDA, etc.
    /// </summary>
    [JsonPropertyName("class")]
    public List<Coding>? Class { get; set; }

    /// <summary>
    /// e.g. LOINC or SNOMED CT code, etc. in the content
    /// </summary>
    [JsonPropertyName("code")]
    public List<CodeableConcept>? Code { get; set; }

    /// <summary>
    /// Timeframe for data controlled by this rule
    /// </summary>
    [JsonPropertyName("dataPeriod")]
    public Period DataPeriod { get; set; }

    /// <summary>
    /// Data controlled by this rule
    /// </summary>
    [JsonPropertyName("data")]
    public List<BackboneElement>? Data { get; set; }

    /// <summary>
    /// Nested Exception Rules
    /// </summary>
    [JsonPropertyName("provision")]
    public List<>? Provision { get; set; }

    /// <summary>
    /// Validates this instance according to FHIR rules
    /// </summary>
    public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
    {
        foreach (var result in base.Validate(validationContext))
            yield return result;

        // TODO: Add specific validation rules
    }

}
