// <auto-generated />
// FHIR R4 Resource: PlanDefinition
// This file is automatically generated. Do not edit manually.

using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using Fhir.R4.Models.Base;
using Fhir.TypeFramework.DataTypes;

namespace Fhir.R4.Models.Resources;

/// <summary>
/// This resource allows for the definition of various types of plans as a sharable, consumable, and executable artifact. The resource is general enough to support the description of a broad range of clinical artifacts such as clinical decision support rules, order sets and protocols.
/// </summary>
public class PlanDefinition : DomainResource
{
    /// <summary>
    /// Resource type name
    /// </summary>
    [JsonPropertyName("resourceType")]
    public override string ResourceType => "PlanDefinition";

    /// <summary>
    /// Canonical identifier for this plan definition, represented as a URI (globally unique)
    /// </summary>
    [JsonPropertyName("url")]
    public FhirUri Url { get; set; }

    /// <summary>
    /// Additional identifier for the plan definition
    /// </summary>
    [JsonPropertyName("identifier")]
    public List<Identifier>? IdentifierValue { get; set; }

    /// <summary>
    /// Business version of the plan definition
    /// </summary>
    [JsonPropertyName("version")]
    public FhirString Version { get; set; }

    /// <summary>
    /// Name for this plan definition (computer friendly)
    /// </summary>
    [JsonPropertyName("name")]
    public FhirString Name { get; set; }

    /// <summary>
    /// Name for this plan definition (human friendly)
    /// </summary>
    [JsonPropertyName("title")]
    public FhirString Title { get; set; }

    /// <summary>
    /// Subordinate title of the plan definition
    /// </summary>
    [JsonPropertyName("subtitle")]
    public FhirString Subtitle { get; set; }

    /// <summary>
    /// order-set | clinical-protocol | eca-rule | workflow-definition
    /// </summary>
    [JsonPropertyName("type")]
    public CodeableConcept Type { get; set; }

    /// <summary>
    /// draft | active | retired | unknown
    /// </summary>
    [Required]
    [JsonPropertyName("status")]
    public FhirCode Status { get; set; }

    /// <summary>
    /// For testing purposes, not real usage
    /// </summary>
    [JsonPropertyName("experimental")]
    public FhirBoolean Experimental { get; set; }

    /// <summary>
    /// Date last changed
    /// </summary>
    [JsonPropertyName("date")]
    public FhirDateTime Date { get; set; }

    /// <summary>
    /// Name of the publisher (organization or individual)
    /// </summary>
    [JsonPropertyName("publisher")]
    public FhirString Publisher { get; set; }

    /// <summary>
    /// Contact details for the publisher
    /// </summary>
    [JsonPropertyName("contact")]
    public List<ContactDetail>? Contact { get; set; }

    /// <summary>
    /// Natural language description of the plan definition
    /// </summary>
    [JsonPropertyName("description")]
    public FhirMarkdown Description { get; set; }

    /// <summary>
    /// The context that the content is intended to support
    /// </summary>
    [JsonPropertyName("useContext")]
    public List<UsageContext>? UseContext { get; set; }

    /// <summary>
    /// Intended jurisdiction for plan definition (if applicable)
    /// </summary>
    [JsonPropertyName("jurisdiction")]
    public List<CodeableConcept>? Jurisdiction { get; set; }

    /// <summary>
    /// Why this plan definition is defined
    /// </summary>
    [JsonPropertyName("purpose")]
    public FhirMarkdown Purpose { get; set; }

    /// <summary>
    /// Describes the clinical usage of the plan
    /// </summary>
    [JsonPropertyName("usage")]
    public FhirString Usage { get; set; }

    /// <summary>
    /// Use and/or publishing restrictions
    /// </summary>
    [JsonPropertyName("copyright")]
    public FhirMarkdown Copyright { get; set; }

    /// <summary>
    /// When the plan definition was approved by publisher
    /// </summary>
    [JsonPropertyName("approvalDate")]
    public FhirDate ApprovalDate { get; set; }

    /// <summary>
    /// When the plan definition was last reviewed
    /// </summary>
    [JsonPropertyName("lastReviewDate")]
    public FhirDate LastReviewDate { get; set; }

    /// <summary>
    /// When the plan definition is expected to be used
    /// </summary>
    [JsonPropertyName("effectivePeriod")]
    public Period EffectivePeriod { get; set; }

    /// <summary>
    /// E.g. Education, Treatment, Assessment
    /// </summary>
    [JsonPropertyName("topic")]
    public List<CodeableConcept>? Topic { get; set; }

    /// <summary>
    /// Who authored the content
    /// </summary>
    [JsonPropertyName("author")]
    public List<ContactDetail>? Author { get; set; }

    /// <summary>
    /// Who edited the content
    /// </summary>
    [JsonPropertyName("editor")]
    public List<ContactDetail>? Editor { get; set; }

    /// <summary>
    /// Who reviewed the content
    /// </summary>
    [JsonPropertyName("reviewer")]
    public List<ContactDetail>? Reviewer { get; set; }

    /// <summary>
    /// Who endorsed the content
    /// </summary>
    [JsonPropertyName("endorser")]
    public List<ContactDetail>? Endorser { get; set; }

    /// <summary>
    /// Additional documentation, citations
    /// </summary>
    [JsonPropertyName("relatedArtifact")]
    public List<RelatedArtifact>? RelatedArtifactValue { get; set; }

    /// <summary>
    /// Logic used by the plan definition
    /// </summary>
    [JsonPropertyName("library")]
    public List<FhirCanonical>? Library { get; set; }

    /// <summary>
    /// What the plan is trying to accomplish
    /// </summary>
    [JsonPropertyName("goal")]
    public List<BackboneElement>? Goal { get; set; }

    /// <summary>
    /// E.g. Treatment, dietary, behavioral
    /// </summary>
    [JsonPropertyName("category")]
    public CodeableConcept Category { get; set; }

    /// <summary>
    /// Code or text describing the goal
    /// </summary>
    [Required]
    [JsonPropertyName("description")]
    public CodeableConcept Description { get; set; }

    /// <summary>
    /// high-priority | medium-priority | low-priority
    /// </summary>
    [JsonPropertyName("priority")]
    public CodeableConcept Priority { get; set; }

    /// <summary>
    /// When goal pursuit begins
    /// </summary>
    [JsonPropertyName("start")]
    public CodeableConcept Start { get; set; }

    /// <summary>
    /// What does the goal address
    /// </summary>
    [JsonPropertyName("addresses")]
    public List<CodeableConcept>? Addresses { get; set; }

    /// <summary>
    /// Supporting documentation for the goal
    /// </summary>
    [JsonPropertyName("documentation")]
    public List<RelatedArtifact>? Documentation { get; set; }

    /// <summary>
    /// Target outcome for the goal
    /// </summary>
    [JsonPropertyName("target")]
    public List<BackboneElement>? Target { get; set; }

    /// <summary>
    /// Action defined by the plan
    /// </summary>
    [JsonPropertyName("action")]
    public List<BackboneElement>? Action { get; set; }

    /// <summary>
    /// Validates this instance according to FHIR rules
    /// </summary>
    public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
    {
        foreach (var result in base.Validate(validationContext))
            yield return result;

        // TODO: Add specific validation rules
    }

}
