// <auto-generated />
// FHIR R4 Resource: Goal
// This file is automatically generated. Do not edit manually.

using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using Fhir.R4.Models.Base;
using Fhir.TypeFramework.DataTypes;

namespace Fhir.R4.Models.Resources;

/// <summary>
/// Describes the intended objective(s) for a patient, group or organization care, for example, weight loss, restoring an activity of daily living, obtaining herd immunity via immunization, meeting a process improvement objective, etc.
/// </summary>
public class Goal : DomainResource
{
    /// <summary>
    /// Resource type name
    /// </summary>
    [JsonPropertyName("resourceType")]
    public override string ResourceType => "Goal";

    /// <summary>
    /// External Ids for this goal
    /// </summary>
    [JsonPropertyName("identifier")]
    public List<Identifier>? IdentifierValue { get; set; }

    /// <summary>
    /// proposed | planned | accepted | active | on-hold | completed | cancelled | entered-in-error | rejected
    /// </summary>
    [Required]
    [JsonPropertyName("lifecycleStatus")]
    public FhirCode LifecycleStatus { get; set; }

    /// <summary>
    /// in-progress | improving | worsening | no-change | achieved | sustaining | not-achieved | no-progress | not-attainable
    /// </summary>
    [JsonPropertyName("achievementStatus")]
    public CodeableConcept AchievementStatus { get; set; }

    /// <summary>
    /// E.g. Treatment, dietary, behavioral, etc.
    /// </summary>
    [JsonPropertyName("category")]
    public List<CodeableConcept>? Category { get; set; }

    /// <summary>
    /// high-priority | medium-priority | low-priority
    /// </summary>
    [JsonPropertyName("priority")]
    public CodeableConcept Priority { get; set; }

    /// <summary>
    /// Code or text describing goal
    /// </summary>
    [Required]
    [JsonPropertyName("description")]
    public CodeableConcept Description { get; set; }

    /// <summary>
    /// Who this goal is intended for
    /// </summary>
    [Required]
    [JsonPropertyName("subject")]
    public Reference Subject { get; set; }

    /// <summary>
    /// Target outcome for the goal
    /// </summary>
    [JsonPropertyName("target")]
    public List<BackboneElement>? Target { get; set; }

    /// <summary>
    /// The parameter whose value is being tracked
    /// </summary>
    [JsonPropertyName("measure")]
    public CodeableConcept Measure { get; set; }

    /// <summary>
    /// When goal status took effect
    /// </summary>
    [JsonPropertyName("statusDate")]
    public FhirDate StatusDate { get; set; }

    /// <summary>
    /// Reason for current status
    /// </summary>
    [JsonPropertyName("statusReason")]
    public FhirString StatusReason { get; set; }

    /// <summary>
    /// Who&apos;s responsible for creating Goal?
    /// </summary>
    [JsonPropertyName("expressedBy")]
    public Reference ExpressedBy { get; set; }

    /// <summary>
    /// Issues addressed by this goal
    /// </summary>
    [JsonPropertyName("addresses")]
    public List<Reference>? Addresses { get; set; }

    /// <summary>
    /// Comments about the goal
    /// </summary>
    [JsonPropertyName("note")]
    public List<Annotation>? Note { get; set; }

    /// <summary>
    /// What result was achieved regarding the goal?
    /// </summary>
    [JsonPropertyName("outcomeCode")]
    public List<CodeableConcept>? OutcomeCode { get; set; }

    /// <summary>
    /// Observation that resulted from goal
    /// </summary>
    [JsonPropertyName("outcomeReference")]
    public List<Reference>? OutcomeReference { get; set; }

    /// <summary>
    /// Validates this instance according to FHIR rules
    /// </summary>
    public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
    {
        foreach (var result in base.Validate(validationContext))
            yield return result;

        // TODO: Add specific validation rules
    }

}
