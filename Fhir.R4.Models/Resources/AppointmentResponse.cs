// <auto-generated />
// FHIR R4 Resource: AppointmentResponse
// This file is automatically generated. Do not edit manually.

using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using Fhir.R4.Models.Base;
using Fhir.TypeFramework.DataTypes;

namespace Fhir.R4.Models.Resources;

/// <summary>
/// A reply to an appointment request for a patient and/or practitioner(s), such as a confirmation or rejection.
/// </summary>
public class AppointmentResponse : DomainResource
{
    /// <summary>
    /// Resource type name
    /// </summary>
    [JsonPropertyName("resourceType")]
    public override string ResourceType => "AppointmentResponse";

    /// <summary>
    /// External Ids for this item
    /// </summary>
    [JsonPropertyName("identifier")]
    public List<Identifier>? IdentifierValue { get; set; }

    /// <summary>
    /// Appointment this response relates to
    /// </summary>
    [Required]
    [JsonPropertyName("appointment")]
    public Reference Appointment { get; set; }

    /// <summary>
    /// Time from appointment, or requested new start time
    /// </summary>
    [JsonPropertyName("start")]
    public FhirInstant Start { get; set; }

    /// <summary>
    /// Time from appointment, or requested new end time
    /// </summary>
    [JsonPropertyName("end")]
    public FhirInstant End { get; set; }

    /// <summary>
    /// Role of participant in the appointment
    /// </summary>
    [JsonPropertyName("participantType")]
    public List<CodeableConcept>? ParticipantType { get; set; }

    /// <summary>
    /// Person, Location, HealthcareService, or Device
    /// </summary>
    [JsonPropertyName("actor")]
    public Reference Actor { get; set; }

    /// <summary>
    /// accepted | declined | tentative | needs-action
    /// </summary>
    [Required]
    [JsonPropertyName("participantStatus")]
    public FhirCode ParticipantStatus { get; set; }

    /// <summary>
    /// Additional comments
    /// </summary>
    [JsonPropertyName("comment")]
    public FhirString Comment { get; set; }

    /// <summary>
    /// Validates this instance according to FHIR rules
    /// </summary>
    public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
    {
        foreach (var result in base.Validate(validationContext))
            yield return result;

        // TODO: Add specific validation rules
    }

}
