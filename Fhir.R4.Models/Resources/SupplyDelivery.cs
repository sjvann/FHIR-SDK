// <auto-generated />
// FHIR R4 Resource: SupplyDelivery
// This file is automatically generated. Do not edit manually.

using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using Fhir.R4.Models.Base;
using Fhir.TypeFramework.DataTypes;

namespace Fhir.R4.Models.Resources;

/// <summary>
/// Record of delivery of what is supplied.
/// </summary>
public class SupplyDelivery : DomainResource
{
    /// <summary>
    /// Resource type name
    /// </summary>
    [JsonPropertyName("resourceType")]
    public override string ResourceType => "SupplyDelivery";

    /// <summary>
    /// External identifier
    /// </summary>
    [JsonPropertyName("identifier")]
    public List<Identifier>? IdentifierValue { get; set; }

    /// <summary>
    /// Fulfills plan, proposal or order
    /// </summary>
    [JsonPropertyName("basedOn")]
    public List<Reference>? BasedOn { get; set; }

    /// <summary>
    /// Part of referenced event
    /// </summary>
    [JsonPropertyName("partOf")]
    public List<Reference>? PartOf { get; set; }

    /// <summary>
    /// in-progress | completed | abandoned | entered-in-error
    /// </summary>
    [JsonPropertyName("status")]
    public FhirCode Status { get; set; }

    /// <summary>
    /// Patient for whom the item is supplied
    /// </summary>
    [JsonPropertyName("patient")]
    public Reference Patient { get; set; }

    /// <summary>
    /// Category of dispense event
    /// </summary>
    [JsonPropertyName("type")]
    public CodeableConcept Type { get; set; }

    /// <summary>
    /// The item that is delivered or supplied
    /// </summary>
    [JsonPropertyName("suppliedItem")]
    public BackboneElement SuppliedItem { get; set; }

    /// <summary>
    /// Amount dispensed
    /// </summary>
    [JsonPropertyName("quantity")]
    public Quantity QuantityValue { get; set; }

    /// <summary>
    /// Dispenser
    /// </summary>
    [JsonPropertyName("supplier")]
    public Reference Supplier { get; set; }

    /// <summary>
    /// Where the Supply was sent
    /// </summary>
    [JsonPropertyName("destination")]
    public Reference Destination { get; set; }

    /// <summary>
    /// Who collected the Supply
    /// </summary>
    [JsonPropertyName("receiver")]
    public List<Reference>? Receiver { get; set; }

    /// <summary>
    /// Validates this instance according to FHIR rules
    /// </summary>
    public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
    {
        foreach (var result in base.Validate(validationContext))
            yield return result;

        // TODO: Add specific validation rules
    }

}
