// <auto-generated />
// FHIR R4 Resource: Communication
// This file is automatically generated. Do not edit manually.

using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using Fhir.R4.Models.Base;
using Fhir.TypeFramework.DataTypes;

namespace Fhir.R4.Models.Resources;

/// <summary>
/// An occurrence of information being transmitted; e.g. an alert that was sent to a responsible provider, a public health agency that was notified about a reportable condition.
/// </summary>
public class Communication : DomainResource
{
    /// <summary>
    /// Resource type name
    /// </summary>
    [JsonPropertyName("resourceType")]
    public override string ResourceType => "Communication";

    /// <summary>
    /// Unique identifier
    /// </summary>
    [JsonPropertyName("identifier")]
    public List<Identifier>? IdentifierValue { get; set; }

    /// <summary>
    /// Instantiates FHIR protocol or definition
    /// </summary>
    [JsonPropertyName("instantiatesCanonical")]
    public List<FhirCanonical>? InstantiatesCanonical { get; set; }

    /// <summary>
    /// Instantiates external protocol or definition
    /// </summary>
    [JsonPropertyName("instantiatesUri")]
    public List<FhirUri>? InstantiatesUri { get; set; }

    /// <summary>
    /// Request fulfilled by this communication
    /// </summary>
    [JsonPropertyName("basedOn")]
    public List<Reference>? BasedOn { get; set; }

    /// <summary>
    /// Part of this action
    /// </summary>
    [JsonPropertyName("partOf")]
    public List<Reference>? PartOf { get; set; }

    /// <summary>
    /// Reply to
    /// </summary>
    [JsonPropertyName("inResponseTo")]
    public List<Reference>? InResponseTo { get; set; }

    /// <summary>
    /// preparation | in-progress | not-done | on-hold | stopped | completed | entered-in-error | unknown
    /// </summary>
    [Required]
    [JsonPropertyName("status")]
    public FhirCode Status { get; set; }

    /// <summary>
    /// Reason for current status
    /// </summary>
    [JsonPropertyName("statusReason")]
    public CodeableConcept StatusReason { get; set; }

    /// <summary>
    /// Message category
    /// </summary>
    [JsonPropertyName("category")]
    public List<CodeableConcept>? Category { get; set; }

    /// <summary>
    /// routine | urgent | asap | stat
    /// </summary>
    [JsonPropertyName("priority")]
    public FhirCode Priority { get; set; }

    /// <summary>
    /// A channel of communication
    /// </summary>
    [JsonPropertyName("medium")]
    public List<CodeableConcept>? Medium { get; set; }

    /// <summary>
    /// Focus of message
    /// </summary>
    [JsonPropertyName("subject")]
    public Reference Subject { get; set; }

    /// <summary>
    /// Description of the purpose/content
    /// </summary>
    [JsonPropertyName("topic")]
    public CodeableConcept Topic { get; set; }

    /// <summary>
    /// Resources that pertain to this communication
    /// </summary>
    [JsonPropertyName("about")]
    public List<Reference>? About { get; set; }

    /// <summary>
    /// Encounter created as part of
    /// </summary>
    [JsonPropertyName("encounter")]
    public Reference Encounter { get; set; }

    /// <summary>
    /// When sent
    /// </summary>
    [JsonPropertyName("sent")]
    public FhirDateTime Sent { get; set; }

    /// <summary>
    /// When received
    /// </summary>
    [JsonPropertyName("received")]
    public FhirDateTime Received { get; set; }

    /// <summary>
    /// Message recipient
    /// </summary>
    [JsonPropertyName("recipient")]
    public List<Reference>? Recipient { get; set; }

    /// <summary>
    /// Message sender
    /// </summary>
    [JsonPropertyName("sender")]
    public Reference Sender { get; set; }

    /// <summary>
    /// Indication for message
    /// </summary>
    [JsonPropertyName("reasonCode")]
    public List<CodeableConcept>? ReasonCode { get; set; }

    /// <summary>
    /// Why was communication done?
    /// </summary>
    [JsonPropertyName("reasonReference")]
    public List<Reference>? ReasonReference { get; set; }

    /// <summary>
    /// Message payload
    /// </summary>
    [JsonPropertyName("payload")]
    public List<BackboneElement>? Payload { get; set; }

    /// <summary>
    /// Comments made about the communication
    /// </summary>
    [JsonPropertyName("note")]
    public List<Annotation>? Note { get; set; }

    /// <summary>
    /// Validates this instance according to FHIR rules
    /// </summary>
    public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
    {
        foreach (var result in base.Validate(validationContext))
            yield return result;

        // TODO: Add specific validation rules
    }

}
