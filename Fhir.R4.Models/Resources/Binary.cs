// <auto-generated />
// FHIR R4 Resource: Binary
// This file is automatically generated. Do not edit manually.

using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using Fhir.R4.Models.Base;
using Fhir.TypeFramework.DataTypes;

namespace Fhir.R4.Models.Resources;

/// <summary>
/// A resource that represents the data of a single raw artifact as digital content accessible in its native format.  A Binary resource can contain any content, whether text, image, pdf, zip archive, etc.
/// </summary>
public class Binary : DomainResource
{
    /// <summary>
    /// Resource type name
    /// </summary>
    [JsonPropertyName("resourceType")]
    public override string ResourceType => "Binary";

    /// <summary>
    /// MimeType of the binary content
    /// </summary>
    [Required]
    [JsonPropertyName("contentType")]
    public FhirCode ContentType { get; set; }

    /// <summary>
    /// Identifies another resource to use as proxy when enforcing access control
    /// </summary>
    [JsonPropertyName("securityContext")]
    public Reference SecurityContext { get; set; }

    /// <summary>
    /// The actual content
    /// </summary>
    [JsonPropertyName("data")]
    public FhirBase64Binary Data { get; set; }

    /// <summary>
    /// Validates this instance according to FHIR rules
    /// </summary>
    public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
    {
        foreach (var result in base.Validate(validationContext))
            yield return result;

        // TODO: Add specific validation rules
    }

}
