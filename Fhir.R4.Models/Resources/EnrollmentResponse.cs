// <auto-generated />
// FHIR R4 Resource: EnrollmentResponse
// This file is automatically generated. Do not edit manually.

using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using Fhir.R4.Models.Base;
using Fhir.TypeFramework.DataTypes;

namespace Fhir.R4.Models.Resources;

/// <summary>
/// This resource provides enrollment and plan details from the processing of an EnrollmentRequest resource.
/// </summary>
public class EnrollmentResponse : DomainResource
{
    /// <summary>
    /// Resource type name
    /// </summary>
    [JsonPropertyName("resourceType")]
    public override string ResourceType => "EnrollmentResponse";

    /// <summary>
    /// Business Identifier
    /// </summary>
    [JsonPropertyName("identifier")]
    public List<Identifier>? IdentifierValue { get; set; }

    /// <summary>
    /// active | cancelled | draft | entered-in-error
    /// </summary>
    [JsonPropertyName("status")]
    public FhirCode Status { get; set; }

    /// <summary>
    /// Claim reference
    /// </summary>
    [JsonPropertyName("request")]
    public Reference Request { get; set; }

    /// <summary>
    /// queued | complete | error | partial
    /// </summary>
    [JsonPropertyName("outcome")]
    public FhirCode Outcome { get; set; }

    /// <summary>
    /// Disposition Message
    /// </summary>
    [JsonPropertyName("disposition")]
    public FhirString Disposition { get; set; }

    /// <summary>
    /// Creation date
    /// </summary>
    [JsonPropertyName("created")]
    public FhirDateTime Created { get; set; }

    /// <summary>
    /// Insurer
    /// </summary>
    [JsonPropertyName("organization")]
    public Reference Organization { get; set; }

    /// <summary>
    /// Responsible practitioner
    /// </summary>
    [JsonPropertyName("requestProvider")]
    public Reference RequestProvider { get; set; }

    /// <summary>
    /// Validates this instance according to FHIR rules
    /// </summary>
    public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
    {
        foreach (var result in base.Validate(validationContext))
            yield return result;

        // TODO: Add specific validation rules
    }

}
